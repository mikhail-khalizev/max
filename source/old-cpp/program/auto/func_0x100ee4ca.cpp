FUNC_BEGIN(0x100ee4ca, 0x38623b0eebb31219, 0x20, ({0x68, 0xbc, 0, 0, 0, 0xe8, 0x7e, 0x78, 0x7, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x90, 0, 0, 0, 0xc7, 0x45, 0xf8, 0x9, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf8, 0xe8, 0xa9, 0x79, 0x7, 0, 0xf, 0xaf, 0xc2, 0xc1, 0xe8, 0xf, 0x89, 0x45, 0xf8, 0x66, 0xc7, 0x5, 0x74, 0x86, 0x1b, 0x10, 0xa, 0, 0xba, 0, 0x3f, 0x1c, 0x10, 0x8d, 0x45, 0xdc, 0xe8, 0x2a, 0x35, 0x5, 0, 0x80, 0x4d, 0xfc, 0x1, 0x8d, 0x45, 0xe0, 0xe8, 0xcb, 0x35, 0x5, 0, 0x89, 0x45, 0xe4, 0x80, 0x65, 0xfc, 0xfe, 0x80, 0x4d, 0xfc, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0xb8, 0x35, 0x5, 0, 0x89, 0x45, 0xec, 0x80, 0x65, 0xfc, 0xfe, 0xa1, 0x80, 0x39, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0xb8, 0xa2, 0x1f, 0x1a, 0x10, 0x50, 0xb8, 0x1e, 0, 0, 0, 0x50, 0x8d, 0x45, 0xe0, 0x50, 0xe8, 0xe2, 0x3a, 0x5, 0, 0x83, 0xc4, 0x10, 0x8d, 0x55, 0xe0, 0x8d, 0x45, 0xdc, 0xe8, 0x26, 0x37, 0x5, 0, 0xba, 0xae, 0x1f, 0x1a, 0x10, 0x8d, 0x45, 0xdc, 0xe8, 0x58, 0xb2, 0xf9, 0xff, 0xe8, 0xaa, 0xe, 0, 0, 0x89, 0x45, 0xf0, 0x83, 0x7d, 0xf0, 0, 0x75, 0x23, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xa2, 0x35, 0x5, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x98, 0x35, 0x5, 0, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x8e, 0x35, 0x5, 0, 0xe9, 0xd7, 0x2, 0, 0, 0x8b, 0x45, 0xf0, 0xe8, 0x5c, 0x39, 0x8, 0, 0x89, 0x45, 0xf4, 0x83, 0x7d, 0xf4, 0xff, 0x74, 0xf, 0x31, 0xd2, 0x8a, 0x55, 0xf4, 0x8d, 0x45, 0xe8, 0xe8, 0x2b, 0x38, 0x5, 0, 0xeb, 0xe0, 0x8b, 0x45, 0xf0, 0xe8, 0xa0, 0x3a, 0x8, 0, 0x80, 0x4d, 0xfc, 0x1, 0xf, 0xbf, 0x55, 0xf8, 0x1, 0xd2, 0x8b, 0x92, 0x76, 0x86, 0x1b, 0x10, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xc4, 0xe8, 0xf4, 0x81, 0xfe, 0xff, 0x89, 0x45, 0xc0, 0x80, 0x65, 0xfc, 0xfe, 0xba, 0x10, 0, 0, 0, 0x8d, 0x45, 0xc4, 0xe8, 0x20, 0xd, 0, 0, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x92, 0x27, 0x3, 0, 0xba, 0x1, 0, 0, 0, 0x8d, 0x45, 0xc4, 0xe8, 0xd9, 0xc, 0, 0, 0xe8, 0x10, 0x7b, 0xfe, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8d, 0x45, 0xc4, 0xe8, 0xbf, 0x84, 0xfe, 0xff, 0x8d, 0x55, 0xa4, 0x8d, 0x45, 0xc4, 0xe8, 0xe6, 0x83, 0xfe, 0xff, 0x8b, 0x45, 0xb6, 0xe8, 0x51, 0x8e, 0x7, 0, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xf, 0xbc, 0x7, 0, 0x31, 0xc0, 0x50, 0xb8, 0x90, 0x1, 0, 0, 0x50, 0xb8, 0x58, 0x2, 0, 0, 0x50, 0xb9, 0x14, 0, 0, 0, 0xbb, 0x14, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x6a, 0xb1, 0xf9, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xa4, 0xe8, 0xe8, 0xf2, 0xff, 0xff, 0x66, 0xc7, 0x5, 0x74, 0x86, 0x1b, 0x10, 0, 0, 0xb8, 0x5, 0, 0, 0, 0xe8, 0xd1, 0xbb, 0x7, 0, 0xb8, 0x38, 0, 0, 0, 0xe8, 0x7b, 0x77, 0x7, 0, 0x89, 0x45, 0xa0, 0x8b, 0x45, 0xa0, 0x89, 0x45, 0x9c, 0x83, 0x7d, 0x9c, 0, 0x74, 0x28, 0xb8, 0xca, 0x1, 0, 0, 0x50, 0xb9, 0x25, 0x1, 0, 0, 0xbb, 0x5b, 0x1, 0, 0, 0xba, 0x5a, 0x1, 0, 0, 0x8b, 0x45, 0xa0, 0xe8, 0x5e, 0xfd, 0xfd, 0xff, 0x89, 0x45, 0x98, 0x8b, 0x45, 0x98, 0x89, 0x45, 0x94, 0xeb, 0x6, 0x8b, 0x45, 0x9c, 0x89, 0x45, 0x94, 0x8b, 0x45, 0x94, 0x89, 0x45, 0x90, 0x8d, 0x45, 0x8c, 0xe8, 0x54, 0x6b, 0xfe, 0xff, 0x50, 0x8d, 0x45, 0x88, 0xe8, 0x77, 0x6b, 0xfe, 0xff, 0x50, 0x8d, 0x45, 0x84, 0xe8, 0x9a, 0x6b, 0xfe, 0xff, 0x50, 0x8d, 0x45, 0x80, 0xe8, 0xbd, 0x6b, 0xfe, 0xff, 0x50, 0xe8, 0xe3, 0x6b, 0xfe, 0xff, 0xf, 0xbf, 0xc8, 0xe8, 0xff, 0x6b, 0xfe, 0xff, 0xf, 0xbf, 0xd8, 0xba, 0xb1, 0x1f, 0x1a, 0x10, 0x8b, 0x45, 0x90, 0xe8, 0x5b, 0x8, 0xfe, 0xff, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x39, 0xbb, 0x7, 0, 0xba, 0x1b, 0, 0, 0, 0x8b, 0x45, 0x90, 0xe8, 0x14, 0x6a, 0xfe, 0xff, 0x8b, 0x55, 0xb6, 0x8b, 0x45, 0x90, 0xe8, 0x31, 0x11, 0xfe, 0xff, 0x8b, 0x45, 0xb6, 0xe8, 0x51, 0x8d, 0x7, 0, 0xc6, 0x85, 0x7c, 0xff, 0xff, 0xff, 0, 0xe8, 0xc9, 0xca, 0x7, 0, 0x89, 0x85, 0x78, 0xff, 0xff, 0xff, 0xe9, 0x8f, 0, 0, 0, 0xc6, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x1, 0xe9, 0xb7, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x40, 0xbb, 0x9, 0, 0, 0, 0x31, 0xd2, 0xf7, 0xf3, 0x89, 0x55, 0xf8, 0xe8, 0xd0, 0x6b, 0xfe, 0xff, 0x98, 0x50, 0xe8, 0xed, 0x6b, 0xfe, 0xff, 0x98, 0x50, 0x31, 0xc0, 0x50, 0xb9, 0x1, 0, 0, 0, 0xf, 0xbf, 0x5d, 0xb4, 0x8d, 0x55, 0xa4, 0xf, 0xbf, 0x45, 0xf8, 0x1, 0xc0, 0x8b, 0x80, 0x76, 0x86, 0x1b, 0x10, 0xc1, 0xf8, 0x10, 0xe8, 0xb9, 0xa4, 0xff, 0xff, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xaa, 0xba, 0x7, 0, 0x31, 0xc0, 0x50, 0xb8, 0x90, 0x1, 0, 0, 0x50, 0xb8, 0x58, 0x2, 0, 0, 0x50, 0xb9, 0x14, 0, 0, 0, 0xbb, 0x14, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x5, 0xb0, 0xf9, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xa4, 0xe8, 0x83, 0xf1, 0xff, 0xff, 0x8b, 0x45, 0xb6, 0xe8, 0xaf, 0x8c, 0x7, 0, 0xeb, 0x36, 0xeb, 0x34, 0x83, 0xbd, 0x78, 0xff, 0xff, 0xff, 0x1b, 0x72, 0x1c, 0x83, 0xbd, 0x78, 0xff, 0xff, 0xff, 0x1b, 0xf, 0x86, 0x5b, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x78, 0xff, 0xff, 0xff, 0x20, 0xf, 0x84, 0x5a, 0xff, 0xff, 0xff, 0xeb, 0xd9, 0x83, 0xbd, 0x78, 0xff, 0xff, 0xff, 0xd, 0xf, 0x84, 0x3f, 0xff, 0xff, 0xff, 0xeb, 0xca, 0x80, 0xbd, 0x7c, 0xff, 0xff, 0xff, 0, 0xf, 0x84, 0x20, 0xff, 0xff, 0xff, 0x8b, 0x45, 0x90, 0x89, 0x85, 0x74, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x74, 0xff, 0xff, 0xff, 0, 0x74, 0x1a, 0x31, 0xd2, 0x8b, 0x85, 0x74, 0xff, 0xff, 0xff, 0xe8, 0xff, 0xfc, 0xfd, 0xff, 0xe8, 0x26, 0x77, 0x7, 0, 0x89, 0x85, 0x70, 0xff, 0xff, 0xff, 0xeb, 0xa, 0xc7, 0x85, 0x70, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0x3f, 0x81, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xc6, 0x32, 0x5, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xbc, 0x32, 0x5, 0, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xb2, 0x32, 0x5, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100ee4ca, 0x5)   pushd(0xbc);                          /* push dword 0xbc */
    II(0x100ee4cf, 0x5)   calld(sys_check_available_stack_size, 0x7787e); /* call 0x10165d52 */
    II(0x100ee4d4, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100ee4d5, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ee4d6, 0x1)   pushd(edx);                           /* push edx */
    II(0x100ee4d7, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ee4d8, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ee4d9, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ee4da, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ee4dc, 0x6)   sub(esp, 0x90);                       /* sub esp, 0x90 */
    II(0x100ee4e2, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x9);    /* mov dword [ebp-0x8], 0x9 */
    II(0x100ee4e9, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100ee4ed, 0x5)   calld(/* sys */ 0x10165e9b, 0x779a9); /* call 0x10165e9b */
    II(0x100ee4f2, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100ee4f5, 0x3)   shr(eax, 0xf);                        /* shr eax, 0xf */
    II(0x100ee4f8, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100ee4fb, 0x9)   mov(memw_a32(ds, 0x101b8674), 0xa);   /* mov word [0x101b8674], 0xa */
    II(0x100ee504, 0x5)   mov(edx, 0x101c3f00);                 /* mov edx, 0x101c3f00 */
    II(0x100ee509, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100ee50c, 0x5)   calld(my_string_ctor_char_ptr, 0x5352a); /* call 0x10141a3b */
    II(0x100ee511, 0x4)   or_(memb_a32(ss, ebp - 0x4), 0x1);    /* or byte [ebp-0x4], 0x1 */
    II(0x100ee515, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100ee518, 0x5)   calld(my_string_ctor, 0x535cb);       /* call 0x10141ae8 */
    II(0x100ee51d, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100ee520, 0x4)   and_(memb_a32(ss, ebp - 0x4), -0x2 /* 0xfe */); /* and byte [ebp-0x4], 0xfe */
    II(0x100ee524, 0x4)   or_(memb_a32(ss, ebp - 0x4), 0x1);    /* or byte [ebp-0x4], 0x1 */
    II(0x100ee528, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ee52b, 0x5)   calld(my_string_ctor, 0x535b8);       /* call 0x10141ae8 */
    II(0x100ee530, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100ee533, 0x4)   and_(memb_a32(ss, ebp - 0x4), -0x2 /* 0xfe */); /* and byte [ebp-0x4], 0xfe */
    II(0x100ee537, 0x5)   mov(eax, memd_a32(ds, 0x101c3980));   /* mov eax, [0x101c3980] */
    II(0x100ee53c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ee53f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee540, 0x5)   mov(eax, 0x101a1fa2);                 /* mov eax, 0x101a1fa2 */ /* "intro%i.cam" */
    II(0x100ee545, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee546, 0x5)   mov(eax, 0x1e);                       /* mov eax, 0x1e */
    II(0x100ee54b, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee54c, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100ee54f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee550, 0x5)   calld(0x10142037, 0x53ae2);           /* call 0x10142037 */
    II(0x100ee555, 0x3)   add(esp, 0x10);                       /* add esp, 0x10 */
    II(0x100ee558, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x100ee55b, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100ee55e, 0x5)   calld(my_string_append_string, 0x53726); /* call 0x10141c89 */
    II(0x100ee563, 0x5)   mov(edx, 0x101a1fae);                 /* mov edx, 0x101a1fae */ /* "rt" */
    II(0x100ee568, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100ee56b, 0x5)   calld(my_strobj_c_str_v2, -0x64da8);  /* call 0x100897c8 */
    II(0x100ee570, 0x5)   calld(my_fopen, 0xeaa);               /* call 0x100ef41f */
    II(0x100ee575, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100ee578, 0x4)   cmp(memd_a32(ss, ebp - 0x10), 0);     /* cmp dword [ebp-0x10], 0x0 */
    II(0x100ee57c, 0x2)   jnzd(0x100ee5a1, 0x23);               /* jnz 0x100ee5a1 */
    II(0x100ee57e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ee580, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ee583, 0x5)   calld(my_string_dtor, 0x535a2);       /* call 0x10141b2a */
    II(0x100ee588, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ee58a, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100ee58d, 0x5)   calld(my_string_dtor, 0x53598);       /* call 0x10141b2a */
    II(0x100ee592, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ee594, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100ee597, 0x5)   calld(my_string_dtor, 0x5358e);       /* call 0x10141b2a */
    II(0x100ee59c, 0x5)   jmpd(0x100ee878, 0x2d7);              /* jmp 0x100ee878 */
l_0x100ee5a1:
    II(0x100ee5a1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ee5a4, 0x5)   calld(/* sys */ 0x10171f05, 0x8395c); /* call 0x10171f05 */
    II(0x100ee5a9, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100ee5ac, 0x4)   cmp(memd_a32(ss, ebp - 0xc), -0x1 /* 0xff */); /* cmp dword [ebp-0xc], 0xff */
    II(0x100ee5b0, 0x2)   jzd(0x100ee5c1, 0xf);                 /* jz 0x100ee5c1 */
    II(0x100ee5b2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ee5b4, 0x3)   mov(dl, memb_a32(ss, ebp - 0xc));     /* mov dl, [ebp-0xc] */
    II(0x100ee5b7, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ee5ba, 0x5)   calld(my_string_append_char, 0x5382b); /* call 0x10141dea */
    II(0x100ee5bf, 0x2)   jmpd(0x100ee5a1, -0x20);              /* jmp 0x100ee5a1 */
l_0x100ee5c1:
    II(0x100ee5c1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ee5c4, 0x5)   calld(sys_fclose, 0x83aa0);           /* call 0x10172069 */
    II(0x100ee5c9, 0x4)   or_(memb_a32(ss, ebp - 0x4), 0x1);    /* or byte [ebp-0x4], 0x1 */
    II(0x100ee5cd, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100ee5d1, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x100ee5d3, 0x6)   mov(edx, memd_a32(ds, edx + 0x101b8676)); /* mov edx, [edx+0x101b8676] */
    II(0x100ee5d9, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100ee5dc, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100ee5df, 0x5)   calld(0x100d67d8, -0x17e0c);          /* call 0x100d67d8 */
    II(0x100ee5e4, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x100ee5e7, 0x4)   and_(memb_a32(ss, ebp - 0x4), -0x2 /* 0xfe */); /* and byte [ebp-0x4], 0xfe */
    II(0x100ee5eb, 0x5)   mov(edx, 0x10);                       /* mov edx, 0x10 */
    II(0x100ee5f0, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100ee5f3, 0x5)   calld(0x100ef318, 0xd20);             /* call 0x100ef318 */
    II(0x100ee5f8, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100ee5fd, 0x5)   calld(0x10120d94, 0x32792);           /* call 0x10120d94 */
    II(0x100ee602, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100ee607, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100ee60a, 0x5)   calld(0x100ef2e8, 0xcd9);             /* call 0x100ef2e8 */
    II(0x100ee60f, 0x5)   calld(0x100d6124, -0x184f0);          /* call 0x100d6124 */
    II(0x100ee614, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ee616, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100ee618, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100ee61b, 0x5)   calld(0x100d6adf, -0x17b41);          /* call 0x100d6adf */
    II(0x100ee620, 0x3)   lea(edx, ebp - 0x5c);                 /* lea edx, [ebp-0x5c] */
    II(0x100ee623, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100ee626, 0x5)   calld(0x100d6a11, -0x17c1a);          /* call 0x100d6a11 */
    II(0x100ee62b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4a));   /* mov eax, [ebp-0x4a] */
    II(0x100ee62e, 0x5)   calld(sys_display_draw_0, 0x78e51);   /* call 0x10167484 */
    II(0x100ee633, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100ee638, 0x5)   calld(/* sys */ 0x1016a24c, 0x7bc0f); /* call 0x1016a24c */
    II(0x100ee63d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ee63f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee640, 0x5)   mov(eax, 0x190);                      /* mov eax, 0x190 */
    II(0x100ee645, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee646, 0x5)   mov(eax, 0x258);                      /* mov eax, 0x258 */
    II(0x100ee64b, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee64c, 0x5)   mov(ecx, 0x14);                       /* mov ecx, 0x14 */
    II(0x100ee651, 0x5)   mov(ebx, 0x14);                       /* mov ebx, 0x14 */
    II(0x100ee656, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ee659, 0x5)   calld(my_strobj_c_str_v2, -0x64e96);  /* call 0x100897c8 */
    II(0x100ee65e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ee660, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x100ee663, 0x5)   calld(0x100ed950, -0xd18);            /* call 0x100ed950 */
    II(0x100ee668, 0x9)   mov(memw_a32(ds, 0x101b8674), 0);     /* mov word [0x101b8674], 0x0 */
    II(0x100ee671, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x100ee676, 0x5)   calld(/* sys */ 0x1016a24c, 0x7bbd1); /* call 0x1016a24c */
    II(0x100ee67b, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x100ee680, 0x5)   calld(sys_new, 0x7777b);              /* call 0x10165e00 */
    II(0x100ee685, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
//    II(0x100ee688, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x100ee68b, 0x3)   mov(memd_a32(ss, ebp - 0x64), eax);   /* mov [ebp-0x64], eax */
    II(0x100ee68e, 0x4)   cmp(memd_a32(ss, ebp - 0x64), 0);     /* cmp dword [ebp-0x64], 0x0 */
    II(0x100ee692, 0x2)   jzd(0x100ee6bc, 0x28);                /* jz 0x100ee6bc */
    II(0x100ee694, 0x5)   mov(eax, 0x1ca);                      /* mov eax, 0x1ca */
    II(0x100ee699, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee69a, 0x5)   mov(ecx, 0x125);                      /* mov ecx, 0x125 */
    II(0x100ee69f, 0x5)   mov(ebx, 0x15b);                      /* mov ebx, 0x15b */
    II(0x100ee6a4, 0x5)   mov(edx, 0x15a);                      /* mov edx, 0x15a */
    II(0x100ee6a9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x100ee6ac, 0x5)   calld(my_ctor_c17, -0x202a2);         /* call 0x100ce40f */
    II(0x100ee6b1, 0x3)   mov(memd_a32(ss, ebp - 0x68), eax);   /* mov [ebp-0x68], eax */
//    II(0x100ee6b4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x100ee6b7, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
    II(0x100ee6ba, 0x2)   jmpd(0x100ee6c2, 0x6);                /* jmp 0x100ee6c2 */
l_0x100ee6bc:
    II(0x100ee6bc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x64));   /* mov eax, [ebp-0x64] */
    II(0x100ee6bf, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
l_0x100ee6c2:
    II(0x100ee6c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x100ee6c5, 0x3)   mov(memd_a32(ss, ebp - 0x70), eax);   /* mov [ebp-0x70], eax */
    II(0x100ee6c8, 0x3)   lea(eax, ebp - 0x74);                 /* lea eax, [ebp-0x74] */
    II(0x100ee6cb, 0x5)   calld(0x100d5224, -0x194ac);          /* call 0x100d5224 */
    II(0x100ee6d0, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee6d1, 0x3)   lea(eax, ebp - 0x78);                 /* lea eax, [ebp-0x78] */
    II(0x100ee6d4, 0x5)   calld(0x100d5250, -0x19489);          /* call 0x100d5250 */
    II(0x100ee6d9, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee6da, 0x3)   lea(eax, ebp - 0x7c);                 /* lea eax, [ebp-0x7c] */
    II(0x100ee6dd, 0x5)   calld(0x100d527c, -0x19466);          /* call 0x100d527c */
    II(0x100ee6e2, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee6e3, 0x3)   lea(eax, ebp - 0x80);                 /* lea eax, [ebp-0x80] */
    II(0x100ee6e6, 0x5)   calld(0x100d52a8, -0x19443);          /* call 0x100d52a8 */
    II(0x100ee6eb, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee6ec, 0x5)   calld(0x100d52d4, -0x1941d);          /* call 0x100d52d4 */
    II(0x100ee6f1, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100ee6f4, 0x5)   calld(0x100d52f8, -0x19401);          /* call 0x100d52f8 */
    II(0x100ee6f9, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100ee6fc, 0x5)   mov(edx, 0x101a1fb1);                 /* mov edx, 0x101a1fb1 */ /* "OK" */
    II(0x100ee701, 0x3)   mov(eax, memd_a32(ss, ebp - 0x70));   /* mov eax, [ebp-0x70] */
    II(0x100ee704, 0x5)   calld(0x100cef64, -0x1f7a5);          /* call 0x100cef64 */
    II(0x100ee709, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100ee70e, 0x5)   calld(/* sys */ 0x1016a24c, 0x7bb39); /* call 0x1016a24c */
    II(0x100ee713, 0x5)   mov(edx, 0x1b);                       /* mov edx, 0x1b */
    II(0x100ee718, 0x3)   mov(eax, memd_a32(ss, ebp - 0x70));   /* mov eax, [ebp-0x70] */
    II(0x100ee71b, 0x5)   calld(0x100d5134, -0x195ec);          /* call 0x100d5134 */
    II(0x100ee720, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4a));   /* mov edx, [ebp-0x4a] */
    II(0x100ee723, 0x3)   mov(eax, memd_a32(ss, ebp - 0x70));   /* mov eax, [ebp-0x70] */
    II(0x100ee726, 0x5)   calld(0x100cf85c, -0x1eecf);          /* call 0x100cf85c */
    II(0x100ee72b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4a));   /* mov eax, [ebp-0x4a] */
    II(0x100ee72e, 0x5)   calld(sys_display_draw_0, 0x78d51);   /* call 0x10167484 */
    II(0x100ee733, 0x7)   mov(memb_a32(ss, ebp - 0x84), 0);     /* mov byte [ebp+0xffffff7c], 0x0 */
l_0x100ee73a:
    II(0x100ee73a, 0x5)   calld(/* sys */ 0x1016b208, 0x7cac9); /* call 0x1016b208 */
    II(0x100ee73f, 0x6)   mov(memd_a32(ss, ebp - 0x88), eax);   /* mov [ebp+0xffffff78], eax */
    II(0x100ee745, 0x5)   jmpd(0x100ee7d9, 0x8f);               /* jmp 0x100ee7d9 */
l_0x100ee74a:
    II(0x100ee74a, 0x7)   mov(memb_a32(ss, ebp - 0x84), 0x1);   /* mov byte [ebp+0xffffff7c], 0x1 */
    II(0x100ee751, 0x5)   jmpd(0x100ee80d, 0xb7);               /* jmp 0x100ee80d */
l_0x100ee756:
    II(0x100ee756, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100ee75a, 0x1)   inc(eax);                             /* inc eax */
    II(0x100ee75b, 0x5)   mov(ebx, 0x9);                        /* mov ebx, 0x9 */
    II(0x100ee760, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ee762, 0x2)   div(ebx);                             /* div ebx */
    II(0x100ee764, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100ee767, 0x5)   calld(0x100d533c, -0x19430);          /* call 0x100d533c */
    II(0x100ee76c, 0x1)   cwde();                               /* cwde */
    II(0x100ee76d, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee76e, 0x5)   calld(0x100d5360, -0x19413);          /* call 0x100d5360 */
    II(0x100ee773, 0x1)   cwde();                               /* cwde */
    II(0x100ee774, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee775, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ee777, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee778, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x100ee77d, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4c)); /* movsx ebx, word [ebp-0x4c] */
    II(0x100ee781, 0x3)   lea(edx, ebp - 0x5c);                 /* lea edx, [ebp-0x5c] */
    II(0x100ee784, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100ee788, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100ee78a, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b8676)); /* mov eax, [eax+0x101b8676] */
    II(0x100ee790, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ee793, 0x5)   calld(0x100e8c51, -0x5b47);           /* call 0x100e8c51 */
    II(0x100ee798, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100ee79d, 0x5)   calld(/* sys */ 0x1016a24c, 0x7baaa); /* call 0x1016a24c */
    II(0x100ee7a2, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ee7a4, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee7a5, 0x5)   mov(eax, 0x190);                      /* mov eax, 0x190 */
    II(0x100ee7aa, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee7ab, 0x5)   mov(eax, 0x258);                      /* mov eax, 0x258 */
    II(0x100ee7b0, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ee7b1, 0x5)   mov(ecx, 0x14);                       /* mov ecx, 0x14 */
    II(0x100ee7b6, 0x5)   mov(ebx, 0x14);                       /* mov ebx, 0x14 */
    II(0x100ee7bb, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ee7be, 0x5)   calld(my_strobj_c_str_v2, -0x64ffb);  /* call 0x100897c8 */
    II(0x100ee7c3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ee7c5, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x100ee7c8, 0x5)   calld(0x100ed950, -0xe7d);            /* call 0x100ed950 */
    II(0x100ee7cd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4a));   /* mov eax, [ebp-0x4a] */
    II(0x100ee7d0, 0x5)   calld(sys_display_draw_0, 0x78caf);   /* call 0x10167484 */
    II(0x100ee7d5, 0x2)   jmpd(0x100ee80d, 0x36);               /* jmp 0x100ee80d */
l_0x100ee7d7:
    II(0x100ee7d7, 0x2)   jmpd(0x100ee80d, 0x34);               /* jmp 0x100ee80d */
l_0x100ee7d9:
    II(0x100ee7d9, 0x7)   cmp(memd_a32(ss, ebp - 0x88), 0x1b);  /* cmp dword [ebp+0xffffff78], 0x1b */
    II(0x100ee7e0, 0x2)   jbd(0x100ee7fe, 0x1c);                /* jb 0x100ee7fe */
    II(0x100ee7e2, 0x7)   cmp(memd_a32(ss, ebp - 0x88), 0x1b);  /* cmp dword [ebp+0xffffff78], 0x1b */
    II(0x100ee7e9, 0x6)   jbed(0x100ee74a, -0xa5);              /* jbe dword 0x100ee74a */
    II(0x100ee7ef, 0x7)   cmp(memd_a32(ss, ebp - 0x88), 0x20);  /* cmp dword [ebp+0xffffff78], 0x20 */
    II(0x100ee7f6, 0x6)   jzd(0x100ee756, -0xa6);               /* jz dword 0x100ee756 */
    II(0x100ee7fc, 0x2)   jmpd(0x100ee7d7, -0x27);              /* jmp 0x100ee7d7 */
l_0x100ee7fe:
    II(0x100ee7fe, 0x7)   cmp(memd_a32(ss, ebp - 0x88), 0xd);   /* cmp dword [ebp+0xffffff78], 0xd */
    II(0x100ee805, 0x6)   jzd(0x100ee74a, -0xc1);               /* jz dword 0x100ee74a */
    II(0x100ee80b, 0x2)   jmpd(0x100ee7d7, -0x36);              /* jmp 0x100ee7d7 */
l_0x100ee80d:
    II(0x100ee80d, 0x7)   cmp(memb_a32(ss, ebp - 0x84), 0);     /* cmp byte [ebp+0xffffff7c], 0x0 */
    II(0x100ee814, 0x6)   jzd(0x100ee73a, -0xe0);               /* jz dword 0x100ee73a */
    II(0x100ee81a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x70));   /* mov eax, [ebp-0x70] */
    II(0x100ee81d, 0x6)   mov(memd_a32(ss, ebp - 0x8c), eax);   /* mov [ebp+0xffffff74], eax */
    II(0x100ee823, 0x7)   cmp(memd_a32(ss, ebp - 0x8c), 0);     /* cmp dword [ebp+0xffffff74], 0x0 */
    II(0x100ee82a, 0x2)   jzd(0x100ee846, 0x1a);                /* jz 0x100ee846 */
    II(0x100ee82c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ee82e, 0x6)   mov(eax, memd_a32(ss, ebp - 0x8c));   /* mov eax, [ebp+0xffffff74] */
    II(0x100ee834, 0x5)   calld(my_dtor_d2, -0x20301);          /* call 0x100ce538 */
    II(0x100ee839, 0x5)   calld(sys_delete, 0x77726);           /* call 0x10165f64 */
    II(0x100ee83e, 0x6)   mov(memd_a32(ss, ebp - 0x90), eax);   /* mov [ebp+0xffffff70], eax */
    II(0x100ee844, 0x2)   jmpd(0x100ee850, 0xa);                /* jmp 0x100ee850 */
l_0x100ee846:
    II(0x100ee846, 0xa)   mov(memd_a32(ss, ebp - 0x90), 0);     /* mov dword [ebp+0xffffff70], 0x0 */
l_0x100ee850:
    II(0x100ee850, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ee852, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100ee855, 0x5)   calld(0x100d6999, -0x17ec1);          /* call 0x100d6999 */
    II(0x100ee85a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ee85c, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100ee85f, 0x5)   calld(my_string_dtor, 0x532c6);       /* call 0x10141b2a */
    II(0x100ee864, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ee866, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100ee869, 0x5)   calld(my_string_dtor, 0x532bc);       /* call 0x10141b2a */
    II(0x100ee86e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ee870, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100ee873, 0x5)   calld(my_string_dtor, 0x532b2);       /* call 0x10141b2a */
l_0x100ee878:
    II(0x100ee878, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ee87a, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ee87b, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ee87c, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ee87d, 0x1)   popd(edx);                            /* pop edx */
    II(0x100ee87e, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ee87f, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ee880, 0x1)   retd();                               /* ret */
FUNC_END

