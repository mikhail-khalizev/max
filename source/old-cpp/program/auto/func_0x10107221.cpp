FUNC_BEGIN(0x10107221, 0xea59c3124c14d79, 0x20, ({0x68, 0x64, 0x2, 0, 0, 0xe8, 0x27, 0xeb, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x48, 0x2, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x50, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x8, 0, 0x74, 0xb, 0xff, 0x5, 0xb0, 0x4d, 0x1c, 0x10, 0xe9, 0xeb, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x9, 0, 0x74, 0xb, 0xff, 0x5, 0xb0, 0x4d, 0x1c, 0x10, 0xe9, 0xd7, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x39, 0xfd, 0xff, 0xff, 0x85, 0xc0, 0xf, 0x84, 0xc0, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x40, 0xe8, 0xb7, 0xfc, 0xff, 0xff, 0x89, 0x45, 0xf4, 0x80, 0x3d, 0x30, 0x56, 0x1c, 0x10, 0x1, 0x74, 0x9, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0xff, 0x75, 0x5a, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x89, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xf4, 0x31, 0xd2, 0x8a, 0x90, 0xb8, 0x40, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0x89, 0x50, 0x48, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x55, 0xfc, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0xb9, 0xfd, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xf4, 0xfe, 0x80, 0xb8, 0x40, 0x1c, 0x10, 0x31, 0xd2, 0x8a, 0x90, 0xb8, 0x40, 0x1c, 0x10, 0xbb, 0x40, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0xf, 0xbf, 0x45, 0xf4, 0x88, 0x90, 0xb8, 0x40, 0x1c, 0x10, 0xe9, 0x46, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x3d, 0xff, 0, 0, 0, 0xf, 0x85, 0x23, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x40, 0x1, 0x89, 0x45, 0xec, 0xf, 0xbf, 0x45, 0xf4, 0xc1, 0xe0, 0x7, 0x89, 0xc2, 0x8b, 0x45, 0xec, 0x1, 0xc0, 0x1, 0xd0, 0x66, 0x8b, 0x80, 0x80, 0x47, 0x1c, 0x10, 0x89, 0x45, 0xe8, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf4, 0xc1, 0xe0, 0x8, 0x89, 0xc2, 0x8b, 0x45, 0xec, 0xc1, 0xe0, 0x2, 0x1, 0xd0, 0x8b, 0x80, 0x80, 0x49, 0x1c, 0x10, 0x89, 0x45, 0xe0, 0xf, 0xbf, 0x45, 0xf4, 0x8a, 0x80, 0xb4, 0x40, 0x1c, 0x10, 0x88, 0x45, 0xf0, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xe8, 0x3, 0x45, 0xe0, 0x3d, 0, 0x4, 0, 0, 0x76, 0x39, 0xb8, 0, 0x4, 0, 0, 0x2b, 0x45, 0xe0, 0x89, 0x45, 0xe4, 0x31, 0xdb, 0x66, 0x8b, 0x5d, 0xe4, 0xf, 0xbf, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0x8b, 0x90, 0x50, 0x41, 0x1c, 0x10, 0x3, 0x55, 0xe0, 0x8d, 0x85, 0xb8, 0xfd, 0xff, 0xff, 0xe8, 0xb1, 0xea, 0x5, 0, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0x8b, 0x45, 0xe4, 0x29, 0x45, 0xe8, 0x31, 0xdb, 0x66, 0x8b, 0x5d, 0xe8, 0xf, 0xbf, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0x8b, 0x90, 0x50, 0x41, 0x1c, 0x10, 0x3, 0x55, 0xe0, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xe4, 0x8d, 0x8d, 0xb8, 0xfd, 0xff, 0xff, 0x1, 0xc8, 0xe8, 0x7b, 0xea, 0x5, 0, 0xf, 0xbf, 0x55, 0xf4, 0x8a, 0x45, 0xec, 0x88, 0x82, 0xb4, 0x40, 0x1c, 0x10, 0xb9, 0x1, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf4, 0x6b, 0xc0, 0x6, 0xbb, 0x90, 0x40, 0x1c, 0x10, 0x1, 0xc3, 0xf, 0xbf, 0x45, 0xf4, 0xc1, 0xe0, 0x7, 0x8b, 0x55, 0xec, 0x1, 0xd2, 0x1, 0xd0, 0x31, 0xd2, 0x66, 0x8b, 0x90, 0x80, 0x47, 0x1c, 0x10, 0x8d, 0x85, 0xb8, 0xfd, 0xff, 0xff, 0xe8, 0x58, 0xa, 0, 0, 0xf, 0xbf, 0x55, 0xf4, 0x8a, 0x45, 0xf0, 0x88, 0x82, 0xb4, 0x40, 0x1c, 0x10, 0x31, 0xdb, 0x8b, 0x55, 0xfc, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0x56, 0xfc, 0xff, 0xff, 0xeb, 0xe, 0x31, 0xdb, 0x8b, 0x55, 0xfc, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0x46, 0xfc, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x8, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10107221, 0x5)   pushd(0x264);                         /* push dword 0x264 */
    II(0x10107226, 0x5)   calld(sys_check_available_stack_size, 0x5eb27); /* call 0x10165d52 */
    II(0x1010722b, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1010722c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1010722d, 0x1)   pushd(edx);                           /* push edx */
    II(0x1010722e, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010722f, 0x1)   pushd(edi);                           /* push edi */
    II(0x10107230, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10107231, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10107233, 0x6)   sub(esp, 0x248);                      /* sub esp, 0x248 */
    II(0x10107239, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1010723c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010723f, 0x3)   add(eax, 0x50);                       /* add eax, 0x50 */
    II(0x10107242, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10107245, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10107248, 0x4)   cmp(memb_a32(ds, eax + 0x8), 0);      /* cmp byte [eax+0x8], 0x0 */
    II(0x1010724c, 0x2)   jzd(0x10107259, 0xb);                 /* jz 0x10107259 */
    II(0x1010724e, 0x6)   inc(memd_a32(ds, 0x101c4db0));        /* inc dword [0x101c4db0] */
    II(0x10107254, 0x5)   jmpd(0x10107444, 0x1eb);              /* jmp 0x10107444 */
l_0x10107259:
    II(0x10107259, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010725c, 0x4)   cmp(memb_a32(ds, eax + 0x9), 0);      /* cmp byte [eax+0x9], 0x0 */
    II(0x10107260, 0x2)   jzd(0x1010726d, 0xb);                 /* jz 0x1010726d */
    II(0x10107262, 0x6)   inc(memd_a32(ds, 0x101c4db0));        /* inc dword [0x101c4db0] */
    II(0x10107268, 0x5)   jmpd(0x10107444, 0x1d7);              /* jmp 0x10107444 */
l_0x1010726d:
    II(0x1010726d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10107270, 0x5)   calld(0x10106fae, -0x2c7);            /* call 0x10106fae */
    II(0x10107275, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10107277, 0x6)   jzd(0x1010743d, 0x1c0);               /* jz dword 0x1010743d */
    II(0x1010727d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10107280, 0x3)   add(eax, 0x40);                       /* add eax, 0x40 */
    II(0x10107283, 0x5)   calld(0x10106f3f, -0x349);            /* call 0x10106f3f */
    II(0x10107288, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1010728b, 0x7)   cmp(memb_a32(ds, 0x101c5630), 0x1);   /* cmp byte [0x101c5630], 0x1 */
    II(0x10107292, 0x2)   jzd(0x1010729d, 0x9);                 /* jz 0x1010729d */
    II(0x10107294, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10107298, 0x3)   cmp(eax, -0x1 /* 0xff */);            /* cmp eax, 0xff */
    II(0x1010729b, 0x2)   jnzd(0x101072f7, 0x5a);               /* jnz 0x101072f7 */
l_0x1010729d:
    II(0x1010729d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1010729f, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x101072a4, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x101072a7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x101072ab, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101072ad, 0x6)   mov(dl, memb_a32(ds, eax + 0x101c40b8)); /* mov dl, [eax+0x101c40b8] */
    II(0x101072b3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101072b6, 0x3)   mov(memd_a32(ds, eax + 0x48), edx);   /* mov [eax+0x48], edx */
    II(0x101072b9, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x101072be, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x101072c1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x101072c5, 0x5)   calld(0x10107083, -0x247);            /* call 0x10107083 */
    II(0x101072ca, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x101072ce, 0x6)   inc(memb_a32(ds, eax + 0x101c40b8));  /* inc byte [eax+0x101c40b8] */
    II(0x101072d4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101072d6, 0x6)   mov(dl, memb_a32(ds, eax + 0x101c40b8)); /* mov dl, [eax+0x101c40b8] */
    II(0x101072dc, 0x5)   mov(ebx, 0x40);                       /* mov ebx, 0x40 */
    II(0x101072e1, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x101072e3, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x101072e6, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x101072e8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x101072ec, 0x6)   mov(memb_a32(ds, eax + 0x101c40b8), dl); /* mov [eax+0x101c40b8], dl */
    II(0x101072f2, 0x5)   jmpd(0x1010743d, 0x146);              /* jmp 0x1010743d */
l_0x101072f7:
    II(0x101072f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101072fa, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x101072fc, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10107301, 0x5)   cmp(eax, 0xff);                       /* cmp eax, 0xff */
    II(0x10107306, 0x6)   jnzd(0x1010742f, 0x123);              /* jnz dword 0x1010742f */
    II(0x1010730c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1010730f, 0x4)   movsx(eax, memw_a32(ds, eax + 0x1));  /* movsx eax, word [eax+0x1] */
    II(0x10107313, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10107316, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1010731a, 0x3)   shl(eax, 0x7);                        /* shl eax, 0x7 */
    II(0x1010731d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1010731f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10107322, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10107324, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10107326, 0x7)   mov(ax, memw_a32(ds, eax + 0x101c4780)); /* mov ax, [eax+0x101c4780] */
    II(0x1010732d, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10107330, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x10107337, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1010733b, 0x3)   shl(eax, 0x8);                        /* shl eax, 0x8 */
    II(0x1010733e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10107340, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10107343, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10107346, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10107348, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c4980)); /* mov eax, [eax+0x101c4980] */
    II(0x1010734e, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10107351, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10107355, 0x6)   mov(al, memb_a32(ds, eax + 0x101c40b4)); /* mov al, [eax+0x101c40b4] */
    II(0x1010735b, 0x3)   mov(memb_a32(ss, ebp - 0x10), al);    /* mov [ebp-0x10], al */
    II(0x1010735e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10107360, 0x4)   mov(ax, memw_a32(ss, ebp - 0x18));    /* mov ax, [ebp-0x18] */
    II(0x10107364, 0x3)   add(eax, memd_a32(ss, ebp - 0x20));   /* add eax, [ebp-0x20] */
    II(0x10107367, 0x5)   cmp(eax, 0x400);                      /* cmp eax, 0x400 */
    II(0x1010736c, 0x2)   jbed(0x101073a7, 0x39);               /* jbe 0x101073a7 */
    II(0x1010736e, 0x5)   mov(eax, 0x400);                      /* mov eax, 0x400 */
    II(0x10107373, 0x3)   sub(eax, memd_a32(ss, ebp - 0x20));   /* sub eax, [ebp-0x20] */
    II(0x10107376, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10107379, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1010737b, 0x4)   mov(bx, memw_a32(ss, ebp - 0x1c));    /* mov bx, [ebp-0x1c] */
    II(0x1010737f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10107383, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10107386, 0x6)   mov(edx, memd_a32(ds, eax + 0x101c4150)); /* mov edx, [eax+0x101c4150] */
    II(0x1010738c, 0x3)   add(edx, memd_a32(ss, ebp - 0x20));   /* add edx, [ebp-0x20] */
    II(0x1010738f, 0x6)   lea(eax, ebp - 0x248);                /* lea eax, [ebp+0xfffffdb8] */
    II(0x10107395, 0x5)   calld(sys_memcpy, 0x5eab1);           /* call 0x10165e4b */
    II(0x1010739a, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x101073a1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x101073a4, 0x3)   sub(memd_a32(ss, ebp - 0x18), eax);   /* sub [ebp-0x18], eax */
l_0x101073a7:
    II(0x101073a7, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101073a9, 0x4)   mov(bx, memw_a32(ss, ebp - 0x18));    /* mov bx, [ebp-0x18] */
    II(0x101073ad, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x101073b1, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101073b4, 0x6)   mov(edx, memd_a32(ds, eax + 0x101c4150)); /* mov edx, [eax+0x101c4150] */
    II(0x101073ba, 0x3)   add(edx, memd_a32(ss, ebp - 0x20));   /* add edx, [ebp-0x20] */
    II(0x101073bd, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101073bf, 0x4)   mov(ax, memw_a32(ss, ebp - 0x1c));    /* mov ax, [ebp-0x1c] */
    II(0x101073c3, 0x6)   lea(ecx, ebp - 0x248);                /* lea ecx, [ebp+0xfffffdb8] */
    II(0x101073c9, 0x2)   add(eax, ecx);                        /* add eax, ecx */
    II(0x101073cb, 0x5)   calld(sys_memcpy, 0x5ea7b);           /* call 0x10165e4b */
    II(0x101073d0, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x101073d4, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x101073d7, 0x6)   mov(memb_a32(ds, edx + 0x101c40b4), al); /* mov [edx+0x101c40b4], al */
    II(0x101073dd, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x101073e2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x101073e6, 0x3)   imul(eax, eax, 0x6);                  /* imul eax, eax, 0x6 */
    II(0x101073e9, 0x5)   mov(ebx, 0x101c4090);                 /* mov ebx, 0x101c4090 */
    II(0x101073ee, 0x2)   add(ebx, eax);                        /* add ebx, eax */
    II(0x101073f0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x101073f4, 0x3)   shl(eax, 0x7);                        /* shl eax, 0x7 */
    II(0x101073f7, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x101073fa, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x101073fc, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x101073fe, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10107400, 0x7)   mov(dx, memw_a32(ds, eax + 0x101c4780)); /* mov dx, [eax+0x101c4780] */
    II(0x10107407, 0x6)   lea(eax, ebp - 0x248);                /* lea eax, [ebp+0xfffffdb8] */
    II(0x1010740d, 0x5)   calld(0x10107e6a, 0xa58);             /* call 0x10107e6a */
    II(0x10107412, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x10107416, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x10107419, 0x6)   mov(memb_a32(ds, edx + 0x101c40b4), al); /* mov [edx+0x101c40b4], al */
    II(0x1010741f, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10107421, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10107424, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10107428, 0x5)   calld(0x10107083, -0x3aa);            /* call 0x10107083 */
    II(0x1010742d, 0x2)   jmpd(0x1010743d, 0xe);                /* jmp 0x1010743d */
l_0x1010742f:
    II(0x1010742f, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10107431, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10107434, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10107438, 0x5)   calld(0x10107083, -0x3ba);            /* call 0x10107083 */
l_0x1010743d:
    II(0x1010743d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10107440, 0x4)   mov(memb_a32(ds, eax + 0x8), 0);      /* mov byte [eax+0x8], 0x0 */
l_0x10107444:
    II(0x10107444, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10107446, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10107447, 0x1)   popd(edi);                            /* pop edi */
    II(0x10107448, 0x1)   popd(esi);                            /* pop esi */
    II(0x10107449, 0x1)   popd(edx);                            /* pop edx */
    II(0x1010744a, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1010744b, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1010744c, 0x1)   retd();                               /* ret */
FUNC_END

