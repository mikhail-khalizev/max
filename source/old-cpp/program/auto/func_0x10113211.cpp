FUNC_BEGIN(0x10113211, 0xbe8494ca49e1c6b0, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0x37, 0x2b, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x80, 0xb8, 0x1e, 0x5, 0, 0, 0, 0xf, 0x84, 0x78, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x80, 0x1e, 0x5, 0, 0, 0, 0xc7, 0x45, 0xf8, 0x4, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0xb8, 0x1f, 0x5, 0, 0, 0, 0x74, 0x28, 0xff, 0x4d, 0xf8, 0x66, 0x83, 0x7d, 0xf8, 0xff, 0x74, 0xe, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0xe8, 0xba, 0xfe, 0xff, 0xff, 0xeb, 0xe8, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0xf, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x11, 0xff, 0xeb, 0x33, 0xff, 0x4d, 0xf8, 0x66, 0x83, 0x7d, 0xf8, 0xff, 0x74, 0x29, 0xf, 0xbf, 0x45, 0xf8, 0x1, 0xc0, 0x3, 0x45, 0xfc, 0x8b, 0x80, 0xda, 0x4, 0, 0, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0x11, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x1e, 0x3, 0x45, 0xfc, 0xc6, 0x80, 0x38, 0x3, 0, 0, 0, 0xeb, 0xcd, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0xb6, 0x1, 0, 0, 0x8a, 0x45, 0xf8, 0x4, 0xd, 0x88, 0x45, 0xf4, 0x8b, 0x45, 0xfc, 0x8b, 0x10, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x80, 0xa9, 0x5, 0, 0, 0xe8, 0x7a, 0x4c, 0xfc, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x10, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x80, 0xc1, 0x5, 0, 0, 0xe8, 0x60, 0x4c, 0xfc, 0xff, 0x8b, 0x45, 0xfc, 0x80, 0xb8, 0x1f, 0x5, 0, 0, 0, 0x74, 0x19, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x1e, 0x3, 0x45, 0xfc, 0x8a, 0x80, 0x20, 0x5, 0, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x57, 0xf, 0xbe, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x83, 0x78, 0x16, 0, 0x74, 0x42, 0xf, 0xbe, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x40, 0x16, 0x89, 0x45, 0xf0, 0x83, 0x7d, 0xf0, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xf0, 0xe8, 0xd5, 0xb1, 0xfb, 0xff, 0xe8, 0xfc, 0x2b, 0x5, 0, 0x89, 0x45, 0xec, 0xeb, 0x7, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xf, 0xbe, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0xc7, 0x40, 0x16, 0, 0, 0, 0, 0xe9, 0xf7, 0, 0, 0, 0xe8, 0x89, 0x1f, 0, 0, 0x25, 0xff, 0, 0, 0, 0x50, 0x31, 0xc9, 0xbb, 0xa2, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf8, 0x83, 0xc2, 0x3, 0x6b, 0xd2, 0x14, 0xb8, 0x8c, 0x9d, 0x1b, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0x4e, 0x56, 0xff, 0xff, 0xf, 0xbe, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x83, 0x78, 0x16, 0, 0x75, 0xc, 0xf, 0xbe, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0xe8, 0x47, 0xf0, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xf8, 0x1, 0xc0, 0x3, 0x45, 0xfc, 0x8b, 0x80, 0xda, 0x4, 0, 0, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0x3a, 0xe8, 0xf6, 0x1d, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0xd, 0x1e, 0xfc, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0xf, 0xbe, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x40, 0x16, 0xe8, 0x6f, 0xc6, 0xfb, 0xff, 0x31, 0xd2, 0xf, 0xbe, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x40, 0x16, 0xe8, 0x52, 0xc7, 0xfb, 0xff, 0xeb, 0x5e, 0xf, 0xbf, 0x45, 0xf8, 0x1, 0xc0, 0x3, 0x45, 0xfc, 0x8b, 0x80, 0xda, 0x4, 0, 0, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x1, 0x7c, 0x17, 0xf, 0xbf, 0x45, 0xf8, 0x1, 0xc0, 0x3, 0x45, 0xfc, 0x8b, 0x80, 0xda, 0x4, 0, 0, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x4, 0x7e, 0x2, 0xeb, 0x2e, 0xba, 0xc, 0x3, 0, 0, 0xf, 0xbe, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x40, 0x16, 0xe8, 0xa7, 0xbd, 0xfb, 0xff, 0xba, 0xc, 0x3, 0, 0, 0xf, 0xbe, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x40, 0x16, 0xe8, 0xe2, 0xbe, 0xfb, 0xff, 0xe9, 0x37, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xb9, 0x5, 0, 0, 0xe8, 0xd3, 0x4a, 0xfc, 0xff, 0xe8, 0x7a, 0x1e, 0, 0, 0x25, 0xff, 0, 0, 0, 0x50, 0xb9, 0x1, 0, 0, 0, 0xbb, 0xa2, 0, 0, 0, 0xba, 0x18, 0x9e, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0x48, 0x55, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xbd, 0x5, 0, 0, 0xe8, 0x9c, 0x4a, 0xfc, 0xff, 0xe8, 0x43, 0x1e, 0, 0, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x58, 0x1e, 0, 0, 0x31, 0xc9, 0x88, 0xc1, 0xbb, 0x2, 0, 0, 0, 0xba, 0x2c, 0x9e, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0xd, 0x55, 0xff, 0xff, 0xbb, 0x1, 0, 0, 0, 0xba, 0x11, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x53, 0xf3, 0xff, 0xff, 0xbb, 0x1, 0, 0, 0, 0xba, 0x12, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x41, 0xf3, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10113211, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x10113216, 0x5)   calld(sys_check_available_stack_size, 0x52b37); /* call 0x10165d52 */
    II(0x1011321b, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1011321c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1011321d, 0x1)   pushd(edx);                           /* push edx */
    II(0x1011321e, 0x1)   pushd(esi);                           /* push esi */
    II(0x1011321f, 0x1)   pushd(edi);                           /* push edi */
    II(0x10113220, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10113221, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10113223, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x10113229, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1011322c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011322f, 0x7)   cmp(memb_a32(ds, eax + 0x51e), 0);    /* cmp byte [eax+0x51e], 0x0 */
    II(0x10113236, 0x6)   jzd(0x101132b4, 0x78);                /* jz dword 0x101132b4 */
    II(0x1011323c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011323f, 0x7)   mov(memb_a32(ds, eax + 0x51e), 0);    /* mov byte [eax+0x51e], 0x0 */
    II(0x10113246, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x4);    /* mov dword [ebp-0x8], 0x4 */
    II(0x1011324d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10113250, 0x7)   cmp(memb_a32(ds, eax + 0x51f), 0);    /* cmp byte [eax+0x51f], 0x0 */
    II(0x10113257, 0x2)   jzd(0x10113281, 0x28);                /* jz 0x10113281 */
l_0x10113259:
    II(0x10113259, 0x3)   dec(memd_a32(ss, ebp - 0x8));         /* dec dword [ebp-0x8] */
    II(0x1011325c, 0x5)   cmp(memw_a32(ss, ebp - 0x8), -0x1 /* 0xff */); /* cmp word [ebp-0x8], 0xff */
    II(0x10113261, 0x2)   jzd(0x10113271, 0xe);                 /* jz 0x10113271 */
    II(0x10113263, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10113267, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011326a, 0x5)   calld(0x10113129, -0x146);            /* call 0x10113129 */
    II(0x1011326f, 0x2)   jmpd(0x10113259, -0x18);              /* jmp 0x10113259 */
l_0x10113271:
    II(0x10113271, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10113274, 0x4)   mov(memb_a32(ds, eax + 0xf), 0);      /* mov byte [eax+0xf], 0x0 */
    II(0x10113278, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011327b, 0x4)   mov(memb_a32(ds, eax + 0x11), 0xff);  /* mov byte [eax+0x11], 0xff */
    II(0x1011327f, 0x2)   jmpd(0x101132b4, 0x33);               /* jmp 0x101132b4 */
l_0x10113281:
    II(0x10113281, 0x3)   dec(memd_a32(ss, ebp - 0x8));         /* dec dword [ebp-0x8] */
    II(0x10113284, 0x5)   cmp(memw_a32(ss, ebp - 0x8), -0x1 /* 0xff */); /* cmp word [ebp-0x8], 0xff */
    II(0x10113289, 0x2)   jzd(0x101132b4, 0x29);                /* jz 0x101132b4 */
    II(0x1011328b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1011328f, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10113291, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x10113294, 0x6)   mov(eax, memd_a32(ds, eax + 0x4da));  /* mov eax, [eax+0x4da] */
    II(0x1011329a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1011329d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011329f, 0x2)   jnzd(0x101132b2, 0x11);               /* jnz 0x101132b2 */
    II(0x101132a1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101132a5, 0x3)   imul(eax, eax, 0x1e);                 /* imul eax, eax, 0x1e */
    II(0x101132a8, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x101132ab, 0x7)   mov(memb_a32(ds, eax + 0x338), 0);    /* mov byte [eax+0x338], 0x0 */
l_0x101132b2:
    II(0x101132b2, 0x2)   jmpd(0x10113281, -0x33);              /* jmp 0x10113281 */
l_0x101132b4:
    II(0x101132b4, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x101132bb, 0x2)   jmpd(0x101132c3, 0x6);                /* jmp 0x101132c3 */
l_0x101132bd:
    II(0x101132bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101132c0, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x101132c3:
    II(0x101132c3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101132c7, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x101132ca, 0x6)   jged(0x10113486, 0x1b6);              /* jge dword 0x10113486 */
    II(0x101132d0, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x101132d3, 0x2)   add(al, 0xd);                         /* add al, 0xd */
    II(0x101132d5, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x101132d8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101132db, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x101132dd, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101132e1, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101132e4, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x101132e7, 0x6)   mov(eax, memd_a32(ds, eax + 0x5a9));  /* mov eax, [eax+0x5a9] */
    II(0x101132ed, 0x5)   calld(0x100d7f6c, -0x3b386);          /* call 0x100d7f6c */
    II(0x101132f2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101132f5, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x101132f7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101132fb, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101132fe, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x10113301, 0x6)   mov(eax, memd_a32(ds, eax + 0x5c1));  /* mov eax, [eax+0x5c1] */
    II(0x10113307, 0x5)   calld(0x100d7f6c, -0x3b3a0);          /* call 0x100d7f6c */
    II(0x1011330c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011330f, 0x7)   cmp(memb_a32(ds, eax + 0x51f), 0);    /* cmp byte [eax+0x51f], 0x0 */
    II(0x10113316, 0x2)   jzd(0x10113331, 0x19);                /* jz 0x10113331 */
    II(0x10113318, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1011331c, 0x3)   imul(eax, eax, 0x1e);                 /* imul eax, eax, 0x1e */
    II(0x1011331f, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x10113322, 0x6)   mov(al, memb_a32(ds, eax + 0x520));   /* mov al, [eax+0x520] */
    II(0x10113328, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1011332d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011332f, 0x2)   jzd(0x10113333, 0x2);                 /* jz 0x10113333 */
l_0x10113331:
    II(0x10113331, 0x2)   jmpd(0x1011338a, 0x57);               /* jmp 0x1011338a */
l_0x10113333:
    II(0x10113333, 0x4)   movsx(eax, memb_a32(ss, ebp - 0xc));  /* movsx eax, byte [ebp-0xc] */
    II(0x10113337, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1011333a, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1011333d, 0x4)   cmp(memd_a32(ds, eax + 0x16), 0);     /* cmp dword [eax+0x16], 0x0 */
    II(0x10113341, 0x2)   jzd(0x10113385, 0x42);                /* jz 0x10113385 */
    II(0x10113343, 0x4)   movsx(eax, memb_a32(ss, ebp - 0xc));  /* movsx eax, byte [ebp-0xc] */
    II(0x10113347, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1011334a, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1011334d, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x10113350, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10113353, 0x4)   cmp(memd_a32(ss, ebp - 0x10), 0);     /* cmp dword [ebp-0x10], 0x0 */
    II(0x10113357, 0x2)   jzd(0x1011336d, 0x14);                /* jz 0x1011336d */
    II(0x10113359, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011335b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011335e, 0x5)   calld(my_dtor_d2, -0x44e2b);          /* call 0x100ce538 */
    II(0x10113363, 0x5)   calld(sys_delete, 0x52bfc);           /* call 0x10165f64 */
    II(0x10113368, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1011336b, 0x2)   jmpd(0x10113374, 0x7);                /* jmp 0x10113374 */
l_0x1011336d:
    II(0x1011336d, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
l_0x10113374:
    II(0x10113374, 0x4)   movsx(eax, memb_a32(ss, ebp - 0xc));  /* movsx eax, byte [ebp-0xc] */
    II(0x10113378, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1011337b, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1011337e, 0x7)   mov(memd_a32(ds, eax + 0x16), 0);     /* mov dword [eax+0x16], 0x0 */
l_0x10113385:
    II(0x10113385, 0x5)   jmpd(0x10113481, 0xf7);               /* jmp 0x10113481 */
l_0x1011338a:
    II(0x1011338a, 0x5)   calld(0x10115318, 0x1f89);            /* call 0x10115318 */
    II(0x1011338f, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10113394, 0x1)   pushd(eax);                           /* push eax */
    II(0x10113395, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10113397, 0x5)   mov(ebx, 0xa2);                       /* mov ebx, 0xa2 */
    II(0x1011339c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x101133a0, 0x3)   add(edx, 0x3);                        /* add edx, 0x3 */
    II(0x101133a3, 0x3)   imul(edx, edx, 0x14);                 /* imul edx, edx, 0x14 */
    II(0x101133a6, 0x5)   mov(eax, 0x101b9d8c);                 /* mov eax, 0x101b9d8c */
    II(0x101133ab, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x101133ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101133b0, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x101133b2, 0x5)   calld(0x10108a05, -0xa9b2);           /* call 0x10108a05 */
    II(0x101133b7, 0x4)   movsx(eax, memb_a32(ss, ebp - 0xc));  /* movsx eax, byte [ebp-0xc] */
    II(0x101133bb, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101133be, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x101133c1, 0x4)   cmp(memd_a32(ds, eax + 0x16), 0);     /* cmp dword [eax+0x16], 0x0 */
    II(0x101133c5, 0x2)   jnzd(0x101133d3, 0xc);                /* jnz 0x101133d3 */
    II(0x101133c7, 0x4)   movsx(edx, memb_a32(ss, ebp - 0xc));  /* movsx edx, byte [ebp-0xc] */
    II(0x101133cb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101133ce, 0x5)   calld(0x1011241a, -0xfb9);            /* call 0x1011241a */
l_0x101133d3:
    II(0x101133d3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101133d7, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x101133d9, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x101133dc, 0x6)   mov(eax, memd_a32(ds, eax + 0x4da));  /* mov eax, [eax+0x4da] */
    II(0x101133e2, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101133e5, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x101133e7, 0x2)   jnzd(0x10113423, 0x3a);               /* jnz 0x10113423 */
    II(0x101133e9, 0x5)   calld(0x100d51e4, -0x3e20a);          /* call 0x100d51e4 */
    II(0x101133ee, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101133f0, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x101133f2, 0x5)   calld(0x100d5204, -0x3e1f3);          /* call 0x100d5204 */
    II(0x101133f7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101133f9, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x101133fb, 0x4)   movsx(eax, memb_a32(ss, ebp - 0xc));  /* movsx eax, byte [ebp-0xc] */
    II(0x101133ff, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10113402, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x10113405, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x10113408, 0x5)   calld(0x100cfa7c, -0x43991);          /* call 0x100cfa7c */
    II(0x1011340d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011340f, 0x4)   movsx(eax, memb_a32(ss, ebp - 0xc));  /* movsx eax, byte [ebp-0xc] */
    II(0x10113413, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10113416, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x10113419, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x1011341c, 0x5)   calld(0x100cfb73, -0x438ae);          /* call 0x100cfb73 */
    II(0x10113421, 0x2)   jmpd(0x10113481, 0x5e);               /* jmp 0x10113481 */
l_0x10113423:
    II(0x10113423, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10113427, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10113429, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1011342c, 0x6)   mov(eax, memd_a32(ds, eax + 0x4da));  /* mov eax, [eax+0x4da] */
    II(0x10113432, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10113435, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x10113438, 0x2)   jld(0x10113451, 0x17);                /* jl 0x10113451 */
    II(0x1011343a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1011343e, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10113440, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x10113443, 0x6)   mov(eax, memd_a32(ds, eax + 0x4da));  /* mov eax, [eax+0x4da] */
    II(0x10113449, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1011344c, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x1011344f, 0x2)   jled(0x10113453, 0x2);                /* jle 0x10113453 */
l_0x10113451:
    II(0x10113451, 0x2)   jmpd(0x10113481, 0x2e);               /* jmp 0x10113481 */
l_0x10113453:
    II(0x10113453, 0x5)   mov(edx, 0x30c);                      /* mov edx, 0x30c */
    II(0x10113458, 0x4)   movsx(eax, memb_a32(ss, ebp - 0xc));  /* movsx eax, byte [ebp-0xc] */
    II(0x1011345c, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1011345f, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x10113462, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x10113465, 0x5)   calld(0x100cf211, -0x44259);          /* call 0x100cf211 */
    II(0x1011346a, 0x5)   mov(edx, 0x30c);                      /* mov edx, 0x30c */
    II(0x1011346f, 0x4)   movsx(eax, memb_a32(ss, ebp - 0xc));  /* movsx eax, byte [ebp-0xc] */
    II(0x10113473, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10113476, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x10113479, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x1011347c, 0x5)   calld(0x100cf363, -0x4411e);          /* call 0x100cf363 */
l_0x10113481:
    II(0x10113481, 0x5)   jmpd(0x101132bd, -0x1c9);             /* jmp 0x101132bd */
l_0x10113486:
    II(0x10113486, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10113489, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
//    II(0x1011348b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011348e, 0x6)   mov(eax, memd_a32(ds, eax + 0x5b9));  /* mov eax, [eax+0x5b9] */
    II(0x10113494, 0x5)   calld(0x100d7f6c, -0x3b52d);          /* call 0x100d7f6c */
    II(0x10113499, 0x5)   calld(0x10115318, 0x1e7a);            /* call 0x10115318 */
    II(0x1011349e, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101134a3, 0x1)   pushd(eax);                           /* push eax */
    II(0x101134a4, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x101134a9, 0x5)   mov(ebx, 0xa2);                       /* mov ebx, 0xa2 */
    II(0x101134ae, 0x5)   mov(edx, 0x101b9e18);                 /* mov edx, 0x101b9e18 */
    II(0x101134b3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101134b6, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x101134b8, 0x5)   calld(0x10108a05, -0xaab8);           /* call 0x10108a05 */
    II(0x101134bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101134c0, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
//    II(0x101134c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101134c5, 0x6)   mov(eax, memd_a32(ds, eax + 0x5bd));  /* mov eax, [eax+0x5bd] */
    II(0x101134cb, 0x5)   calld(0x100d7f6c, -0x3b564);          /* call 0x100d7f6c */
    II(0x101134d0, 0x5)   calld(0x10115318, 0x1e43);            /* call 0x10115318 */
    II(0x101134d5, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101134da, 0x1)   pushd(eax);                           /* push eax */
    II(0x101134db, 0x5)   calld(0x10115338, 0x1e58);            /* call 0x10115338 */
    II(0x101134e0, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x101134e2, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x101134e4, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x101134e9, 0x5)   mov(edx, 0x101b9e2c);                 /* mov edx, 0x101b9e2c */
    II(0x101134ee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101134f1, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x101134f3, 0x5)   calld(0x10108a05, -0xaaf3);           /* call 0x10108a05 */
    II(0x101134f8, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x101134fd, 0x5)   mov(edx, 0x11);                       /* mov edx, 0x11 */
    II(0x10113502, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10113505, 0x5)   calld(0x1011285d, -0xcad);            /* call 0x1011285d */
    II(0x1011350a, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1011350f, 0x5)   mov(edx, 0x12);                       /* mov edx, 0x12 */
    II(0x10113514, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10113517, 0x5)   calld(0x1011285d, -0xcbf);            /* call 0x1011285d */
    II(0x1011351c, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1011351e, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1011351f, 0x1)   popd(edi);                            /* pop edi */
    II(0x10113520, 0x1)   popd(esi);                            /* pop esi */
    II(0x10113521, 0x1)   popd(edx);                            /* pop edx */
    II(0x10113522, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10113523, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10113524, 0x1)   retd();                               /* ret */
FUNC_END

