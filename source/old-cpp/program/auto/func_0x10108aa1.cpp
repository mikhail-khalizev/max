FUNC_BEGIN(0x10108aa1, 0xd692b61aa6974fe4, 0x20, ({0x68, 0x28, 0x2, 0, 0, 0xe8, 0xa7, 0xd2, 0x5, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0x2, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0xf, 0xbf, 0x55, 0xf8, 0xbb, 0x5, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x85, 0xc0, 0x74, 0x6, 0xc6, 0x45, 0xe8, 0xa, 0xeb, 0x4, 0xc6, 0x45, 0xe8, 0x9, 0x8a, 0x45, 0xe8, 0x88, 0x45, 0xec, 0xf, 0xbf, 0x55, 0xf8, 0xbb, 0x5, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x55, 0xe0, 0xb8, 0x5, 0, 0, 0, 0x2b, 0x45, 0xe0, 0x89, 0x45, 0xe4, 0xc6, 0x85, 0xec, 0xfd, 0xff, 0xff, 0, 0xff, 0x4d, 0xe0, 0x66, 0x83, 0x7d, 0xe0, 0xff, 0x74, 0x12, 0xba, 0x6e, 0x45, 0x1a, 0x10, 0x8d, 0x85, 0xec, 0xfd, 0xff, 0xff, 0xe8, 0xc, 0xd4, 0x5, 0, 0xeb, 0xe4, 0x8b, 0x55, 0xf4, 0x8d, 0x85, 0xec, 0xfd, 0xff, 0xff, 0xe8, 0xfc, 0xd3, 0x5, 0, 0xff, 0x4d, 0xe4, 0x66, 0x83, 0x7d, 0xe4, 0xff, 0x74, 0x12, 0xba, 0x70, 0x45, 0x1a, 0x10, 0x8d, 0x85, 0xec, 0xfd, 0xff, 0xff, 0xe8, 0xe2, 0xd3, 0x5, 0, 0xeb, 0xe4, 0xf, 0xbe, 0x55, 0xec, 0x6b, 0xd2, 0x14, 0x8d, 0x85, 0xec, 0xfd, 0xff, 0xff, 0x89, 0x82, 0x60, 0x99, 0x1b, 0x10, 0xe8, 0xaf, 0xc7, 0, 0, 0x25, 0xff, 0, 0, 0, 0x50, 0x31, 0xc9, 0xf, 0xbf, 0x5d, 0xfc, 0x81, 0xcb, 0, 0, 0x1, 0, 0xf, 0xbe, 0x55, 0xec, 0x6b, 0xd2, 0x14, 0xb8, 0x50, 0x99, 0x1b, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xf0, 0x8b, 0, 0xe8, 0x72, 0xfe, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x10108aa1, 0x5)   pushd(0x228);                         /* push dword 0x228 */
    II(0x10108aa6, 0x5)   calld(sys_check_available_stack_size, 0x5d2a7); /* call 0x10165d52 */
    II(0x10108aab, 0x1)   pushd(esi);                           /* push esi */
    II(0x10108aac, 0x1)   pushd(edi);                           /* push edi */
    II(0x10108aad, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10108aae, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10108ab0, 0x6)   sub(esp, 0x214);                      /* sub esp, 0x214 */
    II(0x10108ab6, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10108ab9, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10108abc, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x10108abf, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x10108ac2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10108ac6, 0x5)   mov(ebx, 0x5);                        /* mov ebx, 0x5 */
    II(0x10108acb, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10108acd, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10108ad0, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10108ad2, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10108ad4, 0x2)   jzd(0x10108adc, 0x6);                 /* jz 0x10108adc */
    II(0x10108ad6, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0xa);   /* mov byte [ebp-0x18], 0xa */
    II(0x10108ada, 0x2)   jmpd(0x10108ae0, 0x4);                /* jmp 0x10108ae0 */
l_0x10108adc:
    II(0x10108adc, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0x9);   /* mov byte [ebp-0x18], 0x9 */
l_0x10108ae0:
    II(0x10108ae0, 0x3)   mov(al, memb_a32(ss, ebp - 0x18));    /* mov al, [ebp-0x18] */
    II(0x10108ae3, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x10108ae6, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10108aea, 0x5)   mov(ebx, 0x5);                        /* mov ebx, 0x5 */
    II(0x10108aef, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10108af1, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10108af4, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10108af6, 0x3)   mov(memd_a32(ss, ebp - 0x20), edx);   /* mov [ebp-0x20], edx */
    II(0x10108af9, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x10108afe, 0x3)   sub(eax, memd_a32(ss, ebp - 0x20));   /* sub eax, [ebp-0x20] */
    II(0x10108b01, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10108b04, 0x7)   mov(memb_a32(ss, ebp - 0x214), 0);    /* mov byte [ebp+0xfffffdec], 0x0 */
l_0x10108b0b:
    II(0x10108b0b, 0x3)   dec(memd_a32(ss, ebp - 0x20));        /* dec dword [ebp-0x20] */
    II(0x10108b0e, 0x5)   cmp(memw_a32(ss, ebp - 0x20), -0x1 /* 0xff */); /* cmp word [ebp-0x20], 0xff */
    II(0x10108b13, 0x2)   jzd(0x10108b27, 0x12);                /* jz 0x10108b27 */
    II(0x10108b15, 0x5)   mov(edx, 0x101a456e);                 /* mov edx, 0x101a456e */ /* "\n" */
    II(0x10108b1a, 0x6)   lea(eax, ebp - 0x214);                /* lea eax, [ebp+0xfffffdec] */
    II(0x10108b20, 0x5)   calld(sys_strcat, 0x5d40c);           /* call 0x10165f31 */
    II(0x10108b25, 0x2)   jmpd(0x10108b0b, -0x1c);              /* jmp 0x10108b0b */
l_0x10108b27:
    II(0x10108b27, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10108b2a, 0x6)   lea(eax, ebp - 0x214);                /* lea eax, [ebp+0xfffffdec] */
    II(0x10108b30, 0x5)   calld(sys_strcat, 0x5d3fc);           /* call 0x10165f31 */
l_0x10108b35:
    II(0x10108b35, 0x3)   dec(memd_a32(ss, ebp - 0x1c));        /* dec dword [ebp-0x1c] */
    II(0x10108b38, 0x5)   cmp(memw_a32(ss, ebp - 0x1c), -0x1 /* 0xff */); /* cmp word [ebp-0x1c], 0xff */
    II(0x10108b3d, 0x2)   jzd(0x10108b51, 0x12);                /* jz 0x10108b51 */
    II(0x10108b3f, 0x5)   mov(edx, 0x101a4570);                 /* mov edx, 0x101a4570 */ /* "\n" */
    II(0x10108b44, 0x6)   lea(eax, ebp - 0x214);                /* lea eax, [ebp+0xfffffdec] */
    II(0x10108b4a, 0x5)   calld(sys_strcat, 0x5d3e2);           /* call 0x10165f31 */
    II(0x10108b4f, 0x2)   jmpd(0x10108b35, -0x1c);              /* jmp 0x10108b35 */
l_0x10108b51:
    II(0x10108b51, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x14)); /* movsx edx, byte [ebp-0x14] */
    II(0x10108b55, 0x3)   imul(edx, edx, 0x14);                 /* imul edx, edx, 0x14 */
    II(0x10108b58, 0x6)   lea(eax, ebp - 0x214);                /* lea eax, [ebp+0xfffffdec] */
    II(0x10108b5e, 0x6)   mov(memd_a32(ds, edx + 0x101b9960), eax); /* mov [edx+0x101b9960], eax */
    II(0x10108b64, 0x5)   calld(0x10115318, 0xc7af);            /* call 0x10115318 */
    II(0x10108b69, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10108b6e, 0x1)   pushd(eax);                           /* push eax */
    II(0x10108b6f, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10108b71, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x10108b75, 0x6)   or_(ebx, 0x10000);                    /* or ebx, 0x10000 */
    II(0x10108b7b, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x14)); /* movsx edx, byte [ebp-0x14] */
    II(0x10108b7f, 0x3)   imul(edx, edx, 0x14);                 /* imul edx, edx, 0x14 */
    II(0x10108b82, 0x5)   mov(eax, 0x101b9950);                 /* mov eax, 0x101b9950 */
    II(0x10108b87, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10108b89, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10108b8c, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10108b8e, 0x5)   calld(0x10108a05, -0x18e);            /* call 0x10108a05 */
    II(0x10108b93, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10108b95, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10108b96, 0x1)   popd(edi);                            /* pop edi */
    II(0x10108b97, 0x1)   popd(esi);                            /* pop esi */
    II(0x10108b98, 0x1)   retd();                               /* ret */
FUNC_END

