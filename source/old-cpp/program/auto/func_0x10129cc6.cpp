FUNC_BEGIN(0x10129cc6, 0xa1e6c0ebd29ee3b0, 0x20, ({0x68, 0x40, 0, 0, 0, 0xe8, 0x82, 0xc0, 0x3, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0xa0, 0xc8, 0x59, 0x1c, 0x10, 0x88, 0x45, 0xfc, 0xe9, 0x60, 0x2, 0, 0, 0x66, 0x83, 0x3d, 0x58, 0xb4, 0x1b, 0x10, 0, 0xf, 0x84, 0x94, 0x2, 0, 0, 0x8b, 0x15, 0x78, 0x58, 0x1c, 0x10, 0xa1, 0x7c, 0x58, 0x1c, 0x10, 0x8b, 0x12, 0x3b, 0x10, 0x74, 0xa, 0xe8, 0xf9, 0x14, 0x4, 0, 0x83, 0xf8, 0x1b, 0x75, 0xe5, 0xb8, 0xdc, 0x34, 0x12, 0, 0xe8, 0x56, 0xe8, 0x1, 0, 0x31, 0xdb, 0xba, 0x3, 0, 0, 0, 0xb8, 0xcd, 0x83, 0x1a, 0x10, 0xe8, 0x61, 0xab, 0xff, 0xff, 0xb8, 0xb8, 0x69, 0x24, 0, 0xe8, 0x3b, 0xe8, 0x1, 0, 0xb8, 0x60, 0, 0, 0, 0xe8, 0x92, 0xb0, 0xff, 0xff, 0x66, 0x83, 0x3d, 0x58, 0xb4, 0x1b, 0x10, 0, 0xf, 0x84, 0x3c, 0x2, 0, 0, 0x8b, 0x15, 0x78, 0x58, 0x1c, 0x10, 0xa1, 0x7c, 0x58, 0x1c, 0x10, 0x8b, 0x12, 0x3b, 0x10, 0x74, 0xa, 0xe8, 0xa1, 0x14, 0x4, 0, 0x83, 0xf8, 0x1b, 0x75, 0xe5, 0xb8, 0x6e, 0x1a, 0x9, 0, 0xe8, 0xfe, 0xe7, 0x1, 0, 0x66, 0xc7, 0x5, 0x58, 0xb4, 0x1b, 0x10, 0, 0, 0xfa, 0x31, 0xc9, 0x8a, 0xd, 0x5a, 0xb4, 0x1b, 0x10, 0x83, 0xe9, 0x8, 0xbb, 0x1, 0, 0, 0, 0xd3, 0xe3, 0x31, 0xc0, 0xa0, 0x90, 0x59, 0x1c, 0x10, 0x21, 0xc3, 0xba, 0x21, 0, 0, 0, 0x29, 0xc0, 0xec, 0x9, 0xd8, 0xba, 0x21, 0, 0, 0, 0xee, 0xa0, 0x9e, 0x59, 0x1c, 0x10, 0x24, 0x7f, 0x25, 0xff, 0, 0, 0, 0x31, 0xd2, 0x66, 0x8b, 0x15, 0x5c, 0xb4, 0x1b, 0x10, 0x83, 0xc2, 0x3, 0xee, 0x31, 0xc0, 0xa0, 0x9c, 0x59, 0x1c, 0x10, 0x31, 0xd2, 0x66, 0x8b, 0x15, 0x5c, 0xb4, 0x1b, 0x10, 0x42, 0xee, 0x31, 0xc0, 0xa0, 0x9f, 0x59, 0x1c, 0x10, 0x31, 0xd2, 0x66, 0x8b, 0x15, 0x5c, 0xb4, 0x1b, 0x10, 0x83, 0xc2, 0x4, 0xee, 0xa0, 0x9e, 0x59, 0x1c, 0x10, 0xc, 0x80, 0x25, 0xff, 0, 0, 0, 0x31, 0xd2, 0x66, 0x8b, 0x15, 0x5c, 0xb4, 0x1b, 0x10, 0x83, 0xc2, 0x3, 0xee, 0x31, 0xc0, 0xa0, 0x9a, 0x59, 0x1c, 0x10, 0x31, 0xd2, 0x66, 0x8b, 0x15, 0x5c, 0xb4, 0x1b, 0x10, 0xee, 0x31, 0xc0, 0xa0, 0x9b, 0x59, 0x1c, 0x10, 0x31, 0xd2, 0x66, 0x8b, 0x15, 0x5c, 0xb4, 0x1b, 0x10, 0x42, 0xee, 0x31, 0xc0, 0xa0, 0x9e, 0x59, 0x1c, 0x10, 0x31, 0xd2, 0x66, 0x8b, 0x15, 0x5c, 0xb4, 0x1b, 0x10, 0x83, 0xc2, 0x3, 0xee, 0xfb, 0xfc, 0x66, 0xc7, 0x45, 0xe0, 0x1, 0x2, 0xa0, 0x5a, 0xb4, 0x1b, 0x10, 0x88, 0x45, 0xe4, 0x66, 0xa1, 0xa4, 0x59, 0x1c, 0x10, 0x66, 0x89, 0x45, 0xe8, 0x66, 0xa1, 0xa6, 0x59, 0x1c, 0x10, 0x66, 0x89, 0x45, 0xec, 0x8d, 0x5d, 0xe0, 0x8d, 0x55, 0xe0, 0xb8, 0x31, 0, 0, 0, 0xe8, 0x98, 0x27, 0x4, 0, 0xc7, 0x45, 0xe0, 0x1, 0x1, 0, 0, 0x66, 0xa1, 0x88, 0x59, 0x1c, 0x10, 0x66, 0x89, 0x45, 0xec, 0x8d, 0x5d, 0xe0, 0x8d, 0x55, 0xe0, 0xb8, 0x31, 0, 0, 0, 0xe8, 0x77, 0x27, 0x4, 0, 0xc7, 0x45, 0xe0, 0x5, 0x2, 0, 0, 0xa0, 0x5a, 0xb4, 0x1b, 0x10, 0x88, 0x45, 0xe5, 0x66, 0xa1, 0xac, 0x59, 0x1c, 0x10, 0x66, 0x89, 0x45, 0xe8, 0xa1, 0xa8, 0x59, 0x1c, 0x10, 0x89, 0x45, 0xec, 0x8d, 0x5d, 0xe0, 0x8d, 0x55, 0xe0, 0xb8, 0x31, 0, 0, 0, 0xe8, 0x46, 0x27, 0x4, 0, 0xc7, 0x45, 0xe0, 0x1, 0x6, 0, 0, 0x8c, 0xc8, 0xba, 0x26, 0xdc, 0xc, 0x10, 0xc1, 0xea, 0x10, 0x89, 0x55, 0xe4, 0x8c, 0xc8, 0xba, 0x26, 0xdc, 0xc, 0x10, 0x81, 0xe2, 0xff, 0xff, 0, 0, 0x89, 0x55, 0xe8, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xa1, 0xd5, 0xdd, 0xc, 0x10, 0x89, 0x45, 0xf4, 0x8d, 0x5d, 0xe0, 0x8d, 0x55, 0xe0, 0xb8, 0x31, 0, 0, 0, 0xe8, 0x3, 0x27, 0x4, 0, 0xc7, 0x45, 0xe0, 0x1, 0x6, 0, 0, 0xb8, 0x5c, 0xb4, 0x1b, 0x10, 0xc1, 0xe8, 0x10, 0x89, 0x45, 0xe4, 0xb8, 0x5c, 0xb4, 0x1b, 0x10, 0x25, 0xff, 0xff, 0, 0, 0x89, 0x45, 0xe8, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xc7, 0x45, 0xf4, 0x2, 0, 0, 0, 0x8d, 0x5d, 0xe0, 0x8d, 0x55, 0xe0, 0xb8, 0x31, 0, 0, 0, 0xe8, 0xc6, 0x26, 0x4, 0, 0xeb, 0x33, 0xe8, 0xbc, 0xd9, 0xfd, 0xff, 0xeb, 0x2c, 0xeb, 0x2a, 0x8a, 0x45, 0xfc, 0x88, 0x45, 0xdc, 0x80, 0x7d, 0xdc, 0x2, 0x72, 0x12, 0x80, 0x7d, 0xdc, 0x2, 0xf, 0x86, 0x8a, 0xfd, 0xff, 0xff, 0x80, 0x7d, 0xdc, 0x3, 0x74, 0xdb, 0xeb, 0xe0, 0x80, 0x7d, 0xdc, 0x1, 0xf, 0x84, 0xd0, 0xfd, 0xff, 0xff, 0xeb, 0xd4, 0xc6, 0x5, 0x30, 0x56, 0x1c, 0x10, 0, 0xc6, 0x5, 0xc8, 0x59, 0x1c, 0x10, 0, 0xc7, 0x5, 0x24, 0x56, 0x1c, 0x10, 0, 0, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10129cc6, 0x5)   pushd(0x40);                          /* push dword 0x40 */
    II(0x10129ccb, 0x5)   calld(sys_check_available_stack_size, 0x3c082); /* call 0x10165d52 */
    II(0x10129cd0, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10129cd1, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10129cd2, 0x1)   pushd(edx);                           /* push edx */
    II(0x10129cd3, 0x1)   pushd(esi);                           /* push esi */
    II(0x10129cd4, 0x1)   pushd(edi);                           /* push edi */
    II(0x10129cd5, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10129cd6, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10129cd8, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x10129cde, 0x5)   mov(al, memb_a32(ds, 0x101c59c8));    /* mov al, [0x101c59c8] */
    II(0x10129ce3, 0x3)   mov(memb_a32(ss, ebp - 0x4), al);     /* mov [ebp-0x4], al */
    II(0x10129ce6, 0x5)   jmpd(0x10129f4b, 0x260);              /* jmp 0x10129f4b */
l_0x10129ceb:
    II(0x10129ceb, 0x8)   cmp(memw_a32(ds, 0x101bb458), 0);     /* cmp word [0x101bb458], 0x0 */
    II(0x10129cf3, 0x6)   jzd(0x10129f8d, 0x294);               /* jz dword 0x10129f8d */
l_0x10129cf9:
    II(0x10129cf9, 0x6)   mov(edx, memd_a32(ds, 0x101c5878));   /* mov edx, [0x101c5878] */
    II(0x10129cff, 0x5)   mov(eax, memd_a32(ds, 0x101c587c));   /* mov eax, [0x101c587c] */
    II(0x10129d04, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x10129d06, 0x2)   cmp(edx, memd_a32(ds, eax));          /* cmp edx, [eax] */
    II(0x10129d08, 0x2)   jzd(0x10129d14, 0xa);                 /* jz 0x10129d14 */
    II(0x10129d0a, 0x5)   calld(/* sys */ 0x1016b208, 0x414f9); /* call 0x1016b208 */
    II(0x10129d0f, 0x3)   cmp(eax, 0x1b);                       /* cmp eax, 0x1b */
    II(0x10129d12, 0x2)   jnzd(0x10129cf9, -0x1b);              /* jnz 0x10129cf9 */
l_0x10129d14:
    II(0x10129d14, 0x5)   mov(eax, 0x1234dc);                   /* mov eax, 0x1234dc */
    II(0x10129d19, 0x5)   calld(0x10148574, 0x1e856);           /* call 0x10148574 */
    II(0x10129d1e, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10129d20, 0x5)   mov(edx, 0x3);                        /* mov edx, 0x3 */
    II(0x10129d25, 0x5)   mov(eax, 0x101a83cd);                 /* mov eax, 0x101a83cd */ /* "+++" */
    II(0x10129d2a, 0x5)   calld(0x10124890, -0x549f);           /* call 0x10124890 */
    II(0x10129d2f, 0x5)   mov(eax, 0x2469b8);                   /* mov eax, 0x2469b8 */
    II(0x10129d34, 0x5)   calld(0x10148574, 0x1e83b);           /* call 0x10148574 */
    II(0x10129d39, 0x5)   mov(eax, 0x60);                       /* mov eax, 0x60 */
    II(0x10129d3e, 0x5)   calld(0x10124dd5, -0x4f6e);           /* call 0x10124dd5 */
l_0x10129d43:
    II(0x10129d43, 0x8)   cmp(memw_a32(ds, 0x101bb458), 0);     /* cmp word [0x101bb458], 0x0 */
    II(0x10129d4b, 0x6)   jzd(0x10129f8d, 0x23c);               /* jz dword 0x10129f8d */
l_0x10129d51:
    II(0x10129d51, 0x6)   mov(edx, memd_a32(ds, 0x101c5878));   /* mov edx, [0x101c5878] */
    II(0x10129d57, 0x5)   mov(eax, memd_a32(ds, 0x101c587c));   /* mov eax, [0x101c587c] */
    II(0x10129d5c, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x10129d5e, 0x2)   cmp(edx, memd_a32(ds, eax));          /* cmp edx, [eax] */
    II(0x10129d60, 0x2)   jzd(0x10129d6c, 0xa);                 /* jz 0x10129d6c */
    II(0x10129d62, 0x5)   calld(/* sys */ 0x1016b208, 0x414a1); /* call 0x1016b208 */
    II(0x10129d67, 0x3)   cmp(eax, 0x1b);                       /* cmp eax, 0x1b */
    II(0x10129d6a, 0x2)   jnzd(0x10129d51, -0x1b);              /* jnz 0x10129d51 */
l_0x10129d6c:
    II(0x10129d6c, 0x5)   mov(eax, 0x91a6e);                    /* mov eax, 0x91a6e */
    II(0x10129d71, 0x5)   calld(0x10148574, 0x1e7fe);           /* call 0x10148574 */
    II(0x10129d76, 0x9)   mov(memw_a32(ds, 0x101bb458), 0);     /* mov word [0x101bb458], 0x0 */
    II(0x10129d7f, 0x1)   cli();                                /* cli */
    II(0x10129d80, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10129d82, 0x6)   mov(cl, memb_a32(ds, 0x101bb45a));    /* mov cl, [0x101bb45a] */
    II(0x10129d88, 0x3)   sub(ecx, 0x8);                        /* sub ecx, 0x8 */
    II(0x10129d8b, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x10129d90, 0x2)   shl(ebx, cl);                         /* shl ebx, cl */
    II(0x10129d92, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10129d94, 0x5)   mov(al, memb_a32(ds, 0x101c5990));    /* mov al, [0x101c5990] */
    II(0x10129d99, 0x2)   and_(ebx, eax);                       /* and ebx, eax */
    II(0x10129d9b, 0x5)   mov(edx, 0x21);                       /* mov edx, 0x21 */
    II(0x10129da0, 0x2)   sub(eax, eax);                        /* sub eax, eax */
    II(0x10129da2, 0x1)   inb(al, dx);                          /* in al, dx */
    II(0x10129da3, 0x2)   or_(eax, ebx);                        /* or eax, ebx */
    II(0x10129da5, 0x5)   mov(edx, 0x21);                       /* mov edx, 0x21 */
    II(0x10129daa, 0x1)   outb(dx, al);                         /* out dx, al */
    II(0x10129dab, 0x5)   mov(al, memb_a32(ds, 0x101c599e));    /* mov al, [0x101c599e] */
    II(0x10129db0, 0x2)   and_(al, 0x7f);                       /* and al, 0x7f */
    II(0x10129db2, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10129db7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10129db9, 0x7)   mov(dx, memw_a32(ds, 0x101bb45c));    /* mov dx, [0x101bb45c] */
    II(0x10129dc0, 0x3)   add(edx, 0x3);                        /* add edx, 0x3 */
    II(0x10129dc3, 0x1)   outb(dx, al);                         /* out dx, al */
    II(0x10129dc4, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10129dc6, 0x5)   mov(al, memb_a32(ds, 0x101c599c));    /* mov al, [0x101c599c] */
    II(0x10129dcb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10129dcd, 0x7)   mov(dx, memw_a32(ds, 0x101bb45c));    /* mov dx, [0x101bb45c] */
    II(0x10129dd4, 0x1)   inc(edx);                             /* inc edx */
    II(0x10129dd5, 0x1)   outb(dx, al);                         /* out dx, al */
    II(0x10129dd6, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10129dd8, 0x5)   mov(al, memb_a32(ds, 0x101c599f));    /* mov al, [0x101c599f] */
    II(0x10129ddd, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10129ddf, 0x7)   mov(dx, memw_a32(ds, 0x101bb45c));    /* mov dx, [0x101bb45c] */
    II(0x10129de6, 0x3)   add(edx, 0x4);                        /* add edx, 0x4 */
    II(0x10129de9, 0x1)   outb(dx, al);                         /* out dx, al */
    II(0x10129dea, 0x5)   mov(al, memb_a32(ds, 0x101c599e));    /* mov al, [0x101c599e] */
    II(0x10129def, 0x2)   or_(al, 0x80);                        /* or al, 0x80 */
    II(0x10129df1, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10129df6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10129df8, 0x7)   mov(dx, memw_a32(ds, 0x101bb45c));    /* mov dx, [0x101bb45c] */
    II(0x10129dff, 0x3)   add(edx, 0x3);                        /* add edx, 0x3 */
    II(0x10129e02, 0x1)   outb(dx, al);                         /* out dx, al */
    II(0x10129e03, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10129e05, 0x5)   mov(al, memb_a32(ds, 0x101c599a));    /* mov al, [0x101c599a] */
    II(0x10129e0a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10129e0c, 0x7)   mov(dx, memw_a32(ds, 0x101bb45c));    /* mov dx, [0x101bb45c] */
    II(0x10129e13, 0x1)   outb(dx, al);                         /* out dx, al */
    II(0x10129e14, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10129e16, 0x5)   mov(al, memb_a32(ds, 0x101c599b));    /* mov al, [0x101c599b] */
    II(0x10129e1b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10129e1d, 0x7)   mov(dx, memw_a32(ds, 0x101bb45c));    /* mov dx, [0x101bb45c] */
    II(0x10129e24, 0x1)   inc(edx);                             /* inc edx */
    II(0x10129e25, 0x1)   outb(dx, al);                         /* out dx, al */
    II(0x10129e26, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10129e28, 0x5)   mov(al, memb_a32(ds, 0x101c599e));    /* mov al, [0x101c599e] */
    II(0x10129e2d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10129e2f, 0x7)   mov(dx, memw_a32(ds, 0x101bb45c));    /* mov dx, [0x101bb45c] */
    II(0x10129e36, 0x3)   add(edx, 0x3);                        /* add edx, 0x3 */
    II(0x10129e39, 0x1)   outb(dx, al);                         /* out dx, al */
    II(0x10129e3a, 0x1)   sti();                                /* sti */
    II(0x10129e3b, 0x1)   cld();                                /* cld */
    II(0x10129e3c, 0x6)   mov(memw_a32(ss, ebp - 0x20), 0x201); /* mov word [ebp-0x20], 0x201 */
    II(0x10129e42, 0x5)   mov(al, memb_a32(ds, 0x101bb45a));    /* mov al, [0x101bb45a] */
    II(0x10129e47, 0x3)   mov(memb_a32(ss, ebp - 0x1c), al);    /* mov [ebp-0x1c], al */
    II(0x10129e4a, 0x6)   mov(ax, memw_a32(ds, 0x101c59a4));    /* mov ax, [0x101c59a4] */
    II(0x10129e50, 0x4)   mov(memw_a32(ss, ebp - 0x18), ax);    /* mov [ebp-0x18], ax */
    II(0x10129e54, 0x6)   mov(ax, memw_a32(ds, 0x101c59a6));    /* mov ax, [0x101c59a6] */
    II(0x10129e5a, 0x4)   mov(memw_a32(ss, ebp - 0x14), ax);    /* mov [ebp-0x14], ax */
    II(0x10129e5e, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x10129e61, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x10129e64, 0x5)   mov(eax, 0x31);                       /* mov eax, 0x31 */
    II(0x10129e69, 0x5)   calld(/* sys */ 0x1016c606, 0x42798); /* call 0x1016c606 */
    II(0x10129e6e, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0x101); /* mov dword [ebp-0x20], 0x101 */
    II(0x10129e75, 0x6)   mov(ax, memw_a32(ds, 0x101c5988));    /* mov ax, [0x101c5988] */
    II(0x10129e7b, 0x4)   mov(memw_a32(ss, ebp - 0x14), ax);    /* mov [ebp-0x14], ax */
    II(0x10129e7f, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x10129e82, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x10129e85, 0x5)   mov(eax, 0x31);                       /* mov eax, 0x31 */
    II(0x10129e8a, 0x5)   calld(/* sys */ 0x1016c606, 0x42777); /* call 0x1016c606 */
    II(0x10129e8f, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0x205); /* mov dword [ebp-0x20], 0x205 */
    II(0x10129e96, 0x5)   mov(al, memb_a32(ds, 0x101bb45a));    /* mov al, [0x101bb45a] */
    II(0x10129e9b, 0x3)   mov(memb_a32(ss, ebp - 0x1b), al);    /* mov [ebp-0x1b], al */
    II(0x10129e9e, 0x6)   mov(ax, memw_a32(ds, 0x101c59ac));    /* mov ax, [0x101c59ac] */
    II(0x10129ea4, 0x4)   mov(memw_a32(ss, ebp - 0x18), ax);    /* mov [ebp-0x18], ax */
    II(0x10129ea8, 0x5)   mov(eax, memd_a32(ds, 0x101c59a8));   /* mov eax, [0x101c59a8] */
    II(0x10129ead, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10129eb0, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x10129eb3, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x10129eb6, 0x5)   mov(eax, 0x31);                       /* mov eax, 0x31 */
    II(0x10129ebb, 0x5)   calld(/* sys */ 0x1016c606, 0x42746); /* call 0x1016c606 */
    II(0x10129ec0, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0x601); /* mov dword [ebp-0x20], 0x601 */
    II(0x10129ec7, 0x2)   mov(eax, cs);                         /* mov eax, cs */
    II(0x10129ec9, 0x5)   mov(edx, 0x100cdc26);                 /* mov edx, 0x100cdc26 */
    II(0x10129ece, 0x3)   shr(edx, 0x10);                       /* shr edx, 0x10 */
    II(0x10129ed1, 0x3)   mov(memd_a32(ss, ebp - 0x1c), edx);   /* mov [ebp-0x1c], edx */
    II(0x10129ed4, 0x2)   mov(eax, cs);                         /* mov eax, cs */
    II(0x10129ed6, 0x5)   mov(edx, 0x100cdc26);                 /* mov edx, 0x100cdc26 */
    II(0x10129edb, 0x6)   and_(edx, 0xffff);                    /* and edx, 0xffff */
    II(0x10129ee1, 0x3)   mov(memd_a32(ss, ebp - 0x18), edx);   /* mov [ebp-0x18], edx */
    II(0x10129ee4, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x10129eeb, 0x5)   mov(eax, memd_a32(ds, 0x100cddd5));   /* mov eax, [0x100cddd5] */
    II(0x10129ef0, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10129ef3, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x10129ef6, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x10129ef9, 0x5)   mov(eax, 0x31);                       /* mov eax, 0x31 */
    II(0x10129efe, 0x5)   calld(/* sys */ 0x1016c606, 0x42703); /* call 0x1016c606 */
    II(0x10129f03, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0x601); /* mov dword [ebp-0x20], 0x601 */
    II(0x10129f0a, 0x5)   mov(eax, 0x101bb45c);                 /* mov eax, 0x101bb45c */
    II(0x10129f0f, 0x3)   shr(eax, 0x10);                       /* shr eax, 0x10 */
    II(0x10129f12, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10129f15, 0x5)   mov(eax, 0x101bb45c);                 /* mov eax, 0x101bb45c */
    II(0x10129f1a, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x10129f1f, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10129f22, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x10129f29, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x2);    /* mov dword [ebp-0xc], 0x2 */
    II(0x10129f30, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x10129f33, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x10129f36, 0x5)   mov(eax, 0x31);                       /* mov eax, 0x31 */
    II(0x10129f3b, 0x5)   calld(/* sys */ 0x1016c606, 0x426c6); /* call 0x1016c606 */
    II(0x10129f40, 0x2)   jmpd(0x10129f75, 0x33);               /* jmp 0x10129f75 */
l_0x10129f42:
    II(0x10129f42, 0x5)   calld(0x10107903, -0x22644);          /* call 0x10107903 */
    II(0x10129f47, 0x2)   jmpd(0x10129f75, 0x2c);               /* jmp 0x10129f75 */
l_0x10129f49:
    II(0x10129f49, 0x2)   jmpd(0x10129f75, 0x2a);               /* jmp 0x10129f75 */
l_0x10129f4b:
    II(0x10129f4b, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10129f4e, 0x3)   mov(memb_a32(ss, ebp - 0x24), al);    /* mov [ebp-0x24], al */
    II(0x10129f51, 0x4)   cmp(memb_a32(ss, ebp - 0x24), 0x2);   /* cmp byte [ebp-0x24], 0x2 */
    II(0x10129f55, 0x2)   jbd(0x10129f69, 0x12);                /* jb 0x10129f69 */
    II(0x10129f57, 0x4)   cmp(memb_a32(ss, ebp - 0x24), 0x2);   /* cmp byte [ebp-0x24], 0x2 */
    II(0x10129f5b, 0x6)   jbed(0x10129ceb, -0x276);             /* jbe dword 0x10129ceb */
    II(0x10129f61, 0x4)   cmp(memb_a32(ss, ebp - 0x24), 0x3);   /* cmp byte [ebp-0x24], 0x3 */
    II(0x10129f65, 0x2)   jzd(0x10129f42, -0x25);               /* jz 0x10129f42 */
    II(0x10129f67, 0x2)   jmpd(0x10129f49, -0x20);              /* jmp 0x10129f49 */
l_0x10129f69:
    II(0x10129f69, 0x4)   cmp(memb_a32(ss, ebp - 0x24), 0x1);   /* cmp byte [ebp-0x24], 0x1 */
    II(0x10129f6d, 0x6)   jzd(0x10129d43, -0x230);              /* jz dword 0x10129d43 */
    II(0x10129f73, 0x2)   jmpd(0x10129f49, -0x2c);              /* jmp 0x10129f49 */
l_0x10129f75:
    II(0x10129f75, 0x7)   mov(memb_a32(ds, 0x101c5630), 0);     /* mov byte [0x101c5630], 0x0 */
    II(0x10129f7c, 0x7)   mov(memb_a32(ds, 0x101c59c8), 0);     /* mov byte [0x101c59c8], 0x0 */
    II(0x10129f83, 0xa)   mov(memd_a32(ds, 0x101c5624), 0);     /* mov dword [0x101c5624], 0x0 */
l_0x10129f8d:
    II(0x10129f8d, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10129f8f, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10129f90, 0x1)   popd(edi);                            /* pop edi */
    II(0x10129f91, 0x1)   popd(esi);                            /* pop esi */
    II(0x10129f92, 0x1)   popd(edx);                            /* pop edx */
    II(0x10129f93, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10129f94, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10129f95, 0x1)   retd();                               /* ret */
FUNC_END

