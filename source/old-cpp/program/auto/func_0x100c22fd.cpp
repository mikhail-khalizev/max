FUNC_BEGIN(0x100c22fd, 0xe909712210bb00b1, 0x20, ({0x68, 0x40, 0, 0, 0, 0xe8, 0x4b, 0x3a, 0xa, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x2c, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xec, 0xe9, 0x7, 0x3, 0, 0, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x43, 0xe8, 0xce, 0x8c, 0, 0, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x66, 0x7e, 0xfc, 0xff, 0x80, 0x4d, 0xf0, 0x1, 0x8d, 0x45, 0xe4, 0xe8, 0xbe, 0x66, 0xfc, 0xff, 0x89, 0x45, 0xe0, 0x80, 0x65, 0xf0, 0xfe, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0x91, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0x21, 0x62, 0xff, 0xff, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0x99, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0x10, 0x62, 0xff, 0xff, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0xa9, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0xff, 0x61, 0xff, 0xff, 0xb8, 0x4c, 0, 0, 0, 0xe8, 0x4e, 0x3c, 0xfb, 0xff, 0x83, 0xf8, 0x3, 0x7c, 0x11, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0xb9, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0xdf, 0x61, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0x4a, 0x48, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xb9, 0x89, 0x7, 0, 0x84, 0xc0, 0x74, 0x34, 0x8d, 0x45, 0xe8, 0xe8, 0x34, 0x7d, 0xfc, 0xff, 0xe8, 0xa7, 0x7f, 0xfc, 0xff, 0x8b, 0x58, 0x6, 0xc1, 0xfb, 0x10, 0x8d, 0x55, 0xdc, 0x8b, 0x45, 0xf4, 0xe8, 0x23, 0xff, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0x9f, 0x61, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xde, 0x69, 0xfc, 0xff, 0xeb, 0xb6, 0xe8, 0xe7, 0x80, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8d, 0x55, 0xe4, 0x8b, 0x45, 0xf8, 0xe8, 0x1, 0x61, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xbe, 0x69, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x34, 0x6a, 0xfc, 0xff, 0xe9, 0xc9, 0x3, 0, 0, 0xe8, 0xba, 0x80, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0x81, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0xce, 0x60, 0xff, 0xff, 0xe9, 0xaa, 0x3, 0, 0, 0xe8, 0x9b, 0x80, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0x85, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0xaf, 0x60, 0xff, 0xff, 0xe9, 0x8b, 0x3, 0, 0, 0xe8, 0x7c, 0x80, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0x89, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x90, 0x60, 0xff, 0xff, 0xe9, 0x6c, 0x3, 0, 0, 0xe8, 0x5d, 0x80, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x83, 0xc2, 0x7d, 0x8b, 0x45, 0xf8, 0xe8, 0x74, 0x60, 0xff, 0xff, 0xe9, 0x50, 0x3, 0, 0, 0xe8, 0x41, 0x80, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0xc1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x55, 0x60, 0xff, 0xff, 0xe9, 0x31, 0x3, 0, 0, 0xe8, 0x22, 0x80, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0x8d, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x36, 0x60, 0xff, 0xff, 0xe9, 0x12, 0x3, 0, 0, 0xe8, 0x3, 0x80, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0xb1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x17, 0x60, 0xff, 0xff, 0xe9, 0xf3, 0x2, 0, 0, 0xe8, 0xe4, 0x7f, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0xad, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0xf8, 0x5f, 0xff, 0xff, 0xe9, 0xd4, 0x2, 0, 0, 0xe8, 0xc5, 0x7f, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0xa9, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0xd9, 0x5f, 0xff, 0xff, 0xe9, 0xb5, 0x2, 0, 0, 0xe8, 0xa6, 0x7f, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0xa1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0xba, 0x5f, 0xff, 0xff, 0xe9, 0x96, 0x2, 0, 0, 0xe8, 0x87, 0x7f, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0xb5, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x9b, 0x5f, 0xff, 0xff, 0xe9, 0x77, 0x2, 0, 0, 0xe8, 0x68, 0x7f, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0xa5, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x7c, 0x5f, 0xff, 0xff, 0xe9, 0x58, 0x2, 0, 0, 0xe8, 0x49, 0x7f, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0x91, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x5d, 0x5f, 0xff, 0xff, 0xe9, 0x39, 0x2, 0, 0, 0xe8, 0x2a, 0x7f, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0x95, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x3e, 0x5f, 0xff, 0xff, 0xe9, 0x1a, 0x2, 0, 0, 0xe8, 0xb, 0x7f, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0x99, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x1f, 0x5f, 0xff, 0xff, 0xe9, 0xfb, 0x1, 0, 0, 0xe8, 0xec, 0x7e, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0xb9, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0, 0x5f, 0xff, 0xff, 0xe9, 0xdc, 0x1, 0, 0, 0xe8, 0xcd, 0x7e, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0xbd, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0xe1, 0x5e, 0xff, 0xff, 0xe9, 0xbd, 0x1, 0, 0, 0xe9, 0x89, 0x1, 0, 0, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xd8, 0x66, 0x83, 0x7d, 0xd8, 0x44, 0xf, 0x8c, 0xb3, 0, 0, 0, 0x66, 0x83, 0x7d, 0xd8, 0x44, 0xf, 0x8e, 0xe7, 0xfe, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xd8, 0x4c, 0x7c, 0x53, 0x66, 0x83, 0x7d, 0xd8, 0x4c, 0xf, 0x8e, 0x51, 0xff, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xd8, 0x50, 0x7c, 0x2f, 0x66, 0x83, 0x7d, 0xd8, 0x50, 0xf, 0x8e, 0x85, 0xfe, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xd8, 0x52, 0x7c, 0x18, 0x66, 0x83, 0x7d, 0xd8, 0x52, 0xf, 0x8e, 0xdb, 0xfd, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xd8, 0x53, 0xf, 0x84, 0x22, 0xff, 0xff, 0xff, 0xeb, 0x9c, 0xe9, 0xaa, 0xfd, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xd8, 0x4d, 0xf, 0x8e, 0x2f, 0xff, 0xff, 0xff, 0xe9, 0xb, 0xff, 0xff, 0xff, 0xeb, 0x85, 0x66, 0x83, 0x7d, 0xd8, 0x47, 0x7c, 0x32, 0x66, 0x83, 0x7d, 0xd8, 0x47, 0xf, 0x8e, 0x5c, 0xfe, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xd8, 0x49, 0x7c, 0x1b, 0x66, 0x83, 0x7d, 0xd8, 0x49, 0xf, 0x8e, 0xc, 0xfe, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xd8, 0x4b, 0xf, 0x84, 0x7d, 0xfe, 0xff, 0xff, 0xe9, 0x51, 0xff, 0xff, 0xff, 0xe9, 0x73, 0xfe, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xd8, 0x45, 0xf, 0x8e, 0x87, 0xfe, 0xff, 0xff, 0xe9, 0x6, 0xfe, 0xff, 0xff, 0xe9, 0x37, 0xff, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xd8, 0x32, 0x7c, 0x59, 0x66, 0x83, 0x7d, 0xd8, 0x32, 0xf, 0x8e, 0x19, 0xfd, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xd8, 0x36, 0x7c, 0x32, 0x66, 0x83, 0x7d, 0xd8, 0x36, 0xf, 0x8e, 0x9f, 0xfd, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xd8, 0x42, 0x7c, 0x10, 0x66, 0x83, 0x7d, 0xd8, 0x42, 0xf, 0x8e, 0xc3, 0xfe, 0xff, 0xff, 0xe9, 0xdd, 0xfe, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xd8, 0x37, 0xf, 0x84, 0x56, 0xfe, 0xff, 0xff, 0xe9, 0xec, 0xfe, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xd8, 0x33, 0xf, 0x8e, 0xf4, 0xfc, 0xff, 0xff, 0xe9, 0xe, 0xfd, 0xff, 0xff, 0xe9, 0xd7, 0xfe, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xd8, 0x23, 0x7c, 0x37, 0x66, 0x83, 0x7d, 0xd8, 0x23, 0xf, 0x8e, 0x2a, 0xfe, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xd8, 0x25, 0xf, 0x8e, 0xb, 0xfd, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xd8, 0x29, 0x7c, 0x10, 0x66, 0x83, 0x7d, 0xd8, 0x2a, 0xf, 0x8e, 0x15, 0xfd, 0xff, 0xff, 0xe9, 0xa3, 0xfe, 0xff, 0xff, 0xe9, 0x9e, 0xfe, 0xff, 0xff, 0xe9, 0x99, 0xfe, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xd8, 0xff, 0x7c, 0x1b, 0x66, 0x83, 0x7d, 0xd8, 0xff, 0xf, 0x8e, 0x85, 0xfb, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xd8, 0x22, 0xf, 0x84, 0xcd, 0xfc, 0xff, 0xff, 0xe9, 0x77, 0xfe, 0xff, 0xff, 0xe9, 0x72, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0x89, 0x45, 0xd4, 0xe8, 0xb, 0x7d, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xf4, 0x81, 0xc2, 0xc1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x1f, 0x5d, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100c22fd, 0x5)   pushd(0x40);                          /* push dword 0x40 */
    II(0x100c2302, 0x5)   calld(sys_check_available_stack_size, 0xa3a4b); /* call 0x10165d52 */
    II(0x100c2307, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100c2308, 0x1)   pushd(esi);                           /* push esi */
    II(0x100c2309, 0x1)   pushd(edi);                           /* push edi */
    II(0x100c230a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100c230b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100c230d, 0x6)   sub(esp, 0x2c);                       /* sub esp, 0x2c */
    II(0x100c2313, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100c2316, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100c2319, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x100c231c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c231f, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100c2322, 0x5)   jmpd(0x100c262e, 0x307);              /* jmp 0x100c262e */
l_0x100c2327:
    II(0x100c2327, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c232a, 0x3)   add(eax, 0x43);                       /* add eax, 0x43 */
    II(0x100c232d, 0x5)   calld(0x100cb000, 0x8cce);            /* call 0x100cb000 */
    II(0x100c2332, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x100c2335, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c2337, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100c2339, 0x5)   calld(0x1008a1a4, -0x3819a);          /* call 0x1008a1a4 */
    II(0x100c233e, 0x4)   or_(memb_a32(ss, ebp - 0x10), 0x1);   /* or byte [ebp-0x10], 0x1 */
    II(0x100c2342, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100c2345, 0x5)   calld(0x10088a08, -0x39942);          /* call 0x10088a08 */
    II(0x100c234a, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100c234d, 0x4)   and_(memb_a32(ss, ebp - 0x10), -0x2 /* 0xfe */); /* and byte [ebp-0x10], 0xfe */
    II(0x100c2351, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c2354, 0x6)   add(edx, 0x91);                       /* add edx, 0x91 */
    II(0x100c235a, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100c235d, 0x5)   calld(0x100b8583, -0x9ddf);           /* call 0x100b8583 */
    II(0x100c2362, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c2365, 0x6)   add(edx, 0x99);                       /* add edx, 0x99 */
    II(0x100c236b, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100c236e, 0x5)   calld(0x100b8583, -0x9df0);           /* call 0x100b8583 */
    II(0x100c2373, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c2376, 0x6)   add(edx, 0xa9);                       /* add edx, 0xa9 */
    II(0x100c237c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100c237f, 0x5)   calld(0x100b8583, -0x9e01);           /* call 0x100b8583 */
    II(0x100c2384, 0x5)   mov(eax, 0x4c);                       /* mov eax, 0x4c */
    II(0x100c2389, 0x5)   calld(0x10075fdc, -0x4c3b2);          /* call 0x10075fdc */
    II(0x100c238e, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x100c2391, 0x2)   jld(0x100c23a4, 0x11);                /* jl 0x100c23a4 */
    II(0x100c2393, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c2396, 0x6)   add(edx, 0xb9);                       /* add edx, 0xb9 */
    II(0x100c239c, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100c239f, 0x5)   calld(0x100b8583, -0x9e21);           /* call 0x100b8583 */
l_0x100c23a4:
    II(0x100c23a4, 0x2)   jmpd(0x100c23ae, 0x8);                /* jmp 0x100c23ae */
l_0x100c23a6:
    II(0x100c23a6, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100c23a9, 0x5)   calld(0x10076bf8, -0x4b7b6);          /* call 0x10076bf8 */
l_0x100c23ae:
    II(0x100c23ae, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c23b0, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100c23b3, 0x5)   calld(0x1013ad71, 0x789b9);           /* call 0x1013ad71 */
    II(0x100c23b8, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c23ba, 0x2)   jzd(0x100c23f0, 0x34);                /* jz 0x100c23f0 */
    II(0x100c23bc, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100c23bf, 0x5)   calld(0x1008a0f8, -0x382cc);          /* call 0x1008a0f8 */
    II(0x100c23c4, 0x5)   calld(0x1008a370, -0x38059);          /* call 0x1008a370 */
    II(0x100c23c9, 0x3)   mov(ebx, memd_a32(ds, eax + 0x6));    /* mov ebx, [eax+0x6] */
    II(0x100c23cc, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100c23cf, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x100c23d2, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c23d5, 0x5)   calld(0x100c22fd, -0xdd);             /* call 0x100c22fd */
    II(0x100c23da, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c23dc, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100c23df, 0x5)   calld(0x100b8583, -0x9e61);           /* call 0x100b8583 */
    II(0x100c23e4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c23e6, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100c23e9, 0x5)   calld(0x10088dcc, -0x39622);          /* call 0x10088dcc */
    II(0x100c23ee, 0x2)   jmpd(0x100c23a6, -0x4a);              /* jmp 0x100c23a6 */
l_0x100c23f0:
    II(0x100c23f0, 0x5)   calld(0x1008a4dc, -0x37f19);          /* call 0x1008a4dc */
    II(0x100c23f5, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100c23f7, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100c23f9, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x100c23fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c23ff, 0x5)   calld(0x100b8505, -0x9eff);           /* call 0x100b8505 */
    II(0x100c2404, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c2406, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100c2409, 0x5)   calld(0x10088dcc, -0x39642);          /* call 0x10088dcc */
    II(0x100c240e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c2410, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100c2413, 0x5)   calld(0x10088e4c, -0x395cc);          /* call 0x10088e4c */
    II(0x100c2418, 0x5)   jmpd(0x100c27e6, 0x3c9);              /* jmp 0x100c27e6 */
l_0x100c241d:
    II(0x100c241d, 0x5)   calld(0x1008a4dc, -0x37f46);          /* call 0x1008a4dc */
    II(0x100c2422, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100c2424, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100c2426, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c2429, 0x6)   add(edx, 0x81);                       /* add edx, 0x81 */
    II(0x100c242f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c2432, 0x5)   calld(0x100b8505, -0x9f32);           /* call 0x100b8505 */
    II(0x100c2437, 0x5)   jmpd(0x100c27e6, 0x3aa);              /* jmp 0x100c27e6 */
l_0x100c243c:
    II(0x100c243c, 0x5)   calld(0x1008a4dc, -0x37f65);          /* call 0x1008a4dc */
    II(0x100c2441, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100c2443, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100c2445, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c2448, 0x6)   add(edx, 0x85);                       /* add edx, 0x85 */
    II(0x100c244e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c2451, 0x5)   calld(0x100b8505, -0x9f51);           /* call 0x100b8505 */
    II(0x100c2456, 0x5)   jmpd(0x100c27e6, 0x38b);              /* jmp 0x100c27e6 */
l_0x100c245b:
    II(0x100c245b, 0x5)   calld(0x1008a4dc, -0x37f84);          /* call 0x1008a4dc */
    II(0x100c2460, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100c2462, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100c2464, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c2467, 0x6)   add(edx, 0x89);                       /* add edx, 0x89 */
    II(0x100c246d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c2470, 0x5)   calld(0x100b8505, -0x9f70);           /* call 0x100b8505 */
    II(0x100c2475, 0x5)   jmpd(0x100c27e6, 0x36c);              /* jmp 0x100c27e6 */
l_0x100c247a:
    II(0x100c247a, 0x5)   calld(0x1008a4dc, -0x37fa3);          /* call 0x1008a4dc */
    II(0x100c247f, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100c2481, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100c2483, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c2486, 0x3)   add(edx, 0x7d);                       /* add edx, 0x7d */
    II(0x100c2489, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c248c, 0x5)   calld(0x100b8505, -0x9f8c);           /* call 0x100b8505 */
    II(0x100c2491, 0x5)   jmpd(0x100c27e6, 0x350);              /* jmp 0x100c27e6 */
l_0x100c2496:
    II(0x100c2496, 0x5)   calld(0x1008a4dc, -0x37fbf);          /* call 0x1008a4dc */
    II(0x100c249b, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100c249d, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100c249f, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c24a2, 0x6)   add(edx, 0xc1);                       /* add edx, 0xc1 */
    II(0x100c24a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c24ab, 0x5)   calld(0x100b8505, -0x9fab);           /* call 0x100b8505 */
    II(0x100c24b0, 0x5)   jmpd(0x100c27e6, 0x331);              /* jmp 0x100c27e6 */
l_0x100c24b5:
    II(0x100c24b5, 0x5)   calld(0x1008a4dc, -0x37fde);          /* call 0x1008a4dc */
    II(0x100c24ba, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100c24bc, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100c24be, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c24c1, 0x6)   add(edx, 0x8d);                       /* add edx, 0x8d */
    II(0x100c24c7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c24ca, 0x5)   calld(0x100b8505, -0x9fca);           /* call 0x100b8505 */
    II(0x100c24cf, 0x5)   jmpd(0x100c27e6, 0x312);              /* jmp 0x100c27e6 */
l_0x100c24d4:
    II(0x100c24d4, 0x5)   calld(0x1008a4dc, -0x37ffd);          /* call 0x1008a4dc */
    II(0x100c24d9, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100c24db, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100c24dd, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c24e0, 0x6)   add(edx, 0xb1);                       /* add edx, 0xb1 */
    II(0x100c24e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c24e9, 0x5)   calld(0x100b8505, -0x9fe9);           /* call 0x100b8505 */
    II(0x100c24ee, 0x5)   jmpd(0x100c27e6, 0x2f3);              /* jmp 0x100c27e6 */
l_0x100c24f3:
    II(0x100c24f3, 0x5)   calld(0x1008a4dc, -0x3801c);          /* call 0x1008a4dc */
    II(0x100c24f8, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100c24fa, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100c24fc, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c24ff, 0x6)   add(edx, 0xad);                       /* add edx, 0xad */
    II(0x100c2505, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c2508, 0x5)   calld(0x100b8505, -0xa008);           /* call 0x100b8505 */
    II(0x100c250d, 0x5)   jmpd(0x100c27e6, 0x2d4);              /* jmp 0x100c27e6 */
l_0x100c2512:
    II(0x100c2512, 0x5)   calld(0x1008a4dc, -0x3803b);          /* call 0x1008a4dc */
    II(0x100c2517, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100c2519, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100c251b, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c251e, 0x6)   add(edx, 0xa9);                       /* add edx, 0xa9 */
    II(0x100c2524, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c2527, 0x5)   calld(0x100b8505, -0xa027);           /* call 0x100b8505 */
    II(0x100c252c, 0x5)   jmpd(0x100c27e6, 0x2b5);              /* jmp 0x100c27e6 */
l_0x100c2531:
    II(0x100c2531, 0x5)   calld(0x1008a4dc, -0x3805a);          /* call 0x1008a4dc */
    II(0x100c2536, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100c2538, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100c253a, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c253d, 0x6)   add(edx, 0xa1);                       /* add edx, 0xa1 */
    II(0x100c2543, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c2546, 0x5)   calld(0x100b8505, -0xa046);           /* call 0x100b8505 */
    II(0x100c254b, 0x5)   jmpd(0x100c27e6, 0x296);              /* jmp 0x100c27e6 */
l_0x100c2550:
    II(0x100c2550, 0x5)   calld(0x1008a4dc, -0x38079);          /* call 0x1008a4dc */
    II(0x100c2555, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100c2557, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100c2559, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c255c, 0x6)   add(edx, 0xb5);                       /* add edx, 0xb5 */
    II(0x100c2562, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c2565, 0x5)   calld(0x100b8505, -0xa065);           /* call 0x100b8505 */
    II(0x100c256a, 0x5)   jmpd(0x100c27e6, 0x277);              /* jmp 0x100c27e6 */
l_0x100c256f:
    II(0x100c256f, 0x5)   calld(0x1008a4dc, -0x38098);          /* call 0x1008a4dc */
    II(0x100c2574, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100c2576, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100c2578, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c257b, 0x6)   add(edx, 0xa5);                       /* add edx, 0xa5 */
    II(0x100c2581, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c2584, 0x5)   calld(0x100b8505, -0xa084);           /* call 0x100b8505 */
    II(0x100c2589, 0x5)   jmpd(0x100c27e6, 0x258);              /* jmp 0x100c27e6 */
l_0x100c258e:
    II(0x100c258e, 0x5)   calld(0x1008a4dc, -0x380b7);          /* call 0x1008a4dc */
    II(0x100c2593, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100c2595, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100c2597, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c259a, 0x6)   add(edx, 0x91);                       /* add edx, 0x91 */
    II(0x100c25a0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c25a3, 0x5)   calld(0x100b8505, -0xa0a3);           /* call 0x100b8505 */
    II(0x100c25a8, 0x5)   jmpd(0x100c27e6, 0x239);              /* jmp 0x100c27e6 */
l_0x100c25ad:
    II(0x100c25ad, 0x5)   calld(0x1008a4dc, -0x380d6);          /* call 0x1008a4dc */
    II(0x100c25b2, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100c25b4, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100c25b6, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c25b9, 0x6)   add(edx, 0x95);                       /* add edx, 0x95 */
    II(0x100c25bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c25c2, 0x5)   calld(0x100b8505, -0xa0c2);           /* call 0x100b8505 */
    II(0x100c25c7, 0x5)   jmpd(0x100c27e6, 0x21a);              /* jmp 0x100c27e6 */
l_0x100c25cc:
    II(0x100c25cc, 0x5)   calld(0x1008a4dc, -0x380f5);          /* call 0x1008a4dc */
    II(0x100c25d1, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100c25d3, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100c25d5, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c25d8, 0x6)   add(edx, 0x99);                       /* add edx, 0x99 */
    II(0x100c25de, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c25e1, 0x5)   calld(0x100b8505, -0xa0e1);           /* call 0x100b8505 */
    II(0x100c25e6, 0x5)   jmpd(0x100c27e6, 0x1fb);              /* jmp 0x100c27e6 */
l_0x100c25eb:
    II(0x100c25eb, 0x5)   calld(0x1008a4dc, -0x38114);          /* call 0x1008a4dc */
    II(0x100c25f0, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100c25f2, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100c25f4, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c25f7, 0x6)   add(edx, 0xb9);                       /* add edx, 0xb9 */
    II(0x100c25fd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c2600, 0x5)   calld(0x100b8505, -0xa100);           /* call 0x100b8505 */
    II(0x100c2605, 0x5)   jmpd(0x100c27e6, 0x1dc);              /* jmp 0x100c27e6 */
l_0x100c260a:
    II(0x100c260a, 0x5)   calld(0x1008a4dc, -0x38133);          /* call 0x1008a4dc */
    II(0x100c260f, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100c2611, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100c2613, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c2616, 0x6)   add(edx, 0xbd);                       /* add edx, 0xbd */
    II(0x100c261c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c261f, 0x5)   calld(0x100b8505, -0xa11f);           /* call 0x100b8505 */
    II(0x100c2624, 0x5)   jmpd(0x100c27e6, 0x1bd);              /* jmp 0x100c27e6 */
l_0x100c2629:
    II(0x100c2629, 0x5)   jmpd(0x100c27b7, 0x189);              /* jmp 0x100c27b7 */
l_0x100c262e:
    II(0x100c262e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100c2631, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100c2634, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x44);  /* cmp word [ebp-0x28], 0x44 */
    II(0x100c2639, 0x6)   jld(0x100c26f2, 0xb3);                /* jl dword 0x100c26f2 */
    II(0x100c263f, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x44);  /* cmp word [ebp-0x28], 0x44 */
    II(0x100c2644, 0x6)   jled(0x100c2531, -0x119);             /* jle dword 0x100c2531 */
    II(0x100c264a, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x4c);  /* cmp word [ebp-0x28], 0x4c */
    II(0x100c264f, 0x2)   jld(0x100c26a4, 0x53);                /* jl 0x100c26a4 */
    II(0x100c2651, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x4c);  /* cmp word [ebp-0x28], 0x4c */
    II(0x100c2656, 0x6)   jled(0x100c25ad, -0xaf);              /* jle dword 0x100c25ad */
    II(0x100c265c, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x50);  /* cmp word [ebp-0x28], 0x50 */
    II(0x100c2661, 0x2)   jld(0x100c2692, 0x2f);                /* jl 0x100c2692 */
    II(0x100c2663, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x50);  /* cmp word [ebp-0x28], 0x50 */
    II(0x100c2668, 0x6)   jled(0x100c24f3, -0x17b);             /* jle dword 0x100c24f3 */
    II(0x100c266e, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x52);  /* cmp word [ebp-0x28], 0x52 */
    II(0x100c2673, 0x2)   jld(0x100c268d, 0x18);                /* jl 0x100c268d */
    II(0x100c2675, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x52);  /* cmp word [ebp-0x28], 0x52 */
    II(0x100c267a, 0x6)   jled(0x100c245b, -0x225);             /* jle dword 0x100c245b */
    II(0x100c2680, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x53);  /* cmp word [ebp-0x28], 0x53 */
    II(0x100c2685, 0x6)   jzd(0x100c25ad, -0xde);               /* jz dword 0x100c25ad */
    II(0x100c268b, 0x2)   jmpd(0x100c2629, -0x64);              /* jmp 0x100c2629 */
l_0x100c268d:
    II(0x100c268d, 0x5)   jmpd(0x100c243c, -0x256);             /* jmp 0x100c243c */
l_0x100c2692:
    II(0x100c2692, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x4d);  /* cmp word [ebp-0x28], 0x4d */
    II(0x100c2697, 0x6)   jled(0x100c25cc, -0xd1);              /* jle dword 0x100c25cc */
    II(0x100c269d, 0x5)   jmpd(0x100c25ad, -0xf5);              /* jmp 0x100c25ad */
//  II(0x100c26a2, 0x2)   /* Недостижимый код. */
l_0x100c26a4:
    II(0x100c26a4, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x47);  /* cmp word [ebp-0x28], 0x47 */
    II(0x100c26a9, 0x2)   jld(0x100c26dd, 0x32);                /* jl 0x100c26dd */
    II(0x100c26ab, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x47);  /* cmp word [ebp-0x28], 0x47 */
    II(0x100c26b0, 0x6)   jled(0x100c2512, -0x1a4);             /* jle dword 0x100c2512 */
    II(0x100c26b6, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x49);  /* cmp word [ebp-0x28], 0x49 */
    II(0x100c26bb, 0x2)   jld(0x100c26d8, 0x1b);                /* jl 0x100c26d8 */
    II(0x100c26bd, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x49);  /* cmp word [ebp-0x28], 0x49 */
    II(0x100c26c2, 0x6)   jled(0x100c24d4, -0x1f4);             /* jle dword 0x100c24d4 */
    II(0x100c26c8, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x4b);  /* cmp word [ebp-0x28], 0x4b */
    II(0x100c26cd, 0x6)   jzd(0x100c2550, -0x183);              /* jz dword 0x100c2550 */
    II(0x100c26d3, 0x5)   jmpd(0x100c2629, -0xaf);              /* jmp 0x100c2629 */
l_0x100c26d8:
    II(0x100c26d8, 0x5)   jmpd(0x100c2550, -0x18d);             /* jmp 0x100c2550 */
l_0x100c26dd:
    II(0x100c26dd, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x45);  /* cmp word [ebp-0x28], 0x45 */
    II(0x100c26e2, 0x6)   jled(0x100c256f, -0x179);             /* jle dword 0x100c256f */
    II(0x100c26e8, 0x5)   jmpd(0x100c24f3, -0x1fa);             /* jmp 0x100c24f3 */
//  II(0x100c26ed, 0x5)   /* Недостижимый код. */
l_0x100c26f2:
    II(0x100c26f2, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x32);  /* cmp word [ebp-0x28], 0x32 */
    II(0x100c26f7, 0x2)   jld(0x100c2752, 0x59);                /* jl 0x100c2752 */
    II(0x100c26f9, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x32);  /* cmp word [ebp-0x28], 0x32 */
    II(0x100c26fe, 0x6)   jled(0x100c241d, -0x2e7);             /* jle dword 0x100c241d */
    II(0x100c2704, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x36);  /* cmp word [ebp-0x28], 0x36 */
    II(0x100c2709, 0x2)   jld(0x100c273d, 0x32);                /* jl 0x100c273d */
    II(0x100c270b, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x36);  /* cmp word [ebp-0x28], 0x36 */
    II(0x100c2710, 0x6)   jled(0x100c24b5, -0x261);             /* jle dword 0x100c24b5 */
    II(0x100c2716, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x42);  /* cmp word [ebp-0x28], 0x42 */
    II(0x100c271b, 0x2)   jld(0x100c272d, 0x10);                /* jl 0x100c272d */
    II(0x100c271d, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x42);  /* cmp word [ebp-0x28], 0x42 */
    II(0x100c2722, 0x6)   jled(0x100c25eb, -0x13d);             /* jle dword 0x100c25eb */
    II(0x100c2728, 0x5)   jmpd(0x100c260a, -0x123);             /* jmp 0x100c260a */
l_0x100c272d:
    II(0x100c272d, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x37);  /* cmp word [ebp-0x28], 0x37 */
    II(0x100c2732, 0x6)   jzd(0x100c258e, -0x1aa);              /* jz dword 0x100c258e */
    II(0x100c2738, 0x5)   jmpd(0x100c2629, -0x114);             /* jmp 0x100c2629 */
l_0x100c273d:
    II(0x100c273d, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x33);  /* cmp word [ebp-0x28], 0x33 */
    II(0x100c2742, 0x6)   jled(0x100c243c, -0x30c);             /* jle dword 0x100c243c */
    II(0x100c2748, 0x5)   jmpd(0x100c245b, -0x2f2);             /* jmp 0x100c245b */
//  II(0x100c274d, 0x5)   /* Недостижимый код. */
l_0x100c2752:
    II(0x100c2752, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x23);  /* cmp word [ebp-0x28], 0x23 */
    II(0x100c2757, 0x2)   jld(0x100c2790, 0x37);                /* jl 0x100c2790 */
    II(0x100c2759, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x23);  /* cmp word [ebp-0x28], 0x23 */
    II(0x100c275e, 0x6)   jled(0x100c258e, -0x1d6);             /* jle dword 0x100c258e */
    II(0x100c2764, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x25);  /* cmp word [ebp-0x28], 0x25 */
    II(0x100c2769, 0x6)   jled(0x100c247a, -0x2f5);             /* jle dword 0x100c247a */
    II(0x100c276f, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x29);  /* cmp word [ebp-0x28], 0x29 */
    II(0x100c2774, 0x2)   jld(0x100c2786, 0x10);                /* jl 0x100c2786 */
    II(0x100c2776, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x2a);  /* cmp word [ebp-0x28], 0x2a */
    II(0x100c277b, 0x6)   jled(0x100c2496, -0x2eb);             /* jle dword 0x100c2496 */
    II(0x100c2781, 0x5)   jmpd(0x100c2629, -0x15d);             /* jmp 0x100c2629 */
l_0x100c2786:
    II(0x100c2786, 0x5)   jmpd(0x100c2629, -0x162);             /* jmp 0x100c2629 */
//  II(0x100c278b, 0x5)   /* Недостижимый код. */
l_0x100c2790:
    II(0x100c2790, 0x5)   cmp(memw_a32(ss, ebp - 0x28), -0x1 /* 0xff */); /* cmp word [ebp-0x28], 0xff */
    II(0x100c2795, 0x2)   jld(0x100c27b2, 0x1b);                /* jl 0x100c27b2 */
    II(0x100c2797, 0x5)   cmp(memw_a32(ss, ebp - 0x28), -0x1 /* 0xff */); /* cmp word [ebp-0x28], 0xff */
    II(0x100c279c, 0x6)   jled(0x100c2327, -0x47b);             /* jle dword 0x100c2327 */
    II(0x100c27a2, 0x5)   cmp(memw_a32(ss, ebp - 0x28), 0x22);  /* cmp word [ebp-0x28], 0x22 */
    II(0x100c27a7, 0x6)   jzd(0x100c247a, -0x333);              /* jz dword 0x100c247a */
    II(0x100c27ad, 0x5)   jmpd(0x100c2629, -0x189);             /* jmp 0x100c2629 */
l_0x100c27b2:
    II(0x100c27b2, 0x5)   jmpd(0x100c2629, -0x18e);             /* jmp 0x100c2629 */
l_0x100c27b7:
    II(0x100c27b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c27ba, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100c27bd, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100c27c3, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x100c27c9, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100c27cc, 0x5)   calld(0x1008a4dc, -0x382f5);          /* call 0x1008a4dc */
    II(0x100c27d1, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100c27d3, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100c27d5, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100c27d8, 0x6)   add(edx, 0xc1);                       /* add edx, 0xc1 */
    II(0x100c27de, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c27e1, 0x5)   calld(0x100b8505, -0xa2e1);           /* call 0x100b8505 */
l_0x100c27e6:
    II(0x100c27e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c27e9, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100c27eb, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100c27ec, 0x1)   popd(edi);                            /* pop edi */
    II(0x100c27ed, 0x1)   popd(esi);                            /* pop esi */
    II(0x100c27ee, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100c27ef, 0x1)   retd();                               /* ret */
FUNC_END

