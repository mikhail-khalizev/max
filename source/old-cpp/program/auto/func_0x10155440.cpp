FUNC_BEGIN(0x10155440, 0xb0d64b2de3b3361b, 0x20, ({0x68, 0xb0, 0, 0, 0, 0xe8, 0x8, 0x9, 0x1, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x60, 0, 0, 0, 0xb8, 0x8, 0xd9, 0x1b, 0x10, 0xe8, 0xbd, 0xc, 0x1, 0, 0xb8, 0x78, 0x81, 0x1c, 0x10, 0xe8, 0x10, 0x38, 0xf3, 0xff, 0x89, 0x45, 0xa0, 0x8b, 0x45, 0xa0, 0x89, 0x45, 0xd0, 0xc7, 0x5, 0x10, 0xd9, 0x1b, 0x10, 0x1, 0, 0, 0, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0xf3, 0x37, 0xf3, 0xff, 0x89, 0x45, 0xa4, 0x8b, 0x45, 0xa4, 0x89, 0x45, 0xd4, 0xc7, 0x5, 0x10, 0xd9, 0x1b, 0x10, 0x2, 0, 0, 0, 0xb8, 0x90, 0x81, 0x1c, 0x10, 0xe8, 0xd6, 0x37, 0xf3, 0xff, 0x89, 0x45, 0xa8, 0x8b, 0x45, 0xa8, 0x89, 0x45, 0xd8, 0xc7, 0x5, 0x10, 0xd9, 0x1b, 0x10, 0x3, 0, 0, 0, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xb9, 0x37, 0xf3, 0xff, 0x89, 0x45, 0xac, 0x8b, 0x45, 0xac, 0x89, 0x45, 0xdc, 0xc7, 0x5, 0x10, 0xd9, 0x1b, 0x10, 0x4, 0, 0, 0, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0x9c, 0x37, 0xf3, 0xff, 0x89, 0x45, 0xb0, 0x8b, 0x45, 0xb0, 0x89, 0x45, 0xe0, 0xc7, 0x5, 0x10, 0xd9, 0x1b, 0x10, 0x5, 0, 0, 0, 0xb8, 0xb4, 0x81, 0x1c, 0x10, 0xe8, 0x7f, 0x37, 0xf3, 0xff, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0xb4, 0x89, 0x45, 0xe4, 0xc7, 0x5, 0x10, 0xd9, 0x1b, 0x10, 0x6, 0, 0, 0, 0xbb, 0x10, 0x75, 0x1b, 0x10, 0xba, 0x5d, 0, 0, 0, 0xb8, 0xc0, 0x81, 0x1c, 0x10, 0xe8, 0x4c, 0xa, 0x1, 0, 0xb8, 0x78, 0x94, 0x1c, 0x10, 0xe8, 0xc2, 0x11, 0xf2, 0xff, 0x89, 0x45, 0xb8, 0x8b, 0x45, 0xb8, 0x89, 0x45, 0xe8, 0xc7, 0x5, 0x10, 0xd9, 0x1b, 0x10, 0x7, 0, 0, 0, 0xbb, 0xfc, 0x56, 0x1b, 0x10, 0xba, 0x5, 0, 0, 0, 0xb8, 0x80, 0x94, 0x1c, 0x10, 0xe8, 0x1b, 0xa, 0x1, 0, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xbc, 0x89, 0x45, 0xec, 0xc7, 0x5, 0x10, 0xd9, 0x1b, 0x10, 0x8, 0, 0, 0, 0xbb, 0xf8, 0x38, 0x1b, 0x10, 0xba, 0x5, 0, 0, 0, 0xb8, 0xb4, 0x94, 0x1c, 0x10, 0xe8, 0xf4, 0x9, 0x1, 0, 0x89, 0x45, 0xc0, 0x8b, 0x45, 0xc0, 0x89, 0x45, 0xf0, 0xc7, 0x5, 0x10, 0xd9, 0x1b, 0x10, 0x9, 0, 0, 0, 0xe8, 0xa4, 0xf5, 0, 0, 0x50, 0xb8, 0xa4, 0xdf, 0x1a, 0x10, 0x50, 0xb8, 0xb8, 0xe0, 0x1a, 0x10, 0x50, 0xb8, 0xc8, 0xe0, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x47, 0x3, 0, 0, 0x50, 0xb8, 0xf3, 0x6, 0, 0, 0x50, 0xb8, 0x69, 0x4, 0, 0, 0x50, 0xb8, 0xdf, 0x2, 0, 0, 0x50, 0xb9, 0x5e, 0, 0, 0, 0x31, 0xdb, 0xba, 0x10, 0x42, 0x60, 0x1, 0xb8, 0xc8, 0x94, 0x1c, 0x10, 0xe8, 0xba, 0x24, 0, 0, 0xe8, 0x43, 0xf5, 0, 0, 0x50, 0xb8, 0xd6, 0xe0, 0x1a, 0x10, 0x50, 0xb8, 0x44, 0xe1, 0x1a, 0x10, 0x50, 0xb8, 0x53, 0xe1, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x48, 0x3, 0, 0, 0x50, 0xb8, 0xf4, 0x6, 0, 0, 0x50, 0xb8, 0x6a, 0x4, 0, 0, 0x50, 0xb8, 0xdf, 0x2, 0, 0, 0x50, 0xb9, 0x5f, 0, 0, 0, 0xbb, 0x1, 0, 0, 0, 0xba, 0x10, 0x42, 0x60, 0x1, 0xb8, 0xf3, 0x94, 0x1c, 0x10, 0xe8, 0x56, 0x24, 0, 0, 0xb8, 0x61, 0xe1, 0x1a, 0x10, 0x50, 0xb8, 0x49, 0xe2, 0x1a, 0x10, 0x50, 0xb8, 0x31, 0xe3, 0x1a, 0x10, 0x50, 0xb8, 0x42, 0xe3, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x49, 0x3, 0, 0, 0x50, 0xb8, 0xf5, 0x6, 0, 0, 0x50, 0xb8, 0x74, 0x4, 0, 0, 0x50, 0xb8, 0xe0, 0x2, 0, 0, 0x50, 0xb9, 0x60, 0, 0, 0, 0xbb, 0x2, 0, 0, 0, 0xba, 0, 0x42, 0xe0, 0x1, 0xb8, 0x1e, 0x95, 0x1c, 0x10, 0xe8, 0xf2, 0x23, 0, 0, 0xe8, 0x7b, 0xf4, 0, 0, 0x50, 0xb8, 0x52, 0xe3, 0x1a, 0x10, 0x50, 0xb8, 0x7c, 0xe4, 0x1a, 0x10, 0x50, 0xb8, 0x85, 0xe4, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0xb8, 0x4, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x4a, 0x3, 0, 0, 0x50, 0xb8, 0xf6, 0x6, 0, 0, 0x50, 0xb8, 0x6b, 0x4, 0, 0, 0x50, 0xb8, 0xdf, 0x2, 0, 0, 0x50, 0xb9, 0x61, 0, 0, 0, 0xbb, 0x3, 0, 0, 0, 0xba, 0x10, 0x42, 0x40, 0x1, 0xb8, 0x49, 0x95, 0x1c, 0x10, 0xe8, 0x8b, 0x23, 0, 0, 0xe8, 0x14, 0xf4, 0, 0, 0x50, 0xb8, 0x8e, 0xe4, 0x1a, 0x10, 0x50, 0xb8, 0xcc, 0xe4, 0x1a, 0x10, 0x50, 0xb8, 0xdb, 0xe4, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x4b, 0x3, 0, 0, 0x50, 0xb8, 0xf7, 0x6, 0, 0, 0x50, 0xb8, 0x6c, 0x4, 0, 0, 0x50, 0xb8, 0xdf, 0x2, 0, 0, 0x50, 0xb9, 0x62, 0, 0, 0, 0xbb, 0x4, 0, 0, 0, 0xba, 0x10, 0x2, 0, 0x1, 0xb8, 0x74, 0x95, 0x1c, 0x10, 0xe8, 0x27, 0x23, 0, 0, 0xe8, 0xb0, 0xf3, 0, 0, 0x50, 0xb8, 0xe9, 0xe4, 0x1a, 0x10, 0x50, 0xb8, 0x9a, 0xe5, 0x1a, 0x10, 0x50, 0xb8, 0xa1, 0xe5, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x4c, 0x3, 0, 0, 0x50, 0xb8, 0xf8, 0x6, 0, 0, 0x50, 0xb8, 0x6d, 0x4, 0, 0, 0x50, 0xb8, 0xe3, 0x2, 0, 0, 0x50, 0xb9, 0x63, 0, 0, 0, 0xbb, 0x5, 0, 0, 0, 0xba, 0x4, 0x42, 0xe0, 0x1, 0xb8, 0x9f, 0x95, 0x1c, 0x10, 0xe8, 0xc3, 0x22, 0, 0, 0xb8, 0xa7, 0xe5, 0x1a, 0x10, 0x50, 0xb8, 0x77, 0xe6, 0x1a, 0x10, 0x50, 0xb8, 0x13, 0xe7, 0x1a, 0x10, 0x50, 0xb8, 0x21, 0xe7, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x4d, 0x3, 0, 0, 0x50, 0xb8, 0xf9, 0x6, 0, 0, 0x50, 0xb8, 0x71, 0x4, 0, 0, 0x50, 0xb8, 0xe0, 0x2, 0, 0, 0x50, 0xb9, 0x64, 0, 0, 0, 0xbb, 0x6, 0, 0, 0, 0xba, 0, 0x42, 0xc0, 0x1, 0xb8, 0xca, 0x95, 0x1c, 0x10, 0xe8, 0x5c, 0x22, 0, 0, 0xb8, 0x2e, 0xe7, 0x1a, 0x10, 0x50, 0xb8, 0xb5, 0xe7, 0x1a, 0x10, 0x50, 0xb8, 0x3c, 0xe8, 0x1a, 0x10, 0x50, 0xb8, 0x47, 0xe8, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0xb8, 0x2, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x4e, 0x3, 0, 0, 0x50, 0xb8, 0xfa, 0x6, 0, 0, 0x50, 0xb8, 0x72, 0x4, 0, 0, 0x50, 0xb8, 0xe0, 0x2, 0, 0, 0x50, 0xb9, 0x65, 0, 0, 0, 0xbb, 0x7, 0, 0, 0, 0xba, 0, 0x42, 0xc0, 0x1, 0xb8, 0xf5, 0x95, 0x1c, 0x10, 0xe8, 0xf5, 0x21, 0, 0, 0xb8, 0x51, 0xe8, 0x1a, 0x10, 0x50, 0xb8, 0x3, 0xe9, 0x1a, 0x10, 0x50, 0xb8, 0xb5, 0xe9, 0x1a, 0x10, 0x50, 0xb8, 0xc1, 0xe9, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0xb8, 0x3, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x4f, 0x3, 0, 0, 0x50, 0xb8, 0xfb, 0x6, 0, 0, 0x50, 0xb8, 0x73, 0x4, 0, 0, 0x50, 0xb8, 0xe0, 0x2, 0, 0, 0x50, 0xb9, 0x66, 0, 0, 0, 0xbb, 0x8, 0, 0, 0, 0xba, 0, 0x42, 0xc0, 0x1, 0xb8, 0x20, 0x96, 0x1c, 0x10, 0xe8, 0x8e, 0x21, 0, 0, 0xb8, 0xcc, 0xe9, 0x1a, 0x10, 0x50, 0xb8, 0x70, 0xea, 0x1a, 0x10, 0x50, 0xb8, 0x39, 0xeb, 0x1a, 0x10, 0x50, 0xb8, 0x40, 0xeb, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0xb8, 0x4, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x50, 0x3, 0, 0, 0x50, 0xb8, 0xfc, 0x6, 0, 0, 0x50, 0xb8, 0x6e, 0x4, 0, 0, 0x50, 0xb8, 0xdf, 0x2, 0, 0, 0x50, 0xb9, 0x67, 0, 0, 0, 0xbb, 0x9, 0, 0, 0, 0xba, 0x10, 0x42, 0x40, 0x1, 0xb8, 0x4b, 0x96, 0x1c, 0x10, 0xe8, 0x27, 0x21, 0, 0, 0xe8, 0xb0, 0xf1, 0, 0, 0x50, 0xb8, 0x46, 0xeb, 0x1a, 0x10, 0x50, 0xb8, 0xb, 0xec, 0x1a, 0x10, 0x50, 0xb8, 0x13, 0xec, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0xb8, 0x6, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x51, 0x3, 0, 0, 0x50, 0xb8, 0xfd, 0x6, 0, 0, 0x50, 0xb8, 0x6f, 0x4, 0, 0, 0x50, 0xb8, 0xdf, 0x2, 0, 0, 0x50, 0xb9, 0x68, 0, 0, 0, 0xbb, 0xa, 0, 0, 0, 0xba, 0x10, 0x42, 0x40, 0x1, 0xb8, 0x76, 0x96, 0x1c, 0x10, 0xe8, 0xc0, 0x20, 0, 0, 0xe8, 0x49, 0xf1, 0, 0, 0x50, 0xb8, 0x1a, 0xec, 0x1a, 0x10, 0x50, 0xb8, 0xda, 0xec, 0x1a, 0x10, 0x50, 0xb8, 0xe0, 0xec, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0xb8, 0x5, 0, 0, 0, 0x50, 0xb8, 0x2, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x52, 0x3, 0, 0, 0x50, 0xb8, 0xfe, 0x6, 0, 0, 0x50, 0xb8, 0x70, 0x4, 0, 0, 0x50, 0xb8, 0xdf, 0x2, 0, 0, 0x50, 0xb9, 0x69, 0, 0, 0, 0xbb, 0xb, 0, 0, 0, 0xba, 0x10, 0x42, 0x40, 0, 0xb8, 0xa1, 0x96, 0x1c, 0x10, 0xe8, 0x59, 0x20, 0, 0, 0xb8, 0xe5, 0xec, 0x1a, 0x10, 0x50, 0xb8, 0xa9, 0xed, 0x1a, 0x10, 0x50, 0xb8, 0x6d, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0x78, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x7, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x53, 0x3, 0, 0, 0x50, 0xb8, 0xff, 0x6, 0, 0, 0x50, 0xb8, 0x75, 0x4, 0, 0, 0x50, 0xb8, 0xe0, 0x2, 0, 0, 0x50, 0xb9, 0x6a, 0, 0, 0, 0xbb, 0xc, 0, 0, 0, 0xba, 0x8, 0x42, 0x40, 0, 0xb8, 0xcc, 0x96, 0x1c, 0x10, 0xe8, 0xf5, 0x1f, 0, 0, 0xe8, 0x7e, 0xf0, 0, 0, 0x50, 0xb8, 0x82, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0x83, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0x84, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xee, 0x2, 0, 0, 0x50, 0xb9, 0x6b, 0, 0, 0, 0xbb, 0xd, 0, 0, 0, 0xba, 0x11, 0x2, 0, 0, 0xb8, 0xf7, 0x96, 0x1c, 0x10, 0xe8, 0x91, 0x1f, 0, 0, 0xe8, 0x1a, 0xf0, 0, 0, 0x50, 0xb8, 0x93, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0x94, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0x95, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xef, 0x2, 0, 0, 0x50, 0xb9, 0x6c, 0, 0, 0, 0xbb, 0xe, 0, 0, 0, 0xba, 0x1, 0x2, 0, 0, 0xb8, 0x22, 0x97, 0x1c, 0x10, 0xe8, 0x2d, 0x1f, 0, 0, 0xe8, 0xb6, 0xef, 0, 0, 0x50, 0xb8, 0xa3, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0xa4, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0xa5, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x7, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xee, 0x2, 0, 0, 0x50, 0xb9, 0xff, 0xff, 0xff, 0xff, 0xbb, 0xf, 0, 0, 0, 0xba, 0x11, 0x2, 0x40, 0, 0xb8, 0x4d, 0x97, 0x1c, 0x10, 0xe8, 0xc9, 0x1e, 0, 0, 0xe8, 0x52, 0xef, 0, 0, 0x50, 0xb8, 0xb0, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0xb1, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0xb2, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x7, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xee, 0x2, 0, 0, 0x50, 0xb9, 0xff, 0xff, 0xff, 0xff, 0xbb, 0x10, 0, 0, 0, 0xba, 0x1, 0x2, 0x40, 0, 0xb8, 0x78, 0x97, 0x1c, 0x10, 0xe8, 0x65, 0x1e, 0, 0, 0xe8, 0xee, 0xee, 0, 0, 0x50, 0xb8, 0xbd, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0xbe, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0xbf, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xf0, 0x2, 0, 0, 0x50, 0xb9, 0x6d, 0, 0, 0, 0xbb, 0x11, 0, 0, 0, 0xba, 0x11, 0x2, 0, 0, 0xb8, 0xa3, 0x97, 0x1c, 0x10, 0xe8, 0x1, 0x1e, 0, 0, 0xe8, 0x8a, 0xee, 0, 0, 0x50, 0xb8, 0xca, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0xcb, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0xcc, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xde, 0x2, 0, 0, 0x50, 0xb9, 0x6f, 0, 0, 0, 0xbb, 0x12, 0, 0, 0, 0xba, 0x1, 0x2, 0, 0, 0xb8, 0xce, 0x97, 0x1c, 0x10, 0xe8, 0x9d, 0x1d, 0, 0, 0xe8, 0x26, 0xee, 0, 0, 0x50, 0xb8, 0xd7, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0xd8, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0xd9, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xde, 0x2, 0, 0, 0x50, 0xb9, 0x6e, 0, 0, 0, 0xbb, 0x13, 0, 0, 0, 0xba, 0x11, 0x2, 0, 0, 0xb8, 0xf9, 0x97, 0x1c, 0x10, 0xe8, 0x39, 0x1d, 0, 0, 0xe8, 0xc2, 0xed, 0, 0, 0x50, 0xb8, 0xe5, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0xe6, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0xe7, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xde, 0x2, 0, 0, 0x50, 0xb9, 0x70, 0, 0, 0, 0xbb, 0x14, 0, 0, 0, 0xba, 0x1, 0x2, 0, 0, 0xb8, 0x24, 0x98, 0x1c, 0x10, 0xe8, 0xd5, 0x1c, 0, 0, 0xe8, 0x5e, 0xed, 0, 0, 0x50, 0xb8, 0xf3, 0xee, 0x1a, 0x10, 0x50, 0xb8, 0x1f, 0xef, 0x1a, 0x10, 0x50, 0xb8, 0x25, 0xef, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x54, 0x3, 0, 0, 0x50, 0xb8, 0, 0x7, 0, 0, 0x50, 0xb8, 0x76, 0x4, 0, 0, 0x50, 0xb8, 0xde, 0x2, 0, 0, 0x50, 0xb9, 0x71, 0, 0, 0, 0xbb, 0x15, 0, 0, 0, 0xba, 0x1, 0x2, 0x40, 0, 0xb8, 0x4f, 0x98, 0x1c, 0x10, 0xe8, 0x71, 0x1c, 0, 0, 0xe8, 0xfa, 0xec, 0, 0, 0x50, 0xb8, 0x2a, 0xef, 0x1a, 0x10, 0x50, 0xb8, 0xc0, 0xef, 0x1a, 0x10, 0x50, 0xb8, 0xcd, 0xef, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0xb8, 0x6, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x55, 0x3, 0, 0, 0x50, 0xb8, 0x1, 0x7, 0, 0, 0x50, 0xb8, 0x77, 0x4, 0, 0, 0x50, 0xb8, 0xde, 0x2, 0, 0, 0x50, 0xb9, 0x72, 0, 0, 0, 0xbb, 0x16, 0, 0, 0, 0xba, 0, 0x42, 0x40, 0, 0xb8, 0x7a, 0x98, 0x1c, 0x10, 0xe8, 0xa, 0x1c, 0, 0, 0xe8, 0x93, 0xec, 0, 0, 0x50, 0xb8, 0xd9, 0xef, 0x1a, 0x10, 0x50, 0xb8, 0x9f, 0xf0, 0x1a, 0x10, 0x50, 0xb8, 0xa9, 0xf0, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x2, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x56, 0x3, 0, 0, 0x50, 0xb8, 0x2, 0x7, 0, 0, 0x50, 0xb8, 0x78, 0x4, 0, 0, 0x50, 0xb8, 0xdf, 0x2, 0, 0, 0x50, 0xb9, 0x73, 0, 0, 0, 0xbb, 0x17, 0, 0, 0, 0xba, 0x10, 0x42, 0x68, 0, 0xb8, 0xa5, 0x98, 0x1c, 0x10, 0xe8, 0xa6, 0x1b, 0, 0, 0xb8, 0xb2, 0xf0, 0x1a, 0x10, 0x50, 0xb8, 0x5b, 0xf1, 0x1a, 0x10, 0x50, 0xb8, 0x3c, 0xf2, 0x1a, 0x10, 0x50, 0xb8, 0x51, 0xf2, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x57, 0x3, 0, 0, 0x50, 0xb8, 0x3, 0x7, 0, 0, 0x50, 0xb8, 0x79, 0x4, 0, 0, 0x50, 0xb8, 0xdf, 0x2, 0, 0, 0x50, 0xb9, 0x74, 0, 0, 0, 0xbb, 0x18, 0, 0, 0, 0xba, 0x10, 0x42, 0x68, 0x1, 0xb8, 0xd0, 0x98, 0x1c, 0x10, 0xe8, 0x42, 0x1b, 0, 0, 0xb8, 0x65, 0xf2, 0x1a, 0x10, 0x50, 0xb8, 0xe, 0xf3, 0x1a, 0x10, 0x50, 0xb8, 0, 0xf4, 0x1a, 0x10, 0x50, 0xb8, 0x15, 0xf4, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x58, 0x3, 0, 0, 0x50, 0xb8, 0x4, 0x7, 0, 0, 0x50, 0xb8, 0x7a, 0x4, 0, 0, 0x50, 0xb8, 0xdf, 0x2, 0, 0, 0x50, 0xb9, 0x75, 0, 0, 0, 0xbb, 0x19, 0, 0, 0, 0xba, 0x10, 0x42, 0x68, 0x1, 0xb8, 0xfb, 0x98, 0x1c, 0x10, 0xe8, 0xde, 0x1a, 0, 0, 0xe8, 0x67, 0xeb, 0, 0, 0x50, 0xb8, 0x29, 0xf4, 0x1a, 0x10, 0x50, 0xb8, 0x2a, 0xf4, 0x1a, 0x10, 0x50, 0xb8, 0x2b, 0xf4, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x59, 0x3, 0, 0, 0x50, 0xb8, 0x5, 0x7, 0, 0, 0x50, 0xb8, 0x7b, 0x4, 0, 0, 0x50, 0xb8, 0xdf, 0x2, 0, 0, 0x50, 0xb9, 0x76, 0, 0, 0, 0xbb, 0x1a, 0, 0, 0, 0xba, 0x10, 0x2, 0, 0x1, 0xb8, 0x26, 0x99, 0x1c, 0x10, 0xe8, 0x7a, 0x1a, 0, 0, 0xe8, 0x3, 0xeb, 0, 0, 0x50, 0xb8, 0x2c, 0xf4, 0x1a, 0x10, 0x50, 0xb8, 0xd8, 0xf4, 0x1a, 0x10, 0x50, 0xb8, 0xe9, 0xf4, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x5a, 0x3, 0, 0, 0x50, 0xb8, 0x6, 0x7, 0, 0, 0x50, 0xb8, 0x7c, 0x4, 0, 0, 0x50, 0xb8, 0xdf, 0x2, 0, 0, 0x50, 0xb9, 0x77, 0, 0, 0, 0xbb, 0x1b, 0, 0, 0, 0xba, 0x10, 0x42, 0x68, 0x1, 0xb8, 0x51, 0x99, 0x1c, 0x10, 0xe8, 0x16, 0x1a, 0, 0, 0xe8, 0x9f, 0xea, 0, 0, 0x50, 0xb8, 0xf9, 0xf4, 0x1a, 0x10, 0x50, 0xb8, 0xce, 0xf5, 0x1a, 0x10, 0x50, 0xb8, 0xd7, 0xf5, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x5b, 0x3, 0, 0, 0x50, 0xb8, 0x7, 0x7, 0, 0, 0x50, 0xb8, 0x7d, 0x4, 0, 0, 0x50, 0xb8, 0xdf, 0x2, 0, 0, 0x50, 0xb9, 0x78, 0, 0, 0, 0xbb, 0x1c, 0, 0, 0, 0xba, 0x10, 0x42, 0x40, 0x1, 0xb8, 0x7c, 0x99, 0x1c, 0x10, 0xe8, 0xb2, 0x19, 0, 0, 0xe8, 0x3b, 0xea, 0, 0, 0x50, 0xb8, 0xdf, 0xf5, 0x1a, 0x10, 0x50, 0xb8, 0x38, 0xf7, 0x1a, 0x10, 0x50, 0xb8, 0x49, 0xf7, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x5c, 0x3, 0, 0, 0x50, 0xb8, 0x8, 0x7, 0, 0, 0x50, 0xb8, 0x7e, 0x4, 0, 0, 0x50, 0xb8, 0xdf, 0x2, 0, 0, 0x50, 0xb9, 0x79, 0, 0, 0, 0xbb, 0x1d, 0, 0, 0, 0xba, 0x10, 0x42, 0x60, 0x1, 0xb8, 0xa7, 0x99, 0x1c, 0x10, 0xe8, 0x4e, 0x19, 0, 0, 0xe8, 0xd7, 0xe9, 0, 0, 0x50, 0xb8, 0x59, 0xf7, 0x1a, 0x10, 0x50, 0xb8, 0xbe, 0xf8, 0x1a, 0x10, 0x50, 0xb8, 0xca, 0xf8, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x5d, 0x3, 0, 0, 0x50, 0xb8, 0x9, 0x7, 0, 0, 0x50, 0xb8, 0x7f, 0x4, 0, 0, 0x50, 0xb8, 0xdf, 0x2, 0, 0, 0x50, 0xb9, 0x7a, 0, 0, 0, 0xbb, 0x1e, 0, 0, 0, 0xba, 0x10, 0x42, 0x60, 0x1, 0xb8, 0xd2, 0x99, 0x1c, 0x10, 0xe8, 0xea, 0x18, 0, 0, 0xe8, 0x73, 0xe9, 0, 0, 0x50, 0xb8, 0xd5, 0xf8, 0x1a, 0x10, 0x50, 0xb8, 0xd6, 0xf8, 0x1a, 0x10, 0x50, 0xb8, 0xe9, 0xf8, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x5e, 0x3, 0, 0, 0x50, 0xb8, 0xa, 0x7, 0, 0, 0x50, 0xb8, 0x80, 0x4, 0, 0, 0x50, 0xb8, 0xdf, 0x2, 0, 0, 0x50, 0xb9, 0x7b, 0, 0, 0, 0xbb, 0x1f, 0, 0, 0, 0xba, 0x10, 0x2, 0, 0x1, 0xb8, 0xfd, 0x99, 0x1c, 0x10, 0xe8, 0x86, 0x18, 0, 0, 0xe8, 0xf, 0xe9, 0, 0, 0x50, 0xb8, 0xfb, 0xf8, 0x1a, 0x10, 0x50, 0xb8, 0xeb, 0xf9, 0x1a, 0x10, 0x50, 0xb8, 0xfa, 0xf9, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x5f, 0x3, 0, 0, 0x50, 0xb8, 0xb, 0x7, 0, 0, 0x50, 0xb8, 0x81, 0x4, 0, 0, 0x50, 0xb8, 0xdf, 0x2, 0, 0, 0x50, 0xb9, 0x7c, 0, 0, 0, 0xbb, 0x20, 0, 0, 0, 0xba, 0x10, 0x42, 0x60, 0x1, 0xb8, 0x28, 0x9a, 0x1c, 0x10, 0xe8, 0x22, 0x18, 0, 0, 0xe8, 0xab, 0xe8, 0, 0, 0x50, 0xb8, 0x8, 0xfa, 0x1a, 0x10, 0x50, 0xb8, 0x4, 0xfb, 0x1a, 0x10, 0x50, 0xb8, 0x14, 0xfb, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x6, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x60, 0x3, 0, 0, 0x50, 0xb8, 0xc, 0x7, 0, 0, 0x50, 0xb8, 0x82, 0x4, 0, 0, 0x50, 0xb8, 0xde, 0x2, 0, 0, 0x50, 0xb9, 0x7d, 0, 0, 0, 0xbb, 0x21, 0, 0, 0, 0xba, 0x1, 0x42, 0x40, 0, 0xb8, 0x53, 0x9a, 0x1c, 0x10, 0xe8, 0xbe, 0x17, 0, 0, 0xb8, 0x23, 0xfb, 0x1a, 0x10, 0x50, 0xb8, 0xc2, 0xfb, 0x1a, 0x10, 0x50, 0xb8, 0x8e, 0xfc, 0x1a, 0x10, 0x50, 0xb8, 0x9a, 0xfc, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x61, 0x3, 0, 0, 0x50, 0xb8, 0xd, 0x7, 0, 0, 0x50, 0xb8, 0x83, 0x4, 0, 0, 0x50, 0xb8, 0xe5, 0x2, 0, 0, 0x50, 0xb9, 0x7e, 0, 0, 0, 0xbb, 0x22, 0, 0, 0, 0xba, 0, 0x42, 0xe2, 0x7, 0xb8, 0x7e, 0x9a, 0x1c, 0x10, 0xe8, 0x5a, 0x17, 0, 0, 0xe8, 0xe3, 0xe7, 0, 0, 0x50, 0xb8, 0xa5, 0xfc, 0x1a, 0x10, 0x50, 0xb8, 0x1e, 0xfd, 0x1a, 0x10, 0x50, 0xb8, 0x2c, 0xfd, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x62, 0x3, 0, 0, 0x50, 0xb8, 0xe, 0x7, 0, 0, 0x50, 0xb8, 0x84, 0x4, 0, 0, 0x50, 0xb8, 0xe4, 0x2, 0, 0, 0x50, 0xb9, 0x7f, 0, 0, 0, 0xbb, 0x23, 0, 0, 0, 0xba, 0, 0x42, 0xe2, 0x7, 0xb8, 0xa9, 0x9a, 0x1c, 0x10, 0xe8, 0xf6, 0x16, 0, 0, 0xe8, 0x7f, 0xe7, 0, 0, 0x50, 0xb8, 0x3a, 0xfd, 0x1a, 0x10, 0x50, 0xb8, 0xc5, 0xfd, 0x1a, 0x10, 0x50, 0xb8, 0xcf, 0xfd, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x63, 0x3, 0, 0, 0x50, 0xb8, 0xf, 0x7, 0, 0, 0x50, 0xb8, 0x85, 0x4, 0, 0, 0x50, 0xb8, 0xe5, 0x2, 0, 0, 0x50, 0xb9, 0x80, 0, 0, 0, 0xbb, 0x24, 0, 0, 0, 0xba, 0, 0x42, 0xe2, 0x7, 0xb8, 0xd4, 0x9a, 0x1c, 0x10, 0xe8, 0x92, 0x16, 0, 0, 0xe8, 0x1b, 0xe7, 0, 0, 0x50, 0xb8, 0xd9, 0xfd, 0x1a, 0x10, 0x50, 0xb8, 0x8f, 0xfe, 0x1a, 0x10, 0x50, 0xb8, 0xa1, 0xfe, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x64, 0x3, 0, 0, 0x50, 0xb8, 0x10, 0x7, 0, 0, 0x50, 0xb8, 0x86, 0x4, 0, 0, 0x50, 0xb8, 0xe5, 0x2, 0, 0, 0x50, 0xb9, 0x81, 0, 0, 0, 0xbb, 0x25, 0, 0, 0, 0xba, 0, 0x42, 0xe6, 0x7, 0xb8, 0xff, 0x9a, 0x1c, 0x10, 0xe8, 0x2e, 0x16, 0, 0, 0xe8, 0xb7, 0xe6, 0, 0, 0x50, 0xb8, 0xb2, 0xfe, 0x1a, 0x10, 0x50, 0xb8, 0xe7, 0xfe, 0x1a, 0x10, 0x50, 0xb8, 0xf7, 0xfe, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x65, 0x3, 0, 0, 0x50, 0xb8, 0x11, 0x7, 0, 0, 0x50, 0xb8, 0x87, 0x4, 0, 0, 0x50, 0xb8, 0xe0, 0x2, 0, 0, 0x50, 0xb9, 0x82, 0, 0, 0, 0xbb, 0x26, 0, 0, 0, 0xba, 0, 0x42, 0xc0, 0, 0xb8, 0x2a, 0x9b, 0x1c, 0x10, 0xe8, 0xca, 0x15, 0, 0, 0xe8, 0x53, 0xe6, 0, 0, 0x50, 0xb8, 0x6, 0xff, 0x1a, 0x10, 0x50, 0xb8, 0x6f, 0xff, 0x1a, 0x10, 0x50, 0xb8, 0x77, 0xff, 0x1a, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x6, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x66, 0x3, 0, 0, 0x50, 0xb8, 0x12, 0x7, 0, 0, 0x50, 0xb8, 0x88, 0x4, 0, 0, 0x50, 0xb8, 0xf4, 0x2, 0, 0, 0x50, 0xb9, 0x83, 0, 0, 0, 0xbb, 0x27, 0, 0, 0, 0xba, 0x1, 0x42, 0x40, 0, 0xb8, 0x55, 0x9b, 0x1c, 0x10, 0xe8, 0x66, 0x15, 0, 0, 0xb8, 0x7e, 0xff, 0x1a, 0x10, 0x50, 0xb8, 0x13, 0, 0x1b, 0x10, 0x50, 0xb8, 0x1b, 0x1, 0x1b, 0x10, 0x50, 0xb8, 0x2b, 0x1, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x67, 0x3, 0, 0, 0x50, 0xb8, 0x13, 0x7, 0, 0, 0x50, 0xb8, 0x89, 0x4, 0, 0, 0x50, 0xb8, 0xfb, 0x2, 0, 0, 0x50, 0xb9, 0x84, 0, 0, 0, 0xbb, 0x28, 0, 0, 0, 0xba, 0x10, 0x42, 0x60, 0x1, 0xb8, 0x80, 0x9b, 0x1c, 0x10, 0xe8, 0xff, 0x14, 0, 0, 0xe8, 0x88, 0xe5, 0, 0, 0x50, 0xb8, 0x3a, 0x1, 0x1b, 0x10, 0x50, 0xb8, 0xd2, 0x1, 0x1b, 0x10, 0x50, 0xb8, 0xdd, 0x1, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x68, 0x3, 0, 0, 0x50, 0xb8, 0x14, 0x7, 0, 0, 0x50, 0xb8, 0x8a, 0x4, 0, 0, 0x50, 0xb8, 0xde, 0x2, 0, 0, 0x50, 0xb9, 0x85, 0, 0, 0, 0xbb, 0x29, 0, 0, 0, 0xba, 0x1, 0x42, 0x40, 0x4, 0xb8, 0xab, 0x9b, 0x1c, 0x10, 0xe8, 0x9b, 0x14, 0, 0, 0xe8, 0x24, 0xe5, 0, 0, 0x50, 0xb8, 0xe7, 0x1, 0x1b, 0x10, 0x50, 0xb8, 0x7f, 0x2, 0x1b, 0x10, 0x50, 0xb8, 0x89, 0x2, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x2, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x69, 0x3, 0, 0, 0x50, 0xb8, 0x15, 0x7, 0, 0, 0x50, 0xb8, 0x8b, 0x4, 0, 0, 0x50, 0xb8, 0xde, 0x2, 0, 0, 0x50, 0xb9, 0xff, 0xff, 0xff, 0xff, 0xbb, 0x2a, 0, 0, 0, 0xba, 0x1, 0x42, 0x40, 0x4, 0xb8, 0xd6, 0x9b, 0x1c, 0x10, 0xe8, 0x37, 0x14, 0, 0, 0xe8, 0xc0, 0xe4, 0, 0, 0x50, 0xb8, 0x92, 0x2, 0x1b, 0x10, 0x50, 0xb8, 0x93, 0x2, 0x1b, 0x10, 0x50, 0xb8, 0x94, 0x2, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0xff, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xe9, 0x2, 0, 0, 0x50, 0xb9, 0xff, 0xff, 0xff, 0xff, 0xbb, 0x2b, 0, 0, 0, 0xba, 0x6, 0x2, 0, 0, 0xb8, 0x1, 0x9c, 0x1c, 0x10, 0xe8, 0xd3, 0x13, 0, 0, 0xe8, 0x5c, 0xe4, 0, 0, 0x50, 0xb8, 0x9e, 0x2, 0x1b, 0x10, 0x50, 0xb8, 0x9f, 0x2, 0x1b, 0x10, 0x50, 0xb8, 0xa0, 0x2, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0xff, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xe9, 0x2, 0, 0, 0x50, 0xb9, 0xff, 0xff, 0xff, 0xff, 0xbb, 0x2c, 0, 0, 0, 0xba, 0x6, 0x2, 0, 0, 0xb8, 0x2c, 0x9c, 0x1c, 0x10, 0xe8, 0x6f, 0x13, 0, 0, 0xe8, 0xf8, 0xe3, 0, 0, 0x50, 0xb8, 0xaa, 0x2, 0x1b, 0x10, 0x50, 0xb8, 0xab, 0x2, 0x1b, 0x10, 0x50, 0xb8, 0xac, 0x2, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0xff, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xe9, 0x2, 0, 0, 0x50, 0xb9, 0xff, 0xff, 0xff, 0xff, 0xbb, 0x2d, 0, 0, 0, 0xba, 0x6, 0x2, 0, 0, 0xb8, 0x57, 0x9c, 0x1c, 0x10, 0xe8, 0xb, 0x13, 0, 0, 0xe8, 0x94, 0xe3, 0, 0, 0x50, 0xb8, 0xb6, 0x2, 0x1b, 0x10, 0x50, 0xb8, 0xb7, 0x2, 0x1b, 0x10, 0x50, 0xb8, 0xb8, 0x2, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0xff, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xeb, 0x2, 0, 0, 0x50, 0xb9, 0xff, 0xff, 0xff, 0xff, 0xbb, 0x2e, 0, 0, 0, 0xba, 0x6, 0x2, 0, 0, 0xb8, 0x82, 0x9c, 0x1c, 0x10, 0xe8, 0xa7, 0x12, 0, 0, 0xe8, 0x30, 0xe3, 0, 0, 0x50, 0xb8, 0xc2, 0x2, 0x1b, 0x10, 0x50, 0xb8, 0xc3, 0x2, 0x1b, 0x10, 0x50, 0xb8, 0xc4, 0x2, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0xff, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xea, 0x2, 0, 0, 0x50, 0xb9, 0xff, 0xff, 0xff, 0xff, 0xbb, 0x2f, 0, 0, 0, 0xba, 0x6, 0x2, 0, 0, 0xb8, 0xad, 0x9c, 0x1c, 0x10, 0xe8, 0x43, 0x12, 0, 0, 0xe8, 0xcc, 0xe2, 0, 0, 0x50, 0xb8, 0xce, 0x2, 0x1b, 0x10, 0x50, 0xb8, 0x13, 0x3, 0x1b, 0x10, 0x50, 0xb8, 0x23, 0x3, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x3a, 0x7, 0, 0, 0x50, 0xb8, 0x6a, 0x3, 0, 0, 0x50, 0xb8, 0x16, 0x7, 0, 0, 0x50, 0xb8, 0x8c, 0x4, 0, 0, 0x50, 0xb8, 0xe1, 0x2, 0, 0, 0x50, 0xb9, 0x87, 0, 0, 0, 0xbb, 0x30, 0, 0, 0, 0xba, 0, 0x1, 0x60, 0x4, 0xb8, 0xd8, 0x9c, 0x1c, 0x10, 0xe8, 0xdf, 0x11, 0, 0, 0xb8, 0x32, 0x3, 0x1b, 0x10, 0x50, 0xb8, 0xc0, 0x3, 0x1b, 0x10, 0x50, 0xb8, 0x55, 0x4, 0x1b, 0x10, 0x50, 0xb8, 0x62, 0x4, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x7, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x3b, 0x7, 0, 0, 0x50, 0xb8, 0x6b, 0x3, 0, 0, 0x50, 0xb8, 0x17, 0x7, 0, 0, 0x50, 0xb8, 0x8d, 0x4, 0, 0, 0x50, 0xb8, 0xf2, 0x2, 0, 0, 0x50, 0xb9, 0x88, 0, 0, 0, 0xbb, 0x31, 0, 0, 0, 0xba, 0x80, 0x41, 0x68, 0x4, 0xb8, 0x3, 0x9d, 0x1c, 0x10, 0xe8, 0x78, 0x11, 0, 0, 0xb8, 0x6e, 0x4, 0x1b, 0x10, 0x50, 0xb8, 0x5e, 0x5, 0x1b, 0x10, 0x50, 0xb8, 0x26, 0x6, 0x1b, 0x10, 0x50, 0xb8, 0x2d, 0x6, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x7, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x3c, 0x7, 0, 0, 0x50, 0xb8, 0x6c, 0x3, 0, 0, 0x50, 0xb8, 0x18, 0x7, 0, 0, 0x50, 0xb8, 0x8e, 0x4, 0, 0, 0x50, 0xb8, 0xf2, 0x2, 0, 0, 0x50, 0xb9, 0x89, 0, 0, 0, 0xbb, 0x32, 0, 0, 0, 0xba, 0x80, 0x41, 0x62, 0x4, 0xb8, 0x2e, 0x9d, 0x1c, 0x10, 0xe8, 0x14, 0x11, 0, 0, 0xb8, 0x33, 0x6, 0x1b, 0x10, 0x50, 0xb8, 0x46, 0x7, 0x1b, 0x10, 0x50, 0xb8, 0xf3, 0x7, 0x1b, 0x10, 0x50, 0xb8, 0xf9, 0x7, 0x1b, 0x10, 0x50, 0xb8, 0x4d, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x3d, 0x7, 0, 0, 0x50, 0xb8, 0x6d, 0x3, 0, 0, 0x50, 0xb8, 0x19, 0x7, 0, 0, 0x50, 0xb8, 0x8f, 0x4, 0, 0, 0x50, 0xb8, 0xe6, 0x2, 0, 0, 0x50, 0xb9, 0x8a, 0, 0, 0, 0xbb, 0x33, 0, 0, 0, 0xba, 0, 0x41, 0x62, 0x6, 0xb8, 0x59, 0x9d, 0x1c, 0x10, 0xe8, 0xb0, 0x10, 0, 0, 0xe8, 0x39, 0xe1, 0, 0, 0x50, 0xb8, 0xfe, 0x7, 0x1b, 0x10, 0x50, 0xb8, 0x7a, 0x8, 0x1b, 0x10, 0x50, 0xb8, 0x87, 0x8, 0x1b, 0x10, 0x50, 0xb8, 0x4d, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x3e, 0x7, 0, 0, 0x50, 0xb8, 0x6e, 0x3, 0, 0, 0x50, 0xb8, 0x1a, 0x7, 0, 0, 0x50, 0xb8, 0x90, 0x4, 0, 0, 0x50, 0xb8, 0xe2, 0x2, 0, 0, 0x50, 0xb9, 0x8b, 0, 0, 0, 0xbb, 0x34, 0, 0, 0, 0xba, 0, 0x41, 0x62, 0x4, 0xb8, 0x84, 0x9d, 0x1c, 0x10, 0xe8, 0x4c, 0x10, 0, 0, 0xe8, 0xd5, 0xe0, 0, 0, 0x50, 0xb8, 0x93, 0x8, 0x1b, 0x10, 0x50, 0xb8, 0x2d, 0x9, 0x1b, 0x10, 0x50, 0xb8, 0x3e, 0x9, 0x1b, 0x10, 0x50, 0xb8, 0x4d, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x3f, 0x7, 0, 0, 0x50, 0xb8, 0x6f, 0x3, 0, 0, 0x50, 0xb8, 0x1b, 0x7, 0, 0, 0x50, 0xb8, 0x91, 0x4, 0, 0, 0x50, 0xb8, 0xe2, 0x2, 0, 0, 0x50, 0xb9, 0x8c, 0, 0, 0, 0xbb, 0x35, 0, 0, 0, 0xba, 0, 0x41, 0x66, 0x4, 0xb8, 0xaf, 0x9d, 0x1c, 0x10, 0xe8, 0xe8, 0xf, 0, 0, 0xe8, 0x71, 0xe0, 0, 0, 0x50, 0xb8, 0x4e, 0x9, 0x1b, 0x10, 0x50, 0xb8, 0x28, 0xa, 0x1b, 0x10, 0x50, 0xb8, 0x39, 0xa, 0x1b, 0x10, 0x50, 0xb8, 0x4d, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x40, 0x7, 0, 0, 0x50, 0xb8, 0x70, 0x3, 0, 0, 0x50, 0xb8, 0x1c, 0x7, 0, 0, 0x50, 0xb8, 0x92, 0x4, 0, 0, 0x50, 0xb8, 0xe2, 0x2, 0, 0, 0x50, 0xb9, 0x8d, 0, 0, 0, 0xbb, 0x36, 0, 0, 0, 0xba, 0, 0x41, 0x66, 0x4, 0xb8, 0xda, 0x9d, 0x1c, 0x10, 0xe8, 0x84, 0xf, 0, 0, 0xe8, 0xd, 0xe0, 0, 0, 0x50, 0xb8, 0x49, 0xa, 0x1b, 0x10, 0x50, 0xb8, 0x6c, 0xb, 0x1b, 0x10, 0x50, 0xb8, 0x81, 0xb, 0x1b, 0x10, 0x50, 0xb8, 0x4d, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x41, 0x7, 0, 0, 0x50, 0xb8, 0x71, 0x3, 0, 0, 0x50, 0xb8, 0x1d, 0x7, 0, 0, 0x50, 0xb8, 0x93, 0x4, 0, 0, 0x50, 0xb8, 0xe8, 0x2, 0, 0, 0x50, 0xb9, 0x8e, 0, 0, 0, 0xbb, 0x37, 0, 0, 0, 0xba, 0, 0x41, 0x62, 0x6, 0xb8, 0x5, 0x9e, 0x1c, 0x10, 0xe8, 0x20, 0xf, 0, 0, 0xe8, 0xa9, 0xdf, 0, 0, 0x50, 0xb8, 0x96, 0xb, 0x1b, 0x10, 0x50, 0xb8, 0xca, 0xc, 0x1b, 0x10, 0x50, 0xb8, 0xd6, 0xc, 0x1b, 0x10, 0x50, 0xb8, 0x4d, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x42, 0x7, 0, 0, 0x50, 0xb8, 0x72, 0x3, 0, 0, 0x50, 0xb8, 0x1e, 0x7, 0, 0, 0x50, 0xb8, 0x94, 0x4, 0, 0, 0x50, 0xb8, 0xe1, 0x2, 0, 0, 0x50, 0xb9, 0x8f, 0, 0, 0, 0xbb, 0x38, 0, 0, 0, 0xba, 0, 0x41, 0x60, 0x4, 0xb8, 0x30, 0x9e, 0x1c, 0x10, 0xe8, 0xb9, 0xe, 0, 0, 0xb8, 0xe1, 0xc, 0x1b, 0x10, 0x50, 0xb8, 0xa9, 0xd, 0x1b, 0x10, 0x50, 0xb8, 0x61, 0xe, 0x1b, 0x10, 0x50, 0xb8, 0x6b, 0xe, 0x1b, 0x10, 0x50, 0xb8, 0x4d, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x7, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x43, 0x7, 0, 0, 0x50, 0xb8, 0x73, 0x3, 0, 0, 0x50, 0xb8, 0x1f, 0x7, 0, 0, 0x50, 0xb8, 0x95, 0x4, 0, 0, 0x50, 0xb8, 0xf2, 0x2, 0, 0, 0x50, 0xb9, 0x90, 0, 0, 0, 0xbb, 0x39, 0, 0, 0, 0xba, 0x80, 0x41, 0x60, 0x4, 0xb8, 0x5b, 0x9e, 0x1c, 0x10, 0xe8, 0x55, 0xe, 0, 0, 0xe8, 0xde, 0xde, 0, 0, 0x50, 0xb8, 0x74, 0xe, 0x1b, 0x10, 0x50, 0xb8, 0x33, 0xf, 0x1b, 0x10, 0x50, 0xb8, 0x3c, 0xf, 0x1b, 0x10, 0x50, 0xb8, 0x4d, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x44, 0x7, 0, 0, 0x50, 0xb8, 0x74, 0x3, 0, 0, 0x50, 0xb8, 0x20, 0x7, 0, 0, 0x50, 0xb8, 0x96, 0x4, 0, 0, 0x50, 0xb8, 0xfc, 0x2, 0, 0, 0x50, 0xb9, 0x91, 0, 0, 0, 0xbb, 0x3a, 0, 0, 0, 0xba, 0, 0x41, 0x60, 0xc, 0xb8, 0x86, 0x9e, 0x1c, 0x10, 0xe8, 0xf1, 0xd, 0, 0, 0xe8, 0x7a, 0xde, 0, 0, 0x50, 0xb8, 0x44, 0xf, 0x1b, 0x10, 0x50, 0xb8, 0xcc, 0xf, 0x1b, 0x10, 0x50, 0xb8, 0xda, 0xf, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x45, 0x7, 0, 0, 0x50, 0xb8, 0x75, 0x3, 0, 0, 0x50, 0xb8, 0x21, 0x7, 0, 0, 0x50, 0xb8, 0x97, 0x4, 0, 0, 0x50, 0xb8, 0xe1, 0x2, 0, 0, 0x50, 0xb9, 0x92, 0, 0, 0, 0xbb, 0x3b, 0, 0, 0, 0xba, 0, 0x41, 0x60, 0x4, 0xb8, 0xb1, 0x9e, 0x1c, 0x10, 0xe8, 0x8a, 0xd, 0, 0, 0xe8, 0x13, 0xde, 0, 0, 0x50, 0xb8, 0xe7, 0xf, 0x1b, 0x10, 0x50, 0xb8, 0x1e, 0x10, 0x1b, 0x10, 0x50, 0xb8, 0x2a, 0x10, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0xb8, 0x3, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x46, 0x7, 0, 0, 0x50, 0xb8, 0x76, 0x3, 0, 0, 0x50, 0xb8, 0x22, 0x7, 0, 0, 0x50, 0xb8, 0x98, 0x4, 0, 0, 0x50, 0xb8, 0xe1, 0x2, 0, 0, 0x50, 0xb9, 0x93, 0, 0, 0, 0xbb, 0x3c, 0, 0, 0, 0xba, 0, 0x41, 0x60, 0x4, 0xb8, 0xdc, 0x9e, 0x1c, 0x10, 0xe8, 0x23, 0xd, 0, 0, 0xb8, 0x35, 0x10, 0x1b, 0x10, 0x50, 0xb8, 0xba, 0x10, 0x1b, 0x10, 0x50, 0xb8, 0xa, 0x11, 0x1b, 0x10, 0x50, 0xb8, 0x14, 0x11, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x7, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x47, 0x7, 0, 0, 0x50, 0xb8, 0x77, 0x3, 0, 0, 0x50, 0xb8, 0x23, 0x7, 0, 0, 0x50, 0xb8, 0x99, 0x4, 0, 0, 0x50, 0xb8, 0xf2, 0x2, 0, 0, 0x50, 0xb9, 0x94, 0, 0, 0, 0xbb, 0x3d, 0, 0, 0, 0xba, 0x80, 0x41, 0x68, 0x4, 0xb8, 0x7, 0x9f, 0x1c, 0x10, 0xe8, 0xbc, 0xc, 0, 0, 0xe8, 0x45, 0xdd, 0, 0, 0x50, 0xb8, 0x1d, 0x11, 0x1b, 0x10, 0x50, 0xb8, 0x82, 0x11, 0x1b, 0x10, 0x50, 0xb8, 0x8d, 0x11, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x48, 0x7, 0, 0, 0x50, 0xb8, 0x78, 0x3, 0, 0, 0x50, 0xb8, 0x24, 0x7, 0, 0, 0x50, 0xb8, 0x9a, 0x4, 0, 0, 0x50, 0xb8, 0xe1, 0x2, 0, 0, 0x50, 0xb9, 0x95, 0, 0, 0, 0xbb, 0x3e, 0, 0, 0, 0xba, 0, 0x41, 0x60, 0x4, 0xb8, 0x32, 0x9f, 0x1c, 0x10, 0xe8, 0x55, 0xc, 0, 0, 0xe8, 0xde, 0xdc, 0, 0, 0x50, 0xb8, 0x97, 0x11, 0x1b, 0x10, 0x50, 0xb8, 0x7b, 0x12, 0x1b, 0x10, 0x50, 0xb8, 0x88, 0x12, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x49, 0x7, 0, 0, 0x50, 0xb8, 0x79, 0x3, 0, 0, 0x50, 0xb8, 0x25, 0x7, 0, 0, 0x50, 0xb8, 0x9b, 0x4, 0, 0, 0x50, 0xb8, 0xe1, 0x2, 0, 0, 0x50, 0xb9, 0x96, 0, 0, 0, 0xbb, 0x3f, 0, 0, 0, 0xba, 0, 0x41, 0x60, 0x4, 0xb8, 0x5d, 0x9f, 0x1c, 0x10, 0xe8, 0xee, 0xb, 0, 0, 0xe8, 0x77, 0xdc, 0, 0, 0x50, 0xb8, 0x94, 0x12, 0x1b, 0x10, 0x50, 0xb8, 0xab, 0x12, 0x1b, 0x10, 0x50, 0xb8, 0xb7, 0x12, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0xb8, 0x2, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x4a, 0x7, 0, 0, 0x50, 0xb8, 0x7a, 0x3, 0, 0, 0x50, 0xb8, 0x26, 0x7, 0, 0, 0x50, 0xb8, 0x9c, 0x4, 0, 0, 0x50, 0xb8, 0xe1, 0x2, 0, 0, 0x50, 0xb9, 0x97, 0, 0, 0, 0xbb, 0x40, 0, 0, 0, 0xba, 0, 0x41, 0x60, 0x4, 0xb8, 0x88, 0x9f, 0x1c, 0x10, 0xe8, 0x87, 0xb, 0, 0, 0xe8, 0x10, 0xdc, 0, 0, 0x50, 0xb8, 0xc2, 0x12, 0x1b, 0x10, 0x50, 0xb8, 0x6a, 0x13, 0x1b, 0x10, 0x50, 0xb8, 0x7d, 0x13, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0xb8, 0x4, 0, 0, 0, 0x50, 0xb8, 0x7, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x4b, 0x7, 0, 0, 0x50, 0xb8, 0x7b, 0x3, 0, 0, 0x50, 0xb8, 0x27, 0x7, 0, 0, 0x50, 0xb8, 0x9d, 0x4, 0, 0, 0x50, 0xb8, 0xe1, 0x2, 0, 0, 0x50, 0xb9, 0x98, 0, 0, 0, 0xbb, 0x41, 0, 0, 0, 0xba, 0x80, 0x41, 0x60, 0x4, 0xb8, 0xb3, 0x9f, 0x1c, 0x10, 0xe8, 0x20, 0xb, 0, 0, 0xe8, 0xa9, 0xdb, 0, 0, 0x50, 0xb8, 0x8f, 0x13, 0x1b, 0x10, 0x50, 0xb8, 0x8c, 0x14, 0x1b, 0x10, 0x50, 0xb8, 0x99, 0x14, 0x1b, 0x10, 0x50, 0xb8, 0x4d, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x5, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x4c, 0x7, 0, 0, 0x50, 0xb8, 0x7c, 0x3, 0, 0, 0x50, 0xb8, 0x28, 0x7, 0, 0, 0x50, 0xb8, 0x9e, 0x4, 0, 0, 0x50, 0xb8, 0xf5, 0x2, 0, 0, 0x50, 0xb9, 0x99, 0, 0, 0, 0xbb, 0x42, 0, 0, 0, 0xba, 0, 0x41, 0x42, 0x4, 0xb8, 0xde, 0x9f, 0x1c, 0x10, 0xe8, 0xbc, 0xa, 0, 0, 0xe8, 0x45, 0xdb, 0, 0, 0x50, 0xb8, 0xa5, 0x14, 0x1b, 0x10, 0x50, 0xb8, 0xb, 0x15, 0x1b, 0x10, 0x50, 0xb8, 0x14, 0x15, 0x1b, 0x10, 0x50, 0xb8, 0x4d, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x5, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x4d, 0x7, 0, 0, 0x50, 0xb8, 0x7d, 0x3, 0, 0, 0x50, 0xb8, 0x29, 0x7, 0, 0, 0x50, 0xb8, 0x9f, 0x4, 0, 0, 0x50, 0xb8, 0xf6, 0x2, 0, 0, 0x50, 0xb9, 0x9a, 0, 0, 0, 0xbb, 0x43, 0, 0, 0, 0xba, 0, 0x41, 0x42, 0x4, 0xb8, 0x9, 0xa0, 0x1c, 0x10, 0xe8, 0x58, 0xa, 0, 0, 0xe8, 0xe1, 0xda, 0, 0, 0x50, 0xb8, 0x1d, 0x15, 0x1b, 0x10, 0x50, 0xb8, 0xaa, 0x15, 0x1b, 0x10, 0x50, 0xb8, 0xb2, 0x15, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x2, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x4e, 0x7, 0, 0, 0x50, 0xb8, 0x7e, 0x3, 0, 0, 0x50, 0xb8, 0x2a, 0x7, 0, 0, 0x50, 0xb8, 0xa0, 0x4, 0, 0, 0x50, 0xb8, 0xfa, 0x2, 0, 0, 0x50, 0xb9, 0x9b, 0, 0, 0, 0xbb, 0x44, 0, 0, 0, 0xba, 0x80, 0x40, 0x62, 0x6, 0xb8, 0x34, 0xa0, 0x1c, 0x10, 0xe8, 0xf4, 0x9, 0, 0, 0xe8, 0x7d, 0xda, 0, 0, 0x50, 0xb8, 0xb9, 0x15, 0x1b, 0x10, 0x50, 0xb8, 0x53, 0x16, 0x1b, 0x10, 0x50, 0xb8, 0x5d, 0x16, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x2, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x4f, 0x7, 0, 0, 0x50, 0xb8, 0x7f, 0x3, 0, 0, 0x50, 0xb8, 0x2b, 0x7, 0, 0, 0x50, 0xb8, 0xa1, 0x4, 0, 0, 0x50, 0xb8, 0xe2, 0x2, 0, 0, 0x50, 0xb9, 0x9c, 0, 0, 0, 0xbb, 0x45, 0, 0, 0, 0xba, 0x80, 0x40, 0x66, 0x4, 0xb8, 0x5f, 0xa0, 0x1c, 0x10, 0xe8, 0x90, 0x9, 0, 0, 0xe8, 0x19, 0xda, 0, 0, 0x50, 0xb8, 0x66, 0x16, 0x1b, 0x10, 0x50, 0xb8, 0xe8, 0x16, 0x1b, 0x10, 0x50, 0xb8, 0xf0, 0x16, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x2, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x50, 0x7, 0, 0, 0x50, 0xb8, 0x80, 0x3, 0, 0, 0x50, 0xb8, 0x2c, 0x7, 0, 0, 0x50, 0xb8, 0xa2, 0x4, 0, 0, 0x50, 0xb8, 0xf3, 0x2, 0, 0, 0x50, 0xb9, 0x9d, 0, 0, 0, 0xbb, 0x46, 0, 0, 0, 0xba, 0x80, 0x40, 0x62, 0x6, 0xb8, 0x8a, 0xa0, 0x1c, 0x10, 0xe8, 0x2c, 0x9, 0, 0, 0xe8, 0xb5, 0xd9, 0, 0, 0x50, 0xb8, 0xf8, 0x16, 0x1b, 0x10, 0x50, 0xb8, 0x28, 0x18, 0x1b, 0x10, 0x50, 0xb8, 0x33, 0x18, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x2, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x51, 0x7, 0, 0, 0x50, 0xb8, 0x81, 0x3, 0, 0, 0x50, 0xb8, 0x2d, 0x7, 0, 0, 0x50, 0xb8, 0xa3, 0x4, 0, 0, 0x50, 0xb8, 0xfd, 0x2, 0, 0, 0x50, 0xb9, 0x9e, 0, 0, 0, 0xbb, 0x47, 0, 0, 0, 0xba, 0x80, 0x40, 0x64, 0x4, 0xb8, 0xb5, 0xa0, 0x1c, 0x10, 0xe8, 0xc8, 0x8, 0, 0, 0xe8, 0x51, 0xd9, 0, 0, 0x50, 0xb8, 0x3d, 0x18, 0x1b, 0x10, 0x50, 0xb8, 0xe7, 0x18, 0x1b, 0x10, 0x50, 0xb8, 0xf6, 0x18, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0xb8, 0x4, 0, 0, 0, 0x50, 0xb8, 0x6, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x52, 0x7, 0, 0, 0x50, 0xb8, 0x82, 0x3, 0, 0, 0x50, 0xb8, 0x2e, 0x7, 0, 0, 0x50, 0xb8, 0xa4, 0x4, 0, 0, 0x50, 0xb8, 0xe1, 0x2, 0, 0, 0x50, 0xb9, 0x9f, 0, 0, 0, 0xbb, 0x48, 0, 0, 0, 0xba, 0x80, 0x40, 0x60, 0x4, 0xb8, 0xe0, 0xa0, 0x1c, 0x10, 0xe8, 0x61, 0x8, 0, 0, 0xe8, 0xea, 0xd8, 0, 0, 0x50, 0xb8, 0x4, 0x19, 0x1b, 0x10, 0x50, 0xb8, 0x78, 0x19, 0x1b, 0x10, 0x50, 0xb8, 0x89, 0x19, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x2, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x53, 0x7, 0, 0, 0x50, 0xb8, 0x83, 0x3, 0, 0, 0x50, 0xb8, 0x2f, 0x7, 0, 0, 0x50, 0xb8, 0xa5, 0x4, 0, 0, 0x50, 0xb8, 0xe2, 0x2, 0, 0, 0x50, 0xb9, 0xa0, 0, 0, 0, 0xbb, 0x49, 0, 0, 0, 0xba, 0x80, 0x40, 0x66, 0x4, 0xb8, 0xb, 0xa1, 0x1c, 0x10, 0xe8, 0xfd, 0x7, 0, 0, 0xe8, 0x86, 0xd8, 0, 0, 0x50, 0xb8, 0x99, 0x19, 0x1b, 0x10, 0x50, 0xb8, 0x3d, 0x1a, 0x1b, 0x10, 0x50, 0xb8, 0x4d, 0x1a, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x2, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x54, 0x7, 0, 0, 0x50, 0xb8, 0x84, 0x3, 0, 0, 0x50, 0xb8, 0x30, 0x7, 0, 0, 0x50, 0xb8, 0xa6, 0x4, 0, 0, 0x50, 0xb8, 0xe1, 0x2, 0, 0, 0x50, 0xb9, 0xa1, 0, 0, 0, 0xbb, 0x4a, 0, 0, 0, 0xba, 0x80, 0x40, 0x60, 0x4, 0xb8, 0x36, 0xa1, 0x1c, 0x10, 0xe8, 0x96, 0x7, 0, 0, 0xe8, 0x1f, 0xd8, 0, 0, 0x50, 0xb8, 0x5c, 0x1a, 0x1b, 0x10, 0x50, 0xb8, 0xc8, 0x1a, 0x1b, 0x10, 0x50, 0xb8, 0xd3, 0x1a, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x6, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x55, 0x7, 0, 0, 0x50, 0xb8, 0x85, 0x3, 0, 0, 0x50, 0xb8, 0x31, 0x7, 0, 0, 0x50, 0xb8, 0xa7, 0x4, 0, 0, 0x50, 0xb8, 0xe1, 0x2, 0, 0, 0x50, 0xb9, 0xa2, 0, 0, 0, 0xbb, 0x4b, 0, 0, 0, 0xba, 0x80, 0x40, 0x60, 0x4, 0xb8, 0x61, 0xa1, 0x1c, 0x10, 0xe8, 0x2f, 0x7, 0, 0, 0xe8, 0xb8, 0xd7, 0, 0, 0x50, 0xb8, 0xde, 0x1a, 0x1b, 0x10, 0x50, 0xb8, 0xd4, 0x1b, 0x1b, 0x10, 0x50, 0xb8, 0xdd, 0x1b, 0x1b, 0x10, 0x50, 0xb8, 0x4d, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0xf, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x56, 0x7, 0, 0, 0x50, 0xb8, 0x86, 0x3, 0, 0, 0x50, 0xb8, 0x32, 0x7, 0, 0, 0x50, 0xb8, 0xa8, 0x4, 0, 0, 0x50, 0xb8, 0xe2, 0x2, 0, 0, 0x50, 0xb9, 0xa3, 0, 0, 0, 0xbb, 0x4c, 0, 0, 0, 0xba, 0x40, 0x40, 0x66, 0x4, 0xb8, 0x8c, 0xa1, 0x1c, 0x10, 0xe8, 0xcb, 0x6, 0, 0, 0xe8, 0x54, 0xd7, 0, 0, 0x50, 0xb8, 0xe5, 0x1b, 0x1b, 0x10, 0x50, 0xb8, 0xfb, 0x1c, 0x1b, 0x10, 0x50, 0xb8, 0x10, 0x1d, 0x1b, 0x10, 0x50, 0xb8, 0x4d, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0xf, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x57, 0x7, 0, 0, 0x50, 0xb8, 0x87, 0x3, 0, 0, 0x50, 0xb8, 0x33, 0x7, 0, 0, 0x50, 0xb8, 0xa9, 0x4, 0, 0, 0x50, 0xb8, 0xe2, 0x2, 0, 0, 0x50, 0xb9, 0xa4, 0, 0, 0, 0xbb, 0x4d, 0, 0, 0, 0xba, 0x40, 0x40, 0x66, 0x4, 0xb8, 0xb7, 0xa1, 0x1c, 0x10, 0xe8, 0x67, 0x6, 0, 0, 0xe8, 0xf0, 0xd6, 0, 0, 0x50, 0xb8, 0x24, 0x1d, 0x1b, 0x10, 0x50, 0xb8, 0x60, 0x1d, 0x1b, 0x10, 0x50, 0xb8, 0x6f, 0x1d, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0xb8, 0x4, 0, 0, 0, 0x50, 0xb8, 0xf, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x58, 0x7, 0, 0, 0x50, 0xb8, 0x88, 0x3, 0, 0, 0x50, 0xb8, 0x34, 0x7, 0, 0, 0x50, 0xb8, 0xaa, 0x4, 0, 0, 0x50, 0xb8, 0xe1, 0x2, 0, 0, 0x50, 0xb9, 0xa5, 0, 0, 0, 0xbb, 0x4e, 0, 0, 0, 0xba, 0x40, 0x40, 0x60, 0x4, 0xb8, 0xe2, 0xa1, 0x1c, 0x10, 0xe8, 0, 0x6, 0, 0, 0xe8, 0x89, 0xd6, 0, 0, 0x50, 0xb8, 0x7d, 0x1d, 0x1b, 0x10, 0x50, 0xb8, 0x1c, 0x1e, 0x1b, 0x10, 0x50, 0xb8, 0x22, 0x1e, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0xf, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x59, 0x7, 0, 0, 0x50, 0xb8, 0x89, 0x3, 0, 0, 0x50, 0xb8, 0x35, 0x7, 0, 0, 0x50, 0xb8, 0xab, 0x4, 0, 0, 0x50, 0xb8, 0xf1, 0x2, 0, 0, 0x50, 0xb9, 0xa6, 0, 0, 0, 0xbb, 0x4f, 0, 0, 0, 0xba, 0x40, 0x40, 0x60, 0xc, 0xb8, 0xd, 0xa2, 0x1c, 0x10, 0xe8, 0x9c, 0x5, 0, 0, 0xe8, 0x25, 0xd6, 0, 0, 0x50, 0xb8, 0x27, 0x1e, 0x1b, 0x10, 0x50, 0xb8, 0x18, 0x1f, 0x1b, 0x10, 0x50, 0xb8, 0x27, 0x1f, 0x1b, 0x10, 0x50, 0xb8, 0x4d, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x2, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x5a, 0x7, 0, 0, 0x50, 0xb8, 0x8a, 0x3, 0, 0, 0x50, 0xb8, 0x36, 0x7, 0, 0, 0x50, 0xb8, 0xac, 0x4, 0, 0, 0x50, 0xb8, 0xe2, 0x2, 0, 0, 0x50, 0xb9, 0xa7, 0, 0, 0, 0xbb, 0x50, 0, 0, 0, 0xba, 0x80, 0, 0x66, 0x14, 0xb8, 0x38, 0xa2, 0x1c, 0x10, 0xe8, 0x38, 0x5, 0, 0, 0xe8, 0xc1, 0xd5, 0, 0, 0x50, 0xb8, 0x35, 0x1f, 0x1b, 0x10, 0x50, 0xb8, 0xf8, 0x1f, 0x1b, 0x10, 0x50, 0xb8, 0x4, 0x20, 0x1b, 0x10, 0x50, 0xb8, 0x4d, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x5b, 0x7, 0, 0, 0x50, 0xb8, 0x8b, 0x3, 0, 0, 0x50, 0xb8, 0x37, 0x7, 0, 0, 0x50, 0xb8, 0xad, 0x4, 0, 0, 0x50, 0xb8, 0xe7, 0x2, 0, 0, 0x50, 0xb9, 0xa8, 0, 0, 0, 0xbb, 0x51, 0, 0, 0, 0xba, 0, 0x1, 0x66, 0x16, 0xb8, 0x63, 0xa2, 0x1c, 0x10, 0xe8, 0xd4, 0x4, 0, 0, 0xe8, 0x5d, 0xd5, 0, 0, 0x50, 0xb8, 0xf, 0x20, 0x1b, 0x10, 0x50, 0xb8, 0x16, 0x21, 0x1b, 0x10, 0x50, 0xb8, 0x29, 0x21, 0x1b, 0x10, 0x50, 0xb8, 0x4d, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x5c, 0x7, 0, 0, 0x50, 0xb8, 0x8c, 0x3, 0, 0, 0x50, 0xb8, 0x38, 0x7, 0, 0, 0x50, 0xb8, 0xae, 0x4, 0, 0, 0x50, 0xb8, 0xe2, 0x2, 0, 0, 0x50, 0xb9, 0xa9, 0, 0, 0, 0xbb, 0x52, 0, 0, 0, 0xba, 0, 0x1, 0x66, 0x14, 0xb8, 0x8e, 0xa2, 0x1c, 0x10, 0xe8, 0x70, 0x4, 0, 0, 0xe8, 0xf9, 0xd4, 0, 0, 0x50, 0xb8, 0x3b, 0x21, 0x1b, 0x10, 0x50, 0xb8, 0x8f, 0x22, 0x1b, 0x10, 0x50, 0xb8, 0xa3, 0x22, 0x1b, 0x10, 0x50, 0xb8, 0x4d, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0xf, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x5d, 0x7, 0, 0, 0x50, 0xb8, 0x8d, 0x3, 0, 0, 0x50, 0xb8, 0x39, 0x7, 0, 0, 0x50, 0xb8, 0xaf, 0x4, 0, 0, 0x50, 0xb8, 0xe2, 0x2, 0, 0, 0x50, 0xb9, 0xaa, 0, 0, 0, 0xbb, 0x53, 0, 0, 0, 0xba, 0x40, 0, 0x66, 0x14, 0xb8, 0xb9, 0xa2, 0x1c, 0x10, 0xe8, 0xc, 0x4, 0, 0, 0xe8, 0x95, 0xd4, 0, 0, 0x50, 0xb8, 0xb6, 0x22, 0x1b, 0x10, 0x50, 0xb8, 0xb7, 0x22, 0x1b, 0x10, 0x50, 0xb8, 0xb8, 0x22, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0xff, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xf7, 0x2, 0, 0, 0x50, 0xb9, 0xff, 0xff, 0xff, 0xff, 0xbb, 0x54, 0, 0, 0, 0xba, 0x20, 0, 0, 0, 0xb8, 0xe4, 0xa2, 0x1c, 0x10, 0xe8, 0xa8, 0x3, 0, 0, 0xe8, 0x31, 0xd4, 0, 0, 0x50, 0xb8, 0xc0, 0x22, 0x1b, 0x10, 0x50, 0xb8, 0xc1, 0x22, 0x1b, 0x10, 0x50, 0xb8, 0xc2, 0x22, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0xff, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xf7, 0x2, 0, 0, 0x50, 0xb9, 0xff, 0xff, 0xff, 0xff, 0xbb, 0x55, 0, 0, 0, 0xba, 0x21, 0, 0, 0, 0xb8, 0xf, 0xa3, 0x1c, 0x10, 0xe8, 0x44, 0x3, 0, 0, 0xe8, 0xcd, 0xd3, 0, 0, 0x50, 0xb8, 0xca, 0x22, 0x1b, 0x10, 0x50, 0xb8, 0xcb, 0x22, 0x1b, 0x10, 0x50, 0xb8, 0xcc, 0x22, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0xff, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xf8, 0x2, 0, 0, 0x50, 0xb9, 0xff, 0xff, 0xff, 0xff, 0xbb, 0x56, 0, 0, 0, 0xba, 0x20, 0, 0, 0, 0xb8, 0x3a, 0xa3, 0x1c, 0x10, 0xe8, 0xe0, 0x2, 0, 0, 0xe8, 0x69, 0xd3, 0, 0, 0x50, 0xb8, 0xda, 0x22, 0x1b, 0x10, 0x50, 0xb8, 0xdb, 0x22, 0x1b, 0x10, 0x50, 0xb8, 0xdc, 0x22, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0xff, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xf9, 0x2, 0, 0, 0x50, 0xb9, 0xff, 0xff, 0xff, 0xff, 0xbb, 0x57, 0, 0, 0, 0xba, 0x20, 0, 0, 0, 0xb8, 0x65, 0xa3, 0x1c, 0x10, 0xe8, 0x7c, 0x2, 0, 0, 0xe8, 0x5, 0xd3, 0, 0, 0x50, 0xb8, 0xed, 0x22, 0x1b, 0x10, 0x50, 0xb8, 0xee, 0x22, 0x1b, 0x10, 0x50, 0xb8, 0xef, 0x22, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0xff, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xf9, 0x2, 0, 0, 0x50, 0xb9, 0xff, 0xff, 0xff, 0xff, 0xbb, 0x58, 0, 0, 0, 0xba, 0x20, 0, 0, 0, 0xb8, 0x90, 0xa3, 0x1c, 0x10, 0xe8, 0x18, 0x2, 0, 0, 0xe8, 0xa1, 0xd2, 0, 0, 0x50, 0xb8, 0x5, 0x23, 0x1b, 0x10, 0x50, 0xb8, 0x6, 0x23, 0x1b, 0x10, 0x50, 0xb8, 0x7, 0x23, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0xff, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xec, 0x2, 0, 0, 0x50, 0xb9, 0xff, 0xff, 0xff, 0xff, 0xbb, 0x59, 0, 0, 0, 0xba, 0x26, 0, 0, 0, 0xb8, 0xbb, 0xa3, 0x1c, 0x10, 0xe8, 0xb4, 0x1, 0, 0, 0xe8, 0x3d, 0xd2, 0, 0, 0x50, 0xb8, 0x13, 0x23, 0x1b, 0x10, 0x50, 0xb8, 0x14, 0x23, 0x1b, 0x10, 0x50, 0xb8, 0x15, 0x23, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0xff, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xed, 0x2, 0, 0, 0x50, 0xb9, 0xff, 0xff, 0xff, 0xff, 0xbb, 0x5a, 0, 0, 0, 0xba, 0x27, 0, 0, 0, 0xb8, 0xe6, 0xa3, 0x1c, 0x10, 0xe8, 0x50, 0x1, 0, 0, 0xe8, 0xd9, 0xd1, 0, 0, 0x50, 0xb8, 0x22, 0x23, 0x1b, 0x10, 0x50, 0xb8, 0x23, 0x23, 0x1b, 0x10, 0x50, 0xb8, 0x24, 0x23, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xde, 0x2, 0, 0, 0x50, 0xb9, 0xab, 0, 0, 0, 0xbb, 0x5b, 0, 0, 0, 0xba, 0, 0x2, 0, 0, 0xb8, 0x11, 0xa4, 0x1c, 0x10, 0xe8, 0xec, 0, 0, 0, 0xe8, 0x75, 0xd1, 0, 0, 0x50, 0xb8, 0x2e, 0x23, 0x1b, 0x10, 0x50, 0xb8, 0x2f, 0x23, 0x1b, 0x10, 0x50, 0xb8, 0x30, 0x23, 0x1b, 0x10, 0x50, 0xb8, 0x4e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xff, 0xff, 0xff, 0xff, 0x50, 0xb8, 0xde, 0x2, 0, 0, 0x50, 0xb9, 0xff, 0xff, 0xff, 0xff, 0xbb, 0x5c, 0, 0, 0, 0xba, 0x1, 0x2, 0, 0, 0xb8, 0x3c, 0xa4, 0x1c, 0x10, 0xe8, 0x88, 0, 0, 0, 0xbb, 0xf0, 0x74, 0x1b, 0x10, 0xba, 0x5, 0, 0, 0, 0xb8, 0x68, 0xa4, 0x1c, 0x10, 0xe8, 0x3a, 0xe5, 0, 0, 0x89, 0x45, 0xc4, 0x8b, 0x45, 0xc4, 0x89, 0x45, 0xf4, 0xc7, 0x5, 0x10, 0xd9, 0x1b, 0x10, 0xa, 0, 0, 0, 0xb9, 0xe5, 0x3a, 0x16, 0x10, 0xbb, 0, 0xb1, 0x1c, 0x10, 0xba, 0x3b, 0x23, 0x1b, 0x10, 0xb8, 0x4, 0xb1, 0x1c, 0x10, 0xe8, 0x1a, 0x3d, 0xfe, 0xff, 0x89, 0x45, 0xc8, 0x8b, 0x45, 0xc8, 0x89, 0x45, 0xf8, 0xc7, 0x5, 0x10, 0xd9, 0x1b, 0x10, 0xb, 0, 0, 0, 0xb9, 0xdd, 0x42, 0x16, 0x10, 0xbb, 0x1a, 0xb1, 0x1c, 0x10, 0xba, 0x46, 0x23, 0x1b, 0x10, 0xb8, 0x1c, 0xb1, 0x1c, 0x10, 0xe8, 0xee, 0x3c, 0xfe, 0xff, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x89, 0x45, 0xfc, 0xc7, 0x5, 0x10, 0xd9, 0x1b, 0x10, 0xc, 0, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10155440, 0x5)   pushd(0xb0);                          /* push dword 0xb0 */
    II(0x10155445, 0x5)   calld(sys_check_available_stack_size, 0x10908); /* call 0x10165d52 */
    II(0x1015544a, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1015544b, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1015544c, 0x1)   pushd(edx);                           /* push edx */
    II(0x1015544d, 0x1)   pushd(esi);                           /* push esi */
    II(0x1015544e, 0x1)   pushd(edi);                           /* push edi */
    II(0x1015544f, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10155450, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10155452, 0x6)   sub(esp, 0x60);                       /* sub esp, 0x60 */
    II(0x10155458, 0x5)   mov(eax, 0x101bd908);                 /* mov eax, 0x101bd908 */
    II(0x1015545d, 0x5)   calld(/* sys */ 0x1016611f, 0x10cbd); /* call 0x1016611f */
    II(0x10155462, 0x5)   mov(eax, 0x101c8178);                 /* mov eax, 0x101c8178 */
    II(0x10155467, 0x5)   calld(my_ctor_0x101b56fc, -0xcc7f0);  /* call 0x10088c7c */
    II(0x1015546c, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
//    II(0x1015546f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x10155472, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x10155475, 0xa)   mov(memd_a32(ds, 0x101bd910), 0x1);   /* mov dword [0x101bd910], 0x1 */
    II(0x1015547f, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x10155484, 0x5)   calld(my_ctor_0x101b56fc, -0xcc80d);  /* call 0x10088c7c */
    II(0x10155489, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
//    II(0x1015548c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x1015548f, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x10155492, 0xa)   mov(memd_a32(ds, 0x101bd910), 0x2);   /* mov dword [0x101bd910], 0x2 */
    II(0x1015549c, 0x5)   mov(eax, 0x101c8190);                 /* mov eax, 0x101c8190 */
    II(0x101554a1, 0x5)   calld(my_ctor_0x101b56fc, -0xcc82a);  /* call 0x10088c7c */
    II(0x101554a6, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
//    II(0x101554a9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x101554ac, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x101554af, 0xa)   mov(memd_a32(ds, 0x101bd910), 0x3);   /* mov dword [0x101bd910], 0x3 */
    II(0x101554b9, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x101554be, 0x5)   calld(my_ctor_0x101b56fc, -0xcc847);  /* call 0x10088c7c */
    II(0x101554c3, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
//    II(0x101554c6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x101554c9, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x101554cc, 0xa)   mov(memd_a32(ds, 0x101bd910), 0x4);   /* mov dword [0x101bd910], 0x4 */
    II(0x101554d6, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x101554db, 0x5)   calld(my_ctor_0x101b56fc, -0xcc864);  /* call 0x10088c7c */
    II(0x101554e0, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
//    II(0x101554e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x101554e6, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x101554e9, 0xa)   mov(memd_a32(ds, 0x101bd910), 0x5);   /* mov dword [0x101bd910], 0x5 */
    II(0x101554f3, 0x5)   mov(eax, 0x101c81b4);                 /* mov eax, 0x101c81b4 */
    II(0x101554f8, 0x5)   calld(my_ctor_0x101b56fc, -0xcc881);  /* call 0x10088c7c */
    II(0x101554fd, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
//    II(0x10155500, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x10155503, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10155506, 0xa)   mov(memd_a32(ds, 0x101bd910), 0x6);   /* mov dword [0x101bd910], 0x6 */
    II(0x10155510, 0x5)   mov(ebx, 0x101b7510);                 /* mov ebx, 0x101b7510 */
    II(0x10155515, 0x5)   mov(edx, 0x5d);                       /* mov edx, 0x5d */
    II(0x1015551a, 0x5)   mov(eax, 0x101c81c0);                 /* mov eax, 0x101c81c0 */
    II(0x1015551f, 0x5)   calld(sys_call_ctor_arr_v2, 0x10a4c); /* call 0x10165f70 */
    II(0x10155524, 0x5)   mov(eax, 0x101c9478);                 /* mov eax, 0x101c9478 */
    II(0x10155529, 0x5)   calld(my_ctor_0x101b38f8, -0xdee3e);  /* call 0x100766f0 */
    II(0x1015552e, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
//    II(0x10155531, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x10155534, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10155537, 0xa)   mov(memd_a32(ds, 0x101bd910), 0x7);   /* mov dword [0x101bd910], 0x7 */
    II(0x10155541, 0x5)   mov(ebx, 0x101b56fc);                 /* mov ebx, 0x101b56fc */
    II(0x10155546, 0x5)   mov(edx, 0x5);                        /* mov edx, 0x5 */
    II(0x1015554b, 0x5)   mov(eax, 0x101c9480);                 /* mov eax, 0x101c9480 */
    II(0x10155550, 0x5)   calld(sys_call_ctor_arr_v2, 0x10a1b); /* call 0x10165f70 */
    II(0x10155555, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
//    II(0x10155558, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x1015555b, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1015555e, 0xa)   mov(memd_a32(ds, 0x101bd910), 0x8);   /* mov dword [0x101bd910], 0x8 */
    II(0x10155568, 0x5)   mov(ebx, 0x101b38f8);                 /* mov ebx, 0x101b38f8 */
    II(0x1015556d, 0x5)   mov(edx, 0x5);                        /* mov edx, 0x5 */
    II(0x10155572, 0x5)   mov(eax, 0x101c94b4);                 /* mov eax, 0x101c94b4 */
    II(0x10155577, 0x5)   calld(sys_call_ctor_arr_v2, 0x109f4); /* call 0x10165f70 */
    II(0x1015557c, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
//    II(0x1015557f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x10155582, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10155585, 0xa)   mov(memd_a32(ds, 0x101bd910), 0x9);   /* mov dword [0x101bd910], 0x9 */
    II(0x1015558f, 0x5)   calld(0x10164b38, 0xf5a4);            /* call 0x10164b38 */
    II(0x10155594, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155595, 0x5)   mov(eax, 0x101adfa4);                 /* mov eax, 0x101adfa4 */ /* "Refinery for converting gold into credits.  Credits are required to purchase unit improvements.  To run, a gold refinery needs a source of power and a source of gold ore.  A mining station can produce gold ore if one of its four squares covers a square with underground gold." */
    II(0x1015559a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015559b, 0x5)   mov(eax, 0x101ae0b8);                 /* mov eax, 0x101ae0b8 */ /* "Gold Refineries" */
    II(0x101555a0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101555a1, 0x5)   mov(eax, 0x101ae0c8);                 /* mov eax, 0x101ae0c8 */ /* "Gold Refinery" */
    II(0x101555a6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101555a7, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x101555ac, 0x1)   pushd(eax);                           /* push eax */
    II(0x101555ad, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101555af, 0x1)   pushd(eax);                           /* push eax */
    II(0x101555b0, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101555b5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101555b6, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101555bb, 0x1)   pushd(eax);                           /* push eax */
    II(0x101555bc, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101555c1, 0x1)   pushd(eax);                           /* push eax */
    II(0x101555c2, 0x5)   mov(eax, 0x347);                      /* mov eax, 0x347 */
    II(0x101555c7, 0x1)   pushd(eax);                           /* push eax */
    II(0x101555c8, 0x5)   mov(eax, 0x6f3);                      /* mov eax, 0x6f3 */
    II(0x101555cd, 0x1)   pushd(eax);                           /* push eax */
    II(0x101555ce, 0x5)   mov(eax, 0x469);                      /* mov eax, 0x469 */
    II(0x101555d3, 0x1)   pushd(eax);                           /* push eax */
    II(0x101555d4, 0x5)   mov(eax, 0x2df);                      /* mov eax, 0x2df */
    II(0x101555d9, 0x1)   pushd(eax);                           /* push eax */
    II(0x101555da, 0x5)   mov(ecx, 0x5e);                       /* mov ecx, 0x5e */
    II(0x101555df, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101555e1, 0x5)   mov(edx, 0x1604210);                  /* mov edx, 0x1604210 */
    II(0x101555e6, 0x5)   mov(eax, 0x101c94c8);                 /* mov eax, 0x101c94c8 */
    II(0x101555eb, 0x5)   calld(0x10157aaa, 0x24ba);            /* call 0x10157aaa */
    II(0x101555f0, 0x5)   calld(0x10164b38, 0xf543);            /* call 0x10164b38 */
    II(0x101555f5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101555f6, 0x5)   mov(eax, 0x101ae0d6);                 /* mov eax, 0x101ae0d6 */ /* "A power station consumes six fuel each turn, and provides enough power for six factories or mining stations.\n" */
    II(0x101555fb, 0x1)   pushd(eax);                           /* push eax */
    II(0x101555fc, 0x5)   mov(eax, 0x101ae144);                 /* mov eax, 0x101ae144 */ /* "Power Stations" */
    II(0x10155601, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155602, 0x5)   mov(eax, 0x101ae153);                 /* mov eax, 0x101ae153 */ /* "Power Station" */
    II(0x10155607, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155608, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x1015560d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015560e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10155610, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155611, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10155616, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155617, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015561c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015561d, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155622, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155623, 0x5)   mov(eax, 0x348);                      /* mov eax, 0x348 */
    II(0x10155628, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155629, 0x5)   mov(eax, 0x6f4);                      /* mov eax, 0x6f4 */
    II(0x1015562e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015562f, 0x5)   mov(eax, 0x46a);                      /* mov eax, 0x46a */
    II(0x10155634, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155635, 0x5)   mov(eax, 0x2df);                      /* mov eax, 0x2df */
    II(0x1015563a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015563b, 0x5)   mov(ecx, 0x5f);                       /* mov ecx, 0x5f */
    II(0x10155640, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x10155645, 0x5)   mov(edx, 0x1604210);                  /* mov edx, 0x1604210 */
    II(0x1015564a, 0x5)   mov(eax, 0x101c94f3);                 /* mov eax, 0x101c94f3 */
    II(0x1015564f, 0x5)   calld(0x10157aaa, 0x2456);            /* call 0x10157aaa */
    II(0x10155654, 0x5)   mov(eax, 0x101ae161);                 /* mov eax, 0x101ae161 */ /* "A power generator consumes two fuel each turn, and provides enough power for one mining station or factory.  The power generator must be connected to the fuel source (usually a mining station) and the building that needs the power." */
    II(0x10155659, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015565a, 0x5)   mov(eax, 0x101ae249);                 /* mov eax, 0x101ae249 */ /* "A power generator consumes two fuel each turn, and provides enough power for one mining station or factory.  The power generator must be connected to the fuel source (usually a mining station) and the building that needs the power." */
    II(0x1015565f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155660, 0x5)   mov(eax, 0x101ae331);                 /* mov eax, 0x101ae331 */ /* "Power Generators" */
    II(0x10155665, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155666, 0x5)   mov(eax, 0x101ae342);                 /* mov eax, 0x101ae342 */ /* "Power Generator" */
    II(0x1015566b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015566c, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10155671, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155672, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10155674, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155675, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1015567a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015567b, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155680, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155681, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155686, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155687, 0x5)   mov(eax, 0x349);                      /* mov eax, 0x349 */
    II(0x1015568c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015568d, 0x5)   mov(eax, 0x6f5);                      /* mov eax, 0x6f5 */
    II(0x10155692, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155693, 0x5)   mov(eax, 0x474);                      /* mov eax, 0x474 */
    II(0x10155698, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155699, 0x5)   mov(eax, 0x2e0);                      /* mov eax, 0x2e0 */
    II(0x1015569e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015569f, 0x5)   mov(ecx, 0x60);                       /* mov ecx, 0x60 */
    II(0x101556a4, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x101556a9, 0x5)   mov(edx, 0x1e04200);                  /* mov edx, 0x1e04200 */
    II(0x101556ae, 0x5)   mov(eax, 0x101c951e);                 /* mov eax, 0x101c951e */
    II(0x101556b3, 0x5)   calld(0x10157aaa, 0x23f2);            /* call 0x10157aaa */
    II(0x101556b8, 0x5)   calld(0x10164b38, 0xf47b);            /* call 0x10164b38 */
    II(0x101556bd, 0x1)   pushd(eax);                           /* push eax */
    II(0x101556be, 0x5)   mov(eax, 0x101ae352);                 /* mov eax, 0x101ae352 */ /* "A barracks holds infiltrators and infantry units.  Inside the barracks is a machine shop for repairing and improving powered suits, and for manufacturing ammunition.  The barracks needs raw materials to repair, upgrade, or resupply, so it should be connected to a storage unit or a mining station." */
    II(0x101556c3, 0x1)   pushd(eax);                           /* push eax */
    II(0x101556c4, 0x5)   mov(eax, 0x101ae47c);                 /* mov eax, 0x101ae47c */ /* "Barracks" */
    II(0x101556c9, 0x1)   pushd(eax);                           /* push eax */
    II(0x101556ca, 0x5)   mov(eax, 0x101ae485);                 /* mov eax, 0x101ae485 */ /* "Barracks" */
    II(0x101556cf, 0x1)   pushd(eax);                           /* push eax */
    II(0x101556d0, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x101556d5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101556d6, 0x5)   mov(eax, 0x4);                        /* mov eax, 0x4 */
    II(0x101556db, 0x1)   pushd(eax);                           /* push eax */
    II(0x101556dc, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101556e1, 0x1)   pushd(eax);                           /* push eax */
    II(0x101556e2, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101556e7, 0x1)   pushd(eax);                           /* push eax */
    II(0x101556e8, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101556ed, 0x1)   pushd(eax);                           /* push eax */
    II(0x101556ee, 0x5)   mov(eax, 0x34a);                      /* mov eax, 0x34a */
    II(0x101556f3, 0x1)   pushd(eax);                           /* push eax */
    II(0x101556f4, 0x5)   mov(eax, 0x6f6);                      /* mov eax, 0x6f6 */
    II(0x101556f9, 0x1)   pushd(eax);                           /* push eax */
    II(0x101556fa, 0x5)   mov(eax, 0x46b);                      /* mov eax, 0x46b */
    II(0x101556ff, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155700, 0x5)   mov(eax, 0x2df);                      /* mov eax, 0x2df */
    II(0x10155705, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155706, 0x5)   mov(ecx, 0x61);                       /* mov ecx, 0x61 */
    II(0x1015570b, 0x5)   mov(ebx, 0x3);                        /* mov ebx, 0x3 */
    II(0x10155710, 0x5)   mov(edx, 0x1404210);                  /* mov edx, 0x1404210 */
    II(0x10155715, 0x5)   mov(eax, 0x101c9549);                 /* mov eax, 0x101c9549 */
    II(0x1015571a, 0x5)   calld(0x10157aaa, 0x238b);            /* call 0x10157aaa */
    II(0x1015571f, 0x5)   calld(0x10164b38, 0xf414);            /* call 0x10164b38 */
    II(0x10155724, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155725, 0x5)   mov(eax, 0x101ae48e);                 /* mov eax, 0x101ae48e */ /* "Specialized mining station for extracting magnetic monopoles." */
    II(0x1015572a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015572b, 0x5)   mov(eax, 0x101ae4cc);                 /* mov eax, 0x101ae4cc */ /* "Monopole Mines" */
    II(0x10155730, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155731, 0x5)   mov(eax, 0x101ae4db);                 /* mov eax, 0x101ae4db */ /* "Monopole Mine" */
    II(0x10155736, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155737, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x1015573c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015573d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015573f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155740, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10155745, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155746, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015574b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015574c, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155751, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155752, 0x5)   mov(eax, 0x34b);                      /* mov eax, 0x34b */
    II(0x10155757, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155758, 0x5)   mov(eax, 0x6f7);                      /* mov eax, 0x6f7 */
    II(0x1015575d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015575e, 0x5)   mov(eax, 0x46c);                      /* mov eax, 0x46c */
    II(0x10155763, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155764, 0x5)   mov(eax, 0x2df);                      /* mov eax, 0x2df */
    II(0x10155769, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015576a, 0x5)   mov(ecx, 0x62);                       /* mov ecx, 0x62 */
    II(0x1015576f, 0x5)   mov(ebx, 0x4);                        /* mov ebx, 0x4 */
    II(0x10155774, 0x5)   mov(edx, 0x1000210);                  /* mov edx, 0x1000210 */
    II(0x10155779, 0x5)   mov(eax, 0x101c9574);                 /* mov eax, 0x101c9574 */
    II(0x1015577e, 0x5)   calld(0x10157aaa, 0x2327);            /* call 0x10157aaa */
    II(0x10155783, 0x5)   calld(0x10164b38, 0xf3b0);            /* call 0x10164b38 */
    II(0x10155788, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155789, 0x5)   mov(eax, 0x101ae4e9);                 /* mov eax, 0x101ae4e9 */ /* "Stationary, long-range radar.  Longer-range units like missile launchers and artillery cannot fire on what they cannot see, so it's important to have a scanner or radar nearby." */
    II(0x1015578e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015578f, 0x5)   mov(eax, 0x101ae59a);                 /* mov eax, 0x101ae59a */ /* "Radars" */
    II(0x10155794, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155795, 0x5)   mov(eax, 0x101ae5a1);                 /* mov eax, 0x101ae5a1 */ /* "Radar" */
    II(0x1015579a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015579b, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x101557a0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101557a1, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101557a3, 0x1)   pushd(eax);                           /* push eax */
    II(0x101557a4, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101557a9, 0x1)   pushd(eax);                           /* push eax */
    II(0x101557aa, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101557af, 0x1)   pushd(eax);                           /* push eax */
    II(0x101557b0, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101557b5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101557b6, 0x5)   mov(eax, 0x34c);                      /* mov eax, 0x34c */
    II(0x101557bb, 0x1)   pushd(eax);                           /* push eax */
    II(0x101557bc, 0x5)   mov(eax, 0x6f8);                      /* mov eax, 0x6f8 */
    II(0x101557c1, 0x1)   pushd(eax);                           /* push eax */
    II(0x101557c2, 0x5)   mov(eax, 0x46d);                      /* mov eax, 0x46d */
    II(0x101557c7, 0x1)   pushd(eax);                           /* push eax */
    II(0x101557c8, 0x5)   mov(eax, 0x2e3);                      /* mov eax, 0x2e3 */
    II(0x101557cd, 0x1)   pushd(eax);                           /* push eax */
    II(0x101557ce, 0x5)   mov(ecx, 0x63);                       /* mov ecx, 0x63 */
    II(0x101557d3, 0x5)   mov(ebx, 0x5);                        /* mov ebx, 0x5 */
    II(0x101557d8, 0x5)   mov(edx, 0x1e04204);                  /* mov edx, 0x1e04204 */
    II(0x101557dd, 0x5)   mov(eax, 0x101c959f);                 /* mov eax, 0x101c959f */
    II(0x101557e2, 0x5)   calld(0x10157aaa, 0x22c3);            /* call 0x10157aaa */
    II(0x101557e7, 0x5)   mov(eax, 0x101ae5a7);                 /* mov eax, 0x101ae5a7 */ /* "Storage Units hold raw materials produced by any mining stations that are connected to them.  To fill an adjacent Engineer or Constructor, click the Xfer button and then click on the Engineer or Constructor." */
    II(0x101557ec, 0x1)   pushd(eax);                           /* push eax */
    II(0x101557ed, 0x5)   mov(eax, 0x101ae677);                 /* mov eax, 0x101ae677 */ /* "Holds raw materials.  Mining stations produce raw materials every turn.  To save extra raw materials, a mining station must be connected to a storage unit." */
    II(0x101557f2, 0x1)   pushd(eax);                           /* push eax */
    II(0x101557f3, 0x5)   mov(eax, 0x101ae713);                 /* mov eax, 0x101ae713 */ /* "Storage Units" */
    II(0x101557f8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101557f9, 0x5)   mov(eax, 0x101ae721);                 /* mov eax, 0x101ae721 */ /* "Storage Unit" */
    II(0x101557fe, 0x1)   pushd(eax);                           /* push eax */
    II(0x101557ff, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10155804, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155805, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1015580a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015580b, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10155810, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155811, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155816, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155817, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015581c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015581d, 0x5)   mov(eax, 0x34d);                      /* mov eax, 0x34d */
    II(0x10155822, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155823, 0x5)   mov(eax, 0x6f9);                      /* mov eax, 0x6f9 */
    II(0x10155828, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155829, 0x5)   mov(eax, 0x471);                      /* mov eax, 0x471 */
    II(0x1015582e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015582f, 0x5)   mov(eax, 0x2e0);                      /* mov eax, 0x2e0 */
    II(0x10155834, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155835, 0x5)   mov(ecx, 0x64);                       /* mov ecx, 0x64 */
    II(0x1015583a, 0x5)   mov(ebx, 0x6);                        /* mov ebx, 0x6 */
    II(0x1015583f, 0x5)   mov(edx, 0x1c04200);                  /* mov edx, 0x1c04200 */
    II(0x10155844, 0x5)   mov(eax, 0x101c95ca);                 /* mov eax, 0x101c95ca */
    II(0x10155849, 0x5)   calld(0x10157aaa, 0x225c);            /* call 0x10157aaa */
    II(0x1015584e, 0x5)   mov(eax, 0x101ae72e);                 /* mov eax, 0x101ae72e */ /* "Holds fuel reserves.  Mining stations produce fuel every turn.  To save extra fuel, a mining station must be connected to a fuel tank." */
    II(0x10155853, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155854, 0x5)   mov(eax, 0x101ae7b5);                 /* mov eax, 0x101ae7b5 */ /* "Holds fuel reserves.  Mining stations produce fuel every turn.  To save extra fuel, a mining station must be connected to a fuel tank." */
    II(0x10155859, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015585a, 0x5)   mov(eax, 0x101ae83c);                 /* mov eax, 0x101ae83c */ /* "Fuel Tanks" */
    II(0x1015585f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155860, 0x5)   mov(eax, 0x101ae847);                 /* mov eax, 0x101ae847 */ /* "Fuel Tank" */
    II(0x10155865, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155866, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x1015586b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015586c, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x10155871, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155872, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10155877, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155878, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015587d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015587e, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155883, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155884, 0x5)   mov(eax, 0x34e);                      /* mov eax, 0x34e */
    II(0x10155889, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015588a, 0x5)   mov(eax, 0x6fa);                      /* mov eax, 0x6fa */
    II(0x1015588f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155890, 0x5)   mov(eax, 0x472);                      /* mov eax, 0x472 */
    II(0x10155895, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155896, 0x5)   mov(eax, 0x2e0);                      /* mov eax, 0x2e0 */
    II(0x1015589b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015589c, 0x5)   mov(ecx, 0x65);                       /* mov ecx, 0x65 */
    II(0x101558a1, 0x5)   mov(ebx, 0x7);                        /* mov ebx, 0x7 */
    II(0x101558a6, 0x5)   mov(edx, 0x1c04200);                  /* mov edx, 0x1c04200 */
    II(0x101558ab, 0x5)   mov(eax, 0x101c95f5);                 /* mov eax, 0x101c95f5 */
    II(0x101558b0, 0x5)   calld(0x10157aaa, 0x21f5);            /* call 0x10157aaa */
    II(0x101558b5, 0x5)   mov(eax, 0x101ae851);                 /* mov eax, 0x101ae851 */ /* "Holds unrefined gold ore.  Mining stations produce gold every turn, if they have gold ore underneath them.  To store the ore, a mining station must be connected to a gold vault." */
    II(0x101558ba, 0x1)   pushd(eax);                           /* push eax */
    II(0x101558bb, 0x5)   mov(eax, 0x101ae903);                 /* mov eax, 0x101ae903 */ /* "Holds unrefined gold ore.  Mining stations produce gold every turn, if they have gold ore underneath them.  To store the ore, a mining station must be connected to a gold vault." */
    II(0x101558c0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101558c1, 0x5)   mov(eax, 0x101ae9b5);                 /* mov eax, 0x101ae9b5 */ /* "Gold Vaults" */
    II(0x101558c6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101558c7, 0x5)   mov(eax, 0x101ae9c1);                 /* mov eax, 0x101ae9c1 */ /* "Gold Vault" */
    II(0x101558cc, 0x1)   pushd(eax);                           /* push eax */
    II(0x101558cd, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x101558d2, 0x1)   pushd(eax);                           /* push eax */
    II(0x101558d3, 0x5)   mov(eax, 0x3);                        /* mov eax, 0x3 */
    II(0x101558d8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101558d9, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101558de, 0x1)   pushd(eax);                           /* push eax */
    II(0x101558df, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101558e4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101558e5, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101558ea, 0x1)   pushd(eax);                           /* push eax */
    II(0x101558eb, 0x5)   mov(eax, 0x34f);                      /* mov eax, 0x34f */
    II(0x101558f0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101558f1, 0x5)   mov(eax, 0x6fb);                      /* mov eax, 0x6fb */
    II(0x101558f6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101558f7, 0x5)   mov(eax, 0x473);                      /* mov eax, 0x473 */
    II(0x101558fc, 0x1)   pushd(eax);                           /* push eax */
    II(0x101558fd, 0x5)   mov(eax, 0x2e0);                      /* mov eax, 0x2e0 */
    II(0x10155902, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155903, 0x5)   mov(ecx, 0x66);                       /* mov ecx, 0x66 */
    II(0x10155908, 0x5)   mov(ebx, 0x8);                        /* mov ebx, 0x8 */
    II(0x1015590d, 0x5)   mov(edx, 0x1c04200);                  /* mov edx, 0x1c04200 */
    II(0x10155912, 0x5)   mov(eax, 0x101c9620);                 /* mov eax, 0x101c9620 */
    II(0x10155917, 0x5)   calld(0x10157aaa, 0x218e);            /* call 0x10157aaa */
    II(0x1015591c, 0x5)   mov(eax, 0x101ae9cc);                 /* mov eax, 0x101ae9cc */ /* "Depots perform repairs and supply ammunition. To drive a unit into the depot, click 'Load' and then click on the unit.  To look inside the depot, click 'Activate'." */
    II(0x10155921, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155922, 0x5)   mov(eax, 0x101aea70);                 /* mov eax, 0x101aea70 */ /* "A depot can repair damage, manufacture ammunition, and refit ground units with the newest technology.  All of these operations require raw materials, so depots should be connected to stored materials." */
    II(0x10155927, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155928, 0x5)   mov(eax, 0x101aeb39);                 /* mov eax, 0x101aeb39 */ /* "Depots" */
    II(0x1015592d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015592e, 0x5)   mov(eax, 0x101aeb40);                 /* mov eax, 0x101aeb40 */ /* "Depot" */
    II(0x10155933, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155934, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10155939, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015593a, 0x5)   mov(eax, 0x4);                        /* mov eax, 0x4 */
    II(0x1015593f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155940, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10155945, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155946, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015594b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015594c, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155951, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155952, 0x5)   mov(eax, 0x350);                      /* mov eax, 0x350 */
    II(0x10155957, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155958, 0x5)   mov(eax, 0x6fc);                      /* mov eax, 0x6fc */
    II(0x1015595d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015595e, 0x5)   mov(eax, 0x46e);                      /* mov eax, 0x46e */
    II(0x10155963, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155964, 0x5)   mov(eax, 0x2df);                      /* mov eax, 0x2df */
    II(0x10155969, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015596a, 0x5)   mov(ecx, 0x67);                       /* mov ecx, 0x67 */
    II(0x1015596f, 0x5)   mov(ebx, 0x9);                        /* mov ebx, 0x9 */
    II(0x10155974, 0x5)   mov(edx, 0x1404210);                  /* mov edx, 0x1404210 */
    II(0x10155979, 0x5)   mov(eax, 0x101c964b);                 /* mov eax, 0x101c964b */
    II(0x1015597e, 0x5)   calld(0x10157aaa, 0x2127);            /* call 0x10157aaa */
    II(0x10155983, 0x5)   calld(0x10164b38, 0xf1b0);            /* call 0x10164b38 */
    II(0x10155988, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155989, 0x5)   mov(eax, 0x101aeb46);                 /* mov eax, 0x101aeb46 */ /* "A hangar can repair damage, manufacture ammunition, and refit planes with the newest technology.  All of these operations require raw materials, so hangars should be connected to stored materials." */
    II(0x1015598e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015598f, 0x5)   mov(eax, 0x101aec0b);                 /* mov eax, 0x101aec0b */ /* "Hangars" */
    II(0x10155994, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155995, 0x5)   mov(eax, 0x101aec13);                 /* mov eax, 0x101aec13 */ /* "Hangar" */
    II(0x1015599a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015599b, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x101559a0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101559a1, 0x5)   mov(eax, 0x6);                        /* mov eax, 0x6 */
    II(0x101559a6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101559a7, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101559ac, 0x1)   pushd(eax);                           /* push eax */
    II(0x101559ad, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101559b2, 0x1)   pushd(eax);                           /* push eax */
    II(0x101559b3, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101559b8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101559b9, 0x5)   mov(eax, 0x351);                      /* mov eax, 0x351 */
    II(0x101559be, 0x1)   pushd(eax);                           /* push eax */
    II(0x101559bf, 0x5)   mov(eax, 0x6fd);                      /* mov eax, 0x6fd */
    II(0x101559c4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101559c5, 0x5)   mov(eax, 0x46f);                      /* mov eax, 0x46f */
    II(0x101559ca, 0x1)   pushd(eax);                           /* push eax */
    II(0x101559cb, 0x5)   mov(eax, 0x2df);                      /* mov eax, 0x2df */
    II(0x101559d0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101559d1, 0x5)   mov(ecx, 0x68);                       /* mov ecx, 0x68 */
    II(0x101559d6, 0x5)   mov(ebx, 0xa);                        /* mov ebx, 0xa */
    II(0x101559db, 0x5)   mov(edx, 0x1404210);                  /* mov edx, 0x1404210 */
    II(0x101559e0, 0x5)   mov(eax, 0x101c9676);                 /* mov eax, 0x101c9676 */
    II(0x101559e5, 0x5)   calld(0x10157aaa, 0x20c0);            /* call 0x10157aaa */
    II(0x101559ea, 0x5)   calld(0x10164b38, 0xf149);            /* call 0x10164b38 */
    II(0x101559ef, 0x1)   pushd(eax);                           /* push eax */
    II(0x101559f0, 0x5)   mov(eax, 0x101aec1a);                 /* mov eax, 0x101aec1a */ /* "A dock can repair damage, manufacture ammunition, and refit ships with the newest technology.  All of these operations require raw materials, so docks should be connected to stored materials." */
    II(0x101559f5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101559f6, 0x5)   mov(eax, 0x101aecda);                 /* mov eax, 0x101aecda */ /* "Docks" */
    II(0x101559fb, 0x1)   pushd(eax);                           /* push eax */
    II(0x101559fc, 0x5)   mov(eax, 0x101aece0);                 /* mov eax, 0x101aece0 */ /* "Dock" */
    II(0x10155a01, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155a02, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10155a07, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155a08, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x10155a0d, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155a0e, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x10155a13, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155a14, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155a19, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155a1a, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155a1f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155a20, 0x5)   mov(eax, 0x352);                      /* mov eax, 0x352 */
    II(0x10155a25, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155a26, 0x5)   mov(eax, 0x6fe);                      /* mov eax, 0x6fe */
    II(0x10155a2b, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155a2c, 0x5)   mov(eax, 0x470);                      /* mov eax, 0x470 */
    II(0x10155a31, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155a32, 0x5)   mov(eax, 0x2df);                      /* mov eax, 0x2df */
    II(0x10155a37, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155a38, 0x5)   mov(ecx, 0x69);                       /* mov ecx, 0x69 */
    II(0x10155a3d, 0x5)   mov(ebx, 0xb);                        /* mov ebx, 0xb */
    II(0x10155a42, 0x5)   mov(edx, 0x404210);                   /* mov edx, 0x404210 */
    II(0x10155a47, 0x5)   mov(eax, 0x101c96a1);                 /* mov eax, 0x101c96a1 */
    II(0x10155a4c, 0x5)   calld(0x10157aaa, 0x2059);            /* call 0x10157aaa */
    II(0x10155a51, 0x5)   mov(eax, 0x101aece5);                 /* mov eax, 0x101aece5 */ /* "Buildings must be connected to share power, fuel, raw materials, and gold.  You can connect buildings by placing them next to each other, or by building connectors from one building to the other." */
    II(0x10155a56, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155a57, 0x5)   mov(eax, 0x101aeda9);                 /* mov eax, 0x101aeda9 */ /* "Buildings must be connected to share power, fuel, raw materials, and gold.  You can connect buildings by placing them next to each other, or by building connectors from one building to the other." */
    II(0x10155a5c, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155a5d, 0x5)   mov(eax, 0x101aee6d);                 /* mov eax, 0x101aee6d */ /* "Connectors" */
    II(0x10155a62, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155a63, 0x5)   mov(eax, 0x101aee78);                 /* mov eax, 0x101aee78 */ /* "Connector" */
    II(0x10155a68, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155a69, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10155a6e, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155a6f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10155a71, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155a72, 0x5)   mov(eax, 0x7);                        /* mov eax, 0x7 */
    II(0x10155a77, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155a78, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155a7d, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155a7e, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155a83, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155a84, 0x5)   mov(eax, 0x353);                      /* mov eax, 0x353 */
    II(0x10155a89, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155a8a, 0x5)   mov(eax, 0x6ff);                      /* mov eax, 0x6ff */
    II(0x10155a8f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155a90, 0x5)   mov(eax, 0x475);                      /* mov eax, 0x475 */
    II(0x10155a95, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155a96, 0x5)   mov(eax, 0x2e0);                      /* mov eax, 0x2e0 */
    II(0x10155a9b, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155a9c, 0x5)   mov(ecx, 0x6a);                       /* mov ecx, 0x6a */
    II(0x10155aa1, 0x5)   mov(ebx, 0xc);                        /* mov ebx, 0xc */
    II(0x10155aa6, 0x5)   mov(edx, 0x404208);                   /* mov edx, 0x404208 */
    II(0x10155aab, 0x5)   mov(eax, 0x101c96cc);                 /* mov eax, 0x101c96cc */
    II(0x10155ab0, 0x5)   calld(0x10157aaa, 0x1ff5);            /* call 0x10157aaa */
    II(0x10155ab5, 0x5)   calld(0x10164b38, 0xf07e);            /* call 0x10164b38 */
    II(0x10155aba, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155abb, 0x5)   mov(eax, 0x101aee82);                 /* mov eax, 0x101aee82 */ /* "" */
    II(0x10155ac0, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155ac1, 0x5)   mov(eax, 0x101aee83);                 /* mov eax, 0x101aee83 */ /* "" */
    II(0x10155ac6, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155ac7, 0x5)   mov(eax, 0x101aee84);                 /* mov eax, 0x101aee84 */ /* "Large Rubble 1" */
    II(0x10155acc, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155acd, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10155ad2, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155ad3, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10155ad5, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155ad6, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10155adb, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155adc, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155ae1, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155ae2, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155ae7, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155ae8, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155aed, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155aee, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155af3, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155af4, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155af9, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155afa, 0x5)   mov(eax, 0x2ee);                      /* mov eax, 0x2ee */
    II(0x10155aff, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155b00, 0x5)   mov(ecx, 0x6b);                       /* mov ecx, 0x6b */
    II(0x10155b05, 0x5)   mov(ebx, 0xd);                        /* mov ebx, 0xd */
    II(0x10155b0a, 0x5)   mov(edx, 0x211);                      /* mov edx, 0x211 */
    II(0x10155b0f, 0x5)   mov(eax, 0x101c96f7);                 /* mov eax, 0x101c96f7 */
    II(0x10155b14, 0x5)   calld(0x10157aaa, 0x1f91);            /* call 0x10157aaa */
    II(0x10155b19, 0x5)   calld(0x10164b38, 0xf01a);            /* call 0x10164b38 */
    II(0x10155b1e, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155b1f, 0x5)   mov(eax, 0x101aee93);                 /* mov eax, 0x101aee93 */ /* "" */
    II(0x10155b24, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155b25, 0x5)   mov(eax, 0x101aee94);                 /* mov eax, 0x101aee94 */ /* "" */
    II(0x10155b2a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155b2b, 0x5)   mov(eax, 0x101aee95);                 /* mov eax, 0x101aee95 */ /* "Small Rubble1" */
    II(0x10155b30, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155b31, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10155b36, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155b37, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10155b39, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155b3a, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10155b3f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155b40, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155b45, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155b46, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155b4b, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155b4c, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155b51, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155b52, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155b57, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155b58, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155b5d, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155b5e, 0x5)   mov(eax, 0x2ef);                      /* mov eax, 0x2ef */
    II(0x10155b63, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155b64, 0x5)   mov(ecx, 0x6c);                       /* mov ecx, 0x6c */
    II(0x10155b69, 0x5)   mov(ebx, 0xe);                        /* mov ebx, 0xe */
    II(0x10155b6e, 0x5)   mov(edx, 0x201);                      /* mov edx, 0x201 */
    II(0x10155b73, 0x5)   mov(eax, 0x101c9722);                 /* mov eax, 0x101c9722 */
    II(0x10155b78, 0x5)   calld(0x10157aaa, 0x1f2d);            /* call 0x10157aaa */
    II(0x10155b7d, 0x5)   calld(0x10164b38, 0xefb6);            /* call 0x10164b38 */
    II(0x10155b82, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155b83, 0x5)   mov(eax, 0x101aeea3);                 /* mov eax, 0x101aeea3 */ /* "" */
    II(0x10155b88, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155b89, 0x5)   mov(eax, 0x101aeea4);                 /* mov eax, 0x101aeea4 */ /* "" */
    II(0x10155b8e, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155b8f, 0x5)   mov(eax, 0x101aeea5);                 /* mov eax, 0x101aeea5 */ /* "Large tape" */
    II(0x10155b94, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155b95, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10155b9a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155b9b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10155b9d, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155b9e, 0x5)   mov(eax, 0x7);                        /* mov eax, 0x7 */
    II(0x10155ba3, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155ba4, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155ba9, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155baa, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155baf, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155bb0, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155bb5, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155bb6, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155bbb, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155bbc, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155bc1, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155bc2, 0x5)   mov(eax, 0x2ee);                      /* mov eax, 0x2ee */
    II(0x10155bc7, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155bc8, 0x5)   mov(ecx, 0xffffffff);                 /* mov ecx, 0xffffffff */
    II(0x10155bcd, 0x5)   mov(ebx, 0xf);                        /* mov ebx, 0xf */
    II(0x10155bd2, 0x5)   mov(edx, 0x400211);                   /* mov edx, 0x400211 */
    II(0x10155bd7, 0x5)   mov(eax, 0x101c974d);                 /* mov eax, 0x101c974d */
    II(0x10155bdc, 0x5)   calld(0x10157aaa, 0x1ec9);            /* call 0x10157aaa */
    II(0x10155be1, 0x5)   calld(0x10164b38, 0xef52);            /* call 0x10164b38 */
    II(0x10155be6, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155be7, 0x5)   mov(eax, 0x101aeeb0);                 /* mov eax, 0x101aeeb0 */ /* "" */
    II(0x10155bec, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155bed, 0x5)   mov(eax, 0x101aeeb1);                 /* mov eax, 0x101aeeb1 */ /* "" */
    II(0x10155bf2, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155bf3, 0x5)   mov(eax, 0x101aeeb2);                 /* mov eax, 0x101aeeb2 */ /* "Small tape" */
    II(0x10155bf8, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155bf9, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10155bfe, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155bff, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10155c01, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155c02, 0x5)   mov(eax, 0x7);                        /* mov eax, 0x7 */
    II(0x10155c07, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155c08, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155c0d, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155c0e, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155c13, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155c14, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155c19, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155c1a, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155c1f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155c20, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155c25, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155c26, 0x5)   mov(eax, 0x2ee);                      /* mov eax, 0x2ee */
    II(0x10155c2b, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155c2c, 0x5)   mov(ecx, 0xffffffff);                 /* mov ecx, 0xffffffff */
    II(0x10155c31, 0x5)   mov(ebx, 0x10);                       /* mov ebx, 0x10 */
    II(0x10155c36, 0x5)   mov(edx, 0x400201);                   /* mov edx, 0x400201 */
    II(0x10155c3b, 0x5)   mov(eax, 0x101c9778);                 /* mov eax, 0x101c9778 */
    II(0x10155c40, 0x5)   calld(0x10157aaa, 0x1e65);            /* call 0x10157aaa */
    II(0x10155c45, 0x5)   calld(0x10164b38, 0xeeee);            /* call 0x10164b38 */
    II(0x10155c4a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155c4b, 0x5)   mov(eax, 0x101aeebd);                 /* mov eax, 0x101aeebd */ /* "" */
    II(0x10155c50, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155c51, 0x5)   mov(eax, 0x101aeebe);                 /* mov eax, 0x101aeebe */ /* "" */
    II(0x10155c56, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155c57, 0x5)   mov(eax, 0x101aeebf);                 /* mov eax, 0x101aeebf */ /* "Large Slab" */
    II(0x10155c5c, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155c5d, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10155c62, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155c63, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10155c65, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155c66, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10155c6b, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155c6c, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155c71, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155c72, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155c77, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155c78, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155c7d, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155c7e, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155c83, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155c84, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155c89, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155c8a, 0x5)   mov(eax, 0x2f0);                      /* mov eax, 0x2f0 */
    II(0x10155c8f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155c90, 0x5)   mov(ecx, 0x6d);                       /* mov ecx, 0x6d */
    II(0x10155c95, 0x5)   mov(ebx, 0x11);                       /* mov ebx, 0x11 */
    II(0x10155c9a, 0x5)   mov(edx, 0x211);                      /* mov edx, 0x211 */
    II(0x10155c9f, 0x5)   mov(eax, 0x101c97a3);                 /* mov eax, 0x101c97a3 */
    II(0x10155ca4, 0x5)   calld(0x10157aaa, 0x1e01);            /* call 0x10157aaa */
    II(0x10155ca9, 0x5)   calld(0x10164b38, 0xee8a);            /* call 0x10164b38 */
    II(0x10155cae, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155caf, 0x5)   mov(eax, 0x101aeeca);                 /* mov eax, 0x101aeeca */ /* "" */
    II(0x10155cb4, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155cb5, 0x5)   mov(eax, 0x101aeecb);                 /* mov eax, 0x101aeecb */ /* "" */
    II(0x10155cba, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155cbb, 0x5)   mov(eax, 0x101aeecc);                 /* mov eax, 0x101aeecc */ /* "Small Slab" */
    II(0x10155cc0, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155cc1, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10155cc6, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155cc7, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10155cc9, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155cca, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10155ccf, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155cd0, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155cd5, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155cd6, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155cdb, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155cdc, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155ce1, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155ce2, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155ce7, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155ce8, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155ced, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155cee, 0x5)   mov(eax, 0x2de);                      /* mov eax, 0x2de */
    II(0x10155cf3, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155cf4, 0x5)   mov(ecx, 0x6f);                       /* mov ecx, 0x6f */
    II(0x10155cf9, 0x5)   mov(ebx, 0x12);                       /* mov ebx, 0x12 */
    II(0x10155cfe, 0x5)   mov(edx, 0x201);                      /* mov edx, 0x201 */
    II(0x10155d03, 0x5)   mov(eax, 0x101c97ce);                 /* mov eax, 0x101c97ce */
    II(0x10155d08, 0x5)   calld(0x10157aaa, 0x1d9d);            /* call 0x10157aaa */
    II(0x10155d0d, 0x5)   calld(0x10164b38, 0xee26);            /* call 0x10164b38 */
    II(0x10155d12, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155d13, 0x5)   mov(eax, 0x101aeed7);                 /* mov eax, 0x101aeed7 */ /* "" */
    II(0x10155d18, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155d19, 0x5)   mov(eax, 0x101aeed8);                 /* mov eax, 0x101aeed8 */ /* "" */
    II(0x10155d1e, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155d1f, 0x5)   mov(eax, 0x101aeed9);                 /* mov eax, 0x101aeed9 */ /* "Large cones" */
    II(0x10155d24, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155d25, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10155d2a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155d2b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10155d2d, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155d2e, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10155d33, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155d34, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155d39, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155d3a, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155d3f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155d40, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155d45, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155d46, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155d4b, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155d4c, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155d51, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155d52, 0x5)   mov(eax, 0x2de);                      /* mov eax, 0x2de */
    II(0x10155d57, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155d58, 0x5)   mov(ecx, 0x6e);                       /* mov ecx, 0x6e */
    II(0x10155d5d, 0x5)   mov(ebx, 0x13);                       /* mov ebx, 0x13 */
    II(0x10155d62, 0x5)   mov(edx, 0x211);                      /* mov edx, 0x211 */
    II(0x10155d67, 0x5)   mov(eax, 0x101c97f9);                 /* mov eax, 0x101c97f9 */
    II(0x10155d6c, 0x5)   calld(0x10157aaa, 0x1d39);            /* call 0x10157aaa */
    II(0x10155d71, 0x5)   calld(0x10164b38, 0xedc2);            /* call 0x10164b38 */
    II(0x10155d76, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155d77, 0x5)   mov(eax, 0x101aeee5);                 /* mov eax, 0x101aeee5 */ /* "" */
    II(0x10155d7c, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155d7d, 0x5)   mov(eax, 0x101aeee6);                 /* mov eax, 0x101aeee6 */ /* "" */
    II(0x10155d82, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155d83, 0x5)   mov(eax, 0x101aeee7);                 /* mov eax, 0x101aeee7 */ /* "Small cones" */
    II(0x10155d88, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155d89, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10155d8e, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155d8f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10155d91, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155d92, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10155d97, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155d98, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155d9d, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155d9e, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155da3, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155da4, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155da9, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155daa, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155daf, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155db0, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155db5, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155db6, 0x5)   mov(eax, 0x2de);                      /* mov eax, 0x2de */
    II(0x10155dbb, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155dbc, 0x5)   mov(ecx, 0x70);                       /* mov ecx, 0x70 */
    II(0x10155dc1, 0x5)   mov(ebx, 0x14);                       /* mov ebx, 0x14 */
    II(0x10155dc6, 0x5)   mov(edx, 0x201);                      /* mov edx, 0x201 */
    II(0x10155dcb, 0x5)   mov(eax, 0x101c9824);                 /* mov eax, 0x101c9824 */
    II(0x10155dd0, 0x5)   calld(0x10157aaa, 0x1cd5);            /* call 0x10157aaa */
    II(0x10155dd5, 0x5)   calld(0x10164b38, 0xed5e);            /* call 0x10164b38 */
    II(0x10155dda, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155ddb, 0x5)   mov(eax, 0x101aeef3);                 /* mov eax, 0x101aeef3 */ /* "Units move twice as fast over road squares." */
    II(0x10155de0, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155de1, 0x5)   mov(eax, 0x101aef1f);                 /* mov eax, 0x101aef1f */ /* "Roads" */
    II(0x10155de6, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155de7, 0x5)   mov(eax, 0x101aef25);                 /* mov eax, 0x101aef25 */ /* "Road" */
    II(0x10155dec, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155ded, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10155df2, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155df3, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10155df5, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155df6, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10155dfb, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155dfc, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155e01, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155e02, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155e07, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155e08, 0x5)   mov(eax, 0x354);                      /* mov eax, 0x354 */
    II(0x10155e0d, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155e0e, 0x5)   mov(eax, 0x700);                      /* mov eax, 0x700 */
    II(0x10155e13, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155e14, 0x5)   mov(eax, 0x476);                      /* mov eax, 0x476 */
    II(0x10155e19, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155e1a, 0x5)   mov(eax, 0x2de);                      /* mov eax, 0x2de */
    II(0x10155e1f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155e20, 0x5)   mov(ecx, 0x71);                       /* mov ecx, 0x71 */
    II(0x10155e25, 0x5)   mov(ebx, 0x15);                       /* mov ebx, 0x15 */
    II(0x10155e2a, 0x5)   mov(edx, 0x400201);                   /* mov edx, 0x400201 */
    II(0x10155e2f, 0x5)   mov(eax, 0x101c984f);                 /* mov eax, 0x101c984f */
    II(0x10155e34, 0x5)   calld(0x10157aaa, 0x1c71);            /* call 0x10157aaa */
    II(0x10155e39, 0x5)   calld(0x10164b38, 0xecfa);            /* call 0x10164b38 */
    II(0x10155e3e, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155e3f, 0x5)   mov(eax, 0x101aef2a);                 /* mov eax, 0x101aef2a */ /* "Landing facility for planes.  Does not repair, resupply, or refuel planes.  To resupply a plane on a landing pad, use a nearby truck or storage unit." */
    II(0x10155e44, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155e45, 0x5)   mov(eax, 0x101aefc0);                 /* mov eax, 0x101aefc0 */ /* "Landing Pads" */
    II(0x10155e4a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155e4b, 0x5)   mov(eax, 0x101aefcd);                 /* mov eax, 0x101aefcd */ /* "Landing Pad" */
    II(0x10155e50, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155e51, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10155e56, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155e57, 0x5)   mov(eax, 0x6);                        /* mov eax, 0x6 */
    II(0x10155e5c, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155e5d, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10155e62, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155e63, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155e68, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155e69, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155e6e, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155e6f, 0x5)   mov(eax, 0x355);                      /* mov eax, 0x355 */
    II(0x10155e74, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155e75, 0x5)   mov(eax, 0x701);                      /* mov eax, 0x701 */
    II(0x10155e7a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155e7b, 0x5)   mov(eax, 0x477);                      /* mov eax, 0x477 */
    II(0x10155e80, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155e81, 0x5)   mov(eax, 0x2de);                      /* mov eax, 0x2de */
    II(0x10155e86, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155e87, 0x5)   mov(ecx, 0x72);                       /* mov ecx, 0x72 */
    II(0x10155e8c, 0x5)   mov(ebx, 0x16);                       /* mov ebx, 0x16 */
    II(0x10155e91, 0x5)   mov(edx, 0x404200);                   /* mov edx, 0x404200 */
    II(0x10155e96, 0x5)   mov(eax, 0x101c987a);                 /* mov eax, 0x101c987a */
    II(0x10155e9b, 0x5)   calld(0x10157aaa, 0x1c0a);            /* call 0x10157aaa */
    II(0x10155ea0, 0x5)   calld(0x10164b38, 0xec93);            /* call 0x10164b38 */
    II(0x10155ea5, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155ea6, 0x5)   mov(eax, 0x101aefd9);                 /* mov eax, 0x101aefd9 */ /* "Shipyards manufacture ships, such as submarines, sea transports, and missile cruisers.  A shipyard requires three raw materials a turn to operate, and power from a power generator or power station." */
    II(0x10155eab, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155eac, 0x5)   mov(eax, 0x101af09f);                 /* mov eax, 0x101af09f */ /* "Shipyards" */
    II(0x10155eb1, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155eb2, 0x5)   mov(eax, 0x101af0a9);                 /* mov eax, 0x101af0a9 */ /* "Shipyard" */
    II(0x10155eb7, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155eb8, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10155ebd, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155ebe, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10155ec0, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155ec1, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x10155ec6, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155ec7, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155ecc, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155ecd, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155ed2, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155ed3, 0x5)   mov(eax, 0x356);                      /* mov eax, 0x356 */
    II(0x10155ed8, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155ed9, 0x5)   mov(eax, 0x702);                      /* mov eax, 0x702 */
    II(0x10155ede, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155edf, 0x5)   mov(eax, 0x478);                      /* mov eax, 0x478 */
    II(0x10155ee4, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155ee5, 0x5)   mov(eax, 0x2df);                      /* mov eax, 0x2df */
    II(0x10155eea, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155eeb, 0x5)   mov(ecx, 0x73);                       /* mov ecx, 0x73 */
    II(0x10155ef0, 0x5)   mov(ebx, 0x17);                       /* mov ebx, 0x17 */
    II(0x10155ef5, 0x5)   mov(edx, 0x684210);                   /* mov edx, 0x684210 */
    II(0x10155efa, 0x5)   mov(eax, 0x101c98a5);                 /* mov eax, 0x101c98a5 */
    II(0x10155eff, 0x5)   calld(0x10157aaa, 0x1ba6);            /* call 0x10157aaa */
    II(0x10155f04, 0x5)   mov(eax, 0x101af0b2);                 /* mov eax, 0x101af0b2 */ /* "Click on the light vehicle plant to show the Build button.  Factories need to be connected to power and a source of raw materials (usually a mining station) to operate." */
    II(0x10155f09, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155f0a, 0x5)   mov(eax, 0x101af15b);                 /* mov eax, 0x101af15b */ /* "Builds light vehicles: engineers, trucks, mobile repair units, scouts, and mobile anti-aircraft units.  A light vehicle plant requires three raw materials a turn to operate, and power from a power generator or power station." */
    II(0x10155f0f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155f10, 0x5)   mov(eax, 0x101af23c);                 /* mov eax, 0x101af23c */ /* "Light Vehicle Plants" */
    II(0x10155f15, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155f16, 0x5)   mov(eax, 0x101af251);                 /* mov eax, 0x101af251 */ /* "Light Vehicle Plant" */
    II(0x10155f1b, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155f1c, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10155f21, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155f22, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10155f24, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155f25, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10155f2a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155f2b, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155f30, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155f31, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155f36, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155f37, 0x5)   mov(eax, 0x357);                      /* mov eax, 0x357 */
    II(0x10155f3c, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155f3d, 0x5)   mov(eax, 0x703);                      /* mov eax, 0x703 */
    II(0x10155f42, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155f43, 0x5)   mov(eax, 0x479);                      /* mov eax, 0x479 */
    II(0x10155f48, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155f49, 0x5)   mov(eax, 0x2df);                      /* mov eax, 0x2df */
    II(0x10155f4e, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155f4f, 0x5)   mov(ecx, 0x74);                       /* mov ecx, 0x74 */
    II(0x10155f54, 0x5)   mov(ebx, 0x18);                       /* mov ebx, 0x18 */
    II(0x10155f59, 0x5)   mov(edx, 0x1684210);                  /* mov edx, 0x1684210 */
    II(0x10155f5e, 0x5)   mov(eax, 0x101c98d0);                 /* mov eax, 0x101c98d0 */
    II(0x10155f63, 0x5)   calld(0x10157aaa, 0x1b42);            /* call 0x10157aaa */
    II(0x10155f68, 0x5)   mov(eax, 0x101af265);                 /* mov eax, 0x101af265 */ /* "Click on the heavy vehicle plant to show the Build button.  Factories need to be connected to power and a source of raw materials (usually a mining station) to operate." */
    II(0x10155f6d, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155f6e, 0x5)   mov(eax, 0x101af30e);                 /* mov eax, 0x101af30e */ /* "Builds constructors, mobile scanners, and the heavy fighting units: tanks, assault guns, rocket launchers, and missile crawlers.  A heavy factory needs three raw materials a turn to operate, and power from a power generator or power station." */
    II(0x10155f73, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155f74, 0x5)   mov(eax, 0x101af400);                 /* mov eax, 0x101af400 */ /* "Heavy Vehicle Plants" */
    II(0x10155f79, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155f7a, 0x5)   mov(eax, 0x101af415);                 /* mov eax, 0x101af415 */ /* "Heavy Vehicle Plant" */
    II(0x10155f7f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155f80, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10155f85, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155f86, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10155f88, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155f89, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10155f8e, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155f8f, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155f94, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155f95, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155f9a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155f9b, 0x5)   mov(eax, 0x358);                      /* mov eax, 0x358 */
    II(0x10155fa0, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155fa1, 0x5)   mov(eax, 0x704);                      /* mov eax, 0x704 */
    II(0x10155fa6, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155fa7, 0x5)   mov(eax, 0x47a);                      /* mov eax, 0x47a */
    II(0x10155fac, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155fad, 0x5)   mov(eax, 0x2df);                      /* mov eax, 0x2df */
    II(0x10155fb2, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155fb3, 0x5)   mov(ecx, 0x75);                       /* mov ecx, 0x75 */
    II(0x10155fb8, 0x5)   mov(ebx, 0x19);                       /* mov ebx, 0x19 */
    II(0x10155fbd, 0x5)   mov(edx, 0x1684210);                  /* mov edx, 0x1684210 */
    II(0x10155fc2, 0x5)   mov(eax, 0x101c98fb);                 /* mov eax, 0x101c98fb */
    II(0x10155fc7, 0x5)   calld(0x10157aaa, 0x1ade);            /* call 0x10157aaa */
    II(0x10155fcc, 0x5)   calld(0x10164b38, 0xeb67);            /* call 0x10164b38 */
    II(0x10155fd1, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155fd2, 0x5)   mov(eax, 0x101af429);                 /* mov eax, 0x101af429 */ /* "" */
    II(0x10155fd7, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155fd8, 0x5)   mov(eax, 0x101af42a);                 /* mov eax, 0x101af42a */ /* "" */
    II(0x10155fdd, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155fde, 0x5)   mov(eax, 0x101af42b);                 /* mov eax, 0x101af42b */ /* "" */
    II(0x10155fe3, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155fe4, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10155fe9, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155fea, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10155fec, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155fed, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10155ff2, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155ff3, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155ff8, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155ff9, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10155ffe, 0x1)   pushd(eax);                           /* push eax */
    II(0x10155fff, 0x5)   mov(eax, 0x359);                      /* mov eax, 0x359 */
    II(0x10156004, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156005, 0x5)   mov(eax, 0x705);                      /* mov eax, 0x705 */
    II(0x1015600a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015600b, 0x5)   mov(eax, 0x47b);                      /* mov eax, 0x47b */
    II(0x10156010, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156011, 0x5)   mov(eax, 0x2df);                      /* mov eax, 0x2df */
    II(0x10156016, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156017, 0x5)   mov(ecx, 0x76);                       /* mov ecx, 0x76 */
    II(0x1015601c, 0x5)   mov(ebx, 0x1a);                       /* mov ebx, 0x1a */
    II(0x10156021, 0x5)   mov(edx, 0x1000210);                  /* mov edx, 0x1000210 */
    II(0x10156026, 0x5)   mov(eax, 0x101c9926);                 /* mov eax, 0x101c9926 */
    II(0x1015602b, 0x5)   calld(0x10157aaa, 0x1a7a);            /* call 0x10157aaa */
    II(0x10156030, 0x5)   calld(0x10164b38, 0xeb03);            /* call 0x10164b38 */
    II(0x10156035, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156036, 0x5)   mov(eax, 0x101af42c);                 /* mov eax, 0x101af42c */ /* "Builds fighters, ground attack planes, and air transports.  A heavy factory needs three raw materials a turn to operate, and power from a power generator or power station." */
    II(0x1015603b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015603c, 0x5)   mov(eax, 0x101af4d8);                 /* mov eax, 0x101af4d8 */ /* "Air Units Plants" */
    II(0x10156041, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156042, 0x5)   mov(eax, 0x101af4e9);                 /* mov eax, 0x101af4e9 */ /* "Air Units Plant" */
    II(0x10156047, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156048, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x1015604d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015604e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10156050, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156051, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10156056, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156057, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015605c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015605d, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156062, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156063, 0x5)   mov(eax, 0x35a);                      /* mov eax, 0x35a */
    II(0x10156068, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156069, 0x5)   mov(eax, 0x706);                      /* mov eax, 0x706 */
    II(0x1015606e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015606f, 0x5)   mov(eax, 0x47c);                      /* mov eax, 0x47c */
    II(0x10156074, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156075, 0x5)   mov(eax, 0x2df);                      /* mov eax, 0x2df */
    II(0x1015607a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015607b, 0x5)   mov(ecx, 0x77);                       /* mov ecx, 0x77 */
    II(0x10156080, 0x5)   mov(ebx, 0x1b);                       /* mov ebx, 0x1b */
    II(0x10156085, 0x5)   mov(edx, 0x1684210);                  /* mov edx, 0x1684210 */
    II(0x1015608a, 0x5)   mov(eax, 0x101c9951);                 /* mov eax, 0x101c9951 */
    II(0x1015608f, 0x5)   calld(0x10157aaa, 0x1a16);            /* call 0x10157aaa */
    II(0x10156094, 0x5)   calld(0x10164b38, 0xea9f);            /* call 0x10164b38 */
    II(0x10156099, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015609a, 0x5)   mov(eax, 0x101af4f9);                 /* mov eax, 0x101af4f9 */ /* "Habitats house colonists.  Each habitat houses enough colonists to operate three research centers, training halls, or eco-spheres.  The colonist buildings must be connected to the habitat before they can operate." */
    II(0x1015609f, 0x1)   pushd(eax);                           /* push eax */
    II(0x101560a0, 0x5)   mov(eax, 0x101af5ce);                 /* mov eax, 0x101af5ce */ /* "Habitats" */
    II(0x101560a5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101560a6, 0x5)   mov(eax, 0x101af5d7);                 /* mov eax, 0x101af5d7 */ /* "Habitat" */
    II(0x101560ab, 0x1)   pushd(eax);                           /* push eax */
    II(0x101560ac, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x101560b1, 0x1)   pushd(eax);                           /* push eax */
    II(0x101560b2, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101560b4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101560b5, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101560ba, 0x1)   pushd(eax);                           /* push eax */
    II(0x101560bb, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101560c0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101560c1, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101560c6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101560c7, 0x5)   mov(eax, 0x35b);                      /* mov eax, 0x35b */
    II(0x101560cc, 0x1)   pushd(eax);                           /* push eax */
    II(0x101560cd, 0x5)   mov(eax, 0x707);                      /* mov eax, 0x707 */
    II(0x101560d2, 0x1)   pushd(eax);                           /* push eax */
    II(0x101560d3, 0x5)   mov(eax, 0x47d);                      /* mov eax, 0x47d */
    II(0x101560d8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101560d9, 0x5)   mov(eax, 0x2df);                      /* mov eax, 0x2df */
    II(0x101560de, 0x1)   pushd(eax);                           /* push eax */
    II(0x101560df, 0x5)   mov(ecx, 0x78);                       /* mov ecx, 0x78 */
    II(0x101560e4, 0x5)   mov(ebx, 0x1c);                       /* mov ebx, 0x1c */
    II(0x101560e9, 0x5)   mov(edx, 0x1404210);                  /* mov edx, 0x1404210 */
    II(0x101560ee, 0x5)   mov(eax, 0x101c997c);                 /* mov eax, 0x101c997c */
    II(0x101560f3, 0x5)   calld(0x10157aaa, 0x19b2);            /* call 0x10157aaa */
    II(0x101560f8, 0x5)   calld(0x10164b38, 0xea3b);            /* call 0x10164b38 */
    II(0x101560fd, 0x1)   pushd(eax);                           /* push eax */
    II(0x101560fe, 0x5)   mov(eax, 0x101af5df);                 /* mov eax, 0x101af5df */ /* "Research centers investigate ways to improve your units.  Unlike upgrades purchased with refined gold, research takes time, and the improvements are small.  However, research affects all of your units instead of just one type, and doesn't require a source of gold ore.  A research center requires colonists from a Habitat to operate, and power." */
    II(0x10156103, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156104, 0x5)   mov(eax, 0x101af738);                 /* mov eax, 0x101af738 */ /* "Research Centers" */
    II(0x10156109, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015610a, 0x5)   mov(eax, 0x101af749);                 /* mov eax, 0x101af749 */ /* "Research Center" */
    II(0x1015610f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156110, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10156115, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156116, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10156118, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156119, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1015611e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015611f, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156124, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156125, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015612a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015612b, 0x5)   mov(eax, 0x35c);                      /* mov eax, 0x35c */
    II(0x10156130, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156131, 0x5)   mov(eax, 0x708);                      /* mov eax, 0x708 */
    II(0x10156136, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156137, 0x5)   mov(eax, 0x47e);                      /* mov eax, 0x47e */
    II(0x1015613c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015613d, 0x5)   mov(eax, 0x2df);                      /* mov eax, 0x2df */
    II(0x10156142, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156143, 0x5)   mov(ecx, 0x79);                       /* mov ecx, 0x79 */
    II(0x10156148, 0x5)   mov(ebx, 0x1d);                       /* mov ebx, 0x1d */
    II(0x1015614d, 0x5)   mov(edx, 0x1604210);                  /* mov edx, 0x1604210 */
    II(0x10156152, 0x5)   mov(eax, 0x101c99a7);                 /* mov eax, 0x101c99a7 */
    II(0x10156157, 0x5)   calld(0x10157aaa, 0x194e);            /* call 0x10157aaa */
    II(0x1015615c, 0x5)   calld(0x10164b38, 0xe9d7);            /* call 0x10164b38 */
    II(0x10156161, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156162, 0x5)   mov(eax, 0x101af759);                 /* mov eax, 0x101af759 */ /* "Domed building containing an earthlike environment.  Your ultimate goal is to provide as many of these for your colonists as possible.  Every turn an ecosphere operates, it increases your colony rating.  If its destroyed, you lose all of the improvements the ecosphere made to your rating.  Ecospheres require colonists from a Habitat and power to operate." */
    II(0x10156167, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156168, 0x5)   mov(eax, 0x101af8be);                 /* mov eax, 0x101af8be */ /* "Eco-spheres" */
    II(0x1015616d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015616e, 0x5)   mov(eax, 0x101af8ca);                 /* mov eax, 0x101af8ca */ /* "Eco-sphere" */
    II(0x10156173, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156174, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10156179, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015617a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015617c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015617d, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10156182, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156183, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156188, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156189, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015618e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015618f, 0x5)   mov(eax, 0x35d);                      /* mov eax, 0x35d */
    II(0x10156194, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156195, 0x5)   mov(eax, 0x709);                      /* mov eax, 0x709 */
    II(0x1015619a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015619b, 0x5)   mov(eax, 0x47f);                      /* mov eax, 0x47f */
    II(0x101561a0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101561a1, 0x5)   mov(eax, 0x2df);                      /* mov eax, 0x2df */
    II(0x101561a6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101561a7, 0x5)   mov(ecx, 0x7a);                       /* mov ecx, 0x7a */
    II(0x101561ac, 0x5)   mov(ebx, 0x1e);                       /* mov ebx, 0x1e */
    II(0x101561b1, 0x5)   mov(edx, 0x1604210);                  /* mov edx, 0x1604210 */
    II(0x101561b6, 0x5)   mov(eax, 0x101c99d2);                 /* mov eax, 0x101c99d2 */
    II(0x101561bb, 0x5)   calld(0x10157aaa, 0x18ea);            /* call 0x10157aaa */
    II(0x101561c0, 0x5)   calld(0x10164b38, 0xe973);            /* call 0x10164b38 */
    II(0x101561c5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101561c6, 0x5)   mov(eax, 0x101af8d5);                 /* mov eax, 0x101af8d5 */ /* "" */
    II(0x101561cb, 0x1)   pushd(eax);                           /* push eax */
    II(0x101561cc, 0x5)   mov(eax, 0x101af8d6);                 /* mov eax, 0x101af8d6 */ /* "Recreation Centers" */
    II(0x101561d1, 0x1)   pushd(eax);                           /* push eax */
    II(0x101561d2, 0x5)   mov(eax, 0x101af8e9);                 /* mov eax, 0x101af8e9 */ /* "Recreation Center" */
    II(0x101561d7, 0x1)   pushd(eax);                           /* push eax */
    II(0x101561d8, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x101561dd, 0x1)   pushd(eax);                           /* push eax */
    II(0x101561de, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101561e0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101561e1, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101561e6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101561e7, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101561ec, 0x1)   pushd(eax);                           /* push eax */
    II(0x101561ed, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101561f2, 0x1)   pushd(eax);                           /* push eax */
    II(0x101561f3, 0x5)   mov(eax, 0x35e);                      /* mov eax, 0x35e */
    II(0x101561f8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101561f9, 0x5)   mov(eax, 0x70a);                      /* mov eax, 0x70a */
    II(0x101561fe, 0x1)   pushd(eax);                           /* push eax */
    II(0x101561ff, 0x5)   mov(eax, 0x480);                      /* mov eax, 0x480 */
    II(0x10156204, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156205, 0x5)   mov(eax, 0x2df);                      /* mov eax, 0x2df */
    II(0x1015620a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015620b, 0x5)   mov(ecx, 0x7b);                       /* mov ecx, 0x7b */
    II(0x10156210, 0x5)   mov(ebx, 0x1f);                       /* mov ebx, 0x1f */
    II(0x10156215, 0x5)   mov(edx, 0x1000210);                  /* mov edx, 0x1000210 */
    II(0x1015621a, 0x5)   mov(eax, 0x101c99fd);                 /* mov eax, 0x101c99fd */
    II(0x1015621f, 0x5)   calld(0x10157aaa, 0x1886);            /* call 0x10157aaa */
    II(0x10156224, 0x5)   calld(0x10164b38, 0xe90f);            /* call 0x10164b38 */
    II(0x10156229, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015622a, 0x5)   mov(eax, 0x101af8fb);                 /* mov eax, 0x101af8fb */ /* "Trains infiltrators who can disable or capture enemy units, and infantry to guard against infiltrators.  Only infantry and other infiltrators can detect infiltrators.  A training hall requires colonists from a Habitat and power to operate." */
    II(0x1015622f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156230, 0x5)   mov(eax, 0x101af9eb);                 /* mov eax, 0x101af9eb */ /* "Training Halls" */
    II(0x10156235, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156236, 0x5)   mov(eax, 0x101af9fa);                 /* mov eax, 0x101af9fa */ /* "Training Hall" */
    II(0x1015623b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015623c, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10156241, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156242, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10156244, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156245, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1015624a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015624b, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156250, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156251, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156256, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156257, 0x5)   mov(eax, 0x35f);                      /* mov eax, 0x35f */
    II(0x1015625c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015625d, 0x5)   mov(eax, 0x70b);                      /* mov eax, 0x70b */
    II(0x10156262, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156263, 0x5)   mov(eax, 0x481);                      /* mov eax, 0x481 */
    II(0x10156268, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156269, 0x5)   mov(eax, 0x2df);                      /* mov eax, 0x2df */
    II(0x1015626e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015626f, 0x5)   mov(ecx, 0x7c);                       /* mov ecx, 0x7c */
    II(0x10156274, 0x5)   mov(ebx, 0x20);                       /* mov ebx, 0x20 */
    II(0x10156279, 0x5)   mov(edx, 0x1604210);                  /* mov edx, 0x1604210 */
    II(0x1015627e, 0x5)   mov(eax, 0x101c9a28);                 /* mov eax, 0x101c9a28 */
    II(0x10156283, 0x5)   calld(0x10157aaa, 0x1822);            /* call 0x10157aaa */
    II(0x10156288, 0x5)   calld(0x10164b38, 0xe8ab);            /* call 0x10164b38 */
    II(0x1015628d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015628e, 0x5)   mov(eax, 0x101afa08);                 /* mov eax, 0x101afa08 */ /* "Provides a surface over water on which to construct other buildings.  Engineers can build water platforms over shore as well as open water.  Water platforms are particularly important on island maps, or when a valuable material deposit is under water." */
    II(0x10156293, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156294, 0x5)   mov(eax, 0x101afb04);                 /* mov eax, 0x101afb04 */ /* "Water Platforms" */
    II(0x10156299, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015629a, 0x5)   mov(eax, 0x101afb14);                 /* mov eax, 0x101afb14 */ /* "Water Platform" */
    II(0x1015629f, 0x1)   pushd(eax);                           /* push eax */
    II(0x101562a0, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x101562a5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101562a6, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101562a8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101562a9, 0x5)   mov(eax, 0x6);                        /* mov eax, 0x6 */
    II(0x101562ae, 0x1)   pushd(eax);                           /* push eax */
    II(0x101562af, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101562b4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101562b5, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101562ba, 0x1)   pushd(eax);                           /* push eax */
    II(0x101562bb, 0x5)   mov(eax, 0x360);                      /* mov eax, 0x360 */
    II(0x101562c0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101562c1, 0x5)   mov(eax, 0x70c);                      /* mov eax, 0x70c */
    II(0x101562c6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101562c7, 0x5)   mov(eax, 0x482);                      /* mov eax, 0x482 */
    II(0x101562cc, 0x1)   pushd(eax);                           /* push eax */
    II(0x101562cd, 0x5)   mov(eax, 0x2de);                      /* mov eax, 0x2de */
    II(0x101562d2, 0x1)   pushd(eax);                           /* push eax */
    II(0x101562d3, 0x5)   mov(ecx, 0x7d);                       /* mov ecx, 0x7d */
    II(0x101562d8, 0x5)   mov(ebx, 0x21);                       /* mov ebx, 0x21 */
    II(0x101562dd, 0x5)   mov(edx, 0x404201);                   /* mov edx, 0x404201 */
    II(0x101562e2, 0x5)   mov(eax, 0x101c9a53);                 /* mov eax, 0x101c9a53 */
    II(0x101562e7, 0x5)   calld(0x10157aaa, 0x17be);            /* call 0x10157aaa */
    II(0x101562ec, 0x5)   mov(eax, 0x101afb23);                 /* mov eax, 0x101afb23 */ /* "Gun turrets fire automatically on enemy units.  Of course they can't fire on what they can't see, so it's important to have a scout, scanner, or radar nearby." */
    II(0x101562f1, 0x1)   pushd(eax);                           /* push eax */
    II(0x101562f2, 0x5)   mov(eax, 0x101afbc2);                 /* mov eax, 0x101afbc2 */ /* "Heavily armored stationary gun turret.  Gun turrets have good firepower, heavy armor, and moderate range.  Because they take little time to build, they are a good choice when you need defense in a hurry." */
    II(0x101562f7, 0x1)   pushd(eax);                           /* push eax */
    II(0x101562f8, 0x5)   mov(eax, 0x101afc8e);                 /* mov eax, 0x101afc8e */ /* "Gun Turrets" */
    II(0x101562fd, 0x1)   pushd(eax);                           /* push eax */
    II(0x101562fe, 0x5)   mov(eax, 0x101afc9a);                 /* mov eax, 0x101afc9a */ /* "Gun Turret" */
    II(0x10156303, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156304, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10156309, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015630a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015630c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015630d, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10156312, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156313, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156318, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156319, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015631e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015631f, 0x5)   mov(eax, 0x361);                      /* mov eax, 0x361 */
    II(0x10156324, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156325, 0x5)   mov(eax, 0x70d);                      /* mov eax, 0x70d */
    II(0x1015632a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015632b, 0x5)   mov(eax, 0x483);                      /* mov eax, 0x483 */
    II(0x10156330, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156331, 0x5)   mov(eax, 0x2e5);                      /* mov eax, 0x2e5 */
    II(0x10156336, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156337, 0x5)   mov(ecx, 0x7e);                       /* mov ecx, 0x7e */
    II(0x1015633c, 0x5)   mov(ebx, 0x22);                       /* mov ebx, 0x22 */
    II(0x10156341, 0x5)   mov(edx, 0x7e24200);                  /* mov edx, 0x7e24200 */
    II(0x10156346, 0x5)   mov(eax, 0x101c9a7e);                 /* mov eax, 0x101c9a7e */
    II(0x1015634b, 0x5)   calld(0x10157aaa, 0x175a);            /* call 0x10157aaa */
    II(0x10156350, 0x5)   calld(0x10164b38, 0xe7e3);            /* call 0x10164b38 */
    II(0x10156355, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156356, 0x5)   mov(eax, 0x101afca5);                 /* mov eax, 0x101afca5 */ /* "Low caliber, high speed anti aircraft cannon.   Anti aircraft make short work of planes, but cannot attack ground units." */
    II(0x1015635b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015635c, 0x5)   mov(eax, 0x101afd1e);                 /* mov eax, 0x101afd1e */ /* "Anti Aircraft" */
    II(0x10156361, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156362, 0x5)   mov(eax, 0x101afd2c);                 /* mov eax, 0x101afd2c */ /* "Anti Aircraft" */
    II(0x10156367, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156368, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x1015636d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015636e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10156370, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156371, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10156376, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156377, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015637c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015637d, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156382, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156383, 0x5)   mov(eax, 0x362);                      /* mov eax, 0x362 */
    II(0x10156388, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156389, 0x5)   mov(eax, 0x70e);                      /* mov eax, 0x70e */
    II(0x1015638e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015638f, 0x5)   mov(eax, 0x484);                      /* mov eax, 0x484 */
    II(0x10156394, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156395, 0x5)   mov(eax, 0x2e4);                      /* mov eax, 0x2e4 */
    II(0x1015639a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015639b, 0x5)   mov(ecx, 0x7f);                       /* mov ecx, 0x7f */
    II(0x101563a0, 0x5)   mov(ebx, 0x23);                       /* mov ebx, 0x23 */
    II(0x101563a5, 0x5)   mov(edx, 0x7e24200);                  /* mov edx, 0x7e24200 */
    II(0x101563aa, 0x5)   mov(eax, 0x101c9aa9);                 /* mov eax, 0x101c9aa9 */
    II(0x101563af, 0x5)   calld(0x10157aaa, 0x16f6);            /* call 0x10157aaa */
    II(0x101563b4, 0x5)   calld(0x10164b38, 0xe77f);            /* call 0x10164b38 */
    II(0x101563b9, 0x1)   pushd(eax);                           /* push eax */
    II(0x101563ba, 0x5)   mov(eax, 0x101afd3a);                 /* mov eax, 0x101afd3a */ /* "High powered stationary gun.  Artillery is a compromise between the cheap, rugged gun turret and the expensive, long-range missile turret." */
    II(0x101563bf, 0x1)   pushd(eax);                           /* push eax */
    II(0x101563c0, 0x5)   mov(eax, 0x101afdc5);                 /* mov eax, 0x101afdc5 */ /* "Artillery" */
    II(0x101563c5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101563c6, 0x5)   mov(eax, 0x101afdcf);                 /* mov eax, 0x101afdcf */ /* "Artillery" */
    II(0x101563cb, 0x1)   pushd(eax);                           /* push eax */
    II(0x101563cc, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x101563d1, 0x1)   pushd(eax);                           /* push eax */
    II(0x101563d2, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101563d4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101563d5, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101563da, 0x1)   pushd(eax);                           /* push eax */
    II(0x101563db, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101563e0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101563e1, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101563e6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101563e7, 0x5)   mov(eax, 0x363);                      /* mov eax, 0x363 */
    II(0x101563ec, 0x1)   pushd(eax);                           /* push eax */
    II(0x101563ed, 0x5)   mov(eax, 0x70f);                      /* mov eax, 0x70f */
    II(0x101563f2, 0x1)   pushd(eax);                           /* push eax */
    II(0x101563f3, 0x5)   mov(eax, 0x485);                      /* mov eax, 0x485 */
    II(0x101563f8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101563f9, 0x5)   mov(eax, 0x2e5);                      /* mov eax, 0x2e5 */
    II(0x101563fe, 0x1)   pushd(eax);                           /* push eax */
    II(0x101563ff, 0x5)   mov(ecx, 0x80);                       /* mov ecx, 0x80 */
    II(0x10156404, 0x5)   mov(ebx, 0x24);                       /* mov ebx, 0x24 */
    II(0x10156409, 0x5)   mov(edx, 0x7e24200);                  /* mov edx, 0x7e24200 */
    II(0x1015640e, 0x5)   mov(eax, 0x101c9ad4);                 /* mov eax, 0x101c9ad4 */
    II(0x10156413, 0x5)   calld(0x10157aaa, 0x1692);            /* call 0x10157aaa */
    II(0x10156418, 0x5)   calld(0x10164b38, 0xe71b);            /* call 0x10164b38 */
    II(0x1015641d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015641e, 0x5)   mov(eax, 0x101afdd9);                 /* mov eax, 0x101afdd9 */ /* "Long-range missile launcher on a fixed mount. Excellent range and firepower, but only slightly more armor than the mobile version.  Best surrounded by gun turrets and anti aircraft." */
    II(0x10156423, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156424, 0x5)   mov(eax, 0x101afe8f);                 /* mov eax, 0x101afe8f */ /* "Missile Launchers" */
    II(0x10156429, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015642a, 0x5)   mov(eax, 0x101afea1);                 /* mov eax, 0x101afea1 */ /* "Missile Launcher" */
    II(0x1015642f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156430, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10156435, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156436, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10156438, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156439, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1015643e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015643f, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156444, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156445, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015644a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015644b, 0x5)   mov(eax, 0x364);                      /* mov eax, 0x364 */
    II(0x10156450, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156451, 0x5)   mov(eax, 0x710);                      /* mov eax, 0x710 */
    II(0x10156456, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156457, 0x5)   mov(eax, 0x486);                      /* mov eax, 0x486 */
    II(0x1015645c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015645d, 0x5)   mov(eax, 0x2e5);                      /* mov eax, 0x2e5 */
    II(0x10156462, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156463, 0x5)   mov(ecx, 0x81);                       /* mov ecx, 0x81 */
    II(0x10156468, 0x5)   mov(ebx, 0x25);                       /* mov ebx, 0x25 */
    II(0x1015646d, 0x5)   mov(edx, 0x7e64200);                  /* mov edx, 0x7e64200 */
    II(0x10156472, 0x5)   mov(eax, 0x101c9aff);                 /* mov eax, 0x101c9aff */
    II(0x10156477, 0x5)   calld(0x10157aaa, 0x162e);            /* call 0x10157aaa */
    II(0x1015647c, 0x5)   calld(0x10164b38, 0xe6b7);            /* call 0x10164b38 */
    II(0x10156481, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156482, 0x5)   mov(eax, 0x101afeb2);                 /* mov eax, 0x101afeb2 */ /* "Hardened, armored block for blocking enemy movement." */
    II(0x10156487, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156488, 0x5)   mov(eax, 0x101afee7);                 /* mov eax, 0x101afee7 */ /* "Concrete Blocks" */
    II(0x1015648d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015648e, 0x5)   mov(eax, 0x101afef7);                 /* mov eax, 0x101afef7 */ /* "Concrete Block" */
    II(0x10156493, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156494, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10156499, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015649a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015649c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015649d, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101564a2, 0x1)   pushd(eax);                           /* push eax */
    II(0x101564a3, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101564a8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101564a9, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101564ae, 0x1)   pushd(eax);                           /* push eax */
    II(0x101564af, 0x5)   mov(eax, 0x365);                      /* mov eax, 0x365 */
    II(0x101564b4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101564b5, 0x5)   mov(eax, 0x711);                      /* mov eax, 0x711 */
    II(0x101564ba, 0x1)   pushd(eax);                           /* push eax */
    II(0x101564bb, 0x5)   mov(eax, 0x487);                      /* mov eax, 0x487 */
    II(0x101564c0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101564c1, 0x5)   mov(eax, 0x2e0);                      /* mov eax, 0x2e0 */
    II(0x101564c6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101564c7, 0x5)   mov(ecx, 0x82);                       /* mov ecx, 0x82 */
    II(0x101564cc, 0x5)   mov(ebx, 0x26);                       /* mov ebx, 0x26 */
    II(0x101564d1, 0x5)   mov(edx, 0xc04200);                   /* mov edx, 0xc04200 */
    II(0x101564d6, 0x5)   mov(eax, 0x101c9b2a);                 /* mov eax, 0x101c9b2a */
    II(0x101564db, 0x5)   calld(0x10157aaa, 0x15ca);            /* call 0x10157aaa */
    II(0x101564e0, 0x5)   calld(0x10164b38, 0xe653);            /* call 0x10164b38 */
    II(0x101564e5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101564e6, 0x5)   mov(eax, 0x101aff06);                 /* mov eax, 0x101aff06 */ /* "Pontoon bridge for crossing water.  Bridges, unlike water platforms, do not block the movement of ships." */
    II(0x101564eb, 0x1)   pushd(eax);                           /* push eax */
    II(0x101564ec, 0x5)   mov(eax, 0x101aff6f);                 /* mov eax, 0x101aff6f */ /* "Bridges" */
    II(0x101564f1, 0x1)   pushd(eax);                           /* push eax */
    II(0x101564f2, 0x5)   mov(eax, 0x101aff77);                 /* mov eax, 0x101aff77 */ /* "Bridge" */
    II(0x101564f7, 0x1)   pushd(eax);                           /* push eax */
    II(0x101564f8, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x101564fd, 0x1)   pushd(eax);                           /* push eax */
    II(0x101564fe, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10156500, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156501, 0x5)   mov(eax, 0x6);                        /* mov eax, 0x6 */
    II(0x10156506, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156507, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015650c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015650d, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156512, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156513, 0x5)   mov(eax, 0x366);                      /* mov eax, 0x366 */
    II(0x10156518, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156519, 0x5)   mov(eax, 0x712);                      /* mov eax, 0x712 */
    II(0x1015651e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015651f, 0x5)   mov(eax, 0x488);                      /* mov eax, 0x488 */
    II(0x10156524, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156525, 0x5)   mov(eax, 0x2f4);                      /* mov eax, 0x2f4 */
    II(0x1015652a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015652b, 0x5)   mov(ecx, 0x83);                       /* mov ecx, 0x83 */
    II(0x10156530, 0x5)   mov(ebx, 0x27);                       /* mov ebx, 0x27 */
    II(0x10156535, 0x5)   mov(edx, 0x404201);                   /* mov edx, 0x404201 */
    II(0x1015653a, 0x5)   mov(eax, 0x101c9b55);                 /* mov eax, 0x101c9b55 */
    II(0x1015653f, 0x5)   calld(0x10157aaa, 0x1566);            /* call 0x10157aaa */
    II(0x10156544, 0x5)   mov(eax, 0x101aff7e);                 /* mov eax, 0x101aff7e */ /* "A mining station produces raw materials, fuel, and gold every turn.  Buildings must be connected to the mine to use the resources the mine produces." */
    II(0x10156549, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015654a, 0x5)   mov(eax, 0x101b0013);                 /* mov eax, 0x101b0013 */ /* "Extracts raw materials, fuel, and gold from the ground every turn.  Buildings must be connected to a mine to use the resources a mine produces.  If there are no storage buildings, fuel tanks, or gold vaults to store extra material, fuel, or gold, it will be lost." */
    II(0x1015654f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156550, 0x5)   mov(eax, 0x101b011b);                 /* mov eax, 0x101b011b */ /* "Mining Stations" */
    II(0x10156555, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156556, 0x5)   mov(eax, 0x101b012b);                 /* mov eax, 0x101b012b */ /* "Mining Station" */
    II(0x1015655b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015655c, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10156561, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156562, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10156567, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156568, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1015656d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015656e, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156573, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156574, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156579, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015657a, 0x5)   mov(eax, 0x367);                      /* mov eax, 0x367 */
    II(0x1015657f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156580, 0x5)   mov(eax, 0x713);                      /* mov eax, 0x713 */
    II(0x10156585, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156586, 0x5)   mov(eax, 0x489);                      /* mov eax, 0x489 */
    II(0x1015658b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015658c, 0x5)   mov(eax, 0x2fb);                      /* mov eax, 0x2fb */
    II(0x10156591, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156592, 0x5)   mov(ecx, 0x84);                       /* mov ecx, 0x84 */
    II(0x10156597, 0x5)   mov(ebx, 0x28);                       /* mov ebx, 0x28 */
    II(0x1015659c, 0x5)   mov(edx, 0x1604210);                  /* mov edx, 0x1604210 */
    II(0x101565a1, 0x5)   mov(eax, 0x101c9b80);                 /* mov eax, 0x101c9b80 */
    II(0x101565a6, 0x5)   calld(0x10157aaa, 0x14ff);            /* call 0x10157aaa */
    II(0x101565ab, 0x5)   calld(0x10164b38, 0xe588);            /* call 0x10164b38 */
    II(0x101565b0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101565b1, 0x5)   mov(eax, 0x101b013a);                 /* mov eax, 0x101b013a */ /* "Small, hard to detect explosive device.  Only surveyors, minelayers, and infiltrators can spot mines.  Once spotted, almost any damage will destroy it." */
    II(0x101565b6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101565b7, 0x5)   mov(eax, 0x101b01d2);                 /* mov eax, 0x101b01d2 */ /* "Land Mines" */
    II(0x101565bc, 0x1)   pushd(eax);                           /* push eax */
    II(0x101565bd, 0x5)   mov(eax, 0x101b01dd);                 /* mov eax, 0x101b01dd */ /* "Land Mine" */
    II(0x101565c2, 0x1)   pushd(eax);                           /* push eax */
    II(0x101565c3, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x101565c8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101565c9, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101565cb, 0x1)   pushd(eax);                           /* push eax */
    II(0x101565cc, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101565d1, 0x1)   pushd(eax);                           /* push eax */
    II(0x101565d2, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101565d7, 0x1)   pushd(eax);                           /* push eax */
    II(0x101565d8, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101565dd, 0x1)   pushd(eax);                           /* push eax */
    II(0x101565de, 0x5)   mov(eax, 0x368);                      /* mov eax, 0x368 */
    II(0x101565e3, 0x1)   pushd(eax);                           /* push eax */
    II(0x101565e4, 0x5)   mov(eax, 0x714);                      /* mov eax, 0x714 */
    II(0x101565e9, 0x1)   pushd(eax);                           /* push eax */
    II(0x101565ea, 0x5)   mov(eax, 0x48a);                      /* mov eax, 0x48a */
    II(0x101565ef, 0x1)   pushd(eax);                           /* push eax */
    II(0x101565f0, 0x5)   mov(eax, 0x2de);                      /* mov eax, 0x2de */
    II(0x101565f5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101565f6, 0x5)   mov(ecx, 0x85);                       /* mov ecx, 0x85 */
    II(0x101565fb, 0x5)   mov(ebx, 0x29);                       /* mov ebx, 0x29 */
    II(0x10156600, 0x5)   mov(edx, 0x4404201);                  /* mov edx, 0x4404201 */
    II(0x10156605, 0x5)   mov(eax, 0x101c9bab);                 /* mov eax, 0x101c9bab */
    II(0x1015660a, 0x5)   calld(0x10157aaa, 0x149b);            /* call 0x10157aaa */
    II(0x1015660f, 0x5)   calld(0x10164b38, 0xe524);            /* call 0x10164b38 */
    II(0x10156614, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156615, 0x5)   mov(eax, 0x101b01e7);                 /* mov eax, 0x101b01e7 */ /* "Small, hard to detect explosive device.  Only surveyors, minelayers, and infiltrators can spot mines.  Once spotted, almost any damage will destroy it." */
    II(0x1015661a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015661b, 0x5)   mov(eax, 0x101b027f);                 /* mov eax, 0x101b027f */ /* "Sea Mines" */
    II(0x10156620, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156621, 0x5)   mov(eax, 0x101b0289);                 /* mov eax, 0x101b0289 */ /* "Sea Mine" */
    II(0x10156626, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156627, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x1015662c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015662d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015662f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156630, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x10156635, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156636, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015663b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015663c, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156641, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156642, 0x5)   mov(eax, 0x369);                      /* mov eax, 0x369 */
    II(0x10156647, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156648, 0x5)   mov(eax, 0x715);                      /* mov eax, 0x715 */
    II(0x1015664d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015664e, 0x5)   mov(eax, 0x48b);                      /* mov eax, 0x48b */
    II(0x10156653, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156654, 0x5)   mov(eax, 0x2de);                      /* mov eax, 0x2de */
    II(0x10156659, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015665a, 0x5)   mov(ecx, 0xffffffff);                 /* mov ecx, 0xffffffff */
    II(0x1015665f, 0x5)   mov(ebx, 0x2a);                       /* mov ebx, 0x2a */
    II(0x10156664, 0x5)   mov(edx, 0x4404201);                  /* mov edx, 0x4404201 */
    II(0x10156669, 0x5)   mov(eax, 0x101c9bd6);                 /* mov eax, 0x101c9bd6 */
    II(0x1015666e, 0x5)   calld(0x10157aaa, 0x1437);            /* call 0x10157aaa */
    II(0x10156673, 0x5)   calld(0x10164b38, 0xe4c0);            /* call 0x10164b38 */
    II(0x10156678, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156679, 0x5)   mov(eax, 0x101b0292);                 /* mov eax, 0x101b0292 */ /* "" */
    II(0x1015667e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015667f, 0x5)   mov(eax, 0x101b0293);                 /* mov eax, 0x101b0293 */ /* "" */
    II(0x10156684, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156685, 0x5)   mov(eax, 0x101b0294);                 /* mov eax, 0x101b0294 */ /* "explosion" */
    II(0x1015668a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015668b, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10156690, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156691, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10156693, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156694, 0x5)   mov(eax, 0xff);                       /* mov eax, 0xff */
    II(0x10156699, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015669a, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015669f, 0x1)   pushd(eax);                           /* push eax */
    II(0x101566a0, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101566a5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101566a6, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101566ab, 0x1)   pushd(eax);                           /* push eax */
    II(0x101566ac, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101566b1, 0x1)   pushd(eax);                           /* push eax */
    II(0x101566b2, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101566b7, 0x1)   pushd(eax);                           /* push eax */
    II(0x101566b8, 0x5)   mov(eax, 0x2e9);                      /* mov eax, 0x2e9 */
    II(0x101566bd, 0x1)   pushd(eax);                           /* push eax */
    II(0x101566be, 0x5)   mov(ecx, 0xffffffff);                 /* mov ecx, 0xffffffff */
    II(0x101566c3, 0x5)   mov(ebx, 0x2b);                       /* mov ebx, 0x2b */
    II(0x101566c8, 0x5)   mov(edx, 0x206);                      /* mov edx, 0x206 */
    II(0x101566cd, 0x5)   mov(eax, 0x101c9c01);                 /* mov eax, 0x101c9c01 */
    II(0x101566d2, 0x5)   calld(0x10157aaa, 0x13d3);            /* call 0x10157aaa */
    II(0x101566d7, 0x5)   calld(0x10164b38, 0xe45c);            /* call 0x10164b38 */
    II(0x101566dc, 0x1)   pushd(eax);                           /* push eax */
    II(0x101566dd, 0x5)   mov(eax, 0x101b029e);                 /* mov eax, 0x101b029e */ /* "" */
    II(0x101566e2, 0x1)   pushd(eax);                           /* push eax */
    II(0x101566e3, 0x5)   mov(eax, 0x101b029f);                 /* mov eax, 0x101b029f */ /* "" */
    II(0x101566e8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101566e9, 0x5)   mov(eax, 0x101b02a0);                 /* mov eax, 0x101b02a0 */ /* "explosion" */
    II(0x101566ee, 0x1)   pushd(eax);                           /* push eax */
    II(0x101566ef, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x101566f4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101566f5, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101566f7, 0x1)   pushd(eax);                           /* push eax */
    II(0x101566f8, 0x5)   mov(eax, 0xff);                       /* mov eax, 0xff */
    II(0x101566fd, 0x1)   pushd(eax);                           /* push eax */
    II(0x101566fe, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156703, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156704, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156709, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015670a, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015670f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156710, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156715, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156716, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015671b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015671c, 0x5)   mov(eax, 0x2e9);                      /* mov eax, 0x2e9 */
    II(0x10156721, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156722, 0x5)   mov(ecx, 0xffffffff);                 /* mov ecx, 0xffffffff */
    II(0x10156727, 0x5)   mov(ebx, 0x2c);                       /* mov ebx, 0x2c */
    II(0x1015672c, 0x5)   mov(edx, 0x206);                      /* mov edx, 0x206 */
    II(0x10156731, 0x5)   mov(eax, 0x101c9c2c);                 /* mov eax, 0x101c9c2c */
    II(0x10156736, 0x5)   calld(0x10157aaa, 0x136f);            /* call 0x10157aaa */
    II(0x1015673b, 0x5)   calld(0x10164b38, 0xe3f8);            /* call 0x10164b38 */
    II(0x10156740, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156741, 0x5)   mov(eax, 0x101b02aa);                 /* mov eax, 0x101b02aa */ /* "" */
    II(0x10156746, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156747, 0x5)   mov(eax, 0x101b02ab);                 /* mov eax, 0x101b02ab */ /* "" */
    II(0x1015674c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015674d, 0x5)   mov(eax, 0x101b02ac);                 /* mov eax, 0x101b02ac */ /* "explosion" */
    II(0x10156752, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156753, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10156758, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156759, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015675b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015675c, 0x5)   mov(eax, 0xff);                       /* mov eax, 0xff */
    II(0x10156761, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156762, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156767, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156768, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015676d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015676e, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156773, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156774, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156779, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015677a, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015677f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156780, 0x5)   mov(eax, 0x2e9);                      /* mov eax, 0x2e9 */
    II(0x10156785, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156786, 0x5)   mov(ecx, 0xffffffff);                 /* mov ecx, 0xffffffff */
    II(0x1015678b, 0x5)   mov(ebx, 0x2d);                       /* mov ebx, 0x2d */
    II(0x10156790, 0x5)   mov(edx, 0x206);                      /* mov edx, 0x206 */
    II(0x10156795, 0x5)   mov(eax, 0x101c9c57);                 /* mov eax, 0x101c9c57 */
    II(0x1015679a, 0x5)   calld(0x10157aaa, 0x130b);            /* call 0x10157aaa */
    II(0x1015679f, 0x5)   calld(0x10164b38, 0xe394);            /* call 0x10164b38 */
    II(0x101567a4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101567a5, 0x5)   mov(eax, 0x101b02b6);                 /* mov eax, 0x101b02b6 */ /* "" */
    II(0x101567aa, 0x1)   pushd(eax);                           /* push eax */
    II(0x101567ab, 0x5)   mov(eax, 0x101b02b7);                 /* mov eax, 0x101b02b7 */ /* "" */
    II(0x101567b0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101567b1, 0x5)   mov(eax, 0x101b02b8);                 /* mov eax, 0x101b02b8 */ /* "explosion" */
    II(0x101567b6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101567b7, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x101567bc, 0x1)   pushd(eax);                           /* push eax */
    II(0x101567bd, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101567bf, 0x1)   pushd(eax);                           /* push eax */
    II(0x101567c0, 0x5)   mov(eax, 0xff);                       /* mov eax, 0xff */
    II(0x101567c5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101567c6, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101567cb, 0x1)   pushd(eax);                           /* push eax */
    II(0x101567cc, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101567d1, 0x1)   pushd(eax);                           /* push eax */
    II(0x101567d2, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101567d7, 0x1)   pushd(eax);                           /* push eax */
    II(0x101567d8, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101567dd, 0x1)   pushd(eax);                           /* push eax */
    II(0x101567de, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101567e3, 0x1)   pushd(eax);                           /* push eax */
    II(0x101567e4, 0x5)   mov(eax, 0x2eb);                      /* mov eax, 0x2eb */
    II(0x101567e9, 0x1)   pushd(eax);                           /* push eax */
    II(0x101567ea, 0x5)   mov(ecx, 0xffffffff);                 /* mov ecx, 0xffffffff */
    II(0x101567ef, 0x5)   mov(ebx, 0x2e);                       /* mov ebx, 0x2e */
    II(0x101567f4, 0x5)   mov(edx, 0x206);                      /* mov edx, 0x206 */
    II(0x101567f9, 0x5)   mov(eax, 0x101c9c82);                 /* mov eax, 0x101c9c82 */
    II(0x101567fe, 0x5)   calld(0x10157aaa, 0x12a7);            /* call 0x10157aaa */
    II(0x10156803, 0x5)   calld(0x10164b38, 0xe330);            /* call 0x10164b38 */
    II(0x10156808, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156809, 0x5)   mov(eax, 0x101b02c2);                 /* mov eax, 0x101b02c2 */ /* "" */
    II(0x1015680e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015680f, 0x5)   mov(eax, 0x101b02c3);                 /* mov eax, 0x101b02c3 */ /* "" */
    II(0x10156814, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156815, 0x5)   mov(eax, 0x101b02c4);                 /* mov eax, 0x101b02c4 */ /* "explosion" */
    II(0x1015681a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015681b, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10156820, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156821, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10156823, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156824, 0x5)   mov(eax, 0xff);                       /* mov eax, 0xff */
    II(0x10156829, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015682a, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015682f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156830, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156835, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156836, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015683b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015683c, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156841, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156842, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156847, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156848, 0x5)   mov(eax, 0x2ea);                      /* mov eax, 0x2ea */
    II(0x1015684d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015684e, 0x5)   mov(ecx, 0xffffffff);                 /* mov ecx, 0xffffffff */
    II(0x10156853, 0x5)   mov(ebx, 0x2f);                       /* mov ebx, 0x2f */
    II(0x10156858, 0x5)   mov(edx, 0x206);                      /* mov edx, 0x206 */
    II(0x1015685d, 0x5)   mov(eax, 0x101c9cad);                 /* mov eax, 0x101c9cad */
    II(0x10156862, 0x5)   calld(0x10157aaa, 0x1243);            /* call 0x10157aaa */
    II(0x10156867, 0x5)   calld(0x10164b38, 0xe2cc);            /* call 0x10164b38 */
    II(0x1015686c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015686d, 0x5)   mov(eax, 0x101b02ce);                 /* mov eax, 0x101b02ce */ /* "Specialized vehicle which transforms to become a new mining station." */
    II(0x10156872, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156873, 0x5)   mov(eax, 0x101b0313);                 /* mov eax, 0x101b0313 */ /* "Master Builders" */
    II(0x10156878, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156879, 0x5)   mov(eax, 0x101b0323);                 /* mov eax, 0x101b0323 */ /* "Master Builder" */
    II(0x1015687e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015687f, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10156884, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156885, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10156887, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156888, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1015688d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015688e, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156893, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156894, 0x5)   mov(eax, 0x73a);                      /* mov eax, 0x73a */
    II(0x10156899, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015689a, 0x5)   mov(eax, 0x36a);                      /* mov eax, 0x36a */
    II(0x1015689f, 0x1)   pushd(eax);                           /* push eax */
    II(0x101568a0, 0x5)   mov(eax, 0x716);                      /* mov eax, 0x716 */
    II(0x101568a5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101568a6, 0x5)   mov(eax, 0x48c);                      /* mov eax, 0x48c */
    II(0x101568ab, 0x1)   pushd(eax);                           /* push eax */
    II(0x101568ac, 0x5)   mov(eax, 0x2e1);                      /* mov eax, 0x2e1 */
    II(0x101568b1, 0x1)   pushd(eax);                           /* push eax */
    II(0x101568b2, 0x5)   mov(ecx, 0x87);                       /* mov ecx, 0x87 */
    II(0x101568b7, 0x5)   mov(ebx, 0x30);                       /* mov ebx, 0x30 */
    II(0x101568bc, 0x5)   mov(edx, 0x4600100);                  /* mov edx, 0x4600100 */
    II(0x101568c1, 0x5)   mov(eax, 0x101c9cd8);                 /* mov eax, 0x101c9cd8 */
    II(0x101568c6, 0x5)   calld(0x10157aaa, 0x11df);            /* call 0x10157aaa */
    II(0x101568cb, 0x5)   mov(eax, 0x101b0332);                 /* mov eax, 0x101b0332 */ /* "Constructors build large buildings like factories.  Click once on the constructor to select it, click a second time to show the Build button." */
    II(0x101568d0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101568d1, 0x5)   mov(eax, 0x101b03c0);                 /* mov eax, 0x101b03c0 */ /* "Large construction vehicle for creating large buildings, such as mines and factories.  A constructor consumes two material per turn while operating." */
    II(0x101568d6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101568d7, 0x5)   mov(eax, 0x101b0455);                 /* mov eax, 0x101b0455 */ /* "Constructors" */
    II(0x101568dc, 0x1)   pushd(eax);                           /* push eax */
    II(0x101568dd, 0x5)   mov(eax, 0x101b0462);                 /* mov eax, 0x101b0462 */ /* "Constructor" */
    II(0x101568e2, 0x1)   pushd(eax);                           /* push eax */
    II(0x101568e3, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x101568e8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101568e9, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101568ee, 0x1)   pushd(eax);                           /* push eax */
    II(0x101568ef, 0x5)   mov(eax, 0x7);                        /* mov eax, 0x7 */
    II(0x101568f4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101568f5, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101568fa, 0x1)   pushd(eax);                           /* push eax */
    II(0x101568fb, 0x5)   mov(eax, 0x73b);                      /* mov eax, 0x73b */
    II(0x10156900, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156901, 0x5)   mov(eax, 0x36b);                      /* mov eax, 0x36b */
    II(0x10156906, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156907, 0x5)   mov(eax, 0x717);                      /* mov eax, 0x717 */
    II(0x1015690c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015690d, 0x5)   mov(eax, 0x48d);                      /* mov eax, 0x48d */
    II(0x10156912, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156913, 0x5)   mov(eax, 0x2f2);                      /* mov eax, 0x2f2 */
    II(0x10156918, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156919, 0x5)   mov(ecx, 0x88);                       /* mov ecx, 0x88 */
    II(0x1015691e, 0x5)   mov(ebx, 0x31);                       /* mov ebx, 0x31 */
    II(0x10156923, 0x5)   mov(edx, 0x4684180);                  /* mov edx, 0x4684180 */
    II(0x10156928, 0x5)   mov(eax, 0x101c9d03);                 /* mov eax, 0x101c9d03 */
    II(0x1015692d, 0x5)   calld(0x10157aaa, 0x1178);            /* call 0x10157aaa */
    II(0x10156932, 0x5)   mov(eax, 0x101b046e);                 /* mov eax, 0x101b046e */ /* "A Scout can see a long way, and is very fast. It also has a small gun for harassing the enemy.  To move the Scout, click on it, and then click where you want to move.  To attack an enemy, move within 3 squares, and then click on the enemy." */
    II(0x10156937, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156938, 0x5)   mov(eax, 0x101b055e);                 /* mov eax, 0x101b055e */ /* "High speed scouting vehicle for exploration and spotting enemy units.  Can cross water without a bridge, but is faster on land.\n\nVery fast and good scan range, but much weaker than most combat units." */
    II(0x1015693d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015693e, 0x5)   mov(eax, 0x101b0626);                 /* mov eax, 0x101b0626 */ /* "Scouts" */
    II(0x10156943, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156944, 0x5)   mov(eax, 0x101b062d);                 /* mov eax, 0x101b062d */ /* "Scout" */
    II(0x10156949, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015694a, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x1015694f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156950, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10156952, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156953, 0x5)   mov(eax, 0x7);                        /* mov eax, 0x7 */
    II(0x10156958, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156959, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015695e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015695f, 0x5)   mov(eax, 0x73c);                      /* mov eax, 0x73c */
    II(0x10156964, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156965, 0x5)   mov(eax, 0x36c);                      /* mov eax, 0x36c */
    II(0x1015696a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015696b, 0x5)   mov(eax, 0x718);                      /* mov eax, 0x718 */
    II(0x10156970, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156971, 0x5)   mov(eax, 0x48e);                      /* mov eax, 0x48e */
    II(0x10156976, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156977, 0x5)   mov(eax, 0x2f2);                      /* mov eax, 0x2f2 */
    II(0x1015697c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015697d, 0x5)   mov(ecx, 0x89);                       /* mov ecx, 0x89 */
    II(0x10156982, 0x5)   mov(ebx, 0x32);                       /* mov ebx, 0x32 */
    II(0x10156987, 0x5)   mov(edx, 0x4624180);                  /* mov edx, 0x4624180 */
    II(0x1015698c, 0x5)   mov(eax, 0x101c9d2e);                 /* mov eax, 0x101c9d2e */
    II(0x10156991, 0x5)   calld(0x10157aaa, 0x1114);            /* call 0x10157aaa */
    II(0x10156996, 0x5)   mov(eax, 0x101b0633);                 /* mov eax, 0x101b0633 */ /* "Tanks are big and tough, but not as fast as scouts.  Like most units, tanks can either move or fire, but not always both.  If you don't move a tank, it can fire twice each turn.  If you move it a short way, it can fire once.  If you move it a long way, it can't fire at all." */
    II(0x1015699b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015699c, 0x5)   mov(eax, 0x101b0746);                 /* mov eax, 0x101b0746 */ /* "Heavily armored fighting vehicle.  Best used in the front line to prevent enemy units from reaching lightly-armored support units such as assault guns and rocket launchers." */
    II(0x101569a1, 0x1)   pushd(eax);                           /* push eax */
    II(0x101569a2, 0x5)   mov(eax, 0x101b07f3);                 /* mov eax, 0x101b07f3 */ /* "Tanks" */
    II(0x101569a7, 0x1)   pushd(eax);                           /* push eax */
    II(0x101569a8, 0x5)   mov(eax, 0x101b07f9);                 /* mov eax, 0x101b07f9 */ /* "Tank" */
    II(0x101569ad, 0x1)   pushd(eax);                           /* push eax */
    II(0x101569ae, 0x5)   mov(eax, 0x4d);                       /* mov eax, 0x4d */
    II(0x101569b3, 0x1)   pushd(eax);                           /* push eax */
    II(0x101569b4, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101569b6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101569b7, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101569bc, 0x1)   pushd(eax);                           /* push eax */
    II(0x101569bd, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101569c2, 0x1)   pushd(eax);                           /* push eax */
    II(0x101569c3, 0x5)   mov(eax, 0x73d);                      /* mov eax, 0x73d */
    II(0x101569c8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101569c9, 0x5)   mov(eax, 0x36d);                      /* mov eax, 0x36d */
    II(0x101569ce, 0x1)   pushd(eax);                           /* push eax */
    II(0x101569cf, 0x5)   mov(eax, 0x719);                      /* mov eax, 0x719 */
    II(0x101569d4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101569d5, 0x5)   mov(eax, 0x48f);                      /* mov eax, 0x48f */
    II(0x101569da, 0x1)   pushd(eax);                           /* push eax */
    II(0x101569db, 0x5)   mov(eax, 0x2e6);                      /* mov eax, 0x2e6 */
    II(0x101569e0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101569e1, 0x5)   mov(ecx, 0x8a);                       /* mov ecx, 0x8a */
    II(0x101569e6, 0x5)   mov(ebx, 0x33);                       /* mov ebx, 0x33 */
    II(0x101569eb, 0x5)   mov(edx, 0x6624100);                  /* mov edx, 0x6624100 */
    II(0x101569f0, 0x5)   mov(eax, 0x101c9d59);                 /* mov eax, 0x101c9d59 */
    II(0x101569f5, 0x5)   calld(0x10157aaa, 0x10b0);            /* call 0x10157aaa */
    II(0x101569fa, 0x5)   calld(0x10164b38, 0xe139);            /* call 0x10164b38 */
    II(0x101569ff, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156a00, 0x5)   mov(eax, 0x101b07fe);                 /* mov eax, 0x101b07fe */ /* "Lightly armored vehicle with a long range gun firing high-explosive shells.  Fast and effective on the attack, but fragile." */
    II(0x10156a05, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156a06, 0x5)   mov(eax, 0x101b087a);                 /* mov eax, 0x101b087a */ /* "Assault Guns" */
    II(0x10156a0b, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156a0c, 0x5)   mov(eax, 0x101b0887);                 /* mov eax, 0x101b0887 */ /* "Assault Gun" */
    II(0x10156a11, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156a12, 0x5)   mov(eax, 0x4d);                       /* mov eax, 0x4d */
    II(0x10156a17, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156a18, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10156a1a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156a1b, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10156a20, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156a21, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156a26, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156a27, 0x5)   mov(eax, 0x73e);                      /* mov eax, 0x73e */
    II(0x10156a2c, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156a2d, 0x5)   mov(eax, 0x36e);                      /* mov eax, 0x36e */
    II(0x10156a32, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156a33, 0x5)   mov(eax, 0x71a);                      /* mov eax, 0x71a */
    II(0x10156a38, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156a39, 0x5)   mov(eax, 0x490);                      /* mov eax, 0x490 */
    II(0x10156a3e, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156a3f, 0x5)   mov(eax, 0x2e2);                      /* mov eax, 0x2e2 */
    II(0x10156a44, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156a45, 0x5)   mov(ecx, 0x8b);                       /* mov ecx, 0x8b */
    II(0x10156a4a, 0x5)   mov(ebx, 0x34);                       /* mov ebx, 0x34 */
    II(0x10156a4f, 0x5)   mov(edx, 0x4624100);                  /* mov edx, 0x4624100 */
    II(0x10156a54, 0x5)   mov(eax, 0x101c9d84);                 /* mov eax, 0x101c9d84 */
    II(0x10156a59, 0x5)   calld(0x10157aaa, 0x104c);            /* call 0x10157aaa */
    II(0x10156a5e, 0x5)   calld(0x10164b38, 0xe0d5);            /* call 0x10164b38 */
    II(0x10156a63, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156a64, 0x5)   mov(eax, 0x101b0893);                 /* mov eax, 0x101b0893 */ /* "Lightly armored vehicle firing medium-range rockets which affect all units within 2 squares of the target.  Most effective against groups of enemy units." */
    II(0x10156a69, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156a6a, 0x5)   mov(eax, 0x101b092d);                 /* mov eax, 0x101b092d */ /* "Rocket Launchers" */
    II(0x10156a6f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156a70, 0x5)   mov(eax, 0x101b093e);                 /* mov eax, 0x101b093e */ /* "Rocket Launcher" */
    II(0x10156a75, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156a76, 0x5)   mov(eax, 0x4d);                       /* mov eax, 0x4d */
    II(0x10156a7b, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156a7c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10156a7e, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156a7f, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10156a84, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156a85, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156a8a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156a8b, 0x5)   mov(eax, 0x73f);                      /* mov eax, 0x73f */
    II(0x10156a90, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156a91, 0x5)   mov(eax, 0x36f);                      /* mov eax, 0x36f */
    II(0x10156a96, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156a97, 0x5)   mov(eax, 0x71b);                      /* mov eax, 0x71b */
    II(0x10156a9c, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156a9d, 0x5)   mov(eax, 0x491);                      /* mov eax, 0x491 */
    II(0x10156aa2, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156aa3, 0x5)   mov(eax, 0x2e2);                      /* mov eax, 0x2e2 */
    II(0x10156aa8, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156aa9, 0x5)   mov(ecx, 0x8c);                       /* mov ecx, 0x8c */
    II(0x10156aae, 0x5)   mov(ebx, 0x35);                       /* mov ebx, 0x35 */
    II(0x10156ab3, 0x5)   mov(edx, 0x4664100);                  /* mov edx, 0x4664100 */
    II(0x10156ab8, 0x5)   mov(eax, 0x101c9daf);                 /* mov eax, 0x101c9daf */
    II(0x10156abd, 0x5)   calld(0x10157aaa, 0xfe8);             /* call 0x10157aaa */
    II(0x10156ac2, 0x5)   calld(0x10164b38, 0xe071);            /* call 0x10164b38 */
    II(0x10156ac7, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156ac8, 0x5)   mov(eax, 0x101b094e);                 /* mov eax, 0x101b094e */ /* "Missile launcher on a lightly armored chassis.  This mobile launcher is slightly less sturdy than the stationary version, and requires more material to build.  However, the ability to move makes it much more flexible." */
    II(0x10156acd, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156ace, 0x5)   mov(eax, 0x101b0a28);                 /* mov eax, 0x101b0a28 */ /* "Missile Crawlers" */
    II(0x10156ad3, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156ad4, 0x5)   mov(eax, 0x101b0a39);                 /* mov eax, 0x101b0a39 */ /* "Missile Crawler" */
    II(0x10156ad9, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156ada, 0x5)   mov(eax, 0x4d);                       /* mov eax, 0x4d */
    II(0x10156adf, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156ae0, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10156ae2, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156ae3, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10156ae8, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156ae9, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156aee, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156aef, 0x5)   mov(eax, 0x740);                      /* mov eax, 0x740 */
    II(0x10156af4, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156af5, 0x5)   mov(eax, 0x370);                      /* mov eax, 0x370 */
    II(0x10156afa, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156afb, 0x5)   mov(eax, 0x71c);                      /* mov eax, 0x71c */
    II(0x10156b00, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156b01, 0x5)   mov(eax, 0x492);                      /* mov eax, 0x492 */
    II(0x10156b06, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156b07, 0x5)   mov(eax, 0x2e2);                      /* mov eax, 0x2e2 */
    II(0x10156b0c, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156b0d, 0x5)   mov(ecx, 0x8d);                       /* mov ecx, 0x8d */
    II(0x10156b12, 0x5)   mov(ebx, 0x36);                       /* mov ebx, 0x36 */
    II(0x10156b17, 0x5)   mov(edx, 0x4664100);                  /* mov edx, 0x4664100 */
    II(0x10156b1c, 0x5)   mov(eax, 0x101c9dda);                 /* mov eax, 0x101c9dda */
    II(0x10156b21, 0x5)   calld(0x10157aaa, 0xf84);             /* call 0x10157aaa */
    II(0x10156b26, 0x5)   calld(0x10164b38, 0xe00d);            /* call 0x10164b38 */
    II(0x10156b2b, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156b2c, 0x5)   mov(eax, 0x101b0a49);                 /* mov eax, 0x101b0a49 */ /* "Light, fast vehicle with a rapid fire cannon for shooting down enemy planes.  Mobile anti aircraft are generally defensive units, because they aren't as fast as planes, and can't move while firing.  Use them to protect an area once your fighters have chased away enemy ground attack planes." */
    II(0x10156b31, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156b32, 0x5)   mov(eax, 0x101b0b6c);                 /* mov eax, 0x101b0b6c */ /* "Mobile Anti Aircraft" */
    II(0x10156b37, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156b38, 0x5)   mov(eax, 0x101b0b81);                 /* mov eax, 0x101b0b81 */ /* "Mobile Anti Aircraft" */
    II(0x10156b3d, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156b3e, 0x5)   mov(eax, 0x4d);                       /* mov eax, 0x4d */
    II(0x10156b43, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156b44, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10156b46, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156b47, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10156b4c, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156b4d, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156b52, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156b53, 0x5)   mov(eax, 0x741);                      /* mov eax, 0x741 */
    II(0x10156b58, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156b59, 0x5)   mov(eax, 0x371);                      /* mov eax, 0x371 */
    II(0x10156b5e, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156b5f, 0x5)   mov(eax, 0x71d);                      /* mov eax, 0x71d */
    II(0x10156b64, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156b65, 0x5)   mov(eax, 0x493);                      /* mov eax, 0x493 */
    II(0x10156b6a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156b6b, 0x5)   mov(eax, 0x2e8);                      /* mov eax, 0x2e8 */
    II(0x10156b70, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156b71, 0x5)   mov(ecx, 0x8e);                       /* mov ecx, 0x8e */
    II(0x10156b76, 0x5)   mov(ebx, 0x37);                       /* mov ebx, 0x37 */
    II(0x10156b7b, 0x5)   mov(edx, 0x6624100);                  /* mov edx, 0x6624100 */
    II(0x10156b80, 0x5)   mov(eax, 0x101c9e05);                 /* mov eax, 0x101c9e05 */
    II(0x10156b85, 0x5)   calld(0x10157aaa, 0xf20);             /* call 0x10157aaa */
    II(0x10156b8a, 0x5)   calld(0x10164b38, 0xdfa9);            /* call 0x10164b38 */
    II(0x10156b8f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156b90, 0x5)   mov(eax, 0x101b0b96);                 /* mov eax, 0x101b0b96 */ /* "Minelayers are specialized construction vehicles which place, detect, and remove mines.  Minelayers convert onboard raw materials into mines.  They can also remove those mines later and convert them back into materials.  They cannot remove enemy minefields - those most be exploded with gunfire and rockets." */
    II(0x10156b95, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156b96, 0x5)   mov(eax, 0x101b0cca);                 /* mov eax, 0x101b0cca */ /* "Mine Layers" */
    II(0x10156b9b, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156b9c, 0x5)   mov(eax, 0x101b0cd6);                 /* mov eax, 0x101b0cd6 */ /* "Mine Layer" */
    II(0x10156ba1, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156ba2, 0x5)   mov(eax, 0x4d);                       /* mov eax, 0x4d */
    II(0x10156ba7, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156ba8, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10156bad, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156bae, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10156bb3, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156bb4, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156bb9, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156bba, 0x5)   mov(eax, 0x742);                      /* mov eax, 0x742 */
    II(0x10156bbf, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156bc0, 0x5)   mov(eax, 0x372);                      /* mov eax, 0x372 */
    II(0x10156bc5, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156bc6, 0x5)   mov(eax, 0x71e);                      /* mov eax, 0x71e */
    II(0x10156bcb, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156bcc, 0x5)   mov(eax, 0x494);                      /* mov eax, 0x494 */
    II(0x10156bd1, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156bd2, 0x5)   mov(eax, 0x2e1);                      /* mov eax, 0x2e1 */
    II(0x10156bd7, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156bd8, 0x5)   mov(ecx, 0x8f);                       /* mov ecx, 0x8f */
    II(0x10156bdd, 0x5)   mov(ebx, 0x38);                       /* mov ebx, 0x38 */
    II(0x10156be2, 0x5)   mov(edx, 0x4604100);                  /* mov edx, 0x4604100 */
    II(0x10156be7, 0x5)   mov(eax, 0x101c9e30);                 /* mov eax, 0x101c9e30 */
    II(0x10156bec, 0x5)   calld(0x10157aaa, 0xeb9);             /* call 0x10157aaa */
    II(0x10156bf1, 0x5)   mov(eax, 0x101b0ce1);                 /* mov eax, 0x101b0ce1 */ /* "Surveyors spot minerals under the ground. To find a good spot for a mining station, move the surveyor around until you find a square with a white 'Raw Materials' symbol.  This may take several turns." */
    II(0x10156bf6, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156bf7, 0x5)   mov(eax, 0x101b0da9);                 /* mov eax, 0x101b0da9 */ /* "Light, amphibious vehicle with sophisticated sensors for detecting underground minerals and enemy mines.  Unlike most amphibious units, surveyors are just as fast on water as on land." */
    II(0x10156bfc, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156bfd, 0x5)   mov(eax, 0x101b0e61);                 /* mov eax, 0x101b0e61 */ /* "Surveyors" */
    II(0x10156c02, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156c03, 0x5)   mov(eax, 0x101b0e6b);                 /* mov eax, 0x101b0e6b */ /* "Surveyor" */
    II(0x10156c08, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156c09, 0x5)   mov(eax, 0x4d);                       /* mov eax, 0x4d */
    II(0x10156c0e, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156c0f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10156c11, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156c12, 0x5)   mov(eax, 0x7);                        /* mov eax, 0x7 */
    II(0x10156c17, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156c18, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156c1d, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156c1e, 0x5)   mov(eax, 0x743);                      /* mov eax, 0x743 */
    II(0x10156c23, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156c24, 0x5)   mov(eax, 0x373);                      /* mov eax, 0x373 */
    II(0x10156c29, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156c2a, 0x5)   mov(eax, 0x71f);                      /* mov eax, 0x71f */
    II(0x10156c2f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156c30, 0x5)   mov(eax, 0x495);                      /* mov eax, 0x495 */
    II(0x10156c35, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156c36, 0x5)   mov(eax, 0x2f2);                      /* mov eax, 0x2f2 */
    II(0x10156c3b, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156c3c, 0x5)   mov(ecx, 0x90);                       /* mov ecx, 0x90 */
    II(0x10156c41, 0x5)   mov(ebx, 0x39);                       /* mov ebx, 0x39 */
    II(0x10156c46, 0x5)   mov(edx, 0x4604180);                  /* mov edx, 0x4604180 */
    II(0x10156c4b, 0x5)   mov(eax, 0x101c9e5b);                 /* mov eax, 0x101c9e5b */
    II(0x10156c50, 0x5)   calld(0x10157aaa, 0xe55);             /* call 0x10157aaa */
    II(0x10156c55, 0x5)   calld(0x10164b38, 0xdede);            /* call 0x10164b38 */
    II(0x10156c5a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156c5b, 0x5)   mov(eax, 0x101b0e74);                 /* mov eax, 0x101b0e74 */ /* "Mobile radar platform.  Slower and more expensive than a scout, but with a better scan range.  A scanner is an excellent way to spot targets for very long ranged units like missile crawlers." */
    II(0x10156c60, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156c61, 0x5)   mov(eax, 0x101b0f33);                 /* mov eax, 0x101b0f33 */ /* "Scanners" */
    II(0x10156c66, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156c67, 0x5)   mov(eax, 0x101b0f3c);                 /* mov eax, 0x101b0f3c */ /* "Scanner" */
    II(0x10156c6c, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156c6d, 0x5)   mov(eax, 0x4d);                       /* mov eax, 0x4d */
    II(0x10156c72, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156c73, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10156c75, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156c76, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10156c7b, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156c7c, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156c81, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156c82, 0x5)   mov(eax, 0x744);                      /* mov eax, 0x744 */
    II(0x10156c87, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156c88, 0x5)   mov(eax, 0x374);                      /* mov eax, 0x374 */
    II(0x10156c8d, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156c8e, 0x5)   mov(eax, 0x720);                      /* mov eax, 0x720 */
    II(0x10156c93, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156c94, 0x5)   mov(eax, 0x496);                      /* mov eax, 0x496 */
    II(0x10156c99, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156c9a, 0x5)   mov(eax, 0x2fc);                      /* mov eax, 0x2fc */
    II(0x10156c9f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156ca0, 0x5)   mov(ecx, 0x91);                       /* mov ecx, 0x91 */
    II(0x10156ca5, 0x5)   mov(ebx, 0x3a);                       /* mov ebx, 0x3a */
    II(0x10156caa, 0x5)   mov(edx, 0xc604100);                  /* mov edx, 0xc604100 */
    II(0x10156caf, 0x5)   mov(eax, 0x101c9e86);                 /* mov eax, 0x101c9e86 */
    II(0x10156cb4, 0x5)   calld(0x10157aaa, 0xdf1);             /* call 0x10157aaa */
    II(0x10156cb9, 0x5)   calld(0x10164b38, 0xde7a);            /* call 0x10164b38 */
    II(0x10156cbe, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156cbf, 0x5)   mov(eax, 0x101b0f44);                 /* mov eax, 0x101b0f44 */ /* "Truck for hauling raw material.  Useful for resupplying engineers and constructors, and for supplying combat units with new ammunition." */
    II(0x10156cc4, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156cc5, 0x5)   mov(eax, 0x101b0fcc);                 /* mov eax, 0x101b0fcc */ /* "Supply Trucks" */
    II(0x10156cca, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156ccb, 0x5)   mov(eax, 0x101b0fda);                 /* mov eax, 0x101b0fda */ /* "Supply Truck" */
    II(0x10156cd0, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156cd1, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10156cd6, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156cd7, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10156cdc, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156cdd, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10156ce2, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156ce3, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156ce8, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156ce9, 0x5)   mov(eax, 0x745);                      /* mov eax, 0x745 */
    II(0x10156cee, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156cef, 0x5)   mov(eax, 0x375);                      /* mov eax, 0x375 */
    II(0x10156cf4, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156cf5, 0x5)   mov(eax, 0x721);                      /* mov eax, 0x721 */
    II(0x10156cfa, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156cfb, 0x5)   mov(eax, 0x497);                      /* mov eax, 0x497 */
    II(0x10156d00, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156d01, 0x5)   mov(eax, 0x2e1);                      /* mov eax, 0x2e1 */
    II(0x10156d06, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156d07, 0x5)   mov(ecx, 0x92);                       /* mov ecx, 0x92 */
    II(0x10156d0c, 0x5)   mov(ebx, 0x3b);                       /* mov ebx, 0x3b */
    II(0x10156d11, 0x5)   mov(edx, 0x4604100);                  /* mov edx, 0x4604100 */
    II(0x10156d16, 0x5)   mov(eax, 0x101c9eb1);                 /* mov eax, 0x101c9eb1 */
    II(0x10156d1b, 0x5)   calld(0x10157aaa, 0xd8a);             /* call 0x10157aaa */
    II(0x10156d20, 0x5)   calld(0x10164b38, 0xde13);            /* call 0x10164b38 */
    II(0x10156d25, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156d26, 0x5)   mov(eax, 0x101b0fe7);                 /* mov eax, 0x101b0fe7 */ /* "Unit for moving gold ore from one location to another." */
    II(0x10156d2b, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156d2c, 0x5)   mov(eax, 0x101b101e);                 /* mov eax, 0x101b101e */ /* "Gold Trucks" */
    II(0x10156d31, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156d32, 0x5)   mov(eax, 0x101b102a);                 /* mov eax, 0x101b102a */ /* "Gold Truck" */
    II(0x10156d37, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156d38, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10156d3d, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156d3e, 0x5)   mov(eax, 0x3);                        /* mov eax, 0x3 */
    II(0x10156d43, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156d44, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10156d49, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156d4a, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156d4f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156d50, 0x5)   mov(eax, 0x746);                      /* mov eax, 0x746 */
    II(0x10156d55, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156d56, 0x5)   mov(eax, 0x376);                      /* mov eax, 0x376 */
    II(0x10156d5b, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156d5c, 0x5)   mov(eax, 0x722);                      /* mov eax, 0x722 */
    II(0x10156d61, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156d62, 0x5)   mov(eax, 0x498);                      /* mov eax, 0x498 */
    II(0x10156d67, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156d68, 0x5)   mov(eax, 0x2e1);                      /* mov eax, 0x2e1 */
    II(0x10156d6d, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156d6e, 0x5)   mov(ecx, 0x93);                       /* mov ecx, 0x93 */
    II(0x10156d73, 0x5)   mov(ebx, 0x3c);                       /* mov ebx, 0x3c */
    II(0x10156d78, 0x5)   mov(edx, 0x4604100);                  /* mov edx, 0x4604100 */
    II(0x10156d7d, 0x5)   mov(eax, 0x101c9edc);                 /* mov eax, 0x101c9edc */
    II(0x10156d82, 0x5)   calld(0x10157aaa, 0xd23);             /* call 0x10157aaa */
    II(0x10156d87, 0x5)   mov(eax, 0x101b1035);                 /* mov eax, 0x101b1035 */ /* "You have an engineer selected.  To show the build button, click again on the engineer.  Click on any other unit to select that unit." */
    II(0x10156d8c, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156d8d, 0x5)   mov(eax, 0x101b10ba);                 /* mov eax, 0x101b10ba */ /* "Small construction vehicle for creating small buildings and stationary weapons." */
    II(0x10156d92, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156d93, 0x5)   mov(eax, 0x101b110a);                 /* mov eax, 0x101b110a */ /* "Engineers" */
    II(0x10156d98, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156d99, 0x5)   mov(eax, 0x101b1114);                 /* mov eax, 0x101b1114 */ /* "Engineer" */
    II(0x10156d9e, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156d9f, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10156da4, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156da5, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10156daa, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156dab, 0x5)   mov(eax, 0x7);                        /* mov eax, 0x7 */
    II(0x10156db0, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156db1, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156db6, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156db7, 0x5)   mov(eax, 0x747);                      /* mov eax, 0x747 */
    II(0x10156dbc, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156dbd, 0x5)   mov(eax, 0x377);                      /* mov eax, 0x377 */
    II(0x10156dc2, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156dc3, 0x5)   mov(eax, 0x723);                      /* mov eax, 0x723 */
    II(0x10156dc8, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156dc9, 0x5)   mov(eax, 0x499);                      /* mov eax, 0x499 */
    II(0x10156dce, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156dcf, 0x5)   mov(eax, 0x2f2);                      /* mov eax, 0x2f2 */
    II(0x10156dd4, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156dd5, 0x5)   mov(ecx, 0x94);                       /* mov ecx, 0x94 */
    II(0x10156dda, 0x5)   mov(ebx, 0x3d);                       /* mov ebx, 0x3d */
    II(0x10156ddf, 0x5)   mov(edx, 0x4684180);                  /* mov edx, 0x4684180 */
    II(0x10156de4, 0x5)   mov(eax, 0x101c9f07);                 /* mov eax, 0x101c9f07 */
    II(0x10156de9, 0x5)   calld(0x10157aaa, 0xcbc);             /* call 0x10157aaa */
    II(0x10156dee, 0x5)   calld(0x10164b38, 0xdd45);            /* call 0x10164b38 */
    II(0x10156df3, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156df4, 0x5)   mov(eax, 0x101b111d);                 /* mov eax, 0x101b111d */ /* "Vehicle for clearing rubble and demolishing buildings. Bulldozers can scavenge material from debris." */
    II(0x10156df9, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156dfa, 0x5)   mov(eax, 0x101b1182);                 /* mov eax, 0x101b1182 */ /* "Bulldozers" */
    II(0x10156dff, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156e00, 0x5)   mov(eax, 0x101b118d);                 /* mov eax, 0x101b118d */ /* "Bulldozer" */
    II(0x10156e05, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156e06, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10156e0b, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156e0c, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10156e11, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156e12, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10156e17, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156e18, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156e1d, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156e1e, 0x5)   mov(eax, 0x748);                      /* mov eax, 0x748 */
    II(0x10156e23, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156e24, 0x5)   mov(eax, 0x378);                      /* mov eax, 0x378 */
    II(0x10156e29, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156e2a, 0x5)   mov(eax, 0x724);                      /* mov eax, 0x724 */
    II(0x10156e2f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156e30, 0x5)   mov(eax, 0x49a);                      /* mov eax, 0x49a */
    II(0x10156e35, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156e36, 0x5)   mov(eax, 0x2e1);                      /* mov eax, 0x2e1 */
    II(0x10156e3b, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156e3c, 0x5)   mov(ecx, 0x95);                       /* mov ecx, 0x95 */
    II(0x10156e41, 0x5)   mov(ebx, 0x3e);                       /* mov ebx, 0x3e */
    II(0x10156e46, 0x5)   mov(edx, 0x4604100);                  /* mov edx, 0x4604100 */
    II(0x10156e4b, 0x5)   mov(eax, 0x101c9f32);                 /* mov eax, 0x101c9f32 */
    II(0x10156e50, 0x5)   calld(0x10157aaa, 0xc55);             /* call 0x10157aaa */
    II(0x10156e55, 0x5)   calld(0x10164b38, 0xdcde);            /* call 0x10164b38 */
    II(0x10156e5a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156e5b, 0x5)   mov(eax, 0x101b1197);                 /* mov eax, 0x101b1197 */ /* "Light vehicle which can rapidly repair ground units and buildings.  Repairs require materials.  The most extensive the damage, the more materials the repair requires.  Depots, docks, hangars, and barracks can also repair units." */
    II(0x10156e60, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156e61, 0x5)   mov(eax, 0x101b127b);                 /* mov eax, 0x101b127b */ /* "Repair Units" */
    II(0x10156e66, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156e67, 0x5)   mov(eax, 0x101b1288);                 /* mov eax, 0x101b1288 */ /* "Repair Unit" */
    II(0x10156e6c, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156e6d, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10156e72, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156e73, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10156e78, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156e79, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10156e7e, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156e7f, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156e84, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156e85, 0x5)   mov(eax, 0x749);                      /* mov eax, 0x749 */
    II(0x10156e8a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156e8b, 0x5)   mov(eax, 0x379);                      /* mov eax, 0x379 */
    II(0x10156e90, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156e91, 0x5)   mov(eax, 0x725);                      /* mov eax, 0x725 */
    II(0x10156e96, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156e97, 0x5)   mov(eax, 0x49b);                      /* mov eax, 0x49b */
    II(0x10156e9c, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156e9d, 0x5)   mov(eax, 0x2e1);                      /* mov eax, 0x2e1 */
    II(0x10156ea2, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156ea3, 0x5)   mov(ecx, 0x96);                       /* mov ecx, 0x96 */
    II(0x10156ea8, 0x5)   mov(ebx, 0x3f);                       /* mov ebx, 0x3f */
    II(0x10156ead, 0x5)   mov(edx, 0x4604100);                  /* mov edx, 0x4604100 */
    II(0x10156eb2, 0x5)   mov(eax, 0x101c9f5d);                 /* mov eax, 0x101c9f5d */
    II(0x10156eb7, 0x5)   calld(0x10157aaa, 0xbee);             /* call 0x10157aaa */
    II(0x10156ebc, 0x5)   calld(0x10164b38, 0xdc77);            /* call 0x10164b38 */
    II(0x10156ec1, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156ec2, 0x5)   mov(eax, 0x101b1294);                 /* mov eax, 0x101b1294 */ /* "Truck for moving fuel." */
    II(0x10156ec7, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156ec8, 0x5)   mov(eax, 0x101b12ab);                 /* mov eax, 0x101b12ab */ /* "Fuel Trucks" */
    II(0x10156ecd, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156ece, 0x5)   mov(eax, 0x101b12b7);                 /* mov eax, 0x101b12b7 */ /* "Fuel Truck" */
    II(0x10156ed3, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156ed4, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10156ed9, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156eda, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x10156edf, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156ee0, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10156ee5, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156ee6, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156eeb, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156eec, 0x5)   mov(eax, 0x74a);                      /* mov eax, 0x74a */
    II(0x10156ef1, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156ef2, 0x5)   mov(eax, 0x37a);                      /* mov eax, 0x37a */
    II(0x10156ef7, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156ef8, 0x5)   mov(eax, 0x726);                      /* mov eax, 0x726 */
    II(0x10156efd, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156efe, 0x5)   mov(eax, 0x49c);                      /* mov eax, 0x49c */
    II(0x10156f03, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156f04, 0x5)   mov(eax, 0x2e1);                      /* mov eax, 0x2e1 */
    II(0x10156f09, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156f0a, 0x5)   mov(ecx, 0x97);                       /* mov ecx, 0x97 */
    II(0x10156f0f, 0x5)   mov(ebx, 0x40);                       /* mov ebx, 0x40 */
    II(0x10156f14, 0x5)   mov(edx, 0x4604100);                  /* mov edx, 0x4604100 */
    II(0x10156f19, 0x5)   mov(eax, 0x101c9f88);                 /* mov eax, 0x101c9f88 */
    II(0x10156f1e, 0x5)   calld(0x10157aaa, 0xb87);             /* call 0x10157aaa */
    II(0x10156f23, 0x5)   calld(0x10164b38, 0xdc10);            /* call 0x10164b38 */
    II(0x10156f28, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156f29, 0x5)   mov(eax, 0x101b12c2);                 /* mov eax, 0x101b12c2 */ /* "Fast armored to transport infantry and infiltrators.  The APC can move slowly underwater as well as on land.  Only enemy corvettes can detect an APC moving underwater." */
    II(0x10156f2e, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156f2f, 0x5)   mov(eax, 0x101b136a);                 /* mov eax, 0x101b136a */ /* "Personnel Carriers" */
    II(0x10156f34, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156f35, 0x5)   mov(eax, 0x101b137d);                 /* mov eax, 0x101b137d */ /* "Personnel Carrier" */
    II(0x10156f3a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156f3b, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10156f40, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156f41, 0x5)   mov(eax, 0x4);                        /* mov eax, 0x4 */
    II(0x10156f46, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156f47, 0x5)   mov(eax, 0x7);                        /* mov eax, 0x7 */
    II(0x10156f4c, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156f4d, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156f52, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156f53, 0x5)   mov(eax, 0x74b);                      /* mov eax, 0x74b */
    II(0x10156f58, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156f59, 0x5)   mov(eax, 0x37b);                      /* mov eax, 0x37b */
    II(0x10156f5e, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156f5f, 0x5)   mov(eax, 0x727);                      /* mov eax, 0x727 */
    II(0x10156f64, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156f65, 0x5)   mov(eax, 0x49d);                      /* mov eax, 0x49d */
    II(0x10156f6a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156f6b, 0x5)   mov(eax, 0x2e1);                      /* mov eax, 0x2e1 */
    II(0x10156f70, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156f71, 0x5)   mov(ecx, 0x98);                       /* mov ecx, 0x98 */
    II(0x10156f76, 0x5)   mov(ebx, 0x41);                       /* mov ebx, 0x41 */
    II(0x10156f7b, 0x5)   mov(edx, 0x4604180);                  /* mov edx, 0x4604180 */
    II(0x10156f80, 0x5)   mov(eax, 0x101c9fb3);                 /* mov eax, 0x101c9fb3 */
    II(0x10156f85, 0x5)   calld(0x10157aaa, 0xb20);             /* call 0x10157aaa */
    II(0x10156f8a, 0x5)   calld(0x10164b38, 0xdba9);            /* call 0x10164b38 */
    II(0x10156f8f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156f90, 0x5)   mov(eax, 0x101b138f);                 /* mov eax, 0x101b138f */ /* "Commando trained in the arts of stealth and electronic warfare.  Infiltrators can disable or capture enemy units. Infiltrators are normally invisible until they make a mistake trying to capture enemy units, or until spotted by infantry or infiltrators." */
    II(0x10156f95, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156f96, 0x5)   mov(eax, 0x101b148c);                 /* mov eax, 0x101b148c */ /* "Infiltrators" */
    II(0x10156f9b, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156f9c, 0x5)   mov(eax, 0x101b1499);                 /* mov eax, 0x101b1499 */ /* "Infiltrator" */
    II(0x10156fa1, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156fa2, 0x5)   mov(eax, 0x4d);                       /* mov eax, 0x4d */
    II(0x10156fa7, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156fa8, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10156faa, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156fab, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x10156fb0, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156fb1, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10156fb6, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156fb7, 0x5)   mov(eax, 0x74c);                      /* mov eax, 0x74c */
    II(0x10156fbc, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156fbd, 0x5)   mov(eax, 0x37c);                      /* mov eax, 0x37c */
    II(0x10156fc2, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156fc3, 0x5)   mov(eax, 0x728);                      /* mov eax, 0x728 */
    II(0x10156fc8, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156fc9, 0x5)   mov(eax, 0x49e);                      /* mov eax, 0x49e */
    II(0x10156fce, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156fcf, 0x5)   mov(eax, 0x2f5);                      /* mov eax, 0x2f5 */
    II(0x10156fd4, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156fd5, 0x5)   mov(ecx, 0x99);                       /* mov ecx, 0x99 */
    II(0x10156fda, 0x5)   mov(ebx, 0x42);                       /* mov ebx, 0x42 */
    II(0x10156fdf, 0x5)   mov(edx, 0x4424100);                  /* mov edx, 0x4424100 */
    II(0x10156fe4, 0x5)   mov(eax, 0x101c9fde);                 /* mov eax, 0x101c9fde */
    II(0x10156fe9, 0x5)   calld(0x10157aaa, 0xabc);             /* call 0x10157aaa */
    II(0x10156fee, 0x5)   calld(0x10164b38, 0xdb45);            /* call 0x10164b38 */
    II(0x10156ff3, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156ff4, 0x5)   mov(eax, 0x101b14a5);                 /* mov eax, 0x101b14a5 */ /* "Human soldiers equipped with light anti-tank shoulder weapons.  Infantry can spot enemy inflitrators." */
    II(0x10156ff9, 0x1)   pushd(eax);                           /* push eax */
    II(0x10156ffa, 0x5)   mov(eax, 0x101b150b);                 /* mov eax, 0x101b150b */ /* "Infantry" */
    II(0x10156fff, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157000, 0x5)   mov(eax, 0x101b1514);                 /* mov eax, 0x101b1514 */ /* "Infantry" */
    II(0x10157005, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157006, 0x5)   mov(eax, 0x4d);                       /* mov eax, 0x4d */
    II(0x1015700b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015700c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015700e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015700f, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x10157014, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157015, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015701a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015701b, 0x5)   mov(eax, 0x74d);                      /* mov eax, 0x74d */
    II(0x10157020, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157021, 0x5)   mov(eax, 0x37d);                      /* mov eax, 0x37d */
    II(0x10157026, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157027, 0x5)   mov(eax, 0x729);                      /* mov eax, 0x729 */
    II(0x1015702c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015702d, 0x5)   mov(eax, 0x49f);                      /* mov eax, 0x49f */
    II(0x10157032, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157033, 0x5)   mov(eax, 0x2f6);                      /* mov eax, 0x2f6 */
    II(0x10157038, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157039, 0x5)   mov(ecx, 0x9a);                       /* mov ecx, 0x9a */
    II(0x1015703e, 0x5)   mov(ebx, 0x43);                       /* mov ebx, 0x43 */
    II(0x10157043, 0x5)   mov(edx, 0x4424100);                  /* mov edx, 0x4424100 */
    II(0x10157048, 0x5)   mov(eax, 0x101ca009);                 /* mov eax, 0x101ca009 */
    II(0x1015704d, 0x5)   calld(0x10157aaa, 0xa58);             /* call 0x10157aaa */
    II(0x10157052, 0x5)   calld(0x10164b38, 0xdae1);            /* call 0x10164b38 */
    II(0x10157057, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157058, 0x5)   mov(eax, 0x101b151d);                 /* mov eax, 0x101b151d */ /* "High speed boat with good radar and rapid fire anti aircraft cannon.  Escorts are the eyes of a fleet, and a fleet's protection from planes." */
    II(0x1015705d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015705e, 0x5)   mov(eax, 0x101b15aa);                 /* mov eax, 0x101b15aa */ /* "Escorts" */
    II(0x10157063, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157064, 0x5)   mov(eax, 0x101b15b2);                 /* mov eax, 0x101b15b2 */ /* "Escort" */
    II(0x10157069, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015706a, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x1015706f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157070, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10157072, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157073, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x10157078, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157079, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015707e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015707f, 0x5)   mov(eax, 0x74e);                      /* mov eax, 0x74e */
    II(0x10157084, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157085, 0x5)   mov(eax, 0x37e);                      /* mov eax, 0x37e */
    II(0x1015708a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015708b, 0x5)   mov(eax, 0x72a);                      /* mov eax, 0x72a */
    II(0x10157090, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157091, 0x5)   mov(eax, 0x4a0);                      /* mov eax, 0x4a0 */
    II(0x10157096, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157097, 0x5)   mov(eax, 0x2fa);                      /* mov eax, 0x2fa */
    II(0x1015709c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015709d, 0x5)   mov(ecx, 0x9b);                       /* mov ecx, 0x9b */
    II(0x101570a2, 0x5)   mov(ebx, 0x44);                       /* mov ebx, 0x44 */
    II(0x101570a7, 0x5)   mov(edx, 0x6624080);                  /* mov edx, 0x6624080 */
    II(0x101570ac, 0x5)   mov(eax, 0x101ca034);                 /* mov eax, 0x101ca034 */
    II(0x101570b1, 0x5)   calld(0x10157aaa, 0x9f4);             /* call 0x10157aaa */
    II(0x101570b6, 0x5)   calld(0x10164b38, 0xda7d);            /* call 0x10164b38 */
    II(0x101570bb, 0x1)   pushd(eax);                           /* push eax */
    II(0x101570bc, 0x5)   mov(eax, 0x101b15b9);                 /* mov eax, 0x101b15b9 */ /* "High speed boat with torpedo tubes and sonar.  Corvettes can attack any sea unit, but their real strength is their ability to spot and attack submarines." */
    II(0x101570c1, 0x1)   pushd(eax);                           /* push eax */
    II(0x101570c2, 0x5)   mov(eax, 0x101b1653);                 /* mov eax, 0x101b1653 */ /* "Corvettes" */
    II(0x101570c7, 0x1)   pushd(eax);                           /* push eax */
    II(0x101570c8, 0x5)   mov(eax, 0x101b165d);                 /* mov eax, 0x101b165d */ /* "Corvette" */
    II(0x101570cd, 0x1)   pushd(eax);                           /* push eax */
    II(0x101570ce, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x101570d3, 0x1)   pushd(eax);                           /* push eax */
    II(0x101570d4, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101570d6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101570d7, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x101570dc, 0x1)   pushd(eax);                           /* push eax */
    II(0x101570dd, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101570e2, 0x1)   pushd(eax);                           /* push eax */
    II(0x101570e3, 0x5)   mov(eax, 0x74f);                      /* mov eax, 0x74f */
    II(0x101570e8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101570e9, 0x5)   mov(eax, 0x37f);                      /* mov eax, 0x37f */
    II(0x101570ee, 0x1)   pushd(eax);                           /* push eax */
    II(0x101570ef, 0x5)   mov(eax, 0x72b);                      /* mov eax, 0x72b */
    II(0x101570f4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101570f5, 0x5)   mov(eax, 0x4a1);                      /* mov eax, 0x4a1 */
    II(0x101570fa, 0x1)   pushd(eax);                           /* push eax */
    II(0x101570fb, 0x5)   mov(eax, 0x2e2);                      /* mov eax, 0x2e2 */
    II(0x10157100, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157101, 0x5)   mov(ecx, 0x9c);                       /* mov ecx, 0x9c */
    II(0x10157106, 0x5)   mov(ebx, 0x45);                       /* mov ebx, 0x45 */
    II(0x1015710b, 0x5)   mov(edx, 0x4664080);                  /* mov edx, 0x4664080 */
    II(0x10157110, 0x5)   mov(eax, 0x101ca05f);                 /* mov eax, 0x101ca05f */
    II(0x10157115, 0x5)   calld(0x10157aaa, 0x990);             /* call 0x10157aaa */
    II(0x1015711a, 0x5)   calld(0x10164b38, 0xda19);            /* call 0x10164b38 */
    II(0x1015711f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157120, 0x5)   mov(eax, 0x101b1666);                 /* mov eax, 0x101b1666 */ /* "Heavily armored ship with a high caliber, medium range cannon.  Excellent at destroying other ships and bombarding shore targets." */
    II(0x10157125, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157126, 0x5)   mov(eax, 0x101b16e8);                 /* mov eax, 0x101b16e8 */ /* "Gunboat" */
    II(0x1015712b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015712c, 0x5)   mov(eax, 0x101b16f0);                 /* mov eax, 0x101b16f0 */ /* "Gunboat" */
    II(0x10157131, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157132, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10157137, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157138, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015713a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015713b, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x10157140, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157141, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10157146, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157147, 0x5)   mov(eax, 0x750);                      /* mov eax, 0x750 */
    II(0x1015714c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015714d, 0x5)   mov(eax, 0x380);                      /* mov eax, 0x380 */
    II(0x10157152, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157153, 0x5)   mov(eax, 0x72c);                      /* mov eax, 0x72c */
    II(0x10157158, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157159, 0x5)   mov(eax, 0x4a2);                      /* mov eax, 0x4a2 */
    II(0x1015715e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015715f, 0x5)   mov(eax, 0x2f3);                      /* mov eax, 0x2f3 */
    II(0x10157164, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157165, 0x5)   mov(ecx, 0x9d);                       /* mov ecx, 0x9d */
    II(0x1015716a, 0x5)   mov(ebx, 0x46);                       /* mov ebx, 0x46 */
    II(0x1015716f, 0x5)   mov(edx, 0x6624080);                  /* mov edx, 0x6624080 */
    II(0x10157174, 0x5)   mov(eax, 0x101ca08a);                 /* mov eax, 0x101ca08a */
    II(0x10157179, 0x5)   calld(0x10157aaa, 0x92c);             /* call 0x10157aaa */
    II(0x1015717e, 0x5)   calld(0x10164b38, 0xd9b5);            /* call 0x10164b38 */
    II(0x10157183, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157184, 0x5)   mov(eax, 0x101b16f8);                 /* mov eax, 0x101b16f8 */ /* "Lurking beneath the surface, submarines must sneak close to the enemy to fire their powerful torpedoes.  Submarines do not carry active sonar, which might reveal their positions.  Only corvettes can spot a submarine before it fires.  Only submarines, corvettes, and ground attack planes can attack them." */
    II(0x10157189, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015718a, 0x5)   mov(eax, 0x101b1828);                 /* mov eax, 0x101b1828 */ /* "Submarines" */
    II(0x1015718f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157190, 0x5)   mov(eax, 0x101b1833);                 /* mov eax, 0x101b1833 */ /* "Submarine" */
    II(0x10157195, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157196, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x1015719b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015719c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015719e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015719f, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x101571a4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101571a5, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101571aa, 0x1)   pushd(eax);                           /* push eax */
    II(0x101571ab, 0x5)   mov(eax, 0x751);                      /* mov eax, 0x751 */
    II(0x101571b0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101571b1, 0x5)   mov(eax, 0x381);                      /* mov eax, 0x381 */
    II(0x101571b6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101571b7, 0x5)   mov(eax, 0x72d);                      /* mov eax, 0x72d */
    II(0x101571bc, 0x1)   pushd(eax);                           /* push eax */
    II(0x101571bd, 0x5)   mov(eax, 0x4a3);                      /* mov eax, 0x4a3 */
    II(0x101571c2, 0x1)   pushd(eax);                           /* push eax */
    II(0x101571c3, 0x5)   mov(eax, 0x2fd);                      /* mov eax, 0x2fd */
    II(0x101571c8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101571c9, 0x5)   mov(ecx, 0x9e);                       /* mov ecx, 0x9e */
    II(0x101571ce, 0x5)   mov(ebx, 0x47);                       /* mov ebx, 0x47 */
    II(0x101571d3, 0x5)   mov(edx, 0x4644080);                  /* mov edx, 0x4644080 */
    II(0x101571d8, 0x5)   mov(eax, 0x101ca0b5);                 /* mov eax, 0x101ca0b5 */
    II(0x101571dd, 0x5)   calld(0x10157aaa, 0x8c8);             /* call 0x10157aaa */
    II(0x101571e2, 0x5)   calld(0x10164b38, 0xd951);            /* call 0x10164b38 */
    II(0x101571e7, 0x1)   pushd(eax);                           /* push eax */
    II(0x101571e8, 0x5)   mov(eax, 0x101b183d);                 /* mov eax, 0x101b183d */ /* "Heavily armored ship with space to carry up to six land units.  Sea transports are much slower than air transports, but also much more likely to survive an enemy attack." */
    II(0x101571ed, 0x1)   pushd(eax);                           /* push eax */
    II(0x101571ee, 0x5)   mov(eax, 0x101b18e7);                 /* mov eax, 0x101b18e7 */ /* "Sea Transports" */
    II(0x101571f3, 0x1)   pushd(eax);                           /* push eax */
    II(0x101571f4, 0x5)   mov(eax, 0x101b18f6);                 /* mov eax, 0x101b18f6 */ /* "Sea Transport" */
    II(0x101571f9, 0x1)   pushd(eax);                           /* push eax */
    II(0x101571fa, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x101571ff, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157200, 0x5)   mov(eax, 0x4);                        /* mov eax, 0x4 */
    II(0x10157205, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157206, 0x5)   mov(eax, 0x6);                        /* mov eax, 0x6 */
    II(0x1015720b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015720c, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10157211, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157212, 0x5)   mov(eax, 0x752);                      /* mov eax, 0x752 */
    II(0x10157217, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157218, 0x5)   mov(eax, 0x382);                      /* mov eax, 0x382 */
    II(0x1015721d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015721e, 0x5)   mov(eax, 0x72e);                      /* mov eax, 0x72e */
    II(0x10157223, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157224, 0x5)   mov(eax, 0x4a4);                      /* mov eax, 0x4a4 */
    II(0x10157229, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015722a, 0x5)   mov(eax, 0x2e1);                      /* mov eax, 0x2e1 */
    II(0x1015722f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157230, 0x5)   mov(ecx, 0x9f);                       /* mov ecx, 0x9f */
    II(0x10157235, 0x5)   mov(ebx, 0x48);                       /* mov ebx, 0x48 */
    II(0x1015723a, 0x5)   mov(edx, 0x4604080);                  /* mov edx, 0x4604080 */
    II(0x1015723f, 0x5)   mov(eax, 0x101ca0e0);                 /* mov eax, 0x101ca0e0 */
    II(0x10157244, 0x5)   calld(0x10157aaa, 0x861);             /* call 0x10157aaa */
    II(0x10157249, 0x5)   calld(0x10164b38, 0xd8ea);            /* call 0x10164b38 */
    II(0x1015724e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015724f, 0x5)   mov(eax, 0x101b1904);                 /* mov eax, 0x101b1904 */ /* "Ship mounted missile launcher.  Excellent range, high attack strength, and medium armor makes this a powerful unit." */
    II(0x10157254, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157255, 0x5)   mov(eax, 0x101b1978);                 /* mov eax, 0x101b1978 */ /* "Missile Cruisers" */
    II(0x1015725a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015725b, 0x5)   mov(eax, 0x101b1989);                 /* mov eax, 0x101b1989 */ /* "Missile Cruiser" */
    II(0x10157260, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157261, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10157266, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157267, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10157269, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015726a, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x1015726f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157270, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10157275, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157276, 0x5)   mov(eax, 0x753);                      /* mov eax, 0x753 */
    II(0x1015727b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015727c, 0x5)   mov(eax, 0x383);                      /* mov eax, 0x383 */
    II(0x10157281, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157282, 0x5)   mov(eax, 0x72f);                      /* mov eax, 0x72f */
    II(0x10157287, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157288, 0x5)   mov(eax, 0x4a5);                      /* mov eax, 0x4a5 */
    II(0x1015728d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015728e, 0x5)   mov(eax, 0x2e2);                      /* mov eax, 0x2e2 */
    II(0x10157293, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157294, 0x5)   mov(ecx, 0xa0);                       /* mov ecx, 0xa0 */
    II(0x10157299, 0x5)   mov(ebx, 0x49);                       /* mov ebx, 0x49 */
    II(0x1015729e, 0x5)   mov(edx, 0x4664080);                  /* mov edx, 0x4664080 */
    II(0x101572a3, 0x5)   mov(eax, 0x101ca10b);                 /* mov eax, 0x101ca10b */
    II(0x101572a8, 0x5)   calld(0x10157aaa, 0x7fd);             /* call 0x10157aaa */
    II(0x101572ad, 0x5)   calld(0x10164b38, 0xd886);            /* call 0x10164b38 */
    II(0x101572b2, 0x1)   pushd(eax);                           /* push eax */
    II(0x101572b3, 0x5)   mov(eax, 0x101b1999);                 /* mov eax, 0x101b1999 */ /* "Seaborne version of the minelayer.  Like its land based counterpart, the sea minelayer can manufacture mines, detect them, and convert them back into raw material." */
    II(0x101572b8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101572b9, 0x5)   mov(eax, 0x101b1a3d);                 /* mov eax, 0x101b1a3d */ /* "Sea Mine Layers" */
    II(0x101572be, 0x1)   pushd(eax);                           /* push eax */
    II(0x101572bf, 0x5)   mov(eax, 0x101b1a4d);                 /* mov eax, 0x101b1a4d */ /* "Sea Mine Layer" */
    II(0x101572c4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101572c5, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x101572ca, 0x1)   pushd(eax);                           /* push eax */
    II(0x101572cb, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101572d0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101572d1, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x101572d6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101572d7, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101572dc, 0x1)   pushd(eax);                           /* push eax */
    II(0x101572dd, 0x5)   mov(eax, 0x754);                      /* mov eax, 0x754 */
    II(0x101572e2, 0x1)   pushd(eax);                           /* push eax */
    II(0x101572e3, 0x5)   mov(eax, 0x384);                      /* mov eax, 0x384 */
    II(0x101572e8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101572e9, 0x5)   mov(eax, 0x730);                      /* mov eax, 0x730 */
    II(0x101572ee, 0x1)   pushd(eax);                           /* push eax */
    II(0x101572ef, 0x5)   mov(eax, 0x4a6);                      /* mov eax, 0x4a6 */
    II(0x101572f4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101572f5, 0x5)   mov(eax, 0x2e1);                      /* mov eax, 0x2e1 */
    II(0x101572fa, 0x1)   pushd(eax);                           /* push eax */
    II(0x101572fb, 0x5)   mov(ecx, 0xa1);                       /* mov ecx, 0xa1 */
    II(0x10157300, 0x5)   mov(ebx, 0x4a);                       /* mov ebx, 0x4a */
    II(0x10157305, 0x5)   mov(edx, 0x4604080);                  /* mov edx, 0x4604080 */
    II(0x1015730a, 0x5)   mov(eax, 0x101ca136);                 /* mov eax, 0x101ca136 */
    II(0x1015730f, 0x5)   calld(0x10157aaa, 0x796);             /* call 0x10157aaa */
    II(0x10157314, 0x5)   calld(0x10164b38, 0xd81f);            /* call 0x10164b38 */
    II(0x10157319, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015731a, 0x5)   mov(eax, 0x101b1a5c);                 /* mov eax, 0x101b1a5c */ /* "Ships for hauling raw material.  Useful for resupplying engineers and sea combat units with new ammunition." */
    II(0x1015731f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157320, 0x5)   mov(eax, 0x101b1ac8);                 /* mov eax, 0x101b1ac8 */ /* "Cargo Ship" */
    II(0x10157325, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157326, 0x5)   mov(eax, 0x101b1ad3);                 /* mov eax, 0x101b1ad3 */ /* "Cargo Ship" */
    II(0x1015732b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015732c, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10157331, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157332, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10157337, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157338, 0x5)   mov(eax, 0x6);                        /* mov eax, 0x6 */
    II(0x1015733d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015733e, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10157343, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157344, 0x5)   mov(eax, 0x755);                      /* mov eax, 0x755 */
    II(0x10157349, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015734a, 0x5)   mov(eax, 0x385);                      /* mov eax, 0x385 */
    II(0x1015734f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157350, 0x5)   mov(eax, 0x731);                      /* mov eax, 0x731 */
    II(0x10157355, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157356, 0x5)   mov(eax, 0x4a7);                      /* mov eax, 0x4a7 */
    II(0x1015735b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015735c, 0x5)   mov(eax, 0x2e1);                      /* mov eax, 0x2e1 */
    II(0x10157361, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157362, 0x5)   mov(ecx, 0xa2);                       /* mov ecx, 0xa2 */
    II(0x10157367, 0x5)   mov(ebx, 0x4b);                       /* mov ebx, 0x4b */
    II(0x1015736c, 0x5)   mov(edx, 0x4604080);                  /* mov edx, 0x4604080 */
    II(0x10157371, 0x5)   mov(eax, 0x101ca161);                 /* mov eax, 0x101ca161 */
    II(0x10157376, 0x5)   calld(0x10157aaa, 0x72f);             /* call 0x10157aaa */
    II(0x1015737b, 0x5)   calld(0x10164b38, 0xd7b8);            /* call 0x10164b38 */
    II(0x10157380, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157381, 0x5)   mov(eax, 0x101b1ade);                 /* mov eax, 0x101b1ade */ /* "Fast but fragile aircraft carrying a limited number of air-to-air missiles.  Fighters are the best way to drive enemy planes out of an area, and to defend a moving force.  Ground based anti aircraft is a better choice for defending a fixed area." */
    II(0x10157386, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157387, 0x5)   mov(eax, 0x101b1bd4);                 /* mov eax, 0x101b1bd4 */ /* "Fighters" */
    II(0x1015738c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015738d, 0x5)   mov(eax, 0x101b1bdd);                 /* mov eax, 0x101b1bdd */ /* "Fighter" */
    II(0x10157392, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157393, 0x5)   mov(eax, 0x4d);                       /* mov eax, 0x4d */
    II(0x10157398, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157399, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015739b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015739c, 0x5)   mov(eax, 0xf);                        /* mov eax, 0xf */
    II(0x101573a1, 0x1)   pushd(eax);                           /* push eax */
    II(0x101573a2, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101573a7, 0x1)   pushd(eax);                           /* push eax */
    II(0x101573a8, 0x5)   mov(eax, 0x756);                      /* mov eax, 0x756 */
    II(0x101573ad, 0x1)   pushd(eax);                           /* push eax */
    II(0x101573ae, 0x5)   mov(eax, 0x386);                      /* mov eax, 0x386 */
    II(0x101573b3, 0x1)   pushd(eax);                           /* push eax */
    II(0x101573b4, 0x5)   mov(eax, 0x732);                      /* mov eax, 0x732 */
    II(0x101573b9, 0x1)   pushd(eax);                           /* push eax */
    II(0x101573ba, 0x5)   mov(eax, 0x4a8);                      /* mov eax, 0x4a8 */
    II(0x101573bf, 0x1)   pushd(eax);                           /* push eax */
    II(0x101573c0, 0x5)   mov(eax, 0x2e2);                      /* mov eax, 0x2e2 */
    II(0x101573c5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101573c6, 0x5)   mov(ecx, 0xa3);                       /* mov ecx, 0xa3 */
    II(0x101573cb, 0x5)   mov(ebx, 0x4c);                       /* mov ebx, 0x4c */
    II(0x101573d0, 0x5)   mov(edx, 0x4664040);                  /* mov edx, 0x4664040 */
    II(0x101573d5, 0x5)   mov(eax, 0x101ca18c);                 /* mov eax, 0x101ca18c */
    II(0x101573da, 0x5)   calld(0x10157aaa, 0x6cb);             /* call 0x10157aaa */
    II(0x101573df, 0x5)   calld(0x10164b38, 0xd754);            /* call 0x10164b38 */
    II(0x101573e4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101573e5, 0x5)   mov(eax, 0x101b1be5);                 /* mov eax, 0x101b1be5 */ /* "A heavier plane carrying a full load of air to ground missiles.  Ground Attack Planes are expensive, but the advantages are worth the cost.  Their great speed lets them reach any trouble spot quickly, and once they arrive only fighters and antiaircraft can defend against them." */
    II(0x101573ea, 0x1)   pushd(eax);                           /* push eax */
    II(0x101573eb, 0x5)   mov(eax, 0x101b1cfb);                 /* mov eax, 0x101b1cfb */ /* "Ground Attack Planes" */
    II(0x101573f0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101573f1, 0x5)   mov(eax, 0x101b1d10);                 /* mov eax, 0x101b1d10 */ /* "Ground Attack Plane" */
    II(0x101573f6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101573f7, 0x5)   mov(eax, 0x4d);                       /* mov eax, 0x4d */
    II(0x101573fc, 0x1)   pushd(eax);                           /* push eax */
    II(0x101573fd, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101573ff, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157400, 0x5)   mov(eax, 0xf);                        /* mov eax, 0xf */
    II(0x10157405, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157406, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015740b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015740c, 0x5)   mov(eax, 0x757);                      /* mov eax, 0x757 */
    II(0x10157411, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157412, 0x5)   mov(eax, 0x387);                      /* mov eax, 0x387 */
    II(0x10157417, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157418, 0x5)   mov(eax, 0x733);                      /* mov eax, 0x733 */
    II(0x1015741d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015741e, 0x5)   mov(eax, 0x4a9);                      /* mov eax, 0x4a9 */
    II(0x10157423, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157424, 0x5)   mov(eax, 0x2e2);                      /* mov eax, 0x2e2 */
    II(0x10157429, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015742a, 0x5)   mov(ecx, 0xa4);                       /* mov ecx, 0xa4 */
    II(0x1015742f, 0x5)   mov(ebx, 0x4d);                       /* mov ebx, 0x4d */
    II(0x10157434, 0x5)   mov(edx, 0x4664040);                  /* mov edx, 0x4664040 */
    II(0x10157439, 0x5)   mov(eax, 0x101ca1b7);                 /* mov eax, 0x101ca1b7 */
    II(0x1015743e, 0x5)   calld(0x10157aaa, 0x667);             /* call 0x10157aaa */
    II(0x10157443, 0x5)   calld(0x10164b38, 0xd6f0);            /* call 0x10164b38 */
    II(0x10157448, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157449, 0x5)   mov(eax, 0x101b1d24);                 /* mov eax, 0x101b1d24 */ /* "Heavy aircraft capable of holding up to three ground units." */
    II(0x1015744e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015744f, 0x5)   mov(eax, 0x101b1d60);                 /* mov eax, 0x101b1d60 */ /* "Air Transports" */
    II(0x10157454, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157455, 0x5)   mov(eax, 0x101b1d6f);                 /* mov eax, 0x101b1d6f */ /* "Air Transport" */
    II(0x1015745a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015745b, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10157460, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157461, 0x5)   mov(eax, 0x4);                        /* mov eax, 0x4 */
    II(0x10157466, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157467, 0x5)   mov(eax, 0xf);                        /* mov eax, 0xf */
    II(0x1015746c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015746d, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10157472, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157473, 0x5)   mov(eax, 0x758);                      /* mov eax, 0x758 */
    II(0x10157478, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157479, 0x5)   mov(eax, 0x388);                      /* mov eax, 0x388 */
    II(0x1015747e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015747f, 0x5)   mov(eax, 0x734);                      /* mov eax, 0x734 */
    II(0x10157484, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157485, 0x5)   mov(eax, 0x4aa);                      /* mov eax, 0x4aa */
    II(0x1015748a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015748b, 0x5)   mov(eax, 0x2e1);                      /* mov eax, 0x2e1 */
    II(0x10157490, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157491, 0x5)   mov(ecx, 0xa5);                       /* mov ecx, 0xa5 */
    II(0x10157496, 0x5)   mov(ebx, 0x4e);                       /* mov ebx, 0x4e */
    II(0x1015749b, 0x5)   mov(edx, 0x4604040);                  /* mov edx, 0x4604040 */
    II(0x101574a0, 0x5)   mov(eax, 0x101ca1e2);                 /* mov eax, 0x101ca1e2 */
    II(0x101574a5, 0x5)   calld(0x10157aaa, 0x600);             /* call 0x10157aaa */
    II(0x101574aa, 0x5)   calld(0x10164b38, 0xd689);            /* call 0x10164b38 */
    II(0x101574af, 0x1)   pushd(eax);                           /* push eax */
    II(0x101574b0, 0x5)   mov(eax, 0x101b1d7d);                 /* mov eax, 0x101b1d7d */ /* "Airborne Warning And Control plane.  Basically a flying radar dish, an AWAC is essential to spot enemy anti aircraft before your planes fly into firing range." */
    II(0x101574b5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101574b6, 0x5)   mov(eax, 0x101b1e1c);                 /* mov eax, 0x101b1e1c */ /* "AWACs" */
    II(0x101574bb, 0x1)   pushd(eax);                           /* push eax */
    II(0x101574bc, 0x5)   mov(eax, 0x101b1e22);                 /* mov eax, 0x101b1e22 */ /* "AWAC" */
    II(0x101574c1, 0x1)   pushd(eax);                           /* push eax */
    II(0x101574c2, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x101574c7, 0x1)   pushd(eax);                           /* push eax */
    II(0x101574c8, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101574ca, 0x1)   pushd(eax);                           /* push eax */
    II(0x101574cb, 0x5)   mov(eax, 0xf);                        /* mov eax, 0xf */
    II(0x101574d0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101574d1, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101574d6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101574d7, 0x5)   mov(eax, 0x759);                      /* mov eax, 0x759 */
    II(0x101574dc, 0x1)   pushd(eax);                           /* push eax */
    II(0x101574dd, 0x5)   mov(eax, 0x389);                      /* mov eax, 0x389 */
    II(0x101574e2, 0x1)   pushd(eax);                           /* push eax */
    II(0x101574e3, 0x5)   mov(eax, 0x735);                      /* mov eax, 0x735 */
    II(0x101574e8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101574e9, 0x5)   mov(eax, 0x4ab);                      /* mov eax, 0x4ab */
    II(0x101574ee, 0x1)   pushd(eax);                           /* push eax */
    II(0x101574ef, 0x5)   mov(eax, 0x2f1);                      /* mov eax, 0x2f1 */
    II(0x101574f4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101574f5, 0x5)   mov(ecx, 0xa6);                       /* mov ecx, 0xa6 */
    II(0x101574fa, 0x5)   mov(ebx, 0x4f);                       /* mov ebx, 0x4f */
    II(0x101574ff, 0x5)   mov(edx, 0xc604040);                  /* mov edx, 0xc604040 */
    II(0x10157504, 0x5)   mov(eax, 0x101ca20d);                 /* mov eax, 0x101ca20d */
    II(0x10157509, 0x5)   calld(0x10157aaa, 0x59c);             /* call 0x10157aaa */
    II(0x1015750e, 0x5)   calld(0x10164b38, 0xd625);            /* call 0x10164b38 */
    II(0x10157513, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157514, 0x5)   mov(eax, 0x101b1e27);                 /* mov eax, 0x101b1e27 */ /* "Heavily armored and armed warship of alien design.  Like the human gunboat, the alien gunboat excels at destroying other ships and land targets near the shore.  All alien units repair themselves, and improve their abilities with experience." */
    II(0x10157519, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015751a, 0x5)   mov(eax, 0x101b1f18);                 /* mov eax, 0x101b1f18 */ /* "Alien Gunboats" */
    II(0x1015751f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157520, 0x5)   mov(eax, 0x101b1f27);                 /* mov eax, 0x101b1f27 */ /* "Alien Gunboat" */
    II(0x10157525, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157526, 0x5)   mov(eax, 0x4d);                       /* mov eax, 0x4d */
    II(0x1015752b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015752c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015752e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015752f, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x10157534, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157535, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015753a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015753b, 0x5)   mov(eax, 0x75a);                      /* mov eax, 0x75a */
    II(0x10157540, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157541, 0x5)   mov(eax, 0x38a);                      /* mov eax, 0x38a */
    II(0x10157546, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157547, 0x5)   mov(eax, 0x736);                      /* mov eax, 0x736 */
    II(0x1015754c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015754d, 0x5)   mov(eax, 0x4ac);                      /* mov eax, 0x4ac */
    II(0x10157552, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157553, 0x5)   mov(eax, 0x2e2);                      /* mov eax, 0x2e2 */
    II(0x10157558, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157559, 0x5)   mov(ecx, 0xa7);                       /* mov ecx, 0xa7 */
    II(0x1015755e, 0x5)   mov(ebx, 0x50);                       /* mov ebx, 0x50 */
    II(0x10157563, 0x5)   mov(edx, 0x14660080);                 /* mov edx, 0x14660080 */
    II(0x10157568, 0x5)   mov(eax, 0x101ca238);                 /* mov eax, 0x101ca238 */
    II(0x1015756d, 0x5)   calld(0x10157aaa, 0x538);             /* call 0x10157aaa */
    II(0x10157572, 0x5)   calld(0x10164b38, 0xd5c1);            /* call 0x10164b38 */
    II(0x10157577, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157578, 0x5)   mov(eax, 0x101b1f35);                 /* mov eax, 0x101b1f35 */ /* "Heavily armored tank of alien design.  Alien tanks are best used at the front of an attack to soak up enemy fire.  All alien units repair themselves, and improve their abilities with experience." */
    II(0x1015757d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015757e, 0x5)   mov(eax, 0x101b1ff8);                 /* mov eax, 0x101b1ff8 */ /* "Alien Tanks" */
    II(0x10157583, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157584, 0x5)   mov(eax, 0x101b2004);                 /* mov eax, 0x101b2004 */ /* "Alien Tank" */
    II(0x10157589, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015758a, 0x5)   mov(eax, 0x4d);                       /* mov eax, 0x4d */
    II(0x1015758f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157590, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10157592, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157593, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10157598, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157599, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015759e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015759f, 0x5)   mov(eax, 0x75b);                      /* mov eax, 0x75b */
    II(0x101575a4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101575a5, 0x5)   mov(eax, 0x38b);                      /* mov eax, 0x38b */
    II(0x101575aa, 0x1)   pushd(eax);                           /* push eax */
    II(0x101575ab, 0x5)   mov(eax, 0x737);                      /* mov eax, 0x737 */
    II(0x101575b0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101575b1, 0x5)   mov(eax, 0x4ad);                      /* mov eax, 0x4ad */
    II(0x101575b6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101575b7, 0x5)   mov(eax, 0x2e7);                      /* mov eax, 0x2e7 */
    II(0x101575bc, 0x1)   pushd(eax);                           /* push eax */
    II(0x101575bd, 0x5)   mov(ecx, 0xa8);                       /* mov ecx, 0xa8 */
    II(0x101575c2, 0x5)   mov(ebx, 0x51);                       /* mov ebx, 0x51 */
    II(0x101575c7, 0x5)   mov(edx, 0x16660100);                 /* mov edx, 0x16660100 */
    II(0x101575cc, 0x5)   mov(eax, 0x101ca263);                 /* mov eax, 0x101ca263 */
    II(0x101575d1, 0x5)   calld(0x10157aaa, 0x4d4);             /* call 0x10157aaa */
    II(0x101575d6, 0x5)   calld(0x10164b38, 0xd55d);            /* call 0x10164b38 */
    II(0x101575db, 0x1)   pushd(eax);                           /* push eax */
    II(0x101575dc, 0x5)   mov(eax, 0x101b200f);                 /* mov eax, 0x101b200f */ /* "Powerful plasma weapon mounted on a fast, medium-armored chassis.  While not as fragile as human assault guns, the alien assault gun should still avoid enemy fire whenever possible.  All alien units repair themselves, and improve their abilities with experience." */
    II(0x101575e1, 0x1)   pushd(eax);                           /* push eax */
    II(0x101575e2, 0x5)   mov(eax, 0x101b2116);                 /* mov eax, 0x101b2116 */ /* "Alien Assault Guns" */
    II(0x101575e7, 0x1)   pushd(eax);                           /* push eax */
    II(0x101575e8, 0x5)   mov(eax, 0x101b2129);                 /* mov eax, 0x101b2129 */ /* "Alien Assault Gun" */
    II(0x101575ed, 0x1)   pushd(eax);                           /* push eax */
    II(0x101575ee, 0x5)   mov(eax, 0x4d);                       /* mov eax, 0x4d */
    II(0x101575f3, 0x1)   pushd(eax);                           /* push eax */
    II(0x101575f4, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101575f6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101575f7, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101575fc, 0x1)   pushd(eax);                           /* push eax */
    II(0x101575fd, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10157602, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157603, 0x5)   mov(eax, 0x75c);                      /* mov eax, 0x75c */
    II(0x10157608, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157609, 0x5)   mov(eax, 0x38c);                      /* mov eax, 0x38c */
    II(0x1015760e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015760f, 0x5)   mov(eax, 0x738);                      /* mov eax, 0x738 */
    II(0x10157614, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157615, 0x5)   mov(eax, 0x4ae);                      /* mov eax, 0x4ae */
    II(0x1015761a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015761b, 0x5)   mov(eax, 0x2e2);                      /* mov eax, 0x2e2 */
    II(0x10157620, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157621, 0x5)   mov(ecx, 0xa9);                       /* mov ecx, 0xa9 */
    II(0x10157626, 0x5)   mov(ebx, 0x52);                       /* mov ebx, 0x52 */
    II(0x1015762b, 0x5)   mov(edx, 0x14660100);                 /* mov edx, 0x14660100 */
    II(0x10157630, 0x5)   mov(eax, 0x101ca28e);                 /* mov eax, 0x101ca28e */
    II(0x10157635, 0x5)   calld(0x10157aaa, 0x470);             /* call 0x10157aaa */
    II(0x1015763a, 0x5)   calld(0x10164b38, 0xd4f9);            /* call 0x10164b38 */
    II(0x1015763f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157640, 0x5)   mov(eax, 0x101b213b);                 /* mov eax, 0x101b213b */ /* "Alien fighter-bomber.  While the alien attack plane is primarily designed to attack ground targets, it can also fire its missiles at other planes.  Though powerful, the alien attack plane is still vulnerable to anti aircraft fire.  Like other alien units, alien attack planes repair themselves, and improve their abilities with experience." */
    II(0x10157645, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157646, 0x5)   mov(eax, 0x101b228f);                 /* mov eax, 0x101b228f */ /* "Alien Attack Planes" */
    II(0x1015764b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015764c, 0x5)   mov(eax, 0x101b22a3);                 /* mov eax, 0x101b22a3 */ /* "Alien Attack Plane" */
    II(0x10157651, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157652, 0x5)   mov(eax, 0x4d);                       /* mov eax, 0x4d */
    II(0x10157657, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157658, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015765a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015765b, 0x5)   mov(eax, 0xf);                        /* mov eax, 0xf */
    II(0x10157660, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157661, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10157666, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157667, 0x5)   mov(eax, 0x75d);                      /* mov eax, 0x75d */
    II(0x1015766c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015766d, 0x5)   mov(eax, 0x38d);                      /* mov eax, 0x38d */
    II(0x10157672, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157673, 0x5)   mov(eax, 0x739);                      /* mov eax, 0x739 */
    II(0x10157678, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157679, 0x5)   mov(eax, 0x4af);                      /* mov eax, 0x4af */
    II(0x1015767e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015767f, 0x5)   mov(eax, 0x2e2);                      /* mov eax, 0x2e2 */
    II(0x10157684, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157685, 0x5)   mov(ecx, 0xaa);                       /* mov ecx, 0xaa */
    II(0x1015768a, 0x5)   mov(ebx, 0x53);                       /* mov ebx, 0x53 */
    II(0x1015768f, 0x5)   mov(edx, 0x14660040);                 /* mov edx, 0x14660040 */
    II(0x10157694, 0x5)   mov(eax, 0x101ca2b9);                 /* mov eax, 0x101ca2b9 */
    II(0x10157699, 0x5)   calld(0x10157aaa, 0x40c);             /* call 0x10157aaa */
    II(0x1015769e, 0x5)   calld(0x10164b38, 0xd495);            /* call 0x10164b38 */
    II(0x101576a3, 0x1)   pushd(eax);                           /* push eax */
    II(0x101576a4, 0x5)   mov(eax, 0x101b22b6);                 /* mov eax, 0x101b22b6 */ /* "" */
    II(0x101576a9, 0x1)   pushd(eax);                           /* push eax */
    II(0x101576aa, 0x5)   mov(eax, 0x101b22b7);                 /* mov eax, 0x101b22b7 */ /* "" */
    II(0x101576af, 0x1)   pushd(eax);                           /* push eax */
    II(0x101576b0, 0x5)   mov(eax, 0x101b22b8);                 /* mov eax, 0x101b22b8 */ /* "missile" */
    II(0x101576b5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101576b6, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x101576bb, 0x1)   pushd(eax);                           /* push eax */
    II(0x101576bc, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101576be, 0x1)   pushd(eax);                           /* push eax */
    II(0x101576bf, 0x5)   mov(eax, 0xff);                       /* mov eax, 0xff */
    II(0x101576c4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101576c5, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101576ca, 0x1)   pushd(eax);                           /* push eax */
    II(0x101576cb, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101576d0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101576d1, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101576d6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101576d7, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101576dc, 0x1)   pushd(eax);                           /* push eax */
    II(0x101576dd, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101576e2, 0x1)   pushd(eax);                           /* push eax */
    II(0x101576e3, 0x5)   mov(eax, 0x2f7);                      /* mov eax, 0x2f7 */
    II(0x101576e8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101576e9, 0x5)   mov(ecx, 0xffffffff);                 /* mov ecx, 0xffffffff */
    II(0x101576ee, 0x5)   mov(ebx, 0x54);                       /* mov ebx, 0x54 */
    II(0x101576f3, 0x5)   mov(edx, 0x20);                       /* mov edx, 0x20 */
    II(0x101576f8, 0x5)   mov(eax, 0x101ca2e4);                 /* mov eax, 0x101ca2e4 */
    II(0x101576fd, 0x5)   calld(0x10157aaa, 0x3a8);             /* call 0x10157aaa */
    II(0x10157702, 0x5)   calld(0x10164b38, 0xd431);            /* call 0x10164b38 */
    II(0x10157707, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157708, 0x5)   mov(eax, 0x101b22c0);                 /* mov eax, 0x101b22c0 */ /* "" */
    II(0x1015770d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015770e, 0x5)   mov(eax, 0x101b22c1);                 /* mov eax, 0x101b22c1 */ /* "" */
    II(0x10157713, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157714, 0x5)   mov(eax, 0x101b22c2);                 /* mov eax, 0x101b22c2 */ /* "torpedo" */
    II(0x10157719, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015771a, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x1015771f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157720, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10157722, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157723, 0x5)   mov(eax, 0xff);                       /* mov eax, 0xff */
    II(0x10157728, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157729, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015772e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015772f, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10157734, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157735, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015773a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015773b, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10157740, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157741, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10157746, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157747, 0x5)   mov(eax, 0x2f7);                      /* mov eax, 0x2f7 */
    II(0x1015774c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015774d, 0x5)   mov(ecx, 0xffffffff);                 /* mov ecx, 0xffffffff */
    II(0x10157752, 0x5)   mov(ebx, 0x55);                       /* mov ebx, 0x55 */
    II(0x10157757, 0x5)   mov(edx, 0x21);                       /* mov edx, 0x21 */
    II(0x1015775c, 0x5)   mov(eax, 0x101ca30f);                 /* mov eax, 0x101ca30f */
    II(0x10157761, 0x5)   calld(0x10157aaa, 0x344);             /* call 0x10157aaa */
    II(0x10157766, 0x5)   calld(0x10164b38, 0xd3cd);            /* call 0x10164b38 */
    II(0x1015776b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015776c, 0x5)   mov(eax, 0x101b22ca);                 /* mov eax, 0x101b22ca */ /* "" */
    II(0x10157771, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157772, 0x5)   mov(eax, 0x101b22cb);                 /* mov eax, 0x101b22cb */ /* "" */
    II(0x10157777, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157778, 0x5)   mov(eax, 0x101b22cc);                 /* mov eax, 0x101b22cc */ /* "alien missile" */
    II(0x1015777d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015777e, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10157783, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157784, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10157786, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157787, 0x5)   mov(eax, 0xff);                       /* mov eax, 0xff */
    II(0x1015778c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015778d, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10157792, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157793, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10157798, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157799, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015779e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015779f, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101577a4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101577a5, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101577aa, 0x1)   pushd(eax);                           /* push eax */
    II(0x101577ab, 0x5)   mov(eax, 0x2f8);                      /* mov eax, 0x2f8 */
    II(0x101577b0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101577b1, 0x5)   mov(ecx, 0xffffffff);                 /* mov ecx, 0xffffffff */
    II(0x101577b6, 0x5)   mov(ebx, 0x56);                       /* mov ebx, 0x56 */
    II(0x101577bb, 0x5)   mov(edx, 0x20);                       /* mov edx, 0x20 */
    II(0x101577c0, 0x5)   mov(eax, 0x101ca33a);                 /* mov eax, 0x101ca33a */
    II(0x101577c5, 0x5)   calld(0x10157aaa, 0x2e0);             /* call 0x10157aaa */
    II(0x101577ca, 0x5)   calld(0x10164b38, 0xd369);            /* call 0x10164b38 */
    II(0x101577cf, 0x1)   pushd(eax);                           /* push eax */
    II(0x101577d0, 0x5)   mov(eax, 0x101b22da);                 /* mov eax, 0x101b22da */ /* "" */
    II(0x101577d5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101577d6, 0x5)   mov(eax, 0x101b22db);                 /* mov eax, 0x101b22db */ /* "" */
    II(0x101577db, 0x1)   pushd(eax);                           /* push eax */
    II(0x101577dc, 0x5)   mov(eax, 0x101b22dc);                 /* mov eax, 0x101b22dc */ /* "tank plasma ball" */
    II(0x101577e1, 0x1)   pushd(eax);                           /* push eax */
    II(0x101577e2, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x101577e7, 0x1)   pushd(eax);                           /* push eax */
    II(0x101577e8, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101577ea, 0x1)   pushd(eax);                           /* push eax */
    II(0x101577eb, 0x5)   mov(eax, 0xff);                       /* mov eax, 0xff */
    II(0x101577f0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101577f1, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101577f6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101577f7, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101577fc, 0x1)   pushd(eax);                           /* push eax */
    II(0x101577fd, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10157802, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157803, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10157808, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157809, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015780e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015780f, 0x5)   mov(eax, 0x2f9);                      /* mov eax, 0x2f9 */
    II(0x10157814, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157815, 0x5)   mov(ecx, 0xffffffff);                 /* mov ecx, 0xffffffff */
    II(0x1015781a, 0x5)   mov(ebx, 0x57);                       /* mov ebx, 0x57 */
    II(0x1015781f, 0x5)   mov(edx, 0x20);                       /* mov edx, 0x20 */
    II(0x10157824, 0x5)   mov(eax, 0x101ca365);                 /* mov eax, 0x101ca365 */
    II(0x10157829, 0x5)   calld(0x10157aaa, 0x27c);             /* call 0x10157aaa */
    II(0x1015782e, 0x5)   calld(0x10164b38, 0xd305);            /* call 0x10164b38 */
    II(0x10157833, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157834, 0x5)   mov(eax, 0x101b22ed);                 /* mov eax, 0x101b22ed */ /* "" */
    II(0x10157839, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015783a, 0x5)   mov(eax, 0x101b22ee);                 /* mov eax, 0x101b22ee */ /* "" */
    II(0x1015783f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157840, 0x5)   mov(eax, 0x101b22ef);                 /* mov eax, 0x101b22ef */ /* "artillery plasma ball" */
    II(0x10157845, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157846, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x1015784b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015784c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015784e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015784f, 0x5)   mov(eax, 0xff);                       /* mov eax, 0xff */
    II(0x10157854, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157855, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015785a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015785b, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10157860, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157861, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10157866, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157867, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015786c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015786d, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10157872, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157873, 0x5)   mov(eax, 0x2f9);                      /* mov eax, 0x2f9 */
    II(0x10157878, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157879, 0x5)   mov(ecx, 0xffffffff);                 /* mov ecx, 0xffffffff */
    II(0x1015787e, 0x5)   mov(ebx, 0x58);                       /* mov ebx, 0x58 */
    II(0x10157883, 0x5)   mov(edx, 0x20);                       /* mov edx, 0x20 */
    II(0x10157888, 0x5)   mov(eax, 0x101ca390);                 /* mov eax, 0x101ca390 */
    II(0x1015788d, 0x5)   calld(0x10157aaa, 0x218);             /* call 0x10157aaa */
    II(0x10157892, 0x5)   calld(0x10164b38, 0xd2a1);            /* call 0x10164b38 */
    II(0x10157897, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157898, 0x5)   mov(eax, 0x101b2305);                 /* mov eax, 0x101b2305 */ /* "" */
    II(0x1015789d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015789e, 0x5)   mov(eax, 0x101b2306);                 /* mov eax, 0x101b2306 */ /* "" */
    II(0x101578a3, 0x1)   pushd(eax);                           /* push eax */
    II(0x101578a4, 0x5)   mov(eax, 0x101b2307);                 /* mov eax, 0x101b2307 */ /* "smoke trail" */
    II(0x101578a9, 0x1)   pushd(eax);                           /* push eax */
    II(0x101578aa, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x101578af, 0x1)   pushd(eax);                           /* push eax */
    II(0x101578b0, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101578b2, 0x1)   pushd(eax);                           /* push eax */
    II(0x101578b3, 0x5)   mov(eax, 0xff);                       /* mov eax, 0xff */
    II(0x101578b8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101578b9, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101578be, 0x1)   pushd(eax);                           /* push eax */
    II(0x101578bf, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101578c4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101578c5, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101578ca, 0x1)   pushd(eax);                           /* push eax */
    II(0x101578cb, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101578d0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101578d1, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101578d6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101578d7, 0x5)   mov(eax, 0x2ec);                      /* mov eax, 0x2ec */
    II(0x101578dc, 0x1)   pushd(eax);                           /* push eax */
    II(0x101578dd, 0x5)   mov(ecx, 0xffffffff);                 /* mov ecx, 0xffffffff */
    II(0x101578e2, 0x5)   mov(ebx, 0x59);                       /* mov ebx, 0x59 */
    II(0x101578e7, 0x5)   mov(edx, 0x26);                       /* mov edx, 0x26 */
    II(0x101578ec, 0x5)   mov(eax, 0x101ca3bb);                 /* mov eax, 0x101ca3bb */
    II(0x101578f1, 0x5)   calld(0x10157aaa, 0x1b4);             /* call 0x10157aaa */
    II(0x101578f6, 0x5)   calld(0x10164b38, 0xd23d);            /* call 0x10164b38 */
    II(0x101578fb, 0x1)   pushd(eax);                           /* push eax */
    II(0x101578fc, 0x5)   mov(eax, 0x101b2313);                 /* mov eax, 0x101b2313 */ /* "" */
    II(0x10157901, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157902, 0x5)   mov(eax, 0x101b2314);                 /* mov eax, 0x101b2314 */ /* "" */
    II(0x10157907, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157908, 0x5)   mov(eax, 0x101b2315);                 /* mov eax, 0x101b2315 */ /* "bubble trail" */
    II(0x1015790d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015790e, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10157913, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157914, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10157916, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157917, 0x5)   mov(eax, 0xff);                       /* mov eax, 0xff */
    II(0x1015791c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015791d, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10157922, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157923, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10157928, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157929, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015792e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015792f, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10157934, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157935, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015793a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015793b, 0x5)   mov(eax, 0x2ed);                      /* mov eax, 0x2ed */
    II(0x10157940, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157941, 0x5)   mov(ecx, 0xffffffff);                 /* mov ecx, 0xffffffff */
    II(0x10157946, 0x5)   mov(ebx, 0x5a);                       /* mov ebx, 0x5a */
    II(0x1015794b, 0x5)   mov(edx, 0x27);                       /* mov edx, 0x27 */
    II(0x10157950, 0x5)   mov(eax, 0x101ca3e6);                 /* mov eax, 0x101ca3e6 */
    II(0x10157955, 0x5)   calld(0x10157aaa, 0x150);             /* call 0x10157aaa */
    II(0x1015795a, 0x5)   calld(0x10164b38, 0xd1d9);            /* call 0x10164b38 */
    II(0x1015795f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157960, 0x5)   mov(eax, 0x101b2322);                 /* mov eax, 0x101b2322 */ /* "" */
    II(0x10157965, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157966, 0x5)   mov(eax, 0x101b2323);                 /* mov eax, 0x101b2323 */ /* "" */
    II(0x1015796b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015796c, 0x5)   mov(eax, 0x101b2324);                 /* mov eax, 0x101b2324 */ /* "harvester" */
    II(0x10157971, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157972, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x10157977, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157978, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015797a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015797b, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10157980, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157981, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10157986, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157987, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015798c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015798d, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10157992, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157993, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10157998, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157999, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x1015799e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015799f, 0x5)   mov(eax, 0x2de);                      /* mov eax, 0x2de */
    II(0x101579a4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101579a5, 0x5)   mov(ecx, 0xab);                       /* mov ecx, 0xab */
    II(0x101579aa, 0x5)   mov(ebx, 0x5b);                       /* mov ebx, 0x5b */
    II(0x101579af, 0x5)   mov(edx, 0x200);                      /* mov edx, 0x200 */
    II(0x101579b4, 0x5)   mov(eax, 0x101ca411);                 /* mov eax, 0x101ca411 */
    II(0x101579b9, 0x5)   calld(0x10157aaa, 0xec);              /* call 0x10157aaa */
    II(0x101579be, 0x5)   calld(0x10164b38, 0xd175);            /* call 0x10164b38 */
    II(0x101579c3, 0x1)   pushd(eax);                           /* push eax */
    II(0x101579c4, 0x5)   mov(eax, 0x101b232e);                 /* mov eax, 0x101b232e */ /* "" */
    II(0x101579c9, 0x1)   pushd(eax);                           /* push eax */
    II(0x101579ca, 0x5)   mov(eax, 0x101b232f);                 /* mov eax, 0x101b232f */ /* "" */
    II(0x101579cf, 0x1)   pushd(eax);                           /* push eax */
    II(0x101579d0, 0x5)   mov(eax, 0x101b2330);                 /* mov eax, 0x101b2330 */ /* "dead waldo" */
    II(0x101579d5, 0x1)   pushd(eax);                           /* push eax */
    II(0x101579d6, 0x5)   mov(eax, 0x4e);                       /* mov eax, 0x4e */
    II(0x101579db, 0x1)   pushd(eax);                           /* push eax */
    II(0x101579dc, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101579de, 0x1)   pushd(eax);                           /* push eax */
    II(0x101579df, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101579e4, 0x1)   pushd(eax);                           /* push eax */
    II(0x101579e5, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101579ea, 0x1)   pushd(eax);                           /* push eax */
    II(0x101579eb, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101579f0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101579f1, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101579f6, 0x1)   pushd(eax);                           /* push eax */
    II(0x101579f7, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x101579fc, 0x1)   pushd(eax);                           /* push eax */
    II(0x101579fd, 0x5)   mov(eax, 0xffffffff);                 /* mov eax, 0xffffffff */
    II(0x10157a02, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157a03, 0x5)   mov(eax, 0x2de);                      /* mov eax, 0x2de */
    II(0x10157a08, 0x1)   pushd(eax);                           /* push eax */
    II(0x10157a09, 0x5)   mov(ecx, 0xffffffff);                 /* mov ecx, 0xffffffff */
    II(0x10157a0e, 0x5)   mov(ebx, 0x5c);                       /* mov ebx, 0x5c */
    II(0x10157a13, 0x5)   mov(edx, 0x201);                      /* mov edx, 0x201 */
    II(0x10157a18, 0x5)   mov(eax, 0x101ca43c);                 /* mov eax, 0x101ca43c */
    II(0x10157a1d, 0x5)   calld(0x10157aaa, 0x88);              /* call 0x10157aaa */
    II(0x10157a22, 0x5)   mov(ebx, 0x101b74f0);                 /* mov ebx, 0x101b74f0 */
    II(0x10157a27, 0x5)   mov(edx, 0x5);                        /* mov edx, 0x5 */
    II(0x10157a2c, 0x5)   mov(eax, 0x101ca468);                 /* mov eax, 0x101ca468 */
    II(0x10157a31, 0x5)   calld(sys_call_ctor_arr_v2, 0xe53a);  /* call 0x10165f70 */
    II(0x10157a36, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
//    II(0x10157a39, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x10157a3c, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10157a3f, 0xa)   mov(memd_a32(ds, 0x101bd910), 0xa);   /* mov dword [0x101bd910], 0xa */
    II(0x10157a49, 0x5)   mov(ecx, 0x10163ae5);                 /* mov ecx, 0x10163ae5 */
    II(0x10157a4e, 0x5)   mov(ebx, 0x101cb100);                 /* mov ebx, 0x101cb100 */
    II(0x10157a53, 0x5)   mov(edx, 0x101b233b);                 /* mov edx, 0x101b233b */ /* "UnitValues" */
    II(0x10157a58, 0x5)   mov(eax, 0x101cb104);                 /* mov eax, 0x101cb104 */
    II(0x10157a5d, 0x5)   calld(0x1013b77c, -0x1c2e6);          /* call 0x1013b77c */
    II(0x10157a62, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
//    II(0x10157a65, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x10157a68, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10157a6b, 0xa)   mov(memd_a32(ds, 0x101bd910), 0xb);   /* mov dword [0x101bd910], 0xb */
    II(0x10157a75, 0x5)   mov(ecx, 0x101642dd);                 /* mov ecx, 0x101642dd */
    II(0x10157a7a, 0x5)   mov(ebx, 0x101cb11a);                 /* mov ebx, 0x101cb11a */
    II(0x10157a7f, 0x5)   mov(edx, 0x101b2346);                 /* mov edx, 0x101b2346 */ /* "Complex" */
    II(0x10157a84, 0x5)   mov(eax, 0x101cb11c);                 /* mov eax, 0x101cb11c */
    II(0x10157a89, 0x5)   calld(0x1013b77c, -0x1c312);          /* call 0x1013b77c */
    II(0x10157a8e, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
//    II(0x10157a91, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10157a94, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10157a97, 0xa)   mov(memd_a32(ds, 0x101bd910), 0xc);   /* mov dword [0x101bd910], 0xc */
    II(0x10157aa1, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10157aa3, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10157aa4, 0x1)   popd(edi);                            /* pop edi */
    II(0x10157aa5, 0x1)   popd(esi);                            /* pop esi */
    II(0x10157aa6, 0x1)   popd(edx);                            /* pop edx */
    II(0x10157aa7, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10157aa8, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10157aa9, 0x1)   retd();                               /* ret */
FUNC_END

