FUNC_BEGIN(0x100e71bd, 0x490d3b40018b4d87, 0x20, ({0x68, 0x44, 0, 0, 0, 0xe8, 0x8b, 0xeb, 0x7, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x88, 0x5d, 0xfc, 0x80, 0x7d, 0xfc, 0, 0x74, 0x10, 0x8b, 0x55, 0xf4, 0x83, 0xc2, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0xa7, 0xc0, 0x6, 0, 0xeb, 0xe, 0x8b, 0x55, 0xf4, 0x83, 0xc2, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0xef, 0xbf, 0x6, 0, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x14, 0x40, 0x74, 0xd, 0x8b, 0x45, 0xf8, 0xe8, 0xf2, 0x9e, 0x1, 0, 0x66, 0x85, 0xc0, 0x75, 0x5, 0xe9, 0xbf, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x2d, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x3e, 0x2a, 0x74, 0x9, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x3e, 0x1d, 0x75, 0x11, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x65, 0xe8, 0xc4, 0x3a, 0x5, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x8, 0x8b, 0x45, 0xf8, 0xe8, 0xf0, 0xf0, 0xff, 0xff, 0x80, 0x3d, 0xcd, 0x37, 0x1c, 0x10, 0, 0x75, 0x9, 0x80, 0x3d, 0xcc, 0x37, 0x1c, 0x10, 0, 0x74, 0x2, 0xeb, 0x9, 0x80, 0x3d, 0xce, 0x37, 0x1c, 0x10, 0, 0x74, 0x2, 0xeb, 0x9, 0x80, 0x3d, 0xcf, 0x37, 0x1c, 0x10, 0, 0x74, 0xb, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0xe8, 0x6d, 0xf6, 0xff, 0xff, 0x31, 0xd2, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xd7, 0x3a, 0x5, 0, 0x84, 0xc0, 0x74, 0x13, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xcc, 0xf2, 0xf8, 0xff, 0xe8, 0x27, 0xef, 0xf8, 0xff, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x1d, 0x8b, 0x45, 0xf8, 0xe8, 0x19, 0xef, 0xf8, 0xff, 0x89, 0xc2, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xad, 0xf2, 0xf8, 0xff, 0xe8, 0x8, 0xef, 0xf8, 0xff, 0x39, 0xc2, 0x74, 0x2, 0xeb, 0x8, 0x8b, 0x45, 0xf8, 0xe8, 0x5c, 0xfa, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x8, 0x8b, 0x45, 0xf8, 0xe8, 0xf, 0xfd, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xfe, 0xfa, 0xf8, 0xff, 0x84, 0xc0, 0xf, 0x84, 0xe8, 0, 0, 0, 0xb8, 0x26, 0, 0, 0, 0xe8, 0x29, 0x15, 0, 0, 0x8b, 0x40, 0x16, 0x89, 0x45, 0xf0, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x50, 0xf2, 0xf8, 0xff, 0xf6, 0x40, 0x12, 0x10, 0x74, 0x9, 0xc7, 0x45, 0xec, 0x40, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xec, 0x20, 0, 0, 0, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x2a, 0xf2, 0xf8, 0xff, 0x8b, 0x40, 0x12, 0x83, 0xe0, 0x10, 0x50, 0xff, 0x35, 0xc4, 0x38, 0x1c, 0x10, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x1c, 0x48, 0x98, 0x50, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x18, 0x48, 0x98, 0x50, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x12, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0xe, 0xc1, 0xf8, 0x10, 0x50, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xeb, 0xf1, 0xf8, 0xff, 0x8b, 0x50, 0x16, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x45, 0xec, 0x29, 0xc2, 0xc1, 0xe2, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0x3d, 0xc4, 0x38, 0x1c, 0x10, 0x8b, 0x15, 0xfc, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x29, 0xd0, 0x40, 0xf, 0xbf, 0xc8, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xb8, 0xf1, 0xf8, 0xff, 0x8b, 0x50, 0x14, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x45, 0xec, 0x29, 0xc2, 0xc1, 0xe2, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0x3d, 0xc4, 0x38, 0x1c, 0x10, 0x8b, 0x15, 0xfa, 0x38, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x29, 0xd0, 0x40, 0xf, 0xbf, 0xd8, 0xba, 0x80, 0x2, 0, 0, 0x8b, 0x45, 0xf0, 0xe8, 0x81, 0xae, 0x1, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100e71bd, 0x5)   pushd(0x44);                          /* push dword 0x44 */
    II(0x100e71c2, 0x5)   calld(sys_check_available_stack_size, 0x7eb8b); /* call 0x10165d52 */
    II(0x100e71c7, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100e71c8, 0x1)   pushd(esi);                           /* push esi */
    II(0x100e71c9, 0x1)   pushd(edi);                           /* push edi */
    II(0x100e71ca, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100e71cb, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100e71cd, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100e71d3, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100e71d6, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100e71d9, 0x3)   mov(memb_a32(ss, ebp - 0x4), bl);     /* mov [ebp-0x4], bl */
    II(0x100e71dc, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x100e71e0, 0x2)   jzd(0x100e71f2, 0x10);                /* jz 0x100e71f2 */
    II(0x100e71e2, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100e71e5, 0x3)   add(edx, 0x10);                       /* add edx, 0x10 */
    II(0x100e71e8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e71eb, 0x5)   calld(0x10153297, 0x6c0a7);           /* call 0x10153297 */
    II(0x100e71f0, 0x2)   jmpd(0x100e7200, 0xe);                /* jmp 0x100e7200 */
l_0x100e71f2:
    II(0x100e71f2, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100e71f5, 0x3)   add(edx, 0x10);                       /* add edx, 0x10 */
    II(0x100e71f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e71fb, 0x5)   calld(0x101531ef, 0x6bfef);           /* call 0x101531ef */
l_0x100e7200:
    II(0x100e7200, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e7203, 0x4)   test(memb_a32(ds, eax + 0x14), 0x40); /* test byte [eax+0x14], 0x40 */
    II(0x100e7207, 0x2)   jzd(0x100e7216, 0xd);                 /* jz 0x100e7216 */
    II(0x100e7209, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e720c, 0x5)   calld(0x10101103, 0x19ef2);           /* call 0x10101103 */
    II(0x100e7211, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x100e7214, 0x2)   jnzd(0x100e721b, 0x5);                /* jnz 0x100e721b */
l_0x100e7216:
    II(0x100e7216, 0x5)   jmpd(0x100e72da, 0xbf);               /* jmp 0x100e72da */
l_0x100e721b:
    II(0x100e721b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e721e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e7220, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100e7223, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100e7225, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100e722a, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100e722c, 0x2)   jnzd(0x100e725b, 0x2d);               /* jnz 0x100e725b */
    II(0x100e722e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e7231, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x2a);  /* cmp byte [eax+0x3e], 0x2a */
    II(0x100e7235, 0x2)   jzd(0x100e7240, 0x9);                 /* jz 0x100e7240 */
    II(0x100e7237, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e723a, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1d);  /* cmp byte [eax+0x3e], 0x1d */
    II(0x100e723e, 0x2)   jnzd(0x100e7251, 0x11);               /* jnz 0x100e7251 */
l_0x100e7240:
    II(0x100e7240, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e7242, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e7245, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x100e7248, 0x5)   calld(0x1013ad11, 0x53ac4);           /* call 0x1013ad11 */
    II(0x100e724d, 0x2)   test(al, al);                         /* test al, al */
    II(0x100e724f, 0x2)   jnzd(0x100e7253, 0x2);                /* jnz 0x100e7253 */
l_0x100e7251:
    II(0x100e7251, 0x2)   jmpd(0x100e725b, 0x8);                /* jmp 0x100e725b */
l_0x100e7253:
    II(0x100e7253, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e7256, 0x5)   calld(0x100e634b, -0xf10);            /* call 0x100e634b */
l_0x100e725b:
    II(0x100e725b, 0x7)   cmp(memb_a32(ds, 0x101c37cd), 0);     /* cmp byte [0x101c37cd], 0x0 */
    II(0x100e7262, 0x2)   jnzd(0x100e726d, 0x9);                /* jnz 0x100e726d */
    II(0x100e7264, 0x7)   cmp(memb_a32(ds, 0x101c37cc), 0);     /* cmp byte [0x101c37cc], 0x0 */
    II(0x100e726b, 0x2)   jzd(0x100e726f, 0x2);                 /* jz 0x100e726f */
l_0x100e726d:
    II(0x100e726d, 0x2)   jmpd(0x100e7278, 0x9);                /* jmp 0x100e7278 */
l_0x100e726f:
    II(0x100e726f, 0x7)   cmp(memb_a32(ds, 0x101c37ce), 0);     /* cmp byte [0x101c37ce], 0x0 */
    II(0x100e7276, 0x2)   jzd(0x100e727a, 0x2);                 /* jz 0x100e727a */
l_0x100e7278:
    II(0x100e7278, 0x2)   jmpd(0x100e7283, 0x9);                /* jmp 0x100e7283 */
l_0x100e727a:
    II(0x100e727a, 0x7)   cmp(memb_a32(ds, 0x101c37cf), 0);     /* cmp byte [0x101c37cf], 0x0 */
    II(0x100e7281, 0x2)   jzd(0x100e728e, 0xb);                 /* jz 0x100e728e */
l_0x100e7283:
    II(0x100e7283, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100e7286, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e7289, 0x5)   calld(0x100e68fb, -0x993);            /* call 0x100e68fb */
l_0x100e728e:
    II(0x100e728e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e7290, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100e7295, 0x5)   calld(0x1013ad71, 0x53ad7);           /* call 0x1013ad71 */
    II(0x100e729a, 0x2)   test(al, al);                         /* test al, al */
    II(0x100e729c, 0x2)   jzd(0x100e72b1, 0x13);                /* jz 0x100e72b1 */
    II(0x100e729e, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100e72a3, 0x5)   calld(0x10076574, -0x70d34);          /* call 0x10076574 */
    II(0x100e72a8, 0x5)   calld(0x100761d4, -0x710d9);          /* call 0x100761d4 */
    II(0x100e72ad, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100e72af, 0x2)   jnzd(0x100e72b3, 0x2);                /* jnz 0x100e72b3 */
l_0x100e72b1:
    II(0x100e72b1, 0x2)   jmpd(0x100e72d0, 0x1d);               /* jmp 0x100e72d0 */
l_0x100e72b3:
    II(0x100e72b3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e72b6, 0x5)   calld(0x100761d4, -0x710e7);          /* call 0x100761d4 */
    II(0x100e72bb, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e72bd, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100e72c2, 0x5)   calld(0x10076574, -0x70d53);          /* call 0x10076574 */
    II(0x100e72c7, 0x5)   calld(0x100761d4, -0x710f8);          /* call 0x100761d4 */
    II(0x100e72cc, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100e72ce, 0x2)   jzd(0x100e72d2, 0x2);                 /* jz 0x100e72d2 */
l_0x100e72d0:
    II(0x100e72d0, 0x2)   jmpd(0x100e72da, 0x8);                /* jmp 0x100e72da */
l_0x100e72d2:
    II(0x100e72d2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e72d5, 0x5)   calld(0x100e6d36, -0x5a4);            /* call 0x100e6d36 */
l_0x100e72da:
    II(0x100e72da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e72dd, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e72df, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100e72e2, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100e72e4, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100e72e9, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100e72eb, 0x2)   jnzd(0x100e72f5, 0x8);                /* jnz 0x100e72f5 */
    II(0x100e72ed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e72f0, 0x5)   calld(0x100e7004, -0x2f1);            /* call 0x100e7004 */
l_0x100e72f5:
    II(0x100e72f5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100e72f8, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100e72fd, 0x5)   calld(0x10076e00, -0x70502);          /* call 0x10076e00 */
    II(0x100e7302, 0x2)   test(al, al);                         /* test al, al */
    II(0x100e7304, 0x6)   jzd(0x100e73f2, 0xe8);                /* jz dword 0x100e73f2 */
    II(0x100e730a, 0x5)   mov(eax, 0x26);                       /* mov eax, 0x26 */
    II(0x100e730f, 0x5)   calld(0x100e883d, 0x1529);            /* call 0x100e883d */
    II(0x100e7314, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x100e7317, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100e731a, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100e731f, 0x5)   calld(0x10076574, -0x70db0);          /* call 0x10076574 */
    II(0x100e7324, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x100e7328, 0x2)   jzd(0x100e7333, 0x9);                 /* jz 0x100e7333 */
    II(0x100e732a, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x40);  /* mov dword [ebp-0x14], 0x40 */
    II(0x100e7331, 0x2)   jmpd(0x100e733a, 0x7);                /* jmp 0x100e733a */
l_0x100e7333:
    II(0x100e7333, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x20);  /* mov dword [ebp-0x14], 0x20 */
l_0x100e733a:
    II(0x100e733a, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100e733f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e7340, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100e7345, 0x5)   calld(0x10076574, -0x70dd6);          /* call 0x10076574 */
    II(0x100e734a, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x100e734d, 0x3)   and_(eax, 0x10);                      /* and eax, 0x10 */
    II(0x100e7350, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e7351, 0x6)   pushd(memd_a32(ds, 0x101c38c4));      /* push dword [0x101c38c4] */
    II(0x100e7357, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e735a, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x100e735e, 0x1)   dec(eax);                             /* dec eax */
    II(0x100e735f, 0x1)   cwde();                               /* cwde */
    II(0x100e7360, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e7361, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e7364, 0x4)   mov(ax, memw_a32(ds, eax + 0x18));    /* mov ax, [eax+0x18] */
    II(0x100e7368, 0x1)   dec(eax);                             /* dec eax */
    II(0x100e7369, 0x1)   cwde();                               /* cwde */
    II(0x100e736a, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e736b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e736e, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x100e7371, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e7374, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e7375, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e7378, 0x3)   mov(eax, memd_a32(ds, eax + 0xe));    /* mov eax, [eax+0xe] */
    II(0x100e737b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e737e, 0x1)   pushd(eax);                           /* push eax */
    II(0x100e737f, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100e7384, 0x5)   calld(0x10076574, -0x70e15);          /* call 0x10076574 */
    II(0x100e7389, 0x3)   mov(edx, memd_a32(ds, eax + 0x16));   /* mov edx, [eax+0x16] */
    II(0x100e738c, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100e738f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100e7393, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x100e7395, 0x3)   shl(edx, 0x10);                       /* shl edx, 0x10 */
    II(0x100e7398, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100e739a, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100e739d, 0x6)   idiv(memd_a32(ds, 0x101c38c4));       /* idiv dword [0x101c38c4] */
    II(0x100e73a3, 0x6)   mov(edx, memd_a32(ds, 0x101c38fc));   /* mov edx, [0x101c38fc] */
    II(0x100e73a9, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100e73ac, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100e73ae, 0x1)   inc(eax);                             /* inc eax */
    II(0x100e73af, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100e73b2, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100e73b7, 0x5)   calld(0x10076574, -0x70e48);          /* call 0x10076574 */
    II(0x100e73bc, 0x3)   mov(edx, memd_a32(ds, eax + 0x14));   /* mov edx, [eax+0x14] */
    II(0x100e73bf, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100e73c2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100e73c6, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x100e73c8, 0x3)   shl(edx, 0x10);                       /* shl edx, 0x10 */
    II(0x100e73cb, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100e73cd, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100e73d0, 0x6)   idiv(memd_a32(ds, 0x101c38c4));       /* idiv dword [0x101c38c4] */
    II(0x100e73d6, 0x6)   mov(edx, memd_a32(ds, 0x101c38fa));   /* mov edx, [0x101c38fa] */
    II(0x100e73dc, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100e73df, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100e73e1, 0x1)   inc(eax);                             /* inc eax */
    II(0x100e73e2, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100e73e5, 0x5)   mov(edx, 0x280);                      /* mov edx, 0x280 */
    II(0x100e73ea, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e73ed, 0x5)   calld(0x10102273, 0x1ae81);           /* call 0x10102273 */
l_0x100e73f2:
    II(0x100e73f2, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100e73f4, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100e73f5, 0x1)   popd(edi);                            /* pop edi */
    II(0x100e73f6, 0x1)   popd(esi);                            /* pop esi */
    II(0x100e73f7, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100e73f8, 0x1)   retd();                               /* ret */
FUNC_END

