FUNC_BEGIN(0x100a4e00, 0x6a75c2467f73a812, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0x48, 0xf, 0xc, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x14, 0xe8, 0x6a, 0x1d, 0xfd, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0x5c, 0x1d, 0xfd, 0xff, 0x98, 0x1, 0xd0, 0x85, 0xc0, 0x75, 0x9, 0xc6, 0x45, 0xf4, 0, 0xe9, 0x65, 0x1, 0, 0, 0xe8, 0xab, 0x34, 0xa, 0, 0x2b, 0x5, 0x74, 0x39, 0x1c, 0x10, 0x3b, 0x5, 0x84, 0xdd, 0x1b, 0x10, 0x72, 0x9, 0xc6, 0x45, 0xf4, 0x1, 0xe9, 0x49, 0x1, 0, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0x29, 0x60, 0, 0, 0x89, 0x45, 0xec, 0x80, 0x65, 0xf8, 0xfe, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0xb, 0x1d, 0xfd, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x14, 0xe8, 0xfd, 0x1c, 0xfd, 0xff, 0x98, 0x1, 0xd0, 0x85, 0xc0, 0xf, 0x8e, 0xf1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x14, 0xe8, 0xe7, 0x1c, 0xfd, 0xff, 0x98, 0x85, 0xc0, 0x75, 0x9, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0x32, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x30, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x2, 0x7d, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0xc0, 0x1c, 0xfd, 0xff, 0x98, 0x85, 0xc0, 0x75, 0x39, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x14, 0xe8, 0x9e, 0x5d, 0, 0, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x32, 0x5f, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xfa, 0x5e, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x14, 0xe8, 0xb5, 0x5d, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0x32, 0, 0, 0xeb, 0x35, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0x65, 0x5d, 0, 0, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xf9, 0x5e, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xc1, 0x5e, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0x7c, 0x5d, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0xff, 0x40, 0x32, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x66, 0xff, 0x5, 0xb8, 0x31, 0x1c, 0x10, 0x8d, 0x45, 0xe8, 0xe8, 0x3c, 0x5e, 0, 0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xe4, 0xff, 0x52, 0x4, 0xe8, 0x88, 0x33, 0xa, 0, 0x2b, 0x5, 0x74, 0x39, 0x1c, 0x10, 0x3b, 0x5, 0x84, 0xdd, 0x1b, 0x10, 0x72, 0x10, 0xc6, 0x45, 0xf4, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x70, 0x51, 0, 0, 0xeb, 0x1f, 0xe9, 0xeb, 0xfe, 0xff, 0xff, 0xc6, 0x45, 0xf4, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x5b, 0x51, 0, 0, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x4f, 0x51, 0, 0, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100a4e00, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x100a4e05, 0x5)   calld(sys_check_available_stack_size, 0xc0f48); /* call 0x10165d52 */
    II(0x100a4e0a, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a4e0b, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a4e0c, 0x1)   pushd(edx);                           /* push edx */
    II(0x100a4e0d, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a4e0e, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a4e0f, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a4e10, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a4e12, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x100a4e18, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100a4e1b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a4e1e, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x100a4e21, 0x5)   calld(0x10076b90, -0x2e296);          /* call 0x10076b90 */
    II(0x100a4e26, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100a4e29, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a4e2c, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100a4e2f, 0x5)   calld(0x10076b90, -0x2e2a4);          /* call 0x10076b90 */
    II(0x100a4e34, 0x1)   cwde();                               /* cwde */
    II(0x100a4e35, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100a4e37, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a4e39, 0x2)   jnzd(0x100a4e44, 0x9);                /* jnz 0x100a4e44 */
    II(0x100a4e3b, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100a4e3f, 0x5)   jmpd(0x100a4fa9, 0x165);              /* jmp 0x100a4fa9 */
l_0x100a4e44:
    II(0x100a4e44, 0x5)   calld(0x101482f4, 0xa34ab);           /* call 0x101482f4 */
    II(0x100a4e49, 0x6)   sub(eax, memd_a32(ds, 0x101c3974));   /* sub eax, [0x101c3974] */
    II(0x100a4e4f, 0x6)   cmp(eax, memd_a32(ds, 0x101bdd84));   /* cmp eax, [0x101bdd84] */
    II(0x100a4e55, 0x2)   jbd(0x100a4e60, 0x9);                 /* jb 0x100a4e60 */
    II(0x100a4e57, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100a4e5b, 0x5)   jmpd(0x100a4fa9, 0x149);              /* jmp 0x100a4fa9 */
l_0x100a4e60:
    II(0x100a4e60, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100a4e67, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x100a4e6b, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a4e6e, 0x5)   calld(0x100aae9c, 0x6029);            /* call 0x100aae9c */
    II(0x100a4e73, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100a4e76, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
l_0x100a4e7a:
    II(0x100a4e7a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a4e7d, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100a4e80, 0x5)   calld(0x10076b90, -0x2e2f5);          /* call 0x10076b90 */
    II(0x100a4e85, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100a4e88, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a4e8b, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x100a4e8e, 0x5)   calld(0x10076b90, -0x2e303);          /* call 0x10076b90 */
    II(0x100a4e93, 0x1)   cwde();                               /* cwde */
    II(0x100a4e94, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100a4e96, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a4e98, 0x6)   jled(0x100a4f8f, 0xf1);               /* jle dword 0x100a4f8f */
    II(0x100a4e9e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a4ea1, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x100a4ea4, 0x5)   calld(0x10076b90, -0x2e319);          /* call 0x10076b90 */
    II(0x100a4ea9, 0x1)   cwde();                               /* cwde */
    II(0x100a4eaa, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a4eac, 0x2)   jnzd(0x100a4eb7, 0x9);                /* jnz 0x100a4eb7 */
    II(0x100a4eae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a4eb1, 0x6)   mov(memw_a32(ds, eax + 0x32), 0);     /* mov word [eax+0x32], 0x0 */
l_0x100a4eb7:
    II(0x100a4eb7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a4eba, 0x3)   mov(eax, memd_a32(ds, eax + 0x30));   /* mov eax, [eax+0x30] */
    II(0x100a4ebd, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a4ec0, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100a4ec3, 0x2)   jged(0x100a4ed5, 0x10);               /* jge 0x100a4ed5 */
    II(0x100a4ec5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a4ec8, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100a4ecb, 0x5)   calld(0x10076b90, -0x2e340);          /* call 0x10076b90 */
    II(0x100a4ed0, 0x1)   cwde();                               /* cwde */
    II(0x100a4ed1, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a4ed3, 0x2)   jnzd(0x100a4f0e, 0x39);               /* jnz 0x100a4f0e */
l_0x100a4ed5:
    II(0x100a4ed5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a4ed7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a4eda, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x100a4edd, 0x5)   calld(0x100aac80, 0x5d9e);            /* call 0x100aac80 */
    II(0x100a4ee2, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x100a4ee5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a4ee7, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100a4ee9, 0x5)   calld(0x100aae20, 0x5f32);            /* call 0x100aae20 */
    II(0x100a4eee, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a4ef1, 0x5)   calld(0x100aadf0, 0x5efa);            /* call 0x100aadf0 */
    II(0x100a4ef6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a4ef8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a4efb, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x100a4efe, 0x5)   calld(0x100aacb8, 0x5db5);            /* call 0x100aacb8 */
    II(0x100a4f03, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a4f06, 0x6)   mov(memw_a32(ds, eax + 0x32), 0);     /* mov word [eax+0x32], 0x0 */
    II(0x100a4f0c, 0x2)   jmpd(0x100a4f43, 0x35);               /* jmp 0x100a4f43 */
l_0x100a4f0e:
    II(0x100a4f0e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a4f10, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a4f13, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100a4f16, 0x5)   calld(0x100aac80, 0x5d65);            /* call 0x100aac80 */
    II(0x100a4f1b, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x100a4f1e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a4f20, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100a4f22, 0x5)   calld(0x100aae20, 0x5ef9);            /* call 0x100aae20 */
    II(0x100a4f27, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a4f2a, 0x5)   calld(0x100aadf0, 0x5ec1);            /* call 0x100aadf0 */
    II(0x100a4f2f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a4f31, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a4f34, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100a4f37, 0x5)   calld(0x100aacb8, 0x5d7c);            /* call 0x100aacb8 */
    II(0x100a4f3c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a4f3f, 0x4)   inc(memw_a32(ds, eax + 0x32));        /* inc word [eax+0x32] */
l_0x100a4f43:
    II(0x100a4f43, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100a4f46, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
    II(0x100a4f49, 0x7)   inc(memw_a32(ds, 0x101c31b8));        /* inc word [0x101c31b8] */
    II(0x100a4f50, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a4f53, 0x5)   calld(0x100aad94, 0x5e3c);            /* call 0x100aad94 */
    II(0x100a4f58, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100a4f5b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100a4f5e, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100a4f61, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100a4f64, 0x3)   calld_abs(memd_a32(ds, edx + 0x4));   /* call dword near [edx+0x4] */
    II(0x100a4f67, 0x5)   calld(0x101482f4, 0xa3388);           /* call 0x101482f4 */
    II(0x100a4f6c, 0x6)   sub(eax, memd_a32(ds, 0x101c3974));   /* sub eax, [0x101c3974] */
    II(0x100a4f72, 0x6)   cmp(eax, memd_a32(ds, 0x101bdd84));   /* cmp eax, [0x101bdd84] */
    II(0x100a4f78, 0x2)   jbd(0x100a4f8a, 0x10);                /* jb 0x100a4f8a */
    II(0x100a4f7a, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100a4f7e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a4f80, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a4f83, 0x5)   calld(0x100aa0f8, 0x5170);            /* call 0x100aa0f8 */
    II(0x100a4f88, 0x2)   jmpd(0x100a4fa9, 0x1f);               /* jmp 0x100a4fa9 */
l_0x100a4f8a:
    II(0x100a4f8a, 0x5)   jmpd(0x100a4e7a, -0x115);             /* jmp 0x100a4e7a */
l_0x100a4f8f:
    II(0x100a4f8f, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100a4f93, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a4f95, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a4f98, 0x5)   calld(0x100aa0f8, 0x515b);            /* call 0x100aa0f8 */
    II(0x100a4f9d, 0x2)   jmpd(0x100a4fa9, 0xa);                /* jmp 0x100a4fa9 */
//  II(0x100a4f9f, 0xa)   /* Недостижимый код. */
l_0x100a4fa9:
    II(0x100a4fa9, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100a4fac, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a4fae, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a4faf, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a4fb0, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a4fb1, 0x1)   popd(edx);                            /* pop edx */
    II(0x100a4fb2, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a4fb3, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a4fb4, 0x1)   retd();                               /* ret */
FUNC_END

