FUNC_BEGIN(0x100d0c7e, 0x4d99c3e2b06f5e06, 0x20, ({0x68, 0x20, 0, 0, 0, 0xe8, 0xca, 0x50, 0x9, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x66, 0xc7, 0x40, 0x26, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x24, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x1e, 0xe8, 0x70, 0xa5, 0xfb, 0xff, 0x66, 0x8b, 0, 0x66, 0x3b, 0x45, 0xfc, 0x74, 0x9, 0x8b, 0x45, 0xf8, 0x66, 0xff, 0x40, 0x26, 0xeb, 0xda, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x24, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0xc8, 0xf4, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100d0c7e, 0x5)   pushd(0x20);                          /* push dword 0x20 */
    II(0x100d0c83, 0x5)   calld(sys_check_available_stack_size, 0x950ca); /* call 0x10165d52 */
    II(0x100d0c88, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100d0c89, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100d0c8a, 0x1)   pushd(esi);                           /* push esi */
    II(0x100d0c8b, 0x1)   pushd(edi);                           /* push edi */
    II(0x100d0c8c, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100d0c8d, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100d0c8f, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x100d0c95, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100d0c98, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100d0c9b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0c9e, 0x6)   mov(memw_a32(ds, eax + 0x26), 0);     /* mov word [eax+0x26], 0x0 */
l_0x100d0ca4:
    II(0x100d0ca4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0ca7, 0x3)   mov(edx, memd_a32(ds, eax + 0x24));   /* mov edx, [eax+0x24] */
    II(0x100d0caa, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100d0cad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0cb0, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100d0cb3, 0x5)   calld(0x1008b228, -0x45a90);          /* call 0x1008b228 */
    II(0x100d0cb8, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100d0cbb, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4));     /* cmp ax, [ebp-0x4] */
    II(0x100d0cbf, 0x2)   jzd(0x100d0cca, 0x9);                 /* jz 0x100d0cca */
    II(0x100d0cc1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0cc4, 0x4)   inc(memw_a32(ds, eax + 0x26));        /* inc word [eax+0x26] */
    II(0x100d0cc8, 0x2)   jmpd(0x100d0ca4, -0x26);              /* jmp 0x100d0ca4 */
l_0x100d0cca:
    II(0x100d0cca, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0ccd, 0x3)   mov(edx, memd_a32(ds, eax + 0x24));   /* mov edx, [eax+0x24] */
    II(0x100d0cd0, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100d0cd3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d0cd6, 0x5)   calld(0x100d01a3, -0xb38);            /* call 0x100d01a3 */
    II(0x100d0cdb, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100d0cdd, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100d0cde, 0x1)   popd(edi);                            /* pop edi */
    II(0x100d0cdf, 0x1)   popd(esi);                            /* pop esi */
    II(0x100d0ce0, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100d0ce1, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100d0ce2, 0x1)   retd();                               /* ret */
FUNC_END

