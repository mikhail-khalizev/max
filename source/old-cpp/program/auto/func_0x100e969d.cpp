FUNC_BEGIN(0x100e969d, 0x56501cf6f0b3e620, 0x20, ({0x68, 0x5c, 0, 0, 0, 0xe8, 0xab, 0xc6, 0x7, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x4c, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xfc, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xf4, 0x80, 0x4d, 0xe8, 0x1, 0x8d, 0x45, 0xe4, 0xe8, 0x1e, 0x84, 0x5, 0, 0x89, 0x45, 0xe0, 0x80, 0x65, 0xe8, 0xfe, 0xf, 0xbf, 0x45, 0xfc, 0x85, 0xc0, 0x74, 0x6, 0x83, 0x7d, 0xf0, 0, 0x75, 0x16, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x3a, 0x84, 0x5, 0, 0xe9, 0xe7, 0x3, 0, 0, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x66, 0xc7, 0, 0, 0, 0xc6, 0x45, 0xec, 0x1, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xd4, 0x8d, 0x45, 0xe4, 0xe8, 0xff, 0x87, 0x5, 0, 0x8b, 0x45, 0xd4, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x8, 0x8b, 0x45, 0xd4, 0x80, 0x38, 0x20, 0x75, 0x2, 0xeb, 0x8, 0x8b, 0x45, 0xd4, 0x80, 0x38, 0xa, 0x75, 0x2, 0xeb, 0x2b, 0x8b, 0x45, 0xd4, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0xd, 0x75, 0x8, 0x8b, 0x45, 0xd4, 0xff, 0x45, 0xd4, 0xeb, 0x12, 0x8b, 0x45, 0xd4, 0xff, 0x45, 0xd4, 0x31, 0xd2, 0x8a, 0x10, 0x8d, 0x45, 0xe4, 0xe8, 0x89, 0x86, 0x5, 0, 0xeb, 0xb3, 0x8d, 0x45, 0xe4, 0xe8, 0x85, 0x17, 0, 0, 0x89, 0x45, 0xd0, 0x8d, 0x45, 0xe4, 0xe8, 0x52, 0, 0xfa, 0xff, 0xff, 0x15, 0xf4, 0xdd, 0x1b, 0x10, 0xf, 0xbf, 0x55, 0xf8, 0x39, 0xd0, 0x7e, 0x9, 0xf, 0xbf, 0x45, 0xd0, 0x83, 0xf8, 0x4, 0x7d, 0x2, 0xeb, 0xf, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0, 0x4a, 0x39, 0xd0, 0x7c, 0x5, 0xe9, 0x68, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xcc, 0x80, 0x7d, 0xec, 0, 0xf, 0x85, 0x8f, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0, 0xc1, 0xe0, 0x2, 0x83, 0xe8, 0x4, 0x3, 0x45, 0xd8, 0xe8, 0x1, 0, 0xfa, 0xff, 0xff, 0x15, 0xf4, 0xdd, 0x1b, 0x10, 0x89, 0xc2, 0xb8, 0x20, 0, 0, 0, 0xff, 0x15, 0xf8, 0xdd, 0x1b, 0x10, 0x1, 0xd0, 0x29, 0x45, 0xcc, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0, 0x4a, 0x39, 0xd0, 0x7d, 0x54, 0xb8, 0x2d, 0, 0, 0, 0xff, 0x15, 0xf8, 0xdd, 0x1b, 0x10, 0x89, 0xc3, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x8d, 0x8a, 0x5, 0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0xff, 0x15, 0xf8, 0xdd, 0x1b, 0x10, 0x1, 0xc3, 0xba, 0x1, 0, 0, 0, 0x8d, 0x45, 0xe4, 0xe8, 0x71, 0x8a, 0x5, 0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0xff, 0x15, 0xf8, 0xdd, 0x1b, 0x10, 0x1, 0xc3, 0x89, 0x5d, 0xc8, 0x8b, 0x45, 0xcc, 0x66, 0x3b, 0x45, 0xc8, 0x7d, 0x6, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xcc, 0x8d, 0x45, 0xe4, 0xe8, 0x7e, 0xff, 0xf9, 0xff, 0xff, 0x15, 0xf4, 0xdd, 0x1b, 0x10, 0x89, 0xc2, 0xb8, 0x2d, 0, 0, 0, 0xff, 0x15, 0xf8, 0xdd, 0x1b, 0x10, 0x1, 0xd0, 0x29, 0x45, 0xcc, 0x8b, 0x45, 0xd0, 0x83, 0xe8, 0x2, 0x89, 0x45, 0xc4, 0xeb, 0x6, 0x8b, 0x45, 0xc4, 0xff, 0x45, 0xc4, 0x8b, 0x45, 0xc4, 0x66, 0x3b, 0x45, 0xd0, 0x7d, 0x1e, 0xf, 0xbf, 0x55, 0xc4, 0x8d, 0x45, 0xe4, 0xe8, 0xa, 0x8a, 0x5, 0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0xff, 0x15, 0xf8, 0xdd, 0x1b, 0x10, 0x1, 0x45, 0xcc, 0xeb, 0xd3, 0x83, 0x45, 0xd0, 0xfe, 0xf, 0xbf, 0x45, 0xd0, 0x83, 0xf8, 0x1, 0x7e, 0x8, 0xf, 0xbf, 0x45, 0xcc, 0x85, 0xc0, 0x7c, 0x2, 0xeb, 0x24, 0x8b, 0x45, 0xd0, 0xff, 0x4d, 0xd0, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xe4, 0xe8, 0xcf, 0x89, 0x5, 0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0xff, 0x15, 0xf8, 0xdd, 0x1b, 0x10, 0x1, 0x45, 0xcc, 0xeb, 0xc9, 0xf, 0xbf, 0x45, 0xd0, 0x83, 0xf8, 0x1, 0x7e, 0x2d, 0xf, 0xbf, 0x45, 0xd0, 0x8b, 0x55, 0xf0, 0x1, 0xc2, 0x89, 0x55, 0xd4, 0xf, 0xbf, 0x55, 0xd0, 0x8d, 0x45, 0xe4, 0xe8, 0x9c, 0x89, 0x5, 0, 0xc6, 0, 0x2d, 0x8b, 0x45, 0xd0, 0x40, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xe4, 0xe8, 0x8a, 0x89, 0x5, 0, 0xc6, 0, 0, 0x8b, 0x45, 0xd4, 0x80, 0x38, 0x20, 0x75, 0x33, 0x8b, 0x45, 0xd4, 0x80, 0x38, 0x20, 0x75, 0x8, 0x8b, 0x45, 0xd4, 0xff, 0x45, 0xd4, 0xeb, 0xf0, 0x8b, 0x45, 0xd4, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0xd, 0x75, 0x6, 0x8b, 0x45, 0xd4, 0xff, 0x45, 0xd4, 0x8b, 0x45, 0xd4, 0x80, 0x38, 0xa, 0x75, 0x6, 0x8b, 0x45, 0xd4, 0xff, 0x45, 0xd4, 0x8b, 0x45, 0xf0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0xd, 0x75, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xd4, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0xa, 0x75, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0, 0x66, 0x3b, 0x45, 0xfc, 0x7d, 0x49, 0x80, 0x7d, 0xec, 0, 0x75, 0x41, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0, 0xc1, 0xe0, 0x2, 0x83, 0xe8, 0x4, 0x3, 0x45, 0xd8, 0xe8, 0x2c, 0xfe, 0xf9, 0xff, 0xff, 0x15, 0xf4, 0xdd, 0x1b, 0x10, 0x89, 0xc2, 0xb8, 0x20, 0, 0, 0, 0xff, 0x15, 0xf8, 0xdd, 0x1b, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0xf, 0xfe, 0xf9, 0xff, 0xff, 0x15, 0xf4, 0xdd, 0x1b, 0x10, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xf8, 0x39, 0xc2, 0x7e, 0x2, 0xeb, 0x5, 0xe9, 0x9c, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0, 0x40, 0x89, 0x45, 0xc0, 0xbb, 0x10, 0x5c, 0x1b, 0x10, 0x8b, 0x55, 0xc0, 0x8b, 0x45, 0xc0, 0xc1, 0xe0, 0x2, 0x83, 0xc0, 0x4, 0xe8, 0x20, 0xc6, 0x7, 0, 0xe8, 0xa, 0x84, 0x8, 0, 0x89, 0x45, 0xbc, 0xc7, 0x45, 0xb8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xb8, 0xff, 0x45, 0xb8, 0x8b, 0x45, 0xb8, 0x8b, 0x55, 0xf4, 0x66, 0x3b, 0x2, 0x7d, 0x1d, 0xf, 0xbf, 0x45, 0xb8, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xd8, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xb8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xbc, 0xe8, 0x19, 0x88, 0x5, 0, 0xeb, 0xd2, 0x83, 0x7d, 0xd8, 0, 0x74, 0x12, 0xba, 0x10, 0x5c, 0x1b, 0x10, 0x8b, 0x45, 0xd8, 0xe8, 0x76, 0xc5, 0x7, 0, 0xe8, 0x91, 0xc5, 0x7, 0, 0x8b, 0x45, 0xbc, 0x89, 0x45, 0xd8, 0x8d, 0x55, 0xe4, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x18, 0x8b, 0x45, 0xf4, 0x66, 0xff, 0, 0xf, 0xbf, 0xc3, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xd8, 0xe8, 0xdc, 0x87, 0x5, 0, 0xeb, 0x30, 0xba, 0x20, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0, 0xc1, 0xe0, 0x2, 0x83, 0xe8, 0x4, 0x3, 0x45, 0xd8, 0xe8, 0x65, 0x83, 0x5, 0, 0x8d, 0x55, 0xe4, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0, 0xc1, 0xe0, 0x2, 0x83, 0xe8, 0x4, 0x3, 0x45, 0xd8, 0xe8, 0xed, 0x81, 0x5, 0, 0x8b, 0x45, 0xd4, 0x80, 0x38, 0xa, 0x75, 0x6, 0xc6, 0x45, 0xb4, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xb4, 0, 0x8a, 0x45, 0xb4, 0x88, 0x45, 0xec, 0x8b, 0x45, 0xf0, 0x80, 0x38, 0, 0xf, 0x85, 0x48, 0xfc, 0xff, 0xff, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xdc, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x5a, 0x80, 0x5, 0, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x4e, 0x80, 0x5, 0, 0x8b, 0x45, 0xdc, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x100e969d, 0x5)   pushd(0x5c);                          /* push dword 0x5c */
    II(0x100e96a2, 0x5)   calld(sys_check_available_stack_size, 0x7c6ab); /* call 0x10165d52 */
    II(0x100e96a7, 0x1)   pushd(esi);                           /* push esi */
    II(0x100e96a8, 0x1)   pushd(edi);                           /* push edi */
    II(0x100e96a9, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100e96aa, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100e96ac, 0x6)   sub(esp, 0x4c);                       /* sub esp, 0x4c */
    II(0x100e96b2, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100e96b5, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100e96b8, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x100e96bb, 0x3)   mov(memd_a32(ss, ebp - 0xc), ecx);    /* mov [ebp-0xc], ecx */
    II(0x100e96be, 0x4)   or_(memb_a32(ss, ebp - 0x18), 0x1);   /* or byte [ebp-0x18], 0x1 */
    II(0x100e96c2, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100e96c5, 0x5)   calld(my_string_ctor, 0x5841e);       /* call 0x10141ae8 */
    II(0x100e96ca, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100e96cd, 0x4)   and_(memb_a32(ss, ebp - 0x18), -0x2 /* 0xfe */); /* and byte [ebp-0x18], 0xfe */
    II(0x100e96d1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100e96d5, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100e96d7, 0x2)   jzd(0x100e96df, 0x6);                 /* jz 0x100e96df */
    II(0x100e96d9, 0x4)   cmp(memd_a32(ss, ebp - 0x10), 0);     /* cmp dword [ebp-0x10], 0x0 */
    II(0x100e96dd, 0x2)   jnzd(0x100e96f5, 0x16);               /* jnz 0x100e96f5 */
l_0x100e96df:
    II(0x100e96df, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
    II(0x100e96e6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e96e8, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100e96eb, 0x5)   calld(my_string_dtor, 0x5843a);       /* call 0x10141b2a */
    II(0x100e96f0, 0x5)   jmpd(0x100e9adc, 0x3e7);              /* jmp 0x100e9adc */
l_0x100e96f5:
    II(0x100e96f5, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
    II(0x100e96fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e96ff, 0x5)   mov(memw_a32(ds, eax), 0);            /* mov word [eax], 0x0 */
    II(0x100e9704, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
l_0x100e9708:
    II(0x100e9708, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e970b, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100e970e, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100e9711, 0x5)   calld(my_string_clear, 0x587ff);      /* call 0x10141f15 */
l_0x100e9716:
    II(0x100e9716, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100e9719, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100e971b, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100e9720, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100e9722, 0x2)   jzd(0x100e972c, 0x8);                 /* jz 0x100e972c */
    II(0x100e9724, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100e9727, 0x3)   cmp(memb_a32(ds, eax), 0x20);         /* cmp byte [eax], 0x20 */
    II(0x100e972a, 0x2)   jnzd(0x100e972e, 0x2);                /* jnz 0x100e972e */
l_0x100e972c:
    II(0x100e972c, 0x2)   jmpd(0x100e9736, 0x8);                /* jmp 0x100e9736 */
l_0x100e972e:
    II(0x100e972e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100e9731, 0x3)   cmp(memb_a32(ds, eax), 0xa);          /* cmp byte [eax], 0xa */
    II(0x100e9734, 0x2)   jnzd(0x100e9738, 0x2);                /* jnz 0x100e9738 */
l_0x100e9736:
    II(0x100e9736, 0x2)   jmpd(0x100e9763, 0x2b);               /* jmp 0x100e9763 */
l_0x100e9738:
    II(0x100e9738, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100e973b, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100e973d, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100e9742, 0x3)   cmp(eax, 0xd);                        /* cmp eax, 0xd */
    II(0x100e9745, 0x2)   jnzd(0x100e974f, 0x8);                /* jnz 0x100e974f */
    II(0x100e9747, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100e974a, 0x3)   inc(memd_a32(ss, ebp - 0x2c));        /* inc dword [ebp-0x2c] */
    II(0x100e974d, 0x2)   jmpd(0x100e9761, 0x12);               /* jmp 0x100e9761 */
l_0x100e974f:
    II(0x100e974f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100e9752, 0x3)   inc(memd_a32(ss, ebp - 0x2c));        /* inc dword [ebp-0x2c] */
    II(0x100e9755, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e9757, 0x2)   mov(dl, memb_a32(ds, eax));           /* mov dl, [eax] */
    II(0x100e9759, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100e975c, 0x5)   calld(my_string_append_char, 0x58689); /* call 0x10141dea */
l_0x100e9761:
    II(0x100e9761, 0x2)   jmpd(0x100e9716, -0x4d);              /* jmp 0x100e9716 */
l_0x100e9763:
    II(0x100e9763, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100e9766, 0x5)   calld(0x100eaef0, 0x1785);            /* call 0x100eaef0 */
    II(0x100e976b, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100e976e, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100e9771, 0x5)   calld(my_strobj_c_str_v2, -0x5ffae);  /* call 0x100897c8 */
    II(0x100e9776, 0x6)   calld_abs(memd_a32(ds, 0x101bddf4));  /* call dword near [0x101bddf4] */
    II(0x100e977c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100e9780, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x100e9782, 0x2)   jled(0x100e978d, 0x9);                /* jle 0x100e978d */
    II(0x100e9784, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100e9788, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100e978b, 0x2)   jged(0x100e978f, 0x2);                /* jge 0x100e978f */
l_0x100e978d:
    II(0x100e978d, 0x2)   jmpd(0x100e979e, 0xf);                /* jmp 0x100e979e */
l_0x100e978f:
    II(0x100e978f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100e9793, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e9796, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100e9799, 0x1)   dec(edx);                             /* dec edx */
    II(0x100e979a, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x100e979c, 0x2)   jld(0x100e97a3, 0x5);                 /* jl 0x100e97a3 */
l_0x100e979e:
    II(0x100e979e, 0x5)   jmpd(0x100e990b, 0x168);              /* jmp 0x100e990b */
l_0x100e97a3:
    II(0x100e97a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e97a6, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100e97a9, 0x4)   cmp(memb_a32(ss, ebp - 0x14), 0);     /* cmp byte [ebp-0x14], 0x0 */
    II(0x100e97ad, 0x6)   jnzd(0x100e9842, 0x8f);               /* jnz dword 0x100e9842 */
    II(0x100e97b3, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e97b6, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100e97b9, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100e97bc, 0x3)   sub(eax, 0x4);                        /* sub eax, 0x4 */
    II(0x100e97bf, 0x3)   add(eax, memd_a32(ss, ebp - 0x28));   /* add eax, [ebp-0x28] */
    II(0x100e97c2, 0x5)   calld(my_strobj_c_str_v2, -0x5ffff);  /* call 0x100897c8 */
    II(0x100e97c7, 0x6)   calld_abs(memd_a32(ds, 0x101bddf4));  /* call dword near [0x101bddf4] */
    II(0x100e97cd, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e97cf, 0x5)   mov(eax, 0x20);                       /* mov eax, 0x20 */
    II(0x100e97d4, 0x6)   calld_abs(memd_a32(ds, 0x101bddf8));  /* call dword near [0x101bddf8] */
    II(0x100e97da, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100e97dc, 0x3)   sub(memd_a32(ss, ebp - 0x34), eax);   /* sub [ebp-0x34], eax */
    II(0x100e97df, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100e97e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e97e6, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100e97e9, 0x1)   dec(edx);                             /* dec edx */
    II(0x100e97ea, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x100e97ec, 0x2)   jged(0x100e9842, 0x54);               /* jge 0x100e9842 */
    II(0x100e97ee, 0x5)   mov(eax, 0x2d);                       /* mov eax, 0x2d */
    II(0x100e97f3, 0x6)   calld_abs(memd_a32(ds, 0x101bddf8));  /* call dword near [0x101bddf8] */
    II(0x100e97f9, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100e97fb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e97fd, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100e9800, 0x5)   calld(my_string_get, 0x58a8d);        /* call 0x10142292 */
    II(0x100e9805, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100e9807, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100e980c, 0x6)   calld_abs(memd_a32(ds, 0x101bddf8));  /* call dword near [0x101bddf8] */
    II(0x100e9812, 0x2)   add(ebx, eax);                        /* add ebx, eax */
    II(0x100e9814, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100e9819, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100e981c, 0x5)   calld(my_string_get, 0x58a71);        /* call 0x10142292 */
    II(0x100e9821, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100e9823, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100e9828, 0x6)   calld_abs(memd_a32(ds, 0x101bddf8));  /* call dword near [0x101bddf8] */
    II(0x100e982e, 0x2)   add(ebx, eax);                        /* add ebx, eax */
    II(0x100e9830, 0x3)   mov(memd_a32(ss, ebp - 0x38), ebx);   /* mov [ebp-0x38], ebx */
    II(0x100e9833, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100e9836, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x38));    /* cmp ax, [ebp-0x38] */
    II(0x100e983a, 0x2)   jged(0x100e9842, 0x6);                /* jge 0x100e9842 */
    II(0x100e983c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e983f, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
l_0x100e9842:
    II(0x100e9842, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100e9845, 0x5)   calld(my_strobj_c_str_v2, -0x60082);  /* call 0x100897c8 */
    II(0x100e984a, 0x6)   calld_abs(memd_a32(ds, 0x101bddf4));  /* call dword near [0x101bddf4] */
    II(0x100e9850, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e9852, 0x5)   mov(eax, 0x2d);                       /* mov eax, 0x2d */
    II(0x100e9857, 0x6)   calld_abs(memd_a32(ds, 0x101bddf8));  /* call dword near [0x101bddf8] */
    II(0x100e985d, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100e985f, 0x3)   sub(memd_a32(ss, ebp - 0x34), eax);   /* sub [ebp-0x34], eax */
    II(0x100e9862, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100e9865, 0x3)   sub(eax, 0x2);                        /* sub eax, 0x2 */
    II(0x100e9868, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x100e986b, 0x2)   jmpd(0x100e9873, 0x6);                /* jmp 0x100e9873 */
l_0x100e986d:
    II(0x100e986d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x100e9870, 0x3)   inc(memd_a32(ss, ebp - 0x3c));        /* inc dword [ebp-0x3c] */
l_0x100e9873:
    II(0x100e9873, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x100e9876, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x30));    /* cmp ax, [ebp-0x30] */
    II(0x100e987a, 0x2)   jged(0x100e989a, 0x1e);               /* jge 0x100e989a */
    II(0x100e987c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x3c)); /* movsx edx, word [ebp-0x3c] */
    II(0x100e9880, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100e9883, 0x5)   calld(my_string_get, 0x58a0a);        /* call 0x10142292 */
    II(0x100e9888, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100e988a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100e988f, 0x6)   calld_abs(memd_a32(ds, 0x101bddf8));  /* call dword near [0x101bddf8] */
    II(0x100e9895, 0x3)   add(memd_a32(ss, ebp - 0x34), eax);   /* add [ebp-0x34], eax */
    II(0x100e9898, 0x2)   jmpd(0x100e986d, -0x2d);              /* jmp 0x100e986d */
l_0x100e989a:
    II(0x100e989a, 0x4)   add(memd_a32(ss, ebp - 0x30), -0x2 /* 0xfe */); /* add dword [ebp-0x30], 0xfe */
l_0x100e989e:
    II(0x100e989e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100e98a2, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100e98a5, 0x2)   jled(0x100e98af, 0x8);                /* jle 0x100e98af */
    II(0x100e98a7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x34)); /* movsx eax, word [ebp-0x34] */
    II(0x100e98ab, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100e98ad, 0x2)   jld(0x100e98b1, 0x2);                 /* jl 0x100e98b1 */
l_0x100e98af:
    II(0x100e98af, 0x2)   jmpd(0x100e98d5, 0x24);               /* jmp 0x100e98d5 */
l_0x100e98b1:
    II(0x100e98b1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100e98b4, 0x3)   dec(memd_a32(ss, ebp - 0x30));        /* dec dword [ebp-0x30] */
    II(0x100e98b7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100e98bb, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100e98be, 0x5)   calld(my_string_get, 0x589cf);        /* call 0x10142292 */
    II(0x100e98c3, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100e98c5, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100e98ca, 0x6)   calld_abs(memd_a32(ds, 0x101bddf8));  /* call dword near [0x101bddf8] */
    II(0x100e98d0, 0x3)   add(memd_a32(ss, ebp - 0x34), eax);   /* add [ebp-0x34], eax */
    II(0x100e98d3, 0x2)   jmpd(0x100e989e, -0x37);              /* jmp 0x100e989e */
l_0x100e98d5:
    II(0x100e98d5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100e98d9, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100e98dc, 0x2)   jled(0x100e990b, 0x2d);               /* jle 0x100e990b */
    II(0x100e98de, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x100e98e2, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100e98e5, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100e98e7, 0x3)   mov(memd_a32(ss, ebp - 0x2c), edx);   /* mov [ebp-0x2c], edx */
    II(0x100e98ea, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x30)); /* movsx edx, word [ebp-0x30] */
    II(0x100e98ee, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100e98f1, 0x5)   calld(my_string_get, 0x5899c);        /* call 0x10142292 */
    II(0x100e98f6, 0x3)   mov(memb_a32(ds, eax), 0x2d);         /* mov byte [eax], 0x2d */
    II(0x100e98f9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100e98fc, 0x1)   inc(eax);                             /* inc eax */
    II(0x100e98fd, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100e9900, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100e9903, 0x5)   calld(my_string_get, 0x5898a);        /* call 0x10142292 */
    II(0x100e9908, 0x3)   mov(memb_a32(ds, eax), 0);            /* mov byte [eax], 0x0 */
l_0x100e990b:
    II(0x100e990b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100e990e, 0x3)   cmp(memb_a32(ds, eax), 0x20);         /* cmp byte [eax], 0x20 */
    II(0x100e9911, 0x2)   jnzd(0x100e9946, 0x33);               /* jnz 0x100e9946 */
l_0x100e9913:
    II(0x100e9913, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100e9916, 0x3)   cmp(memb_a32(ds, eax), 0x20);         /* cmp byte [eax], 0x20 */
    II(0x100e9919, 0x2)   jnzd(0x100e9923, 0x8);                /* jnz 0x100e9923 */
    II(0x100e991b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100e991e, 0x3)   inc(memd_a32(ss, ebp - 0x2c));        /* inc dword [ebp-0x2c] */
    II(0x100e9921, 0x2)   jmpd(0x100e9913, -0x10);              /* jmp 0x100e9913 */
l_0x100e9923:
    II(0x100e9923, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100e9926, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100e9928, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100e992d, 0x3)   cmp(eax, 0xd);                        /* cmp eax, 0xd */
    II(0x100e9930, 0x2)   jnzd(0x100e9938, 0x6);                /* jnz 0x100e9938 */
    II(0x100e9932, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100e9935, 0x3)   inc(memd_a32(ss, ebp - 0x2c));        /* inc dword [ebp-0x2c] */
l_0x100e9938:
    II(0x100e9938, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100e993b, 0x3)   cmp(memb_a32(ds, eax), 0xa);          /* cmp byte [eax], 0xa */
    II(0x100e993e, 0x2)   jnzd(0x100e9946, 0x6);                /* jnz 0x100e9946 */
    II(0x100e9940, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100e9943, 0x3)   inc(memd_a32(ss, ebp - 0x2c));        /* inc dword [ebp-0x2c] */
l_0x100e9946:
    II(0x100e9946, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e9949, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100e994b, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100e9950, 0x3)   cmp(eax, 0xd);                        /* cmp eax, 0xd */
    II(0x100e9953, 0x2)   jnzd(0x100e995b, 0x6);                /* jnz 0x100e995b */
    II(0x100e9955, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e9958, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100e995b:
    II(0x100e995b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100e995e, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x100e9961, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e9964, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100e9966, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100e996b, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x100e996e, 0x2)   jnzd(0x100e9976, 0x6);                /* jnz 0x100e9976 */
    II(0x100e9970, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e9973, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100e9976:
    II(0x100e9976, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e9979, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100e997c, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4));     /* cmp ax, [ebp-0x4] */
    II(0x100e9980, 0x2)   jged(0x100e99cb, 0x49);               /* jge 0x100e99cb */
    II(0x100e9982, 0x4)   cmp(memb_a32(ss, ebp - 0x14), 0);     /* cmp byte [ebp-0x14], 0x0 */
    II(0x100e9986, 0x2)   jnzd(0x100e99c9, 0x41);               /* jnz 0x100e99c9 */
    II(0x100e9988, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e998b, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100e998e, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100e9991, 0x3)   sub(eax, 0x4);                        /* sub eax, 0x4 */
    II(0x100e9994, 0x3)   add(eax, memd_a32(ss, ebp - 0x28));   /* add eax, [ebp-0x28] */
    II(0x100e9997, 0x5)   calld(my_strobj_c_str_v2, -0x601d4);  /* call 0x100897c8 */
    II(0x100e999c, 0x6)   calld_abs(memd_a32(ds, 0x101bddf4));  /* call dword near [0x101bddf4] */
    II(0x100e99a2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100e99a4, 0x5)   mov(eax, 0x20);                       /* mov eax, 0x20 */
    II(0x100e99a9, 0x6)   calld_abs(memd_a32(ds, 0x101bddf8));  /* call dword near [0x101bddf8] */
    II(0x100e99af, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100e99b1, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100e99b4, 0x5)   calld(my_strobj_c_str_v2, -0x601f1);  /* call 0x100897c8 */
    II(0x100e99b9, 0x6)   calld_abs(memd_a32(ds, 0x101bddf4));  /* call dword near [0x101bddf4] */
    II(0x100e99bf, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100e99c1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100e99c5, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100e99c7, 0x2)   jled(0x100e99cb, 0x2);                /* jle 0x100e99cb */
l_0x100e99c9:
    II(0x100e99c9, 0x2)   jmpd(0x100e99d0, 0x5);                /* jmp 0x100e99d0 */
l_0x100e99cb:
    II(0x100e99cb, 0x5)   jmpd(0x100e9a6c, 0x9c);               /* jmp 0x100e9a6c */
l_0x100e99d0:
    II(0x100e99d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e99d3, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100e99d6, 0x1)   inc(eax);                             /* inc eax */
    II(0x100e99d7, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x100e99da, 0x5)   mov(ebx, 0x101b5c10);                 /* mov ebx, 0x101b5c10 */
    II(0x100e99df, 0x3)   mov(edx, memd_a32(ss, ebp - 0x40));   /* mov edx, [ebp-0x40] */
//    II(0x100e99e2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100e99e5, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100e99e8, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x100e99eb, 0x5)   calld(sys_new_arr, 0x7c620);          /* call 0x10166010 */
    II(0x100e99f0, 0x5)   calld(sys_call_ctor_arr, 0x8840a);    /* call 0x10171dff */
    II(0x100e99f5, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x100e99f8, 0x7)   mov(memd_a32(ss, ebp - 0x48), 0);     /* mov dword [ebp-0x48], 0x0 */
    II(0x100e99ff, 0x2)   jmpd(0x100e9a07, 0x6);                /* jmp 0x100e9a07 */
l_0x100e9a01:
    II(0x100e9a01, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100e9a04, 0x3)   inc(memd_a32(ss, ebp - 0x48));        /* inc dword [ebp-0x48] */
l_0x100e9a07:
    II(0x100e9a07, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100e9a0a, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100e9a0d, 0x3)   cmp(ax, memw_a32(ds, edx));           /* cmp ax, [edx] */
    II(0x100e9a10, 0x2)   jged(0x100e9a2f, 0x1d);               /* jge 0x100e9a2f */
    II(0x100e9a12, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x48)); /* movsx eax, word [ebp-0x48] */
    II(0x100e9a16, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100e9a19, 0x3)   mov(edx, memd_a32(ss, ebp - 0x28));   /* mov edx, [ebp-0x28] */
    II(0x100e9a1c, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100e9a1e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x48)); /* movsx eax, word [ebp-0x48] */
    II(0x100e9a22, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100e9a25, 0x3)   add(eax, memd_a32(ss, ebp - 0x44));   /* add eax, [ebp-0x44] */
    II(0x100e9a28, 0x5)   calld(0x10142246, 0x58819);           /* call 0x10142246 */
    II(0x100e9a2d, 0x2)   jmpd(0x100e9a01, -0x2e);              /* jmp 0x100e9a01 */
l_0x100e9a2f:
    II(0x100e9a2f, 0x4)   cmp(memd_a32(ss, ebp - 0x28), 0);     /* cmp dword [ebp-0x28], 0x0 */
    II(0x100e9a33, 0x2)   jzd(0x100e9a47, 0x12);                /* jz 0x100e9a47 */
    II(0x100e9a35, 0x5)   mov(edx, 0x101b5c10);                 /* mov edx, 0x101b5c10 */
    II(0x100e9a3a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100e9a3d, 0x5)   calld(sys_call_dtor_arr, 0x7c576);    /* call 0x10165fb8 */
    II(0x100e9a42, 0x5)   calld(sys_delete_arr, 0x7c591);       /* call 0x10165fd8 */
l_0x100e9a47:
    II(0x100e9a47, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x100e9a4a, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100e9a4d, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x100e9a50, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e9a53, 0x3)   mov(bx, memw_a32(ds, eax));           /* mov bx, [eax] */
//    II(0x100e9a56, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e9a59, 0x3)   inc(memw_a32(ds, eax));               /* inc word [eax] */
    II(0x100e9a5c, 0x3)   movsx(eax, bx);                       /* movsx eax, bx */
    II(0x100e9a5f, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100e9a62, 0x3)   add(eax, memd_a32(ss, ebp - 0x28));   /* add eax, [ebp-0x28] */
    II(0x100e9a65, 0x5)   calld(0x10142246, 0x587dc);           /* call 0x10142246 */
    II(0x100e9a6a, 0x2)   jmpd(0x100e9a9c, 0x30);               /* jmp 0x100e9a9c */
l_0x100e9a6c:
    II(0x100e9a6c, 0x5)   mov(edx, 0x20);                       /* mov edx, 0x20 */
    II(0x100e9a71, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e9a74, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100e9a77, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100e9a7a, 0x3)   sub(eax, 0x4);                        /* sub eax, 0x4 */
    II(0x100e9a7d, 0x3)   add(eax, memd_a32(ss, ebp - 0x28));   /* add eax, [ebp-0x28] */
    II(0x100e9a80, 0x5)   calld(my_string_append_char, 0x58365); /* call 0x10141dea */
    II(0x100e9a85, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x100e9a88, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e9a8b, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100e9a8e, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100e9a91, 0x3)   sub(eax, 0x4);                        /* sub eax, 0x4 */
    II(0x100e9a94, 0x3)   add(eax, memd_a32(ss, ebp - 0x28));   /* add eax, [ebp-0x28] */
    II(0x100e9a97, 0x5)   calld(my_string_append_string, 0x581ed); /* call 0x10141c89 */
l_0x100e9a9c:
    II(0x100e9a9c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100e9a9f, 0x3)   cmp(memb_a32(ds, eax), 0xa);          /* cmp byte [eax], 0xa */
    II(0x100e9aa2, 0x2)   jnzd(0x100e9aaa, 0x6);                /* jnz 0x100e9aaa */
    II(0x100e9aa4, 0x4)   mov(memb_a32(ss, ebp - 0x4c), 0x1);   /* mov byte [ebp-0x4c], 0x1 */
    II(0x100e9aa8, 0x2)   jmpd(0x100e9aae, 0x4);                /* jmp 0x100e9aae */
l_0x100e9aaa:
    II(0x100e9aaa, 0x4)   mov(memb_a32(ss, ebp - 0x4c), 0);     /* mov byte [ebp-0x4c], 0x0 */
l_0x100e9aae:
    II(0x100e9aae, 0x3)   mov(al, memb_a32(ss, ebp - 0x4c));    /* mov al, [ebp-0x4c] */
    II(0x100e9ab1, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x100e9ab4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100e9ab7, 0x3)   cmp(memb_a32(ds, eax), 0);            /* cmp byte [eax], 0x0 */
    II(0x100e9aba, 0x6)   jnzd(0x100e9708, -0x3b8);             /* jnz dword 0x100e9708 */
    II(0x100e9ac0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100e9ac3, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100e9ac6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e9ac8, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100e9acb, 0x5)   calld(my_string_dtor, 0x5805a);       /* call 0x10141b2a */
    II(0x100e9ad0, 0x2)   jmpd(0x100e9adc, 0xa);                /* jmp 0x100e9adc */
//  II(0x100e9ad2, 0xa)   /* Недостижимый код. */
l_0x100e9adc:
    II(0x100e9adc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100e9adf, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100e9ae1, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100e9ae2, 0x1)   popd(edi);                            /* pop edi */
    II(0x100e9ae3, 0x1)   popd(esi);                            /* pop esi */
    II(0x100e9ae4, 0x1)   retd();                               /* ret */
FUNC_END

