FUNC_BEGIN(0x10084a18, 0xadee5881836b8105, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0x30, 0x13, 0xe, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x32, 0xe8, 0x36, 0x1b, 0xff, 0xff, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x9, 0xc6, 0x45, 0xf8, 0, 0xe9, 0x1f, 0x2, 0, 0, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x36, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x32, 0xe8, 0x10, 0x1b, 0xff, 0xff, 0xe8, 0x43, 0xdc, 0xc, 0, 0xe8, 0x46, 0x6a, 0, 0, 0x84, 0xc0, 0x74, 0x9, 0xc6, 0x45, 0xf8, 0, 0xe9, 0xf7, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x36, 0xe8, 0xfe, 0x64, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x32, 0xe8, 0xe1, 0x1a, 0xff, 0xff, 0xe8, 0xba, 0xdf, 0xc, 0, 0x84, 0xc0, 0x75, 0x9, 0xc6, 0x45, 0xf8, 0, 0xe9, 0xcd, 0x1, 0, 0, 0xc6, 0x45, 0xf0, 0x3, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x15, 0x3, 0x7c, 0x4, 0xc6, 0x45, 0xf0, 0x2, 0xf, 0xbe, 0x5d, 0xf0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x32, 0xe8, 0xb, 0x1b, 0xff, 0xff, 0x8b, 0x4d, 0xfc, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0xa0, 0xeb, 0x1, 0, 0x84, 0xc0, 0x74, 0x9, 0xc6, 0x45, 0xf8, 0x1, 0xe9, 0x94, 0x1, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2a, 0xe8, 0x26, 0x62, 0xb, 0, 0x84, 0xc0, 0x75, 0x14, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2a, 0xe8, 0x82, 0x52, 0, 0, 0xe8, 0x71, 0x54, 0, 0, 0x85, 0xc0, 0x75, 0x9, 0xc6, 0x45, 0xf8, 0, 0xe9, 0x66, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x15, 0x2, 0x7f, 0x14, 0xf, 0xbe, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0xe8, 0xbf, 0xf8, 0xff, 0xff, 0x88, 0x45, 0xf8, 0xe9, 0x49, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x15, 0x5, 0x7c, 0x14, 0xf, 0xbe, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0xe8, 0xa2, 0xf8, 0xff, 0xff, 0x88, 0x45, 0xf8, 0xe9, 0x2c, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x32, 0xe8, 0x23, 0x1a, 0xff, 0xff, 0xf6, 0x40, 0x13, 0x1, 0x74, 0x31, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x32, 0xe8, 0x12, 0x1a, 0xff, 0xff, 0x8b, 0x50, 0x1a, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x32, 0xe8, 0x1, 0x1a, 0xff, 0xff, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0xe8, 0xca, 0xf1, 0xfe, 0xff, 0x25, 0xff, 0xff, 0, 0, 0x83, 0xf8, 0x1, 0x75, 0x2, 0xeb, 0x1f, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xd0, 0xc5, 0, 0, 0, 0xb8, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0xbf, 0x54, 0, 0, 0x3c, 0x5, 0x75, 0x2, 0xeb, 0x14, 0xf, 0xbe, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0xe8, 0x29, 0xf8, 0xff, 0xff, 0x88, 0x45, 0xf8, 0xe9, 0xb3, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x32, 0xe8, 0xaa, 0x19, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x32, 0xe8, 0x9d, 0x19, 0xff, 0xff, 0x66, 0x8b, 0x52, 0x1a, 0x66, 0x89, 0x50, 0x1e, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x32, 0xe8, 0x8a, 0x19, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x32, 0xe8, 0x7d, 0x19, 0xff, 0xff, 0x66, 0x8b, 0x52, 0x1c, 0x66, 0x89, 0x50, 0x20, 0x8b, 0x45, 0xfc, 0xe8, 0xdf, 0xfa, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x6, 0xc6, 0x45, 0xf8, 0, 0xeb, 0x61, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x20, 0xe8, 0xec, 0x50, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0xbe, 0x4f, 0, 0, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xec, 0xe8, 0xca, 0x18, 0xff, 0xff, 0x89, 0x45, 0xe4, 0x80, 0x65, 0xf4, 0xfe, 0xf, 0xbe, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0xe8, 0x9b, 0xf7, 0xff, 0xff, 0x88, 0x45, 0xf8, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x1a, 0x13, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xe8, 0x43, 0, 0, 0xeb, 0x14, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x4, 0x13, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xd2, 0x43, 0, 0, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10084a18, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x10084a1d, 0x5)   calld(sys_check_available_stack_size, 0xe1330); /* call 0x10165d52 */
    II(0x10084a22, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10084a23, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10084a24, 0x1)   pushd(edx);                           /* push edx */
    II(0x10084a25, 0x1)   pushd(esi);                           /* push esi */
    II(0x10084a26, 0x1)   pushd(edi);                           /* push edi */
    II(0x10084a27, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10084a28, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10084a2a, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x10084a30, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x10084a33, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084a36, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10084a39, 0x5)   calld(0x10076574, -0xe4ca);           /* call 0x10076574 */
    II(0x10084a3e, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x10084a41, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10084a46, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10084a48, 0x2)   jnzd(0x10084a53, 0x9);                /* jnz 0x10084a53 */
    II(0x10084a4a, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x10084a4e, 0x5)   jmpd(0x10084c72, 0x21f);              /* jmp 0x10084c72 */
l_0x10084a53:
    II(0x10084a53, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10084a56, 0x3)   add(edx, 0x36);                       /* add edx, 0x36 */
    II(0x10084a59, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084a5c, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10084a5f, 0x5)   calld(0x10076574, -0xe4f0);           /* call 0x10076574 */
    II(0x10084a64, 0x5)   calld(0x101526ac, 0xcdc43);           /* call 0x101526ac */
    II(0x10084a69, 0x5)   calld(0x1008b4b4, 0x6a46);            /* call 0x1008b4b4 */
    II(0x10084a6e, 0x2)   test(al, al);                         /* test al, al */
    II(0x10084a70, 0x2)   jzd(0x10084a7b, 0x9);                 /* jz 0x10084a7b */
    II(0x10084a72, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x10084a76, 0x5)   jmpd(0x10084c72, 0x1f7);              /* jmp 0x10084c72 */
l_0x10084a7b:
    II(0x10084a7b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084a7e, 0x3)   add(eax, 0x36);                       /* add eax, 0x36 */
    II(0x10084a81, 0x5)   calld(0x1008af84, 0x64fe);            /* call 0x1008af84 */
    II(0x10084a86, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10084a88, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084a8b, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10084a8e, 0x5)   calld(0x10076574, -0xe51f);           /* call 0x10076574 */
    II(0x10084a93, 0x5)   calld(0x10152a52, 0xcdfba);           /* call 0x10152a52 */
    II(0x10084a98, 0x2)   test(al, al);                         /* test al, al */
    II(0x10084a9a, 0x2)   jnzd(0x10084aa5, 0x9);                /* jnz 0x10084aa5 */
    II(0x10084a9c, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x10084aa0, 0x5)   jmpd(0x10084c72, 0x1cd);              /* jmp 0x10084c72 */
l_0x10084aa5:
    II(0x10084aa5, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x3);   /* mov byte [ebp-0x10], 0x3 */
    II(0x10084aa9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084aac, 0x4)   cmp(memb_a32(ds, eax + 0x15), 0x3);   /* cmp byte [eax+0x15], 0x3 */
    II(0x10084ab0, 0x2)   jld(0x10084ab6, 0x4);                 /* jl 0x10084ab6 */
    II(0x10084ab2, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x2);   /* mov byte [ebp-0x10], 0x2 */
l_0x10084ab6:
    II(0x10084ab6, 0x4)   movsx(ebx, memb_a32(ss, ebp - 0x10)); /* movsx ebx, byte [ebp-0x10] */
    II(0x10084aba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084abd, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10084ac0, 0x5)   calld(0x100765d0, -0xe4f5);           /* call 0x100765d0 */
    II(0x10084ac5, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x4));    /* mov ecx, [ebp-0x4] */
    II(0x10084ac8, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10084aca, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x10084acc, 0x5)   calld(0x100a3671, 0x1eba0);           /* call 0x100a3671 */
    II(0x10084ad1, 0x2)   test(al, al);                         /* test al, al */
    II(0x10084ad3, 0x2)   jzd(0x10084ade, 0x9);                 /* jz 0x10084ade */
    II(0x10084ad5, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x10084ad9, 0x5)   jmpd(0x10084c72, 0x194);              /* jmp 0x10084c72 */
l_0x10084ade:
    II(0x10084ade, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10084ae0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084ae3, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x10084ae6, 0x5)   calld(0x1013ad11, 0xb6226);           /* call 0x1013ad11 */
    II(0x10084aeb, 0x2)   test(al, al);                         /* test al, al */
    II(0x10084aed, 0x2)   jnzd(0x10084b03, 0x14);               /* jnz 0x10084b03 */
    II(0x10084aef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084af2, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x10084af5, 0x5)   calld(0x10089d7c, 0x5282);            /* call 0x10089d7c */
    II(0x10084afa, 0x5)   calld(0x10089f70, 0x5471);            /* call 0x10089f70 */
    II(0x10084aff, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10084b01, 0x2)   jnzd(0x10084b0c, 0x9);                /* jnz 0x10084b0c */
l_0x10084b03:
    II(0x10084b03, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x10084b07, 0x5)   jmpd(0x10084c72, 0x166);              /* jmp 0x10084c72 */
l_0x10084b0c:
    II(0x10084b0c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084b0f, 0x4)   cmp(memb_a32(ds, eax + 0x15), 0x2);   /* cmp byte [eax+0x15], 0x2 */
    II(0x10084b13, 0x2)   jgd(0x10084b29, 0x14);                /* jg 0x10084b29 */
    II(0x10084b15, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x10)); /* movsx edx, byte [ebp-0x10] */
    II(0x10084b19, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084b1c, 0x5)   calld(0x100843e0, -0x741);            /* call 0x100843e0 */
    II(0x10084b21, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
    II(0x10084b24, 0x5)   jmpd(0x10084c72, 0x149);              /* jmp 0x10084c72 */
l_0x10084b29:
    II(0x10084b29, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084b2c, 0x4)   cmp(memb_a32(ds, eax + 0x15), 0x5);   /* cmp byte [eax+0x15], 0x5 */
    II(0x10084b30, 0x2)   jld(0x10084b46, 0x14);                /* jl 0x10084b46 */
    II(0x10084b32, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x10)); /* movsx edx, byte [ebp-0x10] */
    II(0x10084b36, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084b39, 0x5)   calld(0x100843e0, -0x75e);            /* call 0x100843e0 */
    II(0x10084b3e, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
    II(0x10084b41, 0x5)   jmpd(0x10084c72, 0x12c);              /* jmp 0x10084c72 */
l_0x10084b46:
    II(0x10084b46, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084b49, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10084b4c, 0x5)   calld(0x10076574, -0xe5dd);           /* call 0x10076574 */
    II(0x10084b51, 0x4)   test(memb_a32(ds, eax + 0x13), 0x1);  /* test byte [eax+0x13], 0x1 */
    II(0x10084b55, 0x2)   jzd(0x10084b88, 0x31);                /* jz 0x10084b88 */
    II(0x10084b57, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084b5a, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10084b5d, 0x5)   calld(0x10076574, -0xe5ee);           /* call 0x10076574 */
    II(0x10084b62, 0x3)   mov(edx, memd_a32(ds, eax + 0x1a));   /* mov edx, [eax+0x1a] */
    II(0x10084b65, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10084b68, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084b6b, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10084b6e, 0x5)   calld(0x10076574, -0xe5ff);           /* call 0x10076574 */
    II(0x10084b73, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x10084b76, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10084b79, 0x5)   calld(0x10073d48, -0x10e36);          /* call 0x10073d48 */
    II(0x10084b7e, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x10084b83, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x10084b86, 0x2)   jnzd(0x10084b8a, 0x2);                /* jnz 0x10084b8a */
l_0x10084b88:
    II(0x10084b88, 0x2)   jmpd(0x10084ba9, 0x1f);               /* jmp 0x10084ba9 */
l_0x10084b8a:
    II(0x10084b8a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084b8d, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10084b90, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10084b93, 0x6)   imul(edx, eax, 0xc5);                 /* imul edx, eax, 0xc5 */
    II(0x10084b99, 0x5)   mov(eax, 0x101c31c4);                 /* mov eax, 0x101c31c4 */
    II(0x10084b9e, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10084ba0, 0x5)   calld(0x1008a064, 0x54bf);            /* call 0x1008a064 */
    II(0x10084ba5, 0x2)   cmp(al, 0x5);                         /* cmp al, 0x5 */
    II(0x10084ba7, 0x2)   jnzd(0x10084bab, 0x2);                /* jnz 0x10084bab */
l_0x10084ba9:
    II(0x10084ba9, 0x2)   jmpd(0x10084bbf, 0x14);               /* jmp 0x10084bbf */
l_0x10084bab:
    II(0x10084bab, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x10)); /* movsx edx, byte [ebp-0x10] */
    II(0x10084baf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084bb2, 0x5)   calld(0x100843e0, -0x7d7);            /* call 0x100843e0 */
    II(0x10084bb7, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
    II(0x10084bba, 0x5)   jmpd(0x10084c72, 0xb3);               /* jmp 0x10084c72 */
l_0x10084bbf:
    II(0x10084bbf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084bc2, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10084bc5, 0x5)   calld(0x10076574, -0xe656);           /* call 0x10076574 */
    II(0x10084bca, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10084bcc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084bcf, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10084bd2, 0x5)   calld(0x10076574, -0xe663);           /* call 0x10076574 */
    II(0x10084bd7, 0x4)   mov(dx, memw_a32(ds, edx + 0x1a));    /* mov dx, [edx+0x1a] */
    II(0x10084bdb, 0x4)   mov(memw_a32(ds, eax + 0x1e), dx);    /* mov [eax+0x1e], dx */
    II(0x10084bdf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084be2, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10084be5, 0x5)   calld(0x10076574, -0xe676);           /* call 0x10076574 */
    II(0x10084bea, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10084bec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084bef, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10084bf2, 0x5)   calld(0x10076574, -0xe683);           /* call 0x10076574 */
    II(0x10084bf7, 0x4)   mov(dx, memw_a32(ds, edx + 0x1c));    /* mov dx, [edx+0x1c] */
    II(0x10084bfb, 0x4)   mov(memw_a32(ds, eax + 0x20), dx);    /* mov [eax+0x20], dx */
    II(0x10084bff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084c02, 0x5)   calld(0x100846e6, -0x521);            /* call 0x100846e6 */
    II(0x10084c07, 0x2)   test(al, al);                         /* test al, al */
    II(0x10084c09, 0x2)   jnzd(0x10084c11, 0x6);                /* jnz 0x10084c11 */
    II(0x10084c0b, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x10084c0f, 0x2)   jmpd(0x10084c72, 0x61);               /* jmp 0x10084c72 */
l_0x10084c11:
    II(0x10084c11, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084c14, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x10084c17, 0x5)   calld(0x10089d08, 0x50ec);            /* call 0x10089d08 */
    II(0x10084c1c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10084c1e, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10084c21, 0x5)   calld(0x10089be4, 0x4fbe);            /* call 0x10089be4 */
    II(0x10084c26, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x10084c2a, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10084c2d, 0x5)   calld(0x100764fc, -0xe736);           /* call 0x100764fc */
    II(0x10084c32, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10084c35, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x10084c39, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x10)); /* movsx edx, byte [ebp-0x10] */
    II(0x10084c3d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084c40, 0x5)   calld(0x100843e0, -0x865);            /* call 0x100843e0 */
    II(0x10084c45, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
    II(0x10084c48, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10084c4a, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10084c4d, 0x5)   calld(0x10075f6c, -0xece6);           /* call 0x10075f6c */
    II(0x10084c52, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10084c54, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10084c57, 0x5)   calld(0x10089044, 0x43e8);            /* call 0x10089044 */
    II(0x10084c5c, 0x2)   jmpd(0x10084c72, 0x14);               /* jmp 0x10084c72 */
//  II(0x10084c5e, 0x14)  /* Недостижимый код. */
l_0x10084c72:
    II(0x10084c72, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x10084c75, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10084c77, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10084c78, 0x1)   popd(edi);                            /* pop edi */
    II(0x10084c79, 0x1)   popd(esi);                            /* pop esi */
    II(0x10084c7a, 0x1)   popd(edx);                            /* pop edx */
    II(0x10084c7b, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10084c7c, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10084c7d, 0x1)   retd();                               /* ret */
FUNC_END

