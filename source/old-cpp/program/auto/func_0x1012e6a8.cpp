FUNC_BEGIN(0x1012e6a8, 0xe3ebc1e02c5ca886, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xa0, 0x76, 0x3, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x38, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0x48, 0x68, 0xfa, 0xff, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xf4, 0xf, 0xbf, 0x55, 0xf4, 0x83, 0xea, 0x32, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0xb3, 0x67, 0xfa, 0xff, 0x98, 0x1, 0xd0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x2, 0x66, 0x3b, 0x45, 0xf0, 0x7c, 0x51, 0x8b, 0x55, 0xfc, 0x8b, 0x2, 0xc1, 0xf8, 0x10, 0xf, 0xbf, 0x55, 0xf0, 0x29, 0xd0, 0x89, 0xc2, 0xf, 0xbf, 0x5d, 0xf4, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x8b, 0x55, 0xf8, 0x66, 0x3b, 0x42, 0x3a, 0x7d, 0x27, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x30, 0x1, 0x45, 0xf0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x18, 0xe8, 0x7d, 0xcd, 0xf7, 0xff, 0x66, 0x3b, 0x45, 0xf0, 0x7e, 0xc, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xf8, 0xe8, 0x62, 0xfa, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1012e6a8, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x1012e6ad, 0x5)   calld(sys_check_available_stack_size, 0x376a0); /* call 0x10165d52 */
    II(0x1012e6b2, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1012e6b3, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1012e6b4, 0x1)   pushd(esi);                           /* push esi */
    II(0x1012e6b5, 0x1)   pushd(edi);                           /* push edi */
    II(0x1012e6b6, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1012e6b7, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1012e6b9, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x1012e6bf, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1012e6c2, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x1012e6c5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012e6c8, 0x3)   mov(ebx, memd_a32(ds, eax + 0x38));   /* mov ebx, [eax+0x38] */
    II(0x1012e6cb, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1012e6ce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012e6d1, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x1012e6d7, 0x5)   calld(0x100d4f24, -0x597b8);          /* call 0x100d4f24 */
    II(0x1012e6dc, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1012e6df, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012e6e1, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1012e6e4, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1012e6e6, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1012e6e9, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1012e6ed, 0x3)   sub(edx, 0x32);                       /* sub edx, 0x32 */
    II(0x1012e6f0, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012e6f2, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1012e6f5, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1012e6f7, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1012e6f9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012e6fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012e6fe, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x1012e704, 0x5)   calld(0x100d4ebc, -0x5984d);          /* call 0x100d4ebc */
    II(0x1012e709, 0x1)   cwde();                               /* cwde */
    II(0x1012e70a, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1012e70c, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1012e70f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012e712, 0x4)   mov(ax, memw_a32(ds, eax + 0x2));     /* mov ax, [eax+0x2] */
    II(0x1012e716, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x1012e71a, 0x2)   jld(0x1012e76d, 0x51);                /* jl 0x1012e76d */
    II(0x1012e71c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1012e71f, 0x2)   mov(eax, memd_a32(ds, edx));          /* mov eax, [edx] */
    II(0x1012e721, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1012e724, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x1012e728, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1012e72a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012e72c, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x1012e730, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012e732, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1012e735, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1012e737, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x1012e73a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1012e73d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1012e740, 0x4)   cmp(ax, memw_a32(ds, edx + 0x3a));    /* cmp ax, [edx+0x3a] */
    II(0x1012e744, 0x2)   jged(0x1012e76d, 0x27);               /* jge 0x1012e76d */
    II(0x1012e746, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012e749, 0x4)   mov(ax, memw_a32(ds, eax + 0x30));    /* mov ax, [eax+0x30] */
    II(0x1012e74d, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
    II(0x1012e750, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012e753, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1012e756, 0x5)   calld(my_1_get_count, -0x83283);      /* call 0x100ab4d8 */
    II(0x1012e75b, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x1012e75f, 0x2)   jled(0x1012e76d, 0xc);                /* jle 0x1012e76d */
    II(0x1012e761, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x1012e765, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012e768, 0x5)   calld(0x1012e1cf, -0x59e);            /* call 0x1012e1cf */
l_0x1012e76d:
    II(0x1012e76d, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1012e76f, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1012e770, 0x1)   popd(edi);                            /* pop edi */
    II(0x1012e771, 0x1)   popd(esi);                            /* pop esi */
    II(0x1012e772, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1012e773, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1012e774, 0x1)   retd();                               /* ret */
FUNC_END

