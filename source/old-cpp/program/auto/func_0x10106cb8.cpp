FUNC_BEGIN(0x10106cb8, 0x110eeaa091bca624, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0x90, 0xf0, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x80, 0x3d, 0x70, 0x3d, 0x1c, 0x10, 0, 0x75, 0xa, 0x8d, 0x45, 0xfc, 0xe8, 0x4f, 0x25, 0x7, 0, 0xeb, 0xd, 0x31, 0xc0, 0xa0, 0x70, 0x3d, 0x1c, 0x10, 0x83, 0xe8, 0x40, 0x89, 0x45, 0xfc, 0x8d, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0xe8, 0x5d, 0x25, 0x7, 0, 0x85, 0xc0, 0xf, 0x85, 0x87, 0, 0, 0, 0x31, 0xd2, 0x66, 0x8b, 0x55, 0xfa, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xf8, 0xf, 0xaf, 0xd0, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xf6, 0xf, 0xaf, 0xd0, 0x89, 0x55, 0xf0, 0x81, 0x7d, 0xf0, 0x90, 0xd0, 0x3, 0, 0x73, 0x61, 0xb8, 0x2e, 0x44, 0x1a, 0x10, 0x50, 0xe8, 0xa, 0x59, 0x6, 0, 0x83, 0xc4, 0x4, 0x8b, 0x45, 0xf0, 0x50, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x40, 0x50, 0xb8, 0x31, 0x44, 0x1a, 0x10, 0x50, 0xe8, 0xf1, 0x58, 0x6, 0, 0x83, 0xc4, 0xc, 0xb8, 0x7e, 0x44, 0x1a, 0x10, 0x50, 0xe8, 0xe3, 0x58, 0x6, 0, 0x83, 0xc4, 0x4, 0xb8, 0xaf, 0x44, 0x1a, 0x10, 0x50, 0xe8, 0xd5, 0x58, 0x6, 0, 0x83, 0xc4, 0x4, 0xe8, 0x16, 0x25, 0x7, 0, 0x89, 0x45, 0xec, 0x83, 0x7d, 0xec, 0, 0x7e, 0xf2, 0x83, 0x7d, 0xec, 0x1b, 0x75, 0xa, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xd7, 0x58, 0x6, 0, 0xeb, 0x1f, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x40, 0x50, 0xb8, 0xb2, 0x44, 0x1a, 0x10, 0x50, 0xe8, 0xa0, 0x58, 0x6, 0, 0x83, 0xc4, 0x8, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xb6, 0x58, 0x6, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10106cb8, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x10106cbd, 0x5)   calld(sys_check_available_stack_size, 0x5f090); /* call 0x10165d52 */
    II(0x10106cc2, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10106cc3, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10106cc4, 0x1)   pushd(edx);                           /* push edx */
    II(0x10106cc5, 0x1)   pushd(esi);                           /* push esi */
    II(0x10106cc6, 0x1)   pushd(edi);                           /* push edi */
    II(0x10106cc7, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10106cc8, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10106cca, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x10106cd0, 0x7)   cmp(memb_a32(ds, 0x101c3d70), 0);     /* cmp byte [0x101c3d70], 0x0 */
    II(0x10106cd7, 0x2)   jnzd(0x10106ce3, 0xa);                /* jnz 0x10106ce3 */
    II(0x10106cd9, 0x3)   lea(eax, ebp - 0x4);                  /* lea eax, [ebp-0x4] */
    II(0x10106cdc, 0x5)   calld(/* sys */ 0x10179230, 0x7254f); /* call 0x10179230 */
    II(0x10106ce1, 0x2)   jmpd(0x10106cf0, 0xd);                /* jmp 0x10106cf0 */
l_0x10106ce3:
    II(0x10106ce3, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10106ce5, 0x5)   mov(al, memb_a32(ds, 0x101c3d70));    /* mov al, [0x101c3d70] */
    II(0x10106cea, 0x3)   sub(eax, 0x40);                       /* sub eax, 0x40 */
    II(0x10106ced, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
l_0x10106cf0:
    II(0x10106cf0, 0x3)   lea(edx, ebp - 0xc);                  /* lea edx, [ebp-0xc] */
    II(0x10106cf3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10106cf6, 0x5)   calld(/* sys */ 0x10179258, 0x7255d); /* call 0x10179258 */
    II(0x10106cfb, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10106cfd, 0x6)   jnzd(0x10106d8a, 0x87);               /* jnz dword 0x10106d8a */
    II(0x10106d03, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10106d05, 0x4)   mov(dx, memw_a32(ss, ebp - 0x6));     /* mov dx, [ebp-0x6] */
    II(0x10106d09, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10106d0b, 0x4)   mov(ax, memw_a32(ss, ebp - 0x8));     /* mov ax, [ebp-0x8] */
    II(0x10106d0f, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x10106d12, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10106d14, 0x4)   mov(ax, memw_a32(ss, ebp - 0xa));     /* mov ax, [ebp-0xa] */
    II(0x10106d18, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x10106d1b, 0x3)   mov(memd_a32(ss, ebp - 0x10), edx);   /* mov [ebp-0x10], edx */
    II(0x10106d1e, 0x7)   cmp(memd_a32(ss, ebp - 0x10), 0x3d090); /* cmp dword [ebp-0x10], 0x3d090 */
    II(0x10106d25, 0x2)   jaed(0x10106d88, 0x61);               /* jae 0x10106d88 */
    II(0x10106d27, 0x5)   mov(eax, 0x101a442e);                 /* mov eax, 0x101a442e */ /* "\n\n" */
    II(0x10106d2c, 0x1)   pushd(eax);                           /* push eax */
    II(0x10106d2d, 0x5)   calld(sys_printf, 0x6590a);           /* call 0x1016c63c */
    II(0x10106d32, 0x3)   add(esp, 0x4);                        /* add esp, 0x4 */
    II(0x10106d35, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10106d38, 0x1)   pushd(eax);                           /* push eax */
    II(0x10106d39, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10106d3c, 0x3)   add(eax, 0x40);                       /* add eax, 0x40 */
    II(0x10106d3f, 0x1)   pushd(eax);                           /* push eax */
    II(0x10106d40, 0x5)   mov(eax, 0x101a4431);                 /* mov eax, 0x101a4431 */ /* "Drive %c has only %lu bytes available.  You may have trouble saving games..\n" */
    II(0x10106d45, 0x1)   pushd(eax);                           /* push eax */
    II(0x10106d46, 0x5)   calld(sys_printf, 0x658f1);           /* call 0x1016c63c */
    II(0x10106d4b, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x10106d4e, 0x5)   mov(eax, 0x101a447e);                 /* mov eax, 0x101a447e */ /* "\nPress ESC to exit, any other key to continue..." */
    II(0x10106d53, 0x1)   pushd(eax);                           /* push eax */
    II(0x10106d54, 0x5)   calld(sys_printf, 0x658e3);           /* call 0x1016c63c */
    II(0x10106d59, 0x3)   add(esp, 0x4);                        /* add esp, 0x4 */
    II(0x10106d5c, 0x5)   mov(eax, 0x101a44af);                 /* mov eax, 0x101a44af */ /* "\n\n" */
    II(0x10106d61, 0x1)   pushd(eax);                           /* push eax */
    II(0x10106d62, 0x5)   calld(sys_printf, 0x658d5);           /* call 0x1016c63c */
    II(0x10106d67, 0x3)   add(esp, 0x4);                        /* add esp, 0x4 */
l_0x10106d6a:
    II(0x10106d6a, 0x5)   calld(/* sys */ 0x10179285, 0x72516); /* call 0x10179285 */
    II(0x10106d6f, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10106d72, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0);     /* cmp dword [ebp-0x14], 0x0 */
    II(0x10106d76, 0x2)   jled(0x10106d6a, -0xe);               /* jle 0x10106d6a */
    II(0x10106d78, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0x1b);  /* cmp dword [ebp-0x14], 0x1b */
    II(0x10106d7c, 0x2)   jnzd(0x10106d88, 0xa);                /* jnz 0x10106d88 */
    II(0x10106d7e, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10106d83, 0x5)   calld(sys_exit, 0x658d7);             /* call 0x1016c65f */
l_0x10106d88:
    II(0x10106d88, 0x2)   jmpd(0x10106da9, 0x1f);               /* jmp 0x10106da9 */
l_0x10106d8a:
    II(0x10106d8a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10106d8d, 0x3)   add(eax, 0x40);                       /* add eax, 0x40 */
    II(0x10106d90, 0x1)   pushd(eax);                           /* push eax */
    II(0x10106d91, 0x5)   mov(eax, 0x101a44b2);                 /* mov eax, 0x101a44b2 */ /* "\nError Checking Drive %c!  Run SCANDISK.\n" */
    II(0x10106d96, 0x1)   pushd(eax);                           /* push eax */
    II(0x10106d97, 0x5)   calld(sys_printf, 0x658a0);           /* call 0x1016c63c */
    II(0x10106d9c, 0x3)   add(esp, 0x8);                        /* add esp, 0x8 */
    II(0x10106d9f, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10106da4, 0x5)   calld(sys_exit, 0x658b6);             /* call 0x1016c65f */
l_0x10106da9:
    II(0x10106da9, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10106dab, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10106dac, 0x1)   popd(edi);                            /* pop edi */
    II(0x10106dad, 0x1)   popd(esi);                            /* pop esi */
    II(0x10106dae, 0x1)   popd(edx);                            /* pop edx */
    II(0x10106daf, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10106db0, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10106db1, 0x1)   retd();                               /* ret */
FUNC_END

