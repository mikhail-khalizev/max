FUNC_BEGIN(0x100feac0, 0x688f2476f50634cb, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x88, 0x72, 0x6, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0xc6, 0x5, 0x70, 0x39, 0x1c, 0x10, 0, 0xc6, 0x5, 0xd2, 0x37, 0x1c, 0x10, 0, 0x66, 0xc7, 0x5, 0x62, 0x39, 0x1c, 0x10, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x91, 0xe5, 0x3, 0, 0x31, 0xc0, 0xe8, 0x8c, 0x59, 0xff, 0xff, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x12, 0xba, 0x1, 0, 0, 0, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x98, 0xe8, 0x51, 0xc6, 0x2, 0, 0x31, 0xd2, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x9, 0x7b, 0xf7, 0xff, 0xb8, 0x90, 0x39, 0x1c, 0x10, 0xe8, 0xbd, 0x2e, 0xff, 0xff, 0xc7, 0x45, 0xfc, 0x4, 0, 0, 0, 0xff, 0x4d, 0xfc, 0x66, 0x83, 0x7d, 0xfc, 0xff, 0x74, 0x5a, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x3f, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0xa3, 0xa6, 0x1c, 0x10, 0xe8, 0xf4, 0x73, 0x6, 0, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0xa7, 0xa6, 0x1c, 0x10, 0xe8, 0xdf, 0x73, 0x6, 0, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0xab, 0xa6, 0x1c, 0x10, 0xe8, 0xca, 0x73, 0x6, 0, 0xeb, 0x9c, 0xc7, 0x45, 0xfc, 0x5, 0, 0, 0, 0xff, 0x4d, 0xfc, 0x66, 0x83, 0x7d, 0xfc, 0xff, 0x74, 0x3e, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xc7, 0x80, 0xa3, 0xa6, 0x1c, 0x10, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xc7, 0x80, 0xa7, 0xa6, 0x1c, 0x10, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xc7, 0x80, 0xab, 0xa6, 0x1c, 0x10, 0, 0, 0, 0, 0xeb, 0xb8, 0xb8, 0x78, 0x81, 0x1c, 0x10, 0xe8, 0x1a, 0x42, 0, 0, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x10, 0x42, 0, 0, 0xb8, 0x90, 0x81, 0x1c, 0x10, 0xe8, 0x6, 0x42, 0, 0, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xfc, 0x41, 0, 0, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0xf2, 0x41, 0, 0, 0xb8, 0xc0, 0x39, 0x1c, 0x10, 0xe8, 0xca, 0x53, 0, 0, 0xb8, 0xb8, 0x39, 0x1c, 0x10, 0xe8, 0xda, 0x4b, 0, 0, 0x31, 0xd2, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xf3, 0x79, 0xf7, 0xff, 0x83, 0x3d, 0x50, 0x94, 0x1c, 0x10, 0, 0x74, 0xa, 0xa1, 0x50, 0x94, 0x1c, 0x10, 0xe8, 0x71, 0xc4, 0x6, 0, 0x83, 0x3d, 0x4c, 0x94, 0x1c, 0x10, 0, 0x74, 0xa, 0xa1, 0x4c, 0x94, 0x1c, 0x10, 0xe8, 0x5e, 0xc4, 0x6, 0, 0x83, 0x3d, 0x54, 0x94, 0x1c, 0x10, 0, 0x74, 0xa, 0xa1, 0x54, 0x94, 0x1c, 0x10, 0xe8, 0xee, 0x72, 0x6, 0, 0x83, 0x3d, 0x1c, 0x81, 0x1c, 0x10, 0, 0x74, 0xa, 0xa1, 0x1c, 0x81, 0x1c, 0x10, 0xe8, 0x38, 0xc4, 0x6, 0, 0xc7, 0x5, 0x50, 0x94, 0x1c, 0x10, 0, 0, 0, 0, 0xc7, 0x5, 0x4c, 0x94, 0x1c, 0x10, 0, 0, 0, 0, 0xc7, 0x5, 0x54, 0x94, 0x1c, 0x10, 0, 0, 0, 0, 0xc7, 0x5, 0x1c, 0x81, 0x1c, 0x10, 0, 0, 0, 0, 0x83, 0x3d, 0xac, 0x39, 0x1c, 0x10, 0, 0x74, 0x29, 0xa1, 0xac, 0x39, 0x1c, 0x10, 0x89, 0x45, 0xf8, 0x83, 0x7d, 0xf8, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0xe8, 0x61, 0x90, 0xfd, 0xff, 0xe8, 0x8d, 0x72, 0x6, 0, 0x89, 0x45, 0xf4, 0xeb, 0x7, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xe8, 0x6d, 0x3c, 0xff, 0xff, 0xe8, 0xe8, 0x57, 0x3, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100feac0, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x100feac5, 0x5)   calld(sys_check_available_stack_size, 0x67288); /* call 0x10165d52 */
    II(0x100feaca, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100feacb, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100feacc, 0x1)   pushd(edx);                           /* push edx */
    II(0x100feacd, 0x1)   pushd(esi);                           /* push esi */
    II(0x100feace, 0x1)   pushd(edi);                           /* push edi */
    II(0x100feacf, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100fead0, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100fead2, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x100fead8, 0x7)   mov(memb_a32(ds, 0x101c3970), 0);     /* mov byte [0x101c3970], 0x0 */
    II(0x100feadf, 0x7)   mov(memb_a32(ds, 0x101c37d2), 0);     /* mov byte [0x101c37d2], 0x0 */
    II(0x100feae6, 0x9)   mov(memw_a32(ds, 0x101c3962), 0);     /* mov word [0x101c3962], 0x0 */
    II(0x100feaef, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100feaf4, 0x5)   calld(0x1013d08a, 0x3e591);           /* call 0x1013d08a */
    II(0x100feaf9, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100feafb, 0x5)   calld(0x100f448c, -0xa674);           /* call 0x100f448c */
    II(0x100feb00, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x100feb07, 0x2)   jzd(0x100feb1b, 0x12);                /* jz 0x100feb1b */
    II(0x100feb09, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100feb0e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100feb10, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100feb15, 0x1)   cwde();                               /* cwde */
    II(0x100feb16, 0x5)   calld(0x1012b16c, 0x2c651);           /* call 0x1012b16c */
l_0x100feb1b:
    II(0x100feb1b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100feb1d, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100feb22, 0x5)   calld(0x10076630, -0x884f7);          /* call 0x10076630 */
    II(0x100feb27, 0x5)   mov(eax, 0x101c3990);                 /* mov eax, 0x101c3990 */
    II(0x100feb2c, 0x5)   calld(0x100f19ee, -0xd143);           /* call 0x100f19ee */
    II(0x100feb31, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0x4);    /* mov dword [ebp-0x4], 0x4 */
l_0x100feb38:
    II(0x100feb38, 0x3)   dec(memd_a32(ss, ebp - 0x4));         /* dec dword [ebp-0x4] */
    II(0x100feb3b, 0x5)   cmp(memw_a32(ss, ebp - 0x4), -0x1 /* 0xff */); /* cmp word [ebp-0x4], 0xff */
    II(0x100feb40, 0x2)   jzd(0x100feb9c, 0x5a);                /* jz 0x100feb9c */
    II(0x100feb42, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100feb46, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100feb4c, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100feb52, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100feb57, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100feb59, 0x2)   jzd(0x100feb9a, 0x3f);                /* jz 0x100feb9a */
    II(0x100feb5b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100feb5f, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100feb65, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a3)); /* mov eax, [eax+0x101ca6a3] */
    II(0x100feb6b, 0x5)   calld(sys_delete, 0x673f4);           /* call 0x10165f64 */
    II(0x100feb70, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100feb74, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100feb7a, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a7)); /* mov eax, [eax+0x101ca6a7] */
    II(0x100feb80, 0x5)   calld(sys_delete, 0x673df);           /* call 0x10165f64 */
    II(0x100feb85, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100feb89, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100feb8f, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6ab)); /* mov eax, [eax+0x101ca6ab] */
    II(0x100feb95, 0x5)   calld(sys_delete, 0x673ca);           /* call 0x10165f64 */
l_0x100feb9a:
    II(0x100feb9a, 0x2)   jmpd(0x100feb38, -0x64);              /* jmp 0x100feb38 */
l_0x100feb9c:
    II(0x100feb9c, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0x5);    /* mov dword [ebp-0x4], 0x5 */
l_0x100feba3:
    II(0x100feba3, 0x3)   dec(memd_a32(ss, ebp - 0x4));         /* dec dword [ebp-0x4] */
    II(0x100feba6, 0x5)   cmp(memw_a32(ss, ebp - 0x4), -0x1 /* 0xff */); /* cmp word [ebp-0x4], 0xff */
    II(0x100febab, 0x2)   jzd(0x100febeb, 0x3e);                /* jz 0x100febeb */
    II(0x100febad, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100febb1, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100febb7, 0xa)   mov(memd_a32(ds, eax + 0x101ca6a3), 0); /* mov dword [eax+0x101ca6a3], 0x0 */
    II(0x100febc1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100febc5, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100febcb, 0xa)   mov(memd_a32(ds, eax + 0x101ca6a7), 0); /* mov dword [eax+0x101ca6a7], 0x0 */
    II(0x100febd5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100febd9, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100febdf, 0xa)   mov(memd_a32(ds, eax + 0x101ca6ab), 0); /* mov dword [eax+0x101ca6ab], 0x0 */
    II(0x100febe9, 0x2)   jmpd(0x100feba3, -0x48);              /* jmp 0x100feba3 */
l_0x100febeb:
    II(0x100febeb, 0x5)   mov(eax, 0x101c8178);                 /* mov eax, 0x101c8178 */
    II(0x100febf0, 0x5)   calld(0x10102e0f, 0x421a);            /* call 0x10102e0f */
    II(0x100febf5, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100febfa, 0x5)   calld(0x10102e0f, 0x4210);            /* call 0x10102e0f */
    II(0x100febff, 0x5)   mov(eax, 0x101c8190);                 /* mov eax, 0x101c8190 */
    II(0x100fec04, 0x5)   calld(0x10102e0f, 0x4206);            /* call 0x10102e0f */
    II(0x100fec09, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100fec0e, 0x5)   calld(0x10102e0f, 0x41fc);            /* call 0x10102e0f */
    II(0x100fec13, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x100fec18, 0x5)   calld(0x10102e0f, 0x41f2);            /* call 0x10102e0f */
    II(0x100fec1d, 0x5)   mov(eax, 0x101c39c0);                 /* mov eax, 0x101c39c0 */
    II(0x100fec22, 0x5)   calld(0x10103ff1, 0x53ca);            /* call 0x10103ff1 */
    II(0x100fec27, 0x5)   mov(eax, 0x101c39b8);                 /* mov eax, 0x101c39b8 */
    II(0x100fec2c, 0x5)   calld(0x1010380b, 0x4bda);            /* call 0x1010380b */
    II(0x100fec31, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100fec33, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100fec38, 0x5)   calld(0x10076630, -0x8860d);          /* call 0x10076630 */
    II(0x100fec3d, 0x7)   cmp(memd_a32(ds, 0x101c9450), 0);     /* cmp dword [0x101c9450], 0x0 */
    II(0x100fec44, 0x2)   jzd(0x100fec50, 0xa);                 /* jz 0x100fec50 */
    II(0x100fec46, 0x5)   mov(eax, memd_a32(ds, 0x101c9450));   /* mov eax, [0x101c9450] */
    II(0x100fec4b, 0x5)   calld(sys_free, 0x6c471);             /* call 0x1016b0c1 */
l_0x100fec50:
    II(0x100fec50, 0x7)   cmp(memd_a32(ds, 0x101c944c), 0);     /* cmp dword [0x101c944c], 0x0 */
    II(0x100fec57, 0x2)   jzd(0x100fec63, 0xa);                 /* jz 0x100fec63 */
    II(0x100fec59, 0x5)   mov(eax, memd_a32(ds, 0x101c944c));   /* mov eax, [0x101c944c] */
    II(0x100fec5e, 0x5)   calld(sys_free, 0x6c45e);             /* call 0x1016b0c1 */
l_0x100fec63:
    II(0x100fec63, 0x7)   cmp(memd_a32(ds, 0x101c9454), 0);     /* cmp dword [0x101c9454], 0x0 */
    II(0x100fec6a, 0x2)   jzd(0x100fec76, 0xa);                 /* jz 0x100fec76 */
    II(0x100fec6c, 0x5)   mov(eax, memd_a32(ds, 0x101c9454));   /* mov eax, [0x101c9454] */
    II(0x100fec71, 0x5)   calld(sys_delete, 0x672ee);           /* call 0x10165f64 */
l_0x100fec76:
    II(0x100fec76, 0x7)   cmp(memd_a32(ds, 0x101c811c), 0);     /* cmp dword [0x101c811c], 0x0 */
    II(0x100fec7d, 0x2)   jzd(0x100fec89, 0xa);                 /* jz 0x100fec89 */
    II(0x100fec7f, 0x5)   mov(eax, memd_a32(ds, 0x101c811c));   /* mov eax, [0x101c811c] */
    II(0x100fec84, 0x5)   calld(sys_free, 0x6c438);             /* call 0x1016b0c1 */
l_0x100fec89:
    II(0x100fec89, 0xa)   mov(memd_a32(ds, 0x101c9450), 0);     /* mov dword [0x101c9450], 0x0 */
    II(0x100fec93, 0xa)   mov(memd_a32(ds, 0x101c944c), 0);     /* mov dword [0x101c944c], 0x0 */
    II(0x100fec9d, 0xa)   mov(memd_a32(ds, 0x101c9454), 0);     /* mov dword [0x101c9454], 0x0 */
    II(0x100feca7, 0xa)   mov(memd_a32(ds, 0x101c811c), 0);     /* mov dword [0x101c811c], 0x0 */
    II(0x100fecb1, 0x7)   cmp(memd_a32(ds, 0x101c39ac), 0);     /* cmp dword [0x101c39ac], 0x0 */
    II(0x100fecb8, 0x2)   jzd(0x100fece3, 0x29);                /* jz 0x100fece3 */
    II(0x100fecba, 0x5)   mov(eax, memd_a32(ds, 0x101c39ac));   /* mov eax, [0x101c39ac] */
    II(0x100fecbf, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100fecc2, 0x4)   cmp(memd_a32(ss, ebp - 0x8), 0);      /* cmp dword [ebp-0x8], 0x0 */
    II(0x100fecc6, 0x2)   jzd(0x100fecdc, 0x14);                /* jz 0x100fecdc */
    II(0x100fecc8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100fecca, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100feccd, 0x5)   calld(my_dtor_d3, -0x26f9f);          /* call 0x100d7d33 */
    II(0x100fecd2, 0x5)   calld(sys_delete, 0x6728d);           /* call 0x10165f64 */
    II(0x100fecd7, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100fecda, 0x2)   jmpd(0x100fece3, 0x7);                /* jmp 0x100fece3 */
l_0x100fecdc:
    II(0x100fecdc, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
l_0x100fece3:
    II(0x100fece3, 0x5)   calld(0x100f2955, -0xc393);           /* call 0x100f2955 */
    II(0x100fece8, 0x5)   calld(0x101344d5, 0x357e8);           /* call 0x101344d5 */
    II(0x100feced, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100fecef, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100fecf0, 0x1)   popd(edi);                            /* pop edi */
    II(0x100fecf1, 0x1)   popd(esi);                            /* pop esi */
    II(0x100fecf2, 0x1)   popd(edx);                            /* pop edx */
    II(0x100fecf3, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100fecf4, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100fecf5, 0x1)   retd();                               /* ret */
FUNC_END

