FUNC_BEGIN(0x100fe750, 0x7af79c7c8f72a4d6, 0x20, ({0x68, 0x6c, 0, 0, 0, 0xe8, 0xf8, 0x75, 0x6, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x4c, 0, 0, 0, 0x89, 0x45, 0xf4, 0x88, 0x55, 0xf8, 0x88, 0x5d, 0xfc, 0x8a, 0x45, 0xf4, 0xa2, 0xc8, 0x37, 0x1c, 0x10, 0x31, 0xc0, 0xe8, 0xf2, 0x12, 0, 0, 0x80, 0x7d, 0xf8, 0xa, 0x75, 0x26, 0xb8, 0x46, 0, 0, 0, 0xe8, 0x4e, 0x78, 0xf7, 0xff, 0x89, 0x45, 0xf0, 0xa0, 0x1f, 0x39, 0x1c, 0x10, 0xa2, 0x1e, 0x39, 0x1c, 0x10, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x98, 0xe8, 0x58, 0x50, 0xff, 0xff, 0xeb, 0x14, 0xb8, 0x46, 0, 0, 0, 0xe8, 0x28, 0x78, 0xf7, 0xff, 0x89, 0x45, 0xf0, 0xc6, 0x5, 0x1e, 0x39, 0x1c, 0x10, 0xb, 0xf, 0xbf, 0x45, 0xf0, 0x85, 0xc0, 0x75, 0x1d, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x74, 0x2, 0xeb, 0x7, 0xc7, 0x45, 0xf0, 0x2d, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf4, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x88, 0x45, 0xec, 0xe9, 0x8, 0x1, 0, 0, 0xc6, 0x5, 0x1e, 0x39, 0x1c, 0x10, 0x9, 0xe9, 0x14, 0x2, 0, 0, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x88, 0x67, 0xff, 0xff, 0xf, 0xbf, 0x55, 0xf4, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x74, 0x36, 0x80, 0x3d, 0x8b, 0x38, 0x1c, 0x10, 0, 0x74, 0x9, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0x92, 0xf9, 0xff, 0xff, 0x8a, 0x45, 0xf4, 0xa2, 0xda, 0x37, 0x1c, 0x10, 0xe8, 0xc, 0x78, 0xf7, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x31, 0xc0, 0xa0, 0x20, 0x39, 0x1c, 0x10, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0xfa, 0x34, 0xf7, 0xff, 0x80, 0x7d, 0xf8, 0xa, 0x74, 0x3d, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0x59, 0x46, 0xff, 0xff, 0x31, 0xd2, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xf7, 0xc4, 0x3, 0, 0x84, 0xc0, 0x74, 0x11, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x78, 0x7d, 0xf7, 0xff, 0xe8, 0xc0, 0x20, 0, 0, 0xeb, 0x13, 0x83, 0x3d, 0xdc, 0x37, 0x1c, 0x10, 0x1, 0x75, 0xa, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xd2, 0x2a, 0, 0, 0xe9, 0x80, 0, 0, 0, 0x80, 0x7d, 0xf8, 0xa, 0x74, 0x26, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0x11, 0x46, 0xff, 0xff, 0xb8, 0x47, 0, 0, 0, 0xe8, 0x1c, 0x77, 0xf7, 0xff, 0x89, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x2d, 0x7d, 0x7, 0xc7, 0x45, 0xf0, 0x2d, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0xb1, 0xa1, 0xfa, 0xff, 0x31, 0xc0, 0xe8, 0xbf, 0x66, 0xff, 0xff, 0xeb, 0x42, 0x80, 0x7d, 0xf8, 0xa, 0x74, 0x9, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0xd3, 0x45, 0xff, 0xff, 0xeb, 0x31, 0xeb, 0x2f, 0x4, 0xe8, 0xf, 0x10, 0x10, 0xe8, 0xf, 0x10, 0xa7, 0xe8, 0xf, 0x10, 0xe5, 0xe8, 0xf, 0x10, 0x4, 0xe8, 0xf, 0x10, 0x8a, 0x45, 0xec, 0x88, 0x45, 0xe8, 0x80, 0x7d, 0xe8, 0x4, 0x77, 0xde, 0x31, 0xc0, 0x8a, 0x45, 0xe8, 0xc1, 0xe0, 0x2, 0x2e, 0xff, 0xa0, 0xf8, 0xe8, 0xf, 0x10, 0xc6, 0x5, 0xd3, 0x37, 0x1c, 0x10, 0x1, 0xf, 0xbf, 0x55, 0xf0, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xc1, 0xcb, 0xff, 0xff, 0x80, 0x7d, 0xf8, 0xa, 0x75, 0xf, 0xb8, 0x3e, 0, 0, 0, 0xe8, 0x90, 0x76, 0xf7, 0xff, 0x83, 0xf8, 0x1, 0x74, 0x2, 0xeb, 0x10, 0x31, 0xd2, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x12, 0xc4, 0x3, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0xf, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x61, 0x7c, 0xf7, 0xff, 0xe8, 0x2e, 0x3f, 0xff, 0xff, 0xe8, 0x54, 0xfc, 0xff, 0xff, 0x85, 0xc0, 0xf, 0x84, 0x93, 0, 0, 0, 0xe8, 0x8a, 0xb2, 0x3, 0, 0x88, 0x45, 0xe4, 0x80, 0x7d, 0xfc, 0, 0x74, 0x6, 0x80, 0x7d, 0xe4, 0x5, 0x75, 0x2, 0xeb, 0xe, 0xb8, 0x3c, 0, 0, 0, 0xe8, 0x3b, 0x76, 0xf7, 0xff, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x44, 0xf, 0xbe, 0x45, 0xe4, 0xc1, 0xe0, 0x2, 0xff, 0xb0, 0x2c, 0xd4, 0x1b, 0x10, 0xb8, 0x7d, 0x2a, 0x1a, 0x10, 0x50, 0x8d, 0x45, 0xd4, 0x50, 0xe8, 0x3e, 0x75, 0x6, 0, 0x83, 0xc4, 0xc, 0xff, 0x35, 0xdc, 0x37, 0x1c, 0x10, 0xb8, 0x87, 0x2a, 0x1a, 0x10, 0x50, 0x8d, 0x45, 0xb4, 0x50, 0xe8, 0x26, 0x75, 0x6, 0, 0x83, 0xc4, 0xc, 0x31, 0xdb, 0x8d, 0x55, 0xb4, 0x8d, 0x45, 0xd4, 0xe8, 0x96, 0x84, 0x3, 0, 0xa0, 0xc8, 0x37, 0x1c, 0x10, 0x3a, 0x5, 0xda, 0x37, 0x1c, 0x10, 0x75, 0x1c, 0xe8, 0x73, 0x6a, 0xfd, 0xff, 0xf, 0xbf, 0xc8, 0xbb, 0x2c, 0x4, 0, 0, 0xba, 0x2b, 0x4, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0xd6, 0xf0, 0x3, 0, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x8, 0x75, 0x7, 0xe8, 0xa, 0x29, 0, 0, 0xeb, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100fe750, 0x5)   pushd(0x6c);                          /* push dword 0x6c */
    II(0x100fe755, 0x5)   calld(sys_check_available_stack_size, 0x675f8); /* call 0x10165d52 */
    II(0x100fe75a, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100fe75b, 0x1)   pushd(esi);                           /* push esi */
    II(0x100fe75c, 0x1)   pushd(edi);                           /* push edi */
    II(0x100fe75d, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100fe75e, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100fe760, 0x6)   sub(esp, 0x4c);                       /* sub esp, 0x4c */
    II(0x100fe766, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100fe769, 0x3)   mov(memb_a32(ss, ebp - 0x8), dl);     /* mov [ebp-0x8], dl */
    II(0x100fe76c, 0x3)   mov(memb_a32(ss, ebp - 0x4), bl);     /* mov [ebp-0x4], bl */
    II(0x100fe76f, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100fe772, 0x5)   mov(memb_a32(ds, 0x101c37c8), al);    /* mov [0x101c37c8], al */
    II(0x100fe777, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100fe779, 0x5)   calld(0x100ffa70, 0x12f2);            /* call 0x100ffa70 */
    II(0x100fe77e, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0xa);    /* cmp byte [ebp-0x8], 0xa */
    II(0x100fe782, 0x2)   jnzd(0x100fe7aa, 0x26);               /* jnz 0x100fe7aa */
    II(0x100fe784, 0x5)   mov(eax, 0x46);                       /* mov eax, 0x46 */
    II(0x100fe789, 0x5)   calld(0x10075fdc, -0x887b2);          /* call 0x10075fdc */
    II(0x100fe78e, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100fe791, 0x5)   mov(al, memb_a32(ds, 0x101c391f));    /* mov al, [0x101c391f] */
    II(0x100fe796, 0x5)   mov(memb_a32(ds, 0x101c391e), al);    /* mov [0x101c391e], al */
    II(0x100fe79b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100fe79d, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100fe7a2, 0x1)   cwde();                               /* cwde */
    II(0x100fe7a3, 0x5)   calld(0x100f3800, -0xafa8);           /* call 0x100f3800 */
    II(0x100fe7a8, 0x2)   jmpd(0x100fe7be, 0x14);               /* jmp 0x100fe7be */
l_0x100fe7aa:
    II(0x100fe7aa, 0x5)   mov(eax, 0x46);                       /* mov eax, 0x46 */
    II(0x100fe7af, 0x5)   calld(0x10075fdc, -0x887d8);          /* call 0x10075fdc */
    II(0x100fe7b4, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100fe7b7, 0x7)   mov(memb_a32(ds, 0x101c391e), 0xb);   /* mov byte [0x101c391e], 0xb */
l_0x100fe7be:
    II(0x100fe7be, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100fe7c2, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100fe7c4, 0x2)   jnzd(0x100fe7e3, 0x1d);               /* jnz 0x100fe7e3 */
    II(0x100fe7c6, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100fe7c8, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100fe7cd, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100fe7d3, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100fe7d9, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100fe7de, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100fe7e1, 0x2)   jzd(0x100fe7e5, 0x2);                 /* jz 0x100fe7e5 */
l_0x100fe7e3:
    II(0x100fe7e3, 0x2)   jmpd(0x100fe7ec, 0x7);                /* jmp 0x100fe7ec */
l_0x100fe7e5:
    II(0x100fe7e5, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x2d);  /* mov dword [ebp-0x10], 0x2d */
l_0x100fe7ec:
    II(0x100fe7ec, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100fe7f0, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100fe7f6, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100fe7fc, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x100fe7ff, 0x5)   jmpd(0x100fe90c, 0x108);              /* jmp 0x100fe90c */
l_0x100fe804:
    II(0x100fe804, 0x7)   mov(memb_a32(ds, 0x101c391e), 0x9);   /* mov byte [0x101c391e], 0x9 */
    II(0x100fe80b, 0x5)   jmpd(0x100fea24, 0x214);              /* jmp 0x100fea24 */
l_0x100fe810:
    II(0x100fe810, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100fe815, 0x5)   calld(0x100f4fa2, -0x9878);           /* call 0x100f4fa2 */
    II(0x100fe81a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100fe81e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100fe820, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100fe825, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100fe827, 0x2)   jzd(0x100fe85f, 0x36);                /* jz 0x100fe85f */
    II(0x100fe829, 0x7)   cmp(memb_a32(ds, 0x101c388b), 0);     /* cmp byte [0x101c388b], 0x0 */
    II(0x100fe830, 0x2)   jzd(0x100fe83b, 0x9);                 /* jz 0x100fe83b */
    II(0x100fe832, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100fe836, 0x5)   calld(0x100fe1cd, -0x66e);            /* call 0x100fe1cd */
l_0x100fe83b:
    II(0x100fe83b, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100fe83e, 0x5)   mov(memb_a32(ds, 0x101c37da), al);    /* mov [0x101c37da], al */
    II(0x100fe843, 0x5)   calld(0x10076054, -0x887f4);          /* call 0x10076054 */
    II(0x100fe848, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100fe84a, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100fe84c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100fe84e, 0x5)   mov(al, memb_a32(ds, 0x101c3920));    /* mov al, [0x101c3920] */
    II(0x100fe853, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100fe856, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100fe85a, 0x5)   calld(0x10071d59, -0x8cb06);          /* call 0x10071d59 */
l_0x100fe85f:
    II(0x100fe85f, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0xa);    /* cmp byte [ebp-0x8], 0xa */
    II(0x100fe863, 0x2)   jzd(0x100fe8a2, 0x3d);                /* jz 0x100fe8a2 */
    II(0x100fe865, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100fe869, 0x5)   calld(0x100f2ec7, -0xb9a7);           /* call 0x100f2ec7 */
    II(0x100fe86e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100fe870, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100fe875, 0x5)   calld(0x1013ad71, 0x3c4f7);           /* call 0x1013ad71 */
    II(0x100fe87a, 0x2)   test(al, al);                         /* test al, al */
    II(0x100fe87c, 0x2)   jzd(0x100fe88f, 0x11);                /* jz 0x100fe88f */
    II(0x100fe87e, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100fe883, 0x5)   calld(0x10076600, -0x88288);          /* call 0x10076600 */
    II(0x100fe888, 0x5)   calld(0x1010094d, 0x20c0);            /* call 0x1010094d */
    II(0x100fe88d, 0x2)   jmpd(0x100fe8a2, 0x13);               /* jmp 0x100fe8a2 */
l_0x100fe88f:
    II(0x100fe88f, 0x7)   cmp(memd_a32(ds, 0x101c37dc), 0x1);   /* cmp dword [0x101c37dc], 0x1 */
    II(0x100fe896, 0x2)   jnzd(0x100fe8a2, 0xa);                /* jnz 0x100fe8a2 */
    II(0x100fe898, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100fe89d, 0x5)   calld(0x10101374, 0x2ad2);            /* call 0x10101374 */
l_0x100fe8a2:
    II(0x100fe8a2, 0x5)   jmpd(0x100fe927, 0x80);               /* jmp 0x100fe927 */
l_0x100fe8a7:
    II(0x100fe8a7, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0xa);    /* cmp byte [ebp-0x8], 0xa */
    II(0x100fe8ab, 0x2)   jzd(0x100fe8d3, 0x26);                /* jz 0x100fe8d3 */
    II(0x100fe8ad, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100fe8b1, 0x5)   calld(0x100f2ec7, -0xb9ef);           /* call 0x100f2ec7 */
    II(0x100fe8b6, 0x5)   mov(eax, 0x47);                       /* mov eax, 0x47 */
    II(0x100fe8bb, 0x5)   calld(0x10075fdc, -0x888e4);          /* call 0x10075fdc */
    II(0x100fe8c0, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100fe8c3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100fe8c7, 0x3)   cmp(eax, 0x2d);                       /* cmp eax, 0x2d */
    II(0x100fe8ca, 0x2)   jged(0x100fe8d3, 0x7);                /* jge 0x100fe8d3 */
    II(0x100fe8cc, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x2d);  /* mov dword [ebp-0x10], 0x2d */
l_0x100fe8d3:
    II(0x100fe8d3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100fe8d7, 0x5)   calld(0x100a8a8d, -0x55e4f);          /* call 0x100a8a8d */
    II(0x100fe8dc, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100fe8de, 0x5)   calld(0x100f4fa2, -0x9941);           /* call 0x100f4fa2 */
    II(0x100fe8e3, 0x2)   jmpd(0x100fe927, 0x42);               /* jmp 0x100fe927 */
l_0x100fe8e5:
    II(0x100fe8e5, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0xa);    /* cmp byte [ebp-0x8], 0xa */
    II(0x100fe8e9, 0x2)   jzd(0x100fe8f4, 0x9);                 /* jz 0x100fe8f4 */
    II(0x100fe8eb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100fe8ef, 0x5)   calld(0x100f2ec7, -0xba2d);           /* call 0x100f2ec7 */
l_0x100fe8f4:
    II(0x100fe8f4, 0x2)   jmpd(0x100fe927, 0x31);               /* jmp 0x100fe927 */
l_0x100fe8f6:
    II(0x100fe8f6, 0x2)   jmpd(0x100fe927, 0x2f);               /* jmp 0x100fe927 */
//    II(0x100fe8f8, 0x14)  /* Служебная область с абсолютными адресами переходов. {0x100fe804, 0x100fe810, 0x100fe8a7, 0x100fe8e5, 0x100fe804}. */
l_0x100fe90c:
    II(0x100fe90c, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x100fe90f, 0x3)   mov(memb_a32(ss, ebp - 0x18), al);    /* mov [ebp-0x18], al */
    II(0x100fe912, 0x4)   cmp(memb_a32(ss, ebp - 0x18), 0x4);   /* cmp byte [ebp-0x18], 0x4 */
    II(0x100fe916, 0x2)   jad(0x100fe8f6, -0x22);               /* ja 0x100fe8f6 */
    II(0x100fe918, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100fe91a, 0x3)   mov(al, memb_a32(ss, ebp - 0x18));    /* mov al, [ebp-0x18] */
    II(0x100fe91d, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100fe920, 0x7)   jmpd_abs_switch(memd_a32(cs, eax + 0x100fe8f8), (0x100fe804)(0x100fe810)(0x100fe8a7)(0x100fe8e5)); /* jmp dword near [cs:eax+0x100fe8f8] */
l_0x100fe927:
    II(0x100fe927, 0x7)   mov(memb_a32(ds, 0x101c37d3), 0x1);   /* mov byte [0x101c37d3], 0x1 */
    II(0x100fe92e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100fe932, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100fe937, 0x5)   calld(0x100fb4fd, -0x343f);           /* call 0x100fb4fd */
    II(0x100fe93c, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0xa);    /* cmp byte [ebp-0x8], 0xa */
    II(0x100fe940, 0x2)   jnzd(0x100fe951, 0xf);                /* jnz 0x100fe951 */
    II(0x100fe942, 0x5)   mov(eax, 0x3e);                       /* mov eax, 0x3e */
    II(0x100fe947, 0x5)   calld(0x10075fdc, -0x88970);          /* call 0x10075fdc */
    II(0x100fe94c, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100fe94f, 0x2)   jzd(0x100fe953, 0x2);                 /* jz 0x100fe953 */
l_0x100fe951:
    II(0x100fe951, 0x2)   jmpd(0x100fe963, 0x10);               /* jmp 0x100fe963 */
l_0x100fe953:
    II(0x100fe953, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100fe955, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100fe95a, 0x5)   calld(0x1013ad71, 0x3c412);           /* call 0x1013ad71 */
    II(0x100fe95f, 0x2)   test(al, al);                         /* test al, al */
    II(0x100fe961, 0x2)   jnzd(0x100fe965, 0x2);                /* jnz 0x100fe965 */
l_0x100fe963:
    II(0x100fe963, 0x2)   jmpd(0x100fe974, 0xf);                /* jmp 0x100fe974 */
l_0x100fe965:
    II(0x100fe965, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100fe96a, 0x5)   calld(0x100765d0, -0x8839f);          /* call 0x100765d0 */
    II(0x100fe96f, 0x5)   calld(0x100f28a2, -0xc0d2);           /* call 0x100f28a2 */
l_0x100fe974:
    II(0x100fe974, 0x5)   calld(0x100fe5cd, -0x3ac);            /* call 0x100fe5cd */
    II(0x100fe979, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100fe97b, 0x6)   jzd(0x100fea14, 0x93);                /* jz dword 0x100fea14 */
    II(0x100fe981, 0x5)   calld(0x10139c10, 0x3b28a);           /* call 0x10139c10 */
    II(0x100fe986, 0x3)   mov(memb_a32(ss, ebp - 0x1c), al);    /* mov [ebp-0x1c], al */
    II(0x100fe989, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x100fe98d, 0x2)   jzd(0x100fe995, 0x6);                 /* jz 0x100fe995 */
    II(0x100fe98f, 0x4)   cmp(memb_a32(ss, ebp - 0x1c), 0x5);   /* cmp byte [ebp-0x1c], 0x5 */
    II(0x100fe993, 0x2)   jnzd(0x100fe997, 0x2);                /* jnz 0x100fe997 */
l_0x100fe995:
    II(0x100fe995, 0x2)   jmpd(0x100fe9a5, 0xe);                /* jmp 0x100fe9a5 */
l_0x100fe997:
    II(0x100fe997, 0x5)   mov(eax, 0x3c);                       /* mov eax, 0x3c */
    II(0x100fe99c, 0x5)   calld(0x10075fdc, -0x889c5);          /* call 0x10075fdc */
    II(0x100fe9a1, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100fe9a3, 0x2)   jnzd(0x100fe9a7, 0x2);                /* jnz 0x100fe9a7 */
l_0x100fe9a5:
    II(0x100fe9a5, 0x2)   jmpd(0x100fe9eb, 0x44);               /* jmp 0x100fe9eb */
l_0x100fe9a7:
    II(0x100fe9a7, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x1c)); /* movsx eax, byte [ebp-0x1c] */
    II(0x100fe9ab, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100fe9ae, 0x6)   pushd(memd_a32(ds, eax + 0x101bd42c)); /* push dword [eax+0x101bd42c] */
    II(0x100fe9b4, 0x5)   mov(eax, 0x101a2a7d);                 /* mov eax, 0x101a2a7d */ /* "save10.%s" */
    II(0x100fe9b9, 0x1)   pushd(eax);                           /* push eax */
    II(0x100fe9ba, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100fe9bd, 0x1)   pushd(eax);                           /* push eax */
    II(0x100fe9be, 0x5)   calld(sys_sprintf, 0x6753e);          /* call 0x10165f01 */
    II(0x100fe9c3, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x100fe9c6, 0x6)   pushd(memd_a32(ds, 0x101c37dc));      /* push dword [0x101c37dc] */
    II(0x100fe9cc, 0x5)   mov(eax, 0x101a2a87);                 /* mov eax, 0x101a2a87 */ /* "Auto-Saved turn %i" */
    II(0x100fe9d1, 0x1)   pushd(eax);                           /* push eax */
    II(0x100fe9d2, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100fe9d5, 0x1)   pushd(eax);                           /* push eax */
    II(0x100fe9d6, 0x5)   calld(sys_sprintf, 0x67526);          /* call 0x10165f01 */
    II(0x100fe9db, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x100fe9de, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100fe9e0, 0x3)   lea(edx, ebp - 0x4c);                 /* lea edx, [ebp-0x4c] */
    II(0x100fe9e3, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100fe9e6, 0x5)   calld(0x10136e81, 0x38496);           /* call 0x10136e81 */
l_0x100fe9eb:
    II(0x100fe9eb, 0x5)   mov(al, memb_a32(ds, 0x101c37c8));    /* mov al, [0x101c37c8] */
    II(0x100fe9f0, 0x6)   cmp(al, memb_a32(ds, 0x101c37da));    /* cmp al, [0x101c37da] */
    II(0x100fe9f6, 0x2)   jnzd(0x100fea14, 0x1c);               /* jnz 0x100fea14 */
    II(0x100fe9f8, 0x5)   calld(0x100d5470, -0x2958d);          /* call 0x100d5470 */
    II(0x100fe9fd, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100fea00, 0x5)   mov(ebx, 0x42c);                      /* mov ebx, 0x42c */
    II(0x100fea05, 0x5)   mov(edx, 0x42b);                      /* mov edx, 0x42b */
    II(0x100fea0a, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100fea0f, 0x5)   calld(0x1013daea, 0x3f0d6);           /* call 0x1013daea */
l_0x100fea14:
    II(0x100fea14, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x8);   /* cmp byte [0x101c391e], 0x8 */
    II(0x100fea1b, 0x2)   jnzd(0x100fea24, 0x7);                /* jnz 0x100fea24 */
    II(0x100fea1d, 0x5)   calld(0x1010132c, 0x290a);            /* call 0x1010132c */
    II(0x100fea22, 0x2)   jmpd(0x100fea14, -0x10);              /* jmp 0x100fea14 */
l_0x100fea24:
    II(0x100fea24, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100fea26, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100fea27, 0x1)   popd(edi);                            /* pop edi */
    II(0x100fea28, 0x1)   popd(esi);                            /* pop esi */
    II(0x100fea29, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100fea2a, 0x1)   retd();                               /* ret */
FUNC_END

