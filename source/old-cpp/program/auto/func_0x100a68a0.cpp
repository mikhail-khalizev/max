FUNC_BEGIN(0x100a68a0, 0xa6e90657aeff9ecb, 0x20, ({0x68, 0xa4, 0, 0, 0, 0xe8, 0xa8, 0xf4, 0xb, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x84, 0, 0, 0, 0x89, 0x45, 0xfc, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xf, 0xe8, 0x49, 0x44, 0x9, 0, 0x84, 0xc0, 0x75, 0x1e, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xf, 0xe8, 0x51, 0x46, 0xfe, 0xff, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xf4, 0xff, 0x52, 0x24, 0x84, 0xc0, 0x75, 0xb, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x3, 0x62, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x1b, 0, 0xf, 0x84, 0x23, 0x2, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x5b, 0x4a, 0xfe, 0xff, 0x48, 0x89, 0x45, 0xf8, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x4d, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0x85, 0xc0, 0xf, 0x8c, 0x82, 0, 0, 0, 0x31, 0xdb, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xf2, 0x48, 0xfe, 0xff, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xb3, 0xfc, 0xff, 0xff, 0x89, 0x45, 0xf0, 0x83, 0x7d, 0xf0, 0, 0x74, 0x58, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xd3, 0x49, 0xfe, 0xff, 0x8b, 0x45, 0xf0, 0xe8, 0x4b, 0xbd, 0xa, 0, 0x85, 0xc0, 0x74, 0x20, 0x8b, 0x45, 0xf0, 0xe8, 0x10, 0xbf, 0xa, 0, 0x8b, 0x45, 0xf0, 0x80, 0x78, 0x3d, 0, 0x74, 0xf, 0xbb, 0x18, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xf0, 0xe8, 0xce, 0xc6, 0xb, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xf, 0xe8, 0x98, 0x45, 0xfe, 0xff, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x8b, 0x58, 0x2, 0x8b, 0x55, 0xf0, 0x8b, 0x45, 0xec, 0xff, 0x53, 0x2c, 0xe9, 0x6c, 0xff, 0xff, 0xff, 0xbb, 0x5d, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0x8c, 0xe8, 0x2a, 0xf4, 0xb, 0, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x98, 0x49, 0xfe, 0xff, 0x66, 0x3b, 0x45, 0xf8, 0xf, 0x8e, 0x44, 0x1, 0, 0, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x3f, 0x48, 0xfe, 0xff, 0xf, 0xbf, 0, 0x6b, 0xc0, 0x33, 0xf6, 0x80, 0xc1, 0x81, 0x1c, 0x10, 0x2, 0x74, 0x3e, 0x8b, 0x45, 0xfc, 0x50, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x17, 0x8d, 0x45, 0x88, 0xe8, 0x5a, 0xf4, 0xfc, 0xff, 0x89, 0xc1, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x7, 0xc1, 0xfb, 0x10, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x4, 0x48, 0xfe, 0xff, 0xf, 0xbf, 0x10, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x23, 0xdf, 0xff, 0xff, 0xe9, 0xe3, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xe3, 0x47, 0xfe, 0xff, 0x66, 0x83, 0x38, 0x31, 0x74, 0x15, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xce, 0x47, 0xfe, 0xff, 0x66, 0x83, 0x38, 0x3d, 0x75, 0x3e, 0x8b, 0x45, 0xfc, 0x50, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x17, 0x8d, 0x45, 0x84, 0xe8, 0xf2, 0xf3, 0xfc, 0xff, 0x89, 0xc1, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x7, 0xc1, 0xfb, 0x10, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x9c, 0x47, 0xfe, 0xff, 0xf, 0xbf, 0x10, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x37, 0xdf, 0xff, 0xff, 0xe9, 0x7b, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x7b, 0x47, 0xfe, 0xff, 0xf, 0xbf, 0, 0x80, 0x7c, 0x28, 0x8c, 0, 0x75, 0x62, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x62, 0x47, 0xfe, 0xff, 0xf, 0xbf, 0, 0xc6, 0x44, 0x28, 0x8c, 0x1, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x17, 0x8d, 0x45, 0x80, 0xe8, 0x88, 0xf3, 0xfc, 0xff, 0x50, 0x8b, 0x4d, 0xfc, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x39, 0x47, 0xfe, 0xff, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x2b, 0xf6, 0xff, 0xff, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x1c, 0x47, 0xfe, 0xff, 0xf, 0xbf, 0x10, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x5a, 0xdf, 0xff, 0xff, 0xe9, 0xa1, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x1b, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x38, 0x48, 0xfe, 0xff, 0x98, 0x85, 0xc0, 0x75, 0x51, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xf, 0xe8, 0x2f, 0x42, 0x9, 0, 0x84, 0xc0, 0x74, 0x26, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xf, 0xe8, 0xd7, 0x43, 0xfe, 0xff, 0x89, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x8b, 0x58, 0x2, 0x8b, 0x55, 0xfc, 0x8b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0xff, 0x53, 0x38, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xf, 0xe8, 0x6b, 0x44, 0xfe, 0xff, 0x8b, 0x55, 0xfc, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xa1, 0xf2, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100a68a0, 0x5)   pushd(0xa4);                          /* push dword 0xa4 */
    II(0x100a68a5, 0x5)   calld(sys_check_available_stack_size, 0xbf4a8); /* call 0x10165d52 */
    II(0x100a68aa, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a68ab, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a68ac, 0x1)   pushd(edx);                           /* push edx */
    II(0x100a68ad, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a68ae, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a68af, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a68b0, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a68b2, 0x6)   sub(esp, 0x84);                       /* sub esp, 0x84 */
    II(0x100a68b8, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100a68bb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a68bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a68c0, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x100a68c3, 0x5)   calld(0x1013ad11, 0x94449);           /* call 0x1013ad11 */
    II(0x100a68c8, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a68ca, 0x2)   jnzd(0x100a68ea, 0x1e);               /* jnz 0x100a68ea */
    II(0x100a68cc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a68cf, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x100a68d2, 0x5)   calld(0x1008af28, -0x1b9af);          /* call 0x1008af28 */
    II(0x100a68d7, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x100a68da, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a68dd, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100a68e0, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a68e3, 0x3)   calld_abs(memd_a32(ds, edx + 0x24));  /* call dword near [edx+0x24] */
    II(0x100a68e6, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a68e8, 0x2)   jnzd(0x100a68f5, 0xb);                /* jnz 0x100a68f5 */
l_0x100a68ea:
    II(0x100a68ea, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a68ed, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100a68f0, 0x5)   calld(0x1009caf8, -0x9dfd);           /* call 0x1009caf8 */
l_0x100a68f5:
    II(0x100a68f5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a68f8, 0x4)   cmp(memb_a32(ds, eax + 0x1b), 0);     /* cmp byte [eax+0x1b], 0x0 */
    II(0x100a68fc, 0x6)   jzd(0x100a6b25, 0x223);               /* jz dword 0x100a6b25 */
    II(0x100a6902, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6905, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100a6908, 0x5)   calld(my_2_get_count, -0x1b5a5);      /* call 0x1008b368 */
    II(0x100a690d, 0x1)   dec(eax);                             /* dec eax */
    II(0x100a690e, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a6911, 0x2)   jmpd(0x100a6919, 0x6);                /* jmp 0x100a6919 */
l_0x100a6913:
    II(0x100a6913, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a6916, 0x3)   dec(memd_a32(ss, ebp - 0x8));         /* dec dword [ebp-0x8] */
l_0x100a6919:
    II(0x100a6919, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100a691d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a691f, 0x6)   jld(0x100a69a7, 0x82);                /* jl dword 0x100a69a7 */
    II(0x100a6925, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100a6927, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100a692b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a692e, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100a6931, 0x5)   calld(0x1008b228, -0x1b70e);          /* call 0x1008b228 */
    II(0x100a6936, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100a6939, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a693c, 0x5)   calld(0x100a65f4, -0x34d);            /* call 0x100a65f4 */
    II(0x100a6941, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100a6944, 0x4)   cmp(memd_a32(ss, ebp - 0x10), 0);     /* cmp dword [ebp-0x10], 0x0 */
    II(0x100a6948, 0x2)   jzd(0x100a69a2, 0x58);                /* jz 0x100a69a2 */
    II(0x100a694a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100a694e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6951, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100a6954, 0x5)   calld(0x1008b32c, -0x1b62d);          /* call 0x1008b32c */
    II(0x100a6959, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100a695c, 0x5)   calld(0x101526ac, 0xabd4b);           /* call 0x101526ac */
    II(0x100a6961, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a6963, 0x2)   jzd(0x100a6985, 0x20);                /* jz 0x100a6985 */
    II(0x100a6965, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100a6968, 0x5)   calld(0x1015287d, 0xabf10);           /* call 0x1015287d */
    II(0x100a696d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100a6970, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0);     /* cmp byte [eax+0x3d], 0x0 */
    II(0x100a6974, 0x2)   jzd(0x100a6985, 0xf);                 /* jz 0x100a6985 */
    II(0x100a6976, 0x5)   mov(ebx, 0x18);                       /* mov ebx, 0x18 */
    II(0x100a697b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a697d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100a6980, 0x5)   calld(0x10163053, 0xbc6ce);           /* call 0x10163053 */
l_0x100a6985:
    II(0x100a6985, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6988, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x100a698b, 0x5)   calld(0x1008af28, -0x1ba68);          /* call 0x1008af28 */
    II(0x100a6990, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100a6993, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a6996, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x100a6999, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
//    II(0x100a699c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a699f, 0x3)   calld_abs(memd_a32(ds, ebx + 0x2c));  /* call dword near [ebx+0x2c] */
l_0x100a69a2:
    II(0x100a69a2, 0x5)   jmpd(0x100a6913, -0x94);              /* jmp 0x100a6913 */
l_0x100a69a7:
    II(0x100a69a7, 0x5)   mov(ebx, 0x5d);                       /* mov ebx, 0x5d */
    II(0x100a69ac, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a69ae, 0x3)   lea(eax, ebp - 0x74);                 /* lea eax, [ebp-0x74] */
    II(0x100a69b1, 0x5)   calld(sys_memset, 0xbf42a);           /* call 0x10165de0 */
    II(0x100a69b6, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x100a69bd, 0x2)   jmpd(0x100a69c5, 0x6);                /* jmp 0x100a69c5 */
l_0x100a69bf:
    II(0x100a69bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a69c2, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x100a69c5:
    II(0x100a69c5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a69c8, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100a69cb, 0x5)   calld(my_2_get_count, -0x1b668);      /* call 0x1008b368 */
    II(0x100a69d0, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x100a69d4, 0x6)   jled(0x100a6b1e, 0x144);              /* jle dword 0x100a6b1e */
    II(0x100a69da, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100a69de, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a69e1, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100a69e4, 0x5)   calld(0x1008b228, -0x1b7c1);          /* call 0x1008b228 */
    II(0x100a69e9, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100a69ec, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100a69ef, 0x7)   test(memb_a32(ds, eax + 0x101c81c1), 0x2); /* test byte [eax+0x101c81c1], 0x2 */
    II(0x100a69f6, 0x2)   jzd(0x100a6a36, 0x3e);                /* jz 0x100a6a36 */
    II(0x100a69f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a69fb, 0x1)   pushd(eax);                           /* push eax */
    II(0x100a69fc, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a69ff, 0x3)   add(edx, 0x17);                       /* add edx, 0x17 */
    II(0x100a6a02, 0x3)   lea(eax, ebp - 0x78);                 /* lea eax, [ebp-0x78] */
    II(0x100a6a05, 0x5)   calld(0x10075e64, -0x30ba6);          /* call 0x10075e64 */
    II(0x100a6a0a, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100a6a0c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6a0f, 0x3)   mov(ebx, memd_a32(ds, eax + 0x7));    /* mov ebx, [eax+0x7] */
    II(0x100a6a12, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100a6a15, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100a6a19, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6a1c, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100a6a1f, 0x5)   calld(0x1008b228, -0x1b7fc);          /* call 0x1008b228 */
    II(0x100a6a24, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100a6a27, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100a6a2c, 0x5)   calld(0x100a4954, -0x20dd);           /* call 0x100a4954 */
    II(0x100a6a31, 0x5)   jmpd(0x100a6b19, 0xe3);               /* jmp 0x100a6b19 */
l_0x100a6a36:
    II(0x100a6a36, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100a6a3a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6a3d, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100a6a40, 0x5)   calld(0x1008b228, -0x1b81d);          /* call 0x1008b228 */
    II(0x100a6a45, 0x4)   cmp(memw_a32(ds, eax), 0x31);         /* cmp word [eax], 0x31 */
    II(0x100a6a49, 0x2)   jzd(0x100a6a60, 0x15);                /* jz 0x100a6a60 */
    II(0x100a6a4b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100a6a4f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6a52, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100a6a55, 0x5)   calld(0x1008b228, -0x1b832);          /* call 0x1008b228 */
    II(0x100a6a5a, 0x4)   cmp(memw_a32(ds, eax), 0x3d);         /* cmp word [eax], 0x3d */
    II(0x100a6a5e, 0x2)   jnzd(0x100a6a9e, 0x3e);               /* jnz 0x100a6a9e */
l_0x100a6a60:
    II(0x100a6a60, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6a63, 0x1)   pushd(eax);                           /* push eax */
    II(0x100a6a64, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a6a67, 0x3)   add(edx, 0x17);                       /* add edx, 0x17 */
    II(0x100a6a6a, 0x3)   lea(eax, ebp - 0x7c);                 /* lea eax, [ebp-0x7c] */
    II(0x100a6a6d, 0x5)   calld(0x10075e64, -0x30c0e);          /* call 0x10075e64 */
    II(0x100a6a72, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100a6a74, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6a77, 0x3)   mov(ebx, memd_a32(ds, eax + 0x7));    /* mov ebx, [eax+0x7] */
    II(0x100a6a7a, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100a6a7d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100a6a81, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6a84, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100a6a87, 0x5)   calld(0x1008b228, -0x1b864);          /* call 0x1008b228 */
    II(0x100a6a8c, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100a6a8f, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100a6a94, 0x5)   calld(0x100a49d0, -0x20c9);           /* call 0x100a49d0 */
    II(0x100a6a99, 0x5)   jmpd(0x100a6b19, 0x7b);               /* jmp 0x100a6b19 */
l_0x100a6a9e:
    II(0x100a6a9e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100a6aa2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6aa5, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100a6aa8, 0x5)   calld(0x1008b228, -0x1b885);          /* call 0x1008b228 */
    II(0x100a6aad, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100a6ab0, 0x5)   cmp(memb_a32(ds, eax + ebp - 0x74), 0); /* cmp byte [eax+ebp-0x74], 0x0 */
    II(0x100a6ab5, 0x2)   jnzd(0x100a6b19, 0x62);               /* jnz 0x100a6b19 */
    II(0x100a6ab7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100a6abb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6abe, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100a6ac1, 0x5)   calld(0x1008b228, -0x1b89e);          /* call 0x1008b228 */
    II(0x100a6ac6, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100a6ac9, 0x5)   mov(memb_a32(ds, eax + ebp - 0x74), 0x1); /* mov byte [eax+ebp-0x74], 0x1 */
    II(0x100a6ace, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a6ad1, 0x3)   add(edx, 0x17);                       /* add edx, 0x17 */
    II(0x100a6ad4, 0x3)   lea(eax, ebp - 0x80);                 /* lea eax, [ebp-0x80] */
    II(0x100a6ad7, 0x5)   calld(0x10075e64, -0x30c78);          /* call 0x10075e64 */
    II(0x100a6adc, 0x1)   pushd(eax);                           /* push eax */
    II(0x100a6add, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x4));    /* mov ecx, [ebp-0x4] */
    II(0x100a6ae0, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100a6ae4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6ae7, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100a6aea, 0x5)   calld(0x1008b228, -0x1b8c7);          /* call 0x1008b228 */
    II(0x100a6aef, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100a6af2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6af5, 0x5)   calld(0x100a6125, -0x9d5);            /* call 0x100a6125 */
    II(0x100a6afa, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100a6afd, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100a6b01, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6b04, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100a6b07, 0x5)   calld(0x1008b228, -0x1b8e4);          /* call 0x1008b228 */
    II(0x100a6b0c, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100a6b0f, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100a6b14, 0x5)   calld(0x100a4a73, -0x20a6);           /* call 0x100a4a73 */
l_0x100a6b19:
    II(0x100a6b19, 0x5)   jmpd(0x100a69bf, -0x15f);             /* jmp 0x100a69bf */
l_0x100a6b1e:
    II(0x100a6b1e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6b21, 0x4)   mov(memb_a32(ds, eax + 0x1b), 0);     /* mov byte [eax+0x1b], 0x0 */
l_0x100a6b25:
    II(0x100a6b25, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6b28, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100a6b2b, 0x5)   calld(my_2_get_count, -0x1b7c8);      /* call 0x1008b368 */
    II(0x100a6b30, 0x1)   cwde();                               /* cwde */
    II(0x100a6b31, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a6b33, 0x2)   jnzd(0x100a6b86, 0x51);               /* jnz 0x100a6b86 */
    II(0x100a6b35, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a6b37, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6b3a, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x100a6b3d, 0x5)   calld(0x1013ad71, 0x9422f);           /* call 0x1013ad71 */
    II(0x100a6b42, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a6b44, 0x2)   jzd(0x100a6b6c, 0x26);                /* jz 0x100a6b6c */
    II(0x100a6b46, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6b49, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x100a6b4c, 0x5)   calld(0x1008af28, -0x1bc29);          /* call 0x1008af28 */
    II(0x100a6b51, 0x6)   mov(memd_a32(ss, ebp - 0x84), eax);   /* mov [ebp+0xffffff7c], eax */
//    II(0x100a6b57, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x100a6b5d, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x100a6b60, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
//    II(0x100a6b63, 0x6)   mov(eax, memd_a32(ss, ebp - 0x84));   /* mov eax, [ebp+0xffffff7c] */
    II(0x100a6b69, 0x3)   calld_abs(memd_a32(ds, ebx + 0x38));  /* call dword near [ebx+0x38] */
l_0x100a6b6c:
    II(0x100a6b6c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a6b6e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6b71, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x100a6b74, 0x5)   calld(0x1008afe4, -0x1bb95);          /* call 0x1008afe4 */
    II(0x100a6b79, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a6b7c, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100a6b81, 0x5)   calld(0x100a5e27, -0xd5f);            /* call 0x100a5e27 */
l_0x100a6b86:
    II(0x100a6b86, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a6b88, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a6b89, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a6b8a, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a6b8b, 0x1)   popd(edx);                            /* pop edx */
    II(0x100a6b8c, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a6b8d, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a6b8e, 0x1)   retd();                               /* ret */
FUNC_END

