FUNC_BEGIN(0x10115b60, 0x58ff8b1e07ba1156, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0xe8, 0x1, 0x5, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xf0, 0x88, 0x55, 0xfc, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xf4, 0x8b, 0x45, 0xf0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0xf, 0x84, 0xc6, 0, 0, 0, 0xb8, 0x15, 0, 0, 0, 0xe8, 0x63, 0x2, 0x5, 0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe8, 0x83, 0x7d, 0xe8, 0, 0x74, 0x26, 0x8d, 0x55, 0xf4, 0x8d, 0x45, 0xe4, 0xe8, 0xad, 0x2, 0xf6, 0xff, 0x89, 0xc1, 0x8b, 0x5d, 0xf8, 0x8b, 0x55, 0xf0, 0x8b, 0x45, 0xec, 0xe8, 0x1, 0x1b, 0, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xdc, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xdc, 0x8b, 0x55, 0xdc, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x6b, 0xc0, 0xa, 0xbb, 0xbc, 0x52, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0x4b, 0x20, 0, 0, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x6b, 0xd0, 0xa, 0xb8, 0xbc, 0x52, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0x89, 0xf, 0xf6, 0xff, 0x98, 0x83, 0xf8, 0x32, 0x7e, 0x31, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x6b, 0xc0, 0xa, 0xbb, 0xbc, 0x52, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0x49, 0x20, 0, 0, 0x31, 0xdb, 0x8a, 0x1d, 0xda, 0x37, 0x1c, 0x10, 0x6b, 0xd3, 0xa, 0xbb, 0xbc, 0x52, 0x1c, 0x10, 0x1, 0xd3, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xce, 0x1f, 0, 0, 0xe8, 0xbd, 0x4d, 0xfb, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0xf, 0xbe, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0xe8, 0xca, 0, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x10115b60, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x10115b65, 0x5)   calld(sys_check_available_stack_size, 0x501e8); /* call 0x10165d52 */
    II(0x10115b6a, 0x1)   pushd(esi);                           /* push esi */
    II(0x10115b6b, 0x1)   pushd(edi);                           /* push edi */
    II(0x10115b6c, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10115b6d, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10115b6f, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x10115b75, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10115b78, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x10115b7b, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x10115b7e, 0x3)   mov(memd_a32(ss, ebp - 0xc), ecx);    /* mov [ebp-0xc], ecx */
    II(0x10115b81, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10115b84, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10115b86, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10115b8b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10115b8d, 0x6)   jzd(0x10115c59, 0xc6);                /* jz dword 0x10115c59 */
    II(0x10115b93, 0x5)   mov(eax, 0x15);                       /* mov eax, 0x15 */
    II(0x10115b98, 0x5)   calld(sys_new, 0x50263);              /* call 0x10165e00 */
    II(0x10115b9d, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x10115ba0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10115ba3, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10115ba6, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0);     /* cmp dword [ebp-0x18], 0x0 */
    II(0x10115baa, 0x2)   jzd(0x10115bd2, 0x26);                /* jz 0x10115bd2 */
    II(0x10115bac, 0x3)   lea(edx, ebp - 0xc);                  /* lea edx, [ebp-0xc] */
    II(0x10115baf, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10115bb2, 0x5)   calld(0x10075e64, -0x9fd53);          /* call 0x10075e64 */
    II(0x10115bb7, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x10115bb9, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x10115bbc, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10115bbf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10115bc2, 0x5)   calld(0x101176c8, 0x1b01);            /* call 0x101176c8 */
    II(0x10115bc7, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x10115bca, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10115bcd, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x10115bd0, 0x2)   jmpd(0x10115bd8, 0x6);                /* jmp 0x10115bd8 */
l_0x10115bd2:
    II(0x10115bd2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10115bd5, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
l_0x10115bd8:
    II(0x10115bd8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x24));   /* mov edx, [ebp-0x24] */
    II(0x10115bdb, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10115bdd, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x10115be2, 0x3)   imul(eax, eax, 0xa);                  /* imul eax, eax, 0xa */
    II(0x10115be5, 0x5)   mov(ebx, 0x101c52bc);                 /* mov ebx, 0x101c52bc */
    II(0x10115bea, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10115bec, 0x5)   calld(0x10117c3c, 0x204b);            /* call 0x10117c3c */
    II(0x10115bf1, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10115bf3, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x10115bf8, 0x3)   imul(edx, eax, 0xa);                  /* imul edx, eax, 0xa */
    II(0x10115bfb, 0x5)   mov(eax, 0x101c52bc);                 /* mov eax, 0x101c52bc */
    II(0x10115c00, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10115c02, 0x5)   calld(0x10076b90, -0x9f077);          /* call 0x10076b90 */
    II(0x10115c07, 0x1)   cwde();                               /* cwde */
    II(0x10115c08, 0x3)   cmp(eax, 0x32);                       /* cmp eax, 0x32 */
    II(0x10115c0b, 0x2)   jled(0x10115c3e, 0x31);               /* jle 0x10115c3e */
    II(0x10115c0d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10115c0f, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x10115c14, 0x3)   imul(eax, eax, 0xa);                  /* imul eax, eax, 0xa */
    II(0x10115c17, 0x5)   mov(ebx, 0x101c52bc);                 /* mov ebx, 0x101c52bc */
    II(0x10115c1c, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10115c1e, 0x5)   calld(0x10117c6c, 0x2049);            /* call 0x10117c6c */
    II(0x10115c23, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10115c25, 0x6)   mov(bl, memb_a32(ds, 0x101c37da));    /* mov bl, [0x101c37da] */
    II(0x10115c2b, 0x3)   imul(edx, ebx, 0xa);                  /* imul edx, ebx, 0xa */
    II(0x10115c2e, 0x5)   mov(ebx, 0x101c52bc);                 /* mov ebx, 0x101c52bc */
    II(0x10115c33, 0x2)   add(ebx, edx);                        /* add ebx, edx */
    II(0x10115c35, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10115c37, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10115c39, 0x5)   calld(0x10117c0c, 0x1fce);            /* call 0x10117c0c */
l_0x10115c3e:
    II(0x10115c3e, 0x5)   calld(0x100caa00, -0x4b243);          /* call 0x100caa00 */
    II(0x10115c43, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10115c48, 0x1)   pushd(eax);                           /* push eax */
    II(0x10115c49, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10115c4b, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10115c4d, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x4));  /* movsx edx, byte [ebp-0x4] */
    II(0x10115c51, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10115c54, 0x5)   calld(0x10115d23, 0xca);              /* call 0x10115d23 */
l_0x10115c59:
    II(0x10115c59, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10115c5b, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10115c5c, 0x1)   popd(edi);                            /* pop edi */
    II(0x10115c5d, 0x1)   popd(esi);                            /* pop esi */
    II(0x10115c5e, 0x1)   retd();                               /* ret */
FUNC_END

