FUNC_BEGIN(0x100c12cd, 0xece1859321a69e67, 0x20, ({0x68, 0xd4, 0, 0, 0, 0xe8, 0x7b, 0x4a, 0xa, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xbc, 0, 0, 0, 0x89, 0x45, 0xf0, 0x88, 0x55, 0xf4, 0x88, 0x5d, 0xf8, 0x88, 0x4d, 0xfc, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7f, 0xc, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xe9, 0xc5, 0xc, 0, 0, 0x8b, 0x45, 0xf0, 0x80, 0x78, 0xe, 0, 0x74, 0x8, 0x8b, 0x45, 0xf0, 0xe8, 0xd8, 0x9f, 0xff, 0xff, 0xb8, 0x4c, 0, 0, 0, 0xe8, 0xbb, 0x4c, 0xfb, 0xff, 0x83, 0xf8, 0x3, 0x7d, 0x4, 0xc6, 0x45, 0xfc, 0, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0xf, 0xbf, 0x45, 0xe8, 0x83, 0xf8, 0xa, 0xf, 0x8d, 0xab, 0, 0, 0, 0xf, 0xbf, 0x45, 0xe8, 0x6b, 0xc0, 0x13, 0x8a, 0x80, 0xf4, 0x34, 0x1c, 0x10, 0x3a, 0x45, 0xf4, 0x75, 0x12, 0xf, 0xbf, 0x45, 0xe8, 0x6b, 0xc0, 0x13, 0x8a, 0x80, 0xf5, 0x34, 0x1c, 0x10, 0x3a, 0x45, 0xf8, 0x74, 0x2, 0xeb, 0x12, 0xf, 0xbf, 0x45, 0xe8, 0x6b, 0xc0, 0x13, 0x8a, 0x80, 0xf6, 0x34, 0x1c, 0x10, 0x3a, 0x45, 0xfc, 0x74, 0x2, 0xeb, 0x16, 0xf, 0xbf, 0x45, 0xe8, 0x6b, 0xc0, 0x13, 0x66, 0x8b, 0x90, 0xe4, 0x34, 0x1c, 0x10, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x10, 0x74, 0x2, 0xeb, 0x54, 0xf, 0xbf, 0x45, 0xe8, 0x6b, 0xc0, 0x13, 0xba, 0xe4, 0x34, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xe4, 0xf, 0xbf, 0x45, 0xe8, 0x6b, 0xc0, 0x13, 0x66, 0xc7, 0x80, 0xe6, 0x34, 0x1c, 0x10, 0, 0, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0xf, 0xbf, 0x45, 0xe8, 0x83, 0xf8, 0xa, 0x7d, 0x10, 0xf, 0xbf, 0x45, 0xe8, 0x6b, 0xc0, 0x13, 0x66, 0xff, 0x80, 0xe6, 0x34, 0x1c, 0x10, 0xeb, 0xe1, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xec, 0xe9, 0xdf, 0xb, 0, 0, 0xe9, 0x42, 0xff, 0xff, 0xff, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0xc7, 0x45, 0xe8, 0x1, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0xf, 0xbf, 0x45, 0xe8, 0x83, 0xf8, 0xa, 0x7d, 0x26, 0xf, 0xbf, 0x45, 0xe0, 0x6b, 0xc0, 0x13, 0xf, 0xbf, 0x55, 0xe8, 0x6b, 0xd2, 0x13, 0x66, 0x8b, 0x80, 0xe6, 0x34, 0x1c, 0x10, 0x66, 0x3b, 0x82, 0xe6, 0x34, 0x1c, 0x10, 0x7d, 0x6, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xe0, 0xeb, 0xcb, 0xf, 0xbf, 0x45, 0xe0, 0x6b, 0xc0, 0x13, 0xba, 0xe4, 0x34, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0x3c, 0x7e, 0xff, 0xff, 0xf, 0xbf, 0x55, 0xe0, 0x6b, 0xd2, 0x13, 0x8a, 0x45, 0xf4, 0x88, 0x82, 0xf4, 0x34, 0x1c, 0x10, 0xf, 0xbf, 0x45, 0xe0, 0x6b, 0xc0, 0x13, 0x66, 0xc7, 0x80, 0xf2, 0x34, 0x1c, 0x10, 0, 0, 0xf, 0xbf, 0x55, 0xe0, 0x6b, 0xd2, 0x13, 0x8a, 0x45, 0xf8, 0x88, 0x82, 0xf5, 0x34, 0x1c, 0x10, 0xf, 0xbf, 0x55, 0xe0, 0x6b, 0xd2, 0x13, 0x8a, 0x45, 0xfc, 0x88, 0x82, 0xf6, 0x34, 0x1c, 0x10, 0xf, 0xbf, 0x55, 0xe0, 0x6b, 0xd2, 0x13, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0, 0x66, 0x89, 0x82, 0xe4, 0x34, 0x1c, 0x10, 0xf, 0xbf, 0x45, 0xe0, 0x6b, 0xc0, 0x13, 0x66, 0xc7, 0x80, 0xe6, 0x34, 0x1c, 0x10, 0, 0, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0xf, 0xbf, 0x45, 0xe8, 0x83, 0xf8, 0xa, 0x7d, 0x10, 0xf, 0xbf, 0x45, 0xe8, 0x6b, 0xc0, 0x13, 0x66, 0xff, 0x80, 0xe6, 0x34, 0x1c, 0x10, 0xeb, 0xe1, 0x80, 0x4d, 0xdc, 0x1, 0x8d, 0x45, 0xc8, 0xe8, 0x48, 0x7c, 0xff, 0xff, 0x89, 0x45, 0xc4, 0x80, 0x65, 0xdc, 0xfe, 0xf, 0xbe, 0x45, 0xf4, 0x1, 0xc0, 0x66, 0x8b, 0x80, 0xdc, 0x77, 0x1b, 0x10, 0x89, 0x45, 0xc0, 0x8d, 0x55, 0xb8, 0x8b, 0x45, 0xf0, 0xf, 0xbf, 0, 0xe8, 0x31, 0x6c, 0xfb, 0xff, 0x80, 0x7d, 0xf8, 0x1, 0x7e, 0x8, 0x8d, 0x45, 0xc8, 0xe8, 0x71, 0x7d, 0xff, 0xff, 0x80, 0x7d, 0xf8, 0x1, 0x7e, 0x26, 0x8b, 0x55, 0xcc, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x4d, 0xe8, 0x7, 0xf7, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xe0, 0x6b, 0xc0, 0x13, 0x8b, 0x90, 0xe8, 0x34, 0x1c, 0x10, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x57, 0xe8, 0xef, 0xf6, 0xff, 0xff, 0x80, 0x4d, 0xdc, 0x1, 0x8d, 0x45, 0xb4, 0xe8, 0x9c, 0x8c, 0xfc, 0xff, 0x89, 0x45, 0xb0, 0x80, 0x65, 0xdc, 0xfe, 0xc7, 0x45, 0xac, 0, 0, 0, 0, 0x80, 0x7d, 0xfc, 0, 0xf, 0x85, 0x9a, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x43, 0xe8, 0x91, 0x9a, 0, 0, 0x8d, 0x5d, 0xb4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xed, 0x99, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xb4, 0xe8, 0x73, 0x56, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb4, 0xe8, 0xe2, 0x97, 0x7, 0, 0x84, 0xc0, 0x74, 0x66, 0x8b, 0x45, 0xf0, 0xf, 0xbf, 0x18, 0xf, 0xbf, 0x55, 0xc0, 0x8d, 0x45, 0xb4, 0xe8, 0x53, 0x8b, 0xfc, 0xff, 0xe8, 0xc6, 0x8d, 0xfc, 0xff, 0xe8, 0x5b, 0xfc, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x44, 0x8b, 0x45, 0xac, 0xff, 0x45, 0xac, 0xf, 0xbf, 0x45, 0xe0, 0x6b, 0xc0, 0x13, 0xba, 0xe4, 0x34, 0x1c, 0x10, 0x1, 0xd0, 0x50, 0x8d, 0x45, 0xc8, 0x50, 0x8d, 0x4d, 0xb8, 0xf, 0xbe, 0x5d, 0xf8, 0x8d, 0x55, 0xa8, 0x8d, 0x45, 0xb4, 0xe8, 0x1a, 0x8b, 0xfc, 0xff, 0xe8, 0x80, 0x78, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xb4, 0xe8, 0xb, 0x8b, 0xfc, 0xff, 0xe8, 0x7e, 0x8d, 0xfc, 0xff, 0xe8, 0x65, 0xf7, 0xff, 0xff, 0xeb, 0x84, 0xe9, 0x1e, 0x3, 0, 0, 0xb8, 0x4c, 0, 0, 0, 0xe8, 0xd4, 0x49, 0xfb, 0xff, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0xc1, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x43, 0xe8, 0xe4, 0x99, 0, 0, 0x8d, 0x5d, 0xb4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x40, 0x99, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xb4, 0xe8, 0xc6, 0x55, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb4, 0xe8, 0x35, 0x97, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0x89, 0, 0, 0, 0x8b, 0x45, 0xf0, 0xf, 0xbf, 0x18, 0xf, 0xbf, 0x55, 0xc0, 0x8d, 0x45, 0xb4, 0xe8, 0xa2, 0x8a, 0xfc, 0xff, 0xe8, 0x15, 0x8d, 0xfc, 0xff, 0xe8, 0xaa, 0xfb, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x64, 0x8b, 0x45, 0xac, 0xff, 0x45, 0xac, 0xf, 0xbf, 0x45, 0xe0, 0x6b, 0xc0, 0x13, 0xba, 0xe4, 0x34, 0x1c, 0x10, 0x1, 0xd0, 0x50, 0x8d, 0x45, 0xc8, 0x50, 0x8d, 0x4d, 0xb8, 0xf, 0xbe, 0x75, 0xf8, 0x8d, 0x45, 0xb4, 0xe8, 0x6c, 0x8a, 0xfc, 0xff, 0xe8, 0xdf, 0x8c, 0xfc, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8d, 0x45, 0xb4, 0xe8, 0x59, 0x8a, 0xfc, 0xff, 0xe8, 0xcc, 0x8c, 0xfc, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xa4, 0xe8, 0xfa, 0x53, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xb4, 0xe8, 0x3c, 0x8a, 0xfc, 0xff, 0xe8, 0xaf, 0x8c, 0xfc, 0xff, 0x89, 0xf3, 0xe8, 0x94, 0xf6, 0xff, 0xff, 0xe9, 0x5d, 0xff, 0xff, 0xff, 0xe9, 0x4a, 0x2, 0, 0, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x5c, 0x4c, 0xfb, 0xff, 0x8d, 0x5d, 0xa0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xd0, 0x4d, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xa0, 0xe8, 0x6, 0x55, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xa0, 0xe8, 0x75, 0x96, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0x8e, 0, 0, 0, 0x8b, 0x45, 0xf0, 0xf, 0xbf, 0x18, 0xf, 0xbf, 0x55, 0xc0, 0x8d, 0x45, 0xa0, 0xe8, 0xbe, 0x4c, 0xfb, 0xff, 0xe8, 0xef, 0xfa, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x17, 0x8d, 0x45, 0xa0, 0xe8, 0x79, 0x4c, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xf0, 0xf, 0xbf, 0, 0x39, 0xc2, 0x75, 0x2, 0xeb, 0x55, 0x8b, 0x45, 0xac, 0xff, 0x45, 0xac, 0xf, 0xbf, 0x45, 0xe0, 0x6b, 0xd0, 0x13, 0xb8, 0xe4, 0x34, 0x1c, 0x10, 0x1, 0xd0, 0x50, 0x8d, 0x45, 0xc8, 0x50, 0x8d, 0x4d, 0xb8, 0xf, 0xbe, 0x75, 0xf8, 0x8d, 0x45, 0xa0, 0xe8, 0x40, 0x4c, 0xfb, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8d, 0x45, 0xa0, 0xe8, 0x32, 0x4c, 0xfb, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0x9c, 0xe8, 0x30, 0x53, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xa0, 0xe8, 0x4e, 0x4c, 0xfb, 0xff, 0x89, 0xf3, 0xe8, 0xcf, 0xf5, 0xff, 0xff, 0xe9, 0x58, 0xff, 0xff, 0xff, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x9c, 0x4b, 0xfb, 0xff, 0x8d, 0x5d, 0xa0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x94, 0x4c, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xa0, 0xe8, 0x46, 0x54, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xa0, 0xe8, 0xb5, 0x95, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0x8e, 0, 0, 0, 0x8b, 0x45, 0xf0, 0xf, 0xbf, 0x18, 0xf, 0xbf, 0x55, 0xc0, 0x8d, 0x45, 0xa0, 0xe8, 0xfe, 0x4b, 0xfb, 0xff, 0xe8, 0x2f, 0xfa, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x17, 0x8d, 0x45, 0xa0, 0xe8, 0xb9, 0x4b, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xf0, 0xf, 0xbf, 0, 0x39, 0xc2, 0x75, 0x2, 0xeb, 0x55, 0x8b, 0x45, 0xac, 0xff, 0x45, 0xac, 0xf, 0xbf, 0x45, 0xe0, 0x6b, 0xd0, 0x13, 0xb8, 0xe4, 0x34, 0x1c, 0x10, 0x1, 0xd0, 0x50, 0x8d, 0x45, 0xc8, 0x50, 0x8d, 0x4d, 0xb8, 0xf, 0xbe, 0x75, 0xf8, 0x8d, 0x45, 0xa0, 0xe8, 0x80, 0x4b, 0xfb, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8d, 0x45, 0xa0, 0xe8, 0x72, 0x4b, 0xfb, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0x98, 0xe8, 0x70, 0x52, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xa0, 0xe8, 0x8e, 0x4b, 0xfb, 0xff, 0x89, 0xf3, 0xe8, 0xf, 0xf5, 0xff, 0xff, 0xe9, 0x58, 0xff, 0xff, 0xff, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0xdc, 0x4a, 0xfb, 0xff, 0x8d, 0x5d, 0xa0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xd4, 0x4b, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xa0, 0xe8, 0x86, 0x53, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xa0, 0xe8, 0xf5, 0x94, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0x8e, 0, 0, 0, 0x8b, 0x45, 0xf0, 0xf, 0xbf, 0x18, 0xf, 0xbf, 0x55, 0xc0, 0x8d, 0x45, 0xa0, 0xe8, 0x3e, 0x4b, 0xfb, 0xff, 0xe8, 0x6f, 0xf9, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x17, 0x8d, 0x45, 0xa0, 0xe8, 0xf9, 0x4a, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xf0, 0xf, 0xbf, 0, 0x39, 0xc2, 0x75, 0x2, 0xeb, 0x55, 0x8b, 0x45, 0xac, 0xff, 0x45, 0xac, 0xf, 0xbf, 0x45, 0xe0, 0x6b, 0xd0, 0x13, 0xb8, 0xe4, 0x34, 0x1c, 0x10, 0x1, 0xd0, 0x50, 0x8d, 0x45, 0xc8, 0x50, 0x8d, 0x4d, 0xb8, 0xf, 0xbe, 0x75, 0xf8, 0x8d, 0x45, 0xa0, 0xe8, 0xc0, 0x4a, 0xfb, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8d, 0x45, 0xa0, 0xe8, 0xb2, 0x4a, 0xfb, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0x94, 0xe8, 0xb0, 0x51, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xa0, 0xe8, 0xce, 0x4a, 0xfb, 0xff, 0x89, 0xf3, 0xe8, 0x4f, 0xf4, 0xff, 0xff, 0xe9, 0x58, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xa0, 0xe8, 0x50, 0x46, 0xfb, 0xff, 0x80, 0x7d, 0xf8, 0x1, 0x7e, 0x45, 0xf, 0xbf, 0x45, 0xe0, 0x6b, 0xd0, 0x13, 0xb8, 0xe4, 0x34, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0x35, 0xf8, 0xff, 0xff, 0x8d, 0x45, 0xc8, 0xe8, 0x2d, 0xf8, 0xff, 0xff, 0x8b, 0x55, 0xcc, 0xf, 0xbf, 0x45, 0xe0, 0x6b, 0xc0, 0x13, 0x8b, 0x80, 0xe8, 0x34, 0x1c, 0x10, 0xe8, 0x9d, 0xf7, 0xff, 0xff, 0x8b, 0x55, 0xd0, 0xf, 0xbf, 0x45, 0xe0, 0x6b, 0xc0, 0x13, 0x8b, 0x80, 0xec, 0x34, 0x1c, 0x10, 0xe8, 0x88, 0xf7, 0xff, 0xff, 0xc7, 0x45, 0x90, 0, 0, 0, 0, 0xc7, 0x45, 0x8c, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0x8c, 0xff, 0x45, 0x8c, 0xf, 0xbf, 0x45, 0x8c, 0x83, 0xf8, 0x5, 0x7d, 0x3b, 0x8b, 0x45, 0x8c, 0x8b, 0x55, 0xf0, 0x66, 0x3b, 0x2, 0x74, 0x19, 0xf, 0xbf, 0x45, 0x8c, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x13, 0x8b, 0x45, 0x90, 0xff, 0x45, 0x90, 0xf, 0xbf, 0xd0, 0x1, 0xd2, 0x8b, 0x45, 0x8c, 0x66, 0x89, 0x44, 0x2a, 0x84, 0xeb, 0xb6, 0x80, 0x7d, 0xf4, 0x7, 0xf, 0x85, 0x34, 0x1, 0, 0, 0x8b, 0x45, 0x90, 0x89, 0x45, 0x8c, 0xff, 0x4d, 0x8c, 0x66, 0x83, 0x7d, 0x8c, 0xff, 0x74, 0x29, 0xf, 0xbf, 0x45, 0x8c, 0x1, 0xc0, 0x8b, 0x54, 0x28, 0x82, 0xc1, 0xfa, 0x10, 0x69, 0xd2, 0x47, 0x2, 0, 0, 0xf, 0xbf, 0x45, 0x8c, 0xc1, 0xe0, 0x2, 0x8b, 0x92, 0xa7, 0xa6, 0x1c, 0x10, 0x89, 0x94, 0x28, 0x74, 0xff, 0xff, 0xff, 0xeb, 0xcd, 0xc7, 0x85, 0x70, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, 0xff, 0x85, 0x70, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0xd0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xe0, 0x6b, 0xc0, 0x13, 0xf, 0xbf, 0x95, 0x70, 0xff, 0xff, 0xff, 0xc1, 0xe2, 0x2, 0x8b, 0x80, 0xe8, 0x34, 0x1c, 0x10, 0x1, 0xd0, 0x8b, 0, 0x89, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, 0x89, 0x45, 0xe8, 0xc7, 0x85, 0x68, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x68, 0xff, 0xff, 0xff, 0xff, 0x85, 0x68, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x68, 0xff, 0xff, 0xff, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0x76, 0, 0, 0, 0xf, 0xbf, 0x55, 0xe8, 0xa1, 0x54, 0x94, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x2, 0x75, 0x44, 0x8b, 0x45, 0x90, 0x89, 0x45, 0x8c, 0xff, 0x4d, 0x8c, 0x66, 0x83, 0x7d, 0x8c, 0xff, 0x74, 0x21, 0xf, 0xbf, 0x45, 0x8c, 0xc1, 0xe0, 0x2, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x84, 0x28, 0x74, 0xff, 0xff, 0xff, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0xd5, 0xf, 0xbf, 0x45, 0x8c, 0x85, 0xc0, 0x7d, 0xb, 0x8b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x66, 0xc7, 0, 0, 0, 0x8b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x83, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x2, 0x66, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0x1, 0x45, 0xe8, 0xe9, 0x6b, 0xff, 0xff, 0xff, 0xe9, 0x11, 0xff, 0xff, 0xff, 0x8b, 0x45, 0x90, 0x89, 0x45, 0x8c, 0xff, 0x4d, 0x8c, 0x66, 0x83, 0x7d, 0x8c, 0xff, 0xf, 0x84, 0x35, 0x1, 0, 0, 0xf, 0xbf, 0x45, 0x8c, 0x1, 0xc0, 0x8b, 0x44, 0x28, 0x82, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0xa3, 0xa6, 0x1c, 0x10, 0x89, 0x85, 0x64, 0xff, 0xff, 0xff, 0x80, 0x7d, 0xf4, 0x6, 0x75, 0x21, 0xf, 0xbf, 0x45, 0x8c, 0x1, 0xc0, 0x8b, 0x44, 0x28, 0x82, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0xa7, 0xa6, 0x1c, 0x10, 0x89, 0x85, 0x64, 0xff, 0xff, 0xff, 0xeb, 0x2b, 0x80, 0x7d, 0xf4, 0x5, 0x74, 0x6, 0x80, 0x7d, 0xf4, 0x4, 0x75, 0x1f, 0xf, 0xbf, 0x45, 0x8c, 0x1, 0xc0, 0x8b, 0x44, 0x28, 0x82, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0xab, 0xa6, 0x1c, 0x10, 0x89, 0x85, 0x64, 0xff, 0xff, 0xff, 0xc7, 0x85, 0x70, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, 0xff, 0x85, 0x70, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0x94, 0, 0, 0, 0xf, 0xbf, 0x45, 0xe0, 0x6b, 0xc0, 0x13, 0xf, 0xbf, 0x95, 0x70, 0xff, 0xff, 0xff, 0xc1, 0xe2, 0x2, 0x8b, 0x80, 0xe8, 0x34, 0x1c, 0x10, 0x1, 0xd0, 0x8b, 0, 0x89, 0x85, 0x6c, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x70, 0xff, 0xff, 0xff, 0x8b, 0x95, 0x64, 0xff, 0xff, 0xff, 0x1, 0xc2, 0x89, 0x95, 0x60, 0xff, 0xff, 0xff, 0xc7, 0x85, 0x68, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x68, 0xff, 0xff, 0xff, 0xff, 0x85, 0x68, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x68, 0xff, 0xff, 0xff, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x7d, 0x32, 0x8b, 0x85, 0x60, 0xff, 0xff, 0xff, 0x80, 0x38, 0, 0x74, 0xa, 0x8b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x80, 0x48, 0x1, 0x80, 0x8b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x83, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x2, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x1, 0x85, 0x60, 0xff, 0xff, 0xff, 0xeb, 0xb3, 0xe9, 0x4d, 0xff, 0xff, 0xff, 0xe9, 0xbd, 0xfe, 0xff, 0xff, 0x80, 0x7d, 0xf4, 0x4, 0xf, 0x85, 0xc1, 0, 0, 0, 0xf, 0xbf, 0x45, 0xe0, 0x6b, 0xc0, 0x13, 0x8b, 0x80, 0xe8, 0x34, 0x1c, 0x10, 0x89, 0x85, 0x5c, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x43, 0xe8, 0x90, 0x93, 0, 0, 0x8d, 0x5d, 0xb4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xec, 0x92, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xb4, 0xe8, 0x72, 0x4f, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb4, 0xe8, 0xe1, 0x90, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0x7b, 0, 0, 0, 0x8d, 0x45, 0xb4, 0xe8, 0x58, 0x84, 0xfc, 0xff, 0xe8, 0xcb, 0x86, 0xfc, 0xff, 0x80, 0x78, 0x3d, 0x1a, 0x75, 0x63, 0xbb, 0x4, 0, 0, 0, 0x8d, 0x95, 0x58, 0xff, 0xff, 0xff, 0x8d, 0x45, 0xb4, 0xe8, 0x3a, 0x84, 0xfc, 0xff, 0xe8, 0xa0, 0x71, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x85, 0x48, 0xff, 0xff, 0xff, 0xe8, 0xf1, 0x78, 0xfe, 0xff, 0x8d, 0x85, 0x48, 0xff, 0xff, 0xff, 0xe8, 0x85, 0x7b, 0xfc, 0xff, 0x98, 0xc1, 0xe0, 0x2, 0x8b, 0x95, 0x5c, 0xff, 0xff, 0xff, 0x1, 0xc2, 0x8d, 0x85, 0x48, 0xff, 0xff, 0xff, 0xe8, 0x3a, 0x7b, 0xfc, 0xff, 0x98, 0x1, 0xc0, 0x89, 0xc3, 0x8b, 0x2, 0x1, 0xd8, 0x80, 0x48, 0x1, 0x80, 0x8d, 0x85, 0x48, 0xff, 0xff, 0xff, 0xe8, 0xd1, 0x79, 0xfe, 0xff, 0x84, 0xc0, 0x75, 0xc2, 0xe9, 0x6b, 0xff, 0xff, 0xff, 0xc7, 0x85, 0x70, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, 0xff, 0x85, 0x70, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0x81, 0, 0, 0, 0xf, 0xbf, 0x45, 0xe0, 0x6b, 0xc0, 0x13, 0xf, 0xbf, 0x95, 0x70, 0xff, 0xff, 0xff, 0xc1, 0xe2, 0x2, 0x8b, 0x80, 0xe8, 0x34, 0x1c, 0x10, 0x1, 0xd0, 0x8b, 0, 0x89, 0x85, 0x6c, 0xff, 0xff, 0xff, 0xc7, 0x85, 0x68, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x68, 0xff, 0xff, 0xff, 0xff, 0x85, 0x68, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x68, 0xff, 0xff, 0xff, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x7d, 0x34, 0x8b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0xf, 0xbf, 0, 0xf6, 0xc4, 0x80, 0x74, 0xc, 0x8b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x80, 0x60, 0x1, 0x7f, 0xeb, 0xb, 0x8b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x66, 0xc7, 0, 0, 0, 0x8b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x83, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x2, 0xeb, 0xb1, 0xe9, 0x60, 0xff, 0xff, 0xff, 0x80, 0x7d, 0xf4, 0x3, 0x74, 0x6, 0x80, 0x7d, 0xf4, 0x2, 0x75, 0x2, 0xeb, 0x9, 0x8b, 0x45, 0xf0, 0x83, 0x78, 0x67, 0, 0x75, 0x5, 0xe9, 0xd1, 0, 0, 0, 0xc7, 0x85, 0x70, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, 0xff, 0x85, 0x70, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0xa6, 0, 0, 0, 0xc7, 0x85, 0x68, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x68, 0xff, 0xff, 0xff, 0xff, 0x85, 0x68, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x68, 0xff, 0xff, 0xff, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x7d, 0x7a, 0xf, 0xbf, 0x45, 0xe0, 0x6b, 0xc0, 0x13, 0xf, 0xbf, 0x95, 0x70, 0xff, 0xff, 0xff, 0xc1, 0xe2, 0x2, 0x8b, 0x80, 0xe8, 0x34, 0x1c, 0x10, 0x1, 0xd0, 0xf, 0xbf, 0x95, 0x68, 0xff, 0xff, 0xff, 0x1, 0xd2, 0x8b, 0, 0x1, 0xd0, 0xf, 0xbf, 0x95, 0x70, 0xff, 0xff, 0xff, 0xc1, 0xe2, 0x2, 0x89, 0xd3, 0x8b, 0x55, 0xf0, 0x8b, 0x52, 0x67, 0x1, 0xda, 0xf, 0xbf, 0x9d, 0x68, 0xff, 0xff, 0xff, 0x8b, 0x12, 0x1, 0xda, 0x66, 0xf, 0xbe, 0x12, 0x66, 0x1, 0x10, 0xf, 0xbf, 0x45, 0xe0, 0x6b, 0xc0, 0x13, 0xf, 0xbf, 0x95, 0x70, 0xff, 0xff, 0xff, 0xc1, 0xe2, 0x2, 0x8b, 0x80, 0xec, 0x34, 0x1c, 0x10, 0x1, 0xd0, 0xf, 0xbf, 0x95, 0x68, 0xff, 0xff, 0xff, 0x1, 0xd2, 0x8b, 0, 0x1, 0xd0, 0x66, 0xff, 0, 0xe9, 0x6b, 0xff, 0xff, 0xff, 0xe9, 0x3b, 0xff, 0xff, 0xff, 0x80, 0x7d, 0xf4, 0x3, 0xf, 0x84, 0xda, 0, 0, 0, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x43, 0xe8, 0x3f, 0x91, 0, 0, 0x8d, 0x5d, 0xb4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x9b, 0x90, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xb4, 0xe8, 0x21, 0x4d, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb4, 0xe8, 0x90, 0x8e, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0xa7, 0, 0, 0, 0x8d, 0x45, 0xb4, 0xe8, 0x7, 0x82, 0xfc, 0xff, 0xe8, 0x7a, 0x84, 0xfc, 0xff, 0x89, 0x85, 0x44, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x44, 0xff, 0xff, 0xff, 0x66, 0x83, 0x78, 0x8, 0x29, 0x74, 0xd, 0x8b, 0x85, 0x44, 0xff, 0xff, 0xff, 0x66, 0x83, 0x78, 0x8, 0x2a, 0x75, 0x75, 0xf, 0xbf, 0x45, 0xe0, 0x6b, 0xc0, 0x13, 0x8b, 0x95, 0x44, 0xff, 0xff, 0xff, 0x8b, 0x52, 0x18, 0xc1, 0xfa, 0x10, 0xc1, 0xe2, 0x2, 0x8b, 0x80, 0xe8, 0x34, 0x1c, 0x10, 0x1, 0xd0, 0x8b, 0x95, 0x44, 0xff, 0xff, 0xff, 0x8b, 0x52, 0x1a, 0xc1, 0xfa, 0x10, 0x1, 0xd2, 0x8b, 0, 0x1, 0xc2, 0x8b, 0x85, 0x44, 0xff, 0xff, 0xff, 0xe8, 0xeb, 0x42, 0xfb, 0xff, 0x66, 0x8b, 0x40, 0xe, 0x66, 0x1, 0x2, 0xf, 0xbf, 0x55, 0xe0, 0x6b, 0xd2, 0x13, 0x8b, 0x85, 0x44, 0xff, 0xff, 0xff, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x8b, 0x92, 0xec, 0x34, 0x1c, 0x10, 0x1, 0xd0, 0x8b, 0x95, 0x44, 0xff, 0xff, 0xff, 0x8b, 0x52, 0x1a, 0xc1, 0xfa, 0x10, 0x1, 0xd2, 0x8b, 0, 0x1, 0xd0, 0x66, 0xff, 0, 0xe9, 0x3f, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xe0, 0x6b, 0xc0, 0x13, 0xba, 0xe4, 0x34, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xec, 0x31, 0xd2, 0x8d, 0x45, 0xb4, 0xe8, 0xa1, 0x6e, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0xce, 0x71, 0xff, 0xff, 0xeb, 0x14, 0x31, 0xd2, 0x8d, 0x45, 0xb4, 0xe8, 0x8b, 0x6e, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0xb8, 0x71, 0xff, 0xff, 0x8b, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x100c12cd, 0x5)   pushd(0xd4);                          /* push dword 0xd4 */
    II(0x100c12d2, 0x5)   calld(sys_check_available_stack_size, 0xa4a7b); /* call 0x10165d52 */
    II(0x100c12d7, 0x1)   pushd(esi);                           /* push esi */
    II(0x100c12d8, 0x1)   pushd(edi);                           /* push edi */
    II(0x100c12d9, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100c12da, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100c12dc, 0x6)   sub(esp, 0xbc);                       /* sub esp, 0xbc */
    II(0x100c12e2, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100c12e5, 0x3)   mov(memb_a32(ss, ebp - 0xc), dl);     /* mov [ebp-0xc], dl */
    II(0x100c12e8, 0x3)   mov(memb_a32(ss, ebp - 0x8), bl);     /* mov [ebp-0x8], bl */
    II(0x100c12eb, 0x3)   mov(memb_a32(ss, ebp - 0x4), cl);     /* mov [ebp-0x4], cl */
    II(0x100c12ee, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x100c12f3, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c12f6, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c12f8, 0x2)   jgd(0x100c1306, 0xc);                 /* jg 0x100c1306 */
    II(0x100c12fa, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x100c1301, 0x5)   jmpd(0x100c1fcb, 0xcc5);              /* jmp 0x100c1fcb */
l_0x100c1306:
    II(0x100c1306, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c1309, 0x4)   cmp(memb_a32(ds, eax + 0xe), 0);      /* cmp byte [eax+0xe], 0x0 */
    II(0x100c130d, 0x2)   jzd(0x100c1317, 0x8);                 /* jz 0x100c1317 */
    II(0x100c130f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c1312, 0x5)   calld(0x100bb2ef, -0x6028);           /* call 0x100bb2ef */
l_0x100c1317:
    II(0x100c1317, 0x5)   mov(eax, 0x4c);                       /* mov eax, 0x4c */
    II(0x100c131c, 0x5)   calld(0x10075fdc, -0x4b345);          /* call 0x10075fdc */
    II(0x100c1321, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x100c1324, 0x2)   jged(0x100c132a, 0x4);                /* jge 0x100c132a */
    II(0x100c1326, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0);      /* mov byte [ebp-0x4], 0x0 */
l_0x100c132a:
    II(0x100c132a, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100c1331, 0x2)   jmpd(0x100c1339, 0x6);                /* jmp 0x100c1339 */
l_0x100c1333:
    II(0x100c1333, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100c1336, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
l_0x100c1339:
    II(0x100c1339, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100c133d, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x100c1340, 0x6)   jged(0x100c13f1, 0xab);               /* jge dword 0x100c13f1 */
    II(0x100c1346, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100c134a, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c134d, 0x6)   mov(al, memb_a32(ds, eax + 0x101c34f4)); /* mov al, [eax+0x101c34f4] */
    II(0x100c1353, 0x3)   cmp(al, memb_a32(ss, ebp - 0xc));     /* cmp al, [ebp-0xc] */
    II(0x100c1356, 0x2)   jnzd(0x100c136a, 0x12);               /* jnz 0x100c136a */
    II(0x100c1358, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100c135c, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c135f, 0x6)   mov(al, memb_a32(ds, eax + 0x101c34f5)); /* mov al, [eax+0x101c34f5] */
    II(0x100c1365, 0x3)   cmp(al, memb_a32(ss, ebp - 0x8));     /* cmp al, [ebp-0x8] */
    II(0x100c1368, 0x2)   jzd(0x100c136c, 0x2);                 /* jz 0x100c136c */
l_0x100c136a:
    II(0x100c136a, 0x2)   jmpd(0x100c137e, 0x12);               /* jmp 0x100c137e */
l_0x100c136c:
    II(0x100c136c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100c1370, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c1373, 0x6)   mov(al, memb_a32(ds, eax + 0x101c34f6)); /* mov al, [eax+0x101c34f6] */
    II(0x100c1379, 0x3)   cmp(al, memb_a32(ss, ebp - 0x4));     /* cmp al, [ebp-0x4] */
    II(0x100c137c, 0x2)   jzd(0x100c1380, 0x2);                 /* jz 0x100c1380 */
l_0x100c137e:
    II(0x100c137e, 0x2)   jmpd(0x100c1396, 0x16);               /* jmp 0x100c1396 */
l_0x100c1380:
    II(0x100c1380, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100c1384, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c1387, 0x7)   mov(dx, memw_a32(ds, eax + 0x101c34e4)); /* mov dx, [eax+0x101c34e4] */
    II(0x100c138e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c1391, 0x3)   cmp(dx, memw_a32(ds, eax));           /* cmp dx, [eax] */
    II(0x100c1394, 0x2)   jzd(0x100c1398, 0x2);                 /* jz 0x100c1398 */
l_0x100c1396:
    II(0x100c1396, 0x2)   jmpd(0x100c13ec, 0x54);               /* jmp 0x100c13ec */
l_0x100c1398:
    II(0x100c1398, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100c139c, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c139f, 0x5)   mov(edx, 0x101c34e4);                 /* mov edx, 0x101c34e4 */
    II(0x100c13a4, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100c13a6, 0x3)   mov(memd_a32(ss, ebp - 0x1c), edx);   /* mov [ebp-0x1c], edx */
    II(0x100c13a9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100c13ad, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c13b0, 0x9)   mov(memw_a32(ds, eax + 0x101c34e6), 0); /* mov word [eax+0x101c34e6], 0x0 */
    II(0x100c13b9, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100c13c0, 0x2)   jmpd(0x100c13c8, 0x6);                /* jmp 0x100c13c8 */
l_0x100c13c2:
    II(0x100c13c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100c13c5, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
l_0x100c13c8:
    II(0x100c13c8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100c13cc, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x100c13cf, 0x2)   jged(0x100c13e1, 0x10);               /* jge 0x100c13e1 */
    II(0x100c13d1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100c13d5, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c13d8, 0x7)   inc(memw_a32(ds, eax + 0x101c34e6));  /* inc word [eax+0x101c34e6] */
    II(0x100c13df, 0x2)   jmpd(0x100c13c2, -0x1f);              /* jmp 0x100c13c2 */
l_0x100c13e1:
    II(0x100c13e1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100c13e4, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100c13e7, 0x5)   jmpd(0x100c1fcb, 0xbdf);              /* jmp 0x100c1fcb */
l_0x100c13ec:
    II(0x100c13ec, 0x5)   jmpd(0x100c1333, -0xbe);              /* jmp 0x100c1333 */
l_0x100c13f1:
    II(0x100c13f1, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x100c13f8, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x1);   /* mov dword [ebp-0x18], 0x1 */
    II(0x100c13ff, 0x2)   jmpd(0x100c1407, 0x6);                /* jmp 0x100c1407 */
l_0x100c1401:
    II(0x100c1401, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100c1404, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
l_0x100c1407:
    II(0x100c1407, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100c140b, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x100c140e, 0x2)   jged(0x100c1436, 0x26);               /* jge 0x100c1436 */
    II(0x100c1410, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c1414, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c1417, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100c141b, 0x3)   imul(edx, edx, 0x13);                 /* imul edx, edx, 0x13 */
    II(0x100c141e, 0x7)   mov(ax, memw_a32(ds, eax + 0x101c34e6)); /* mov ax, [eax+0x101c34e6] */
    II(0x100c1425, 0x7)   cmp(ax, memw_a32(ds, edx + 0x101c34e6)); /* cmp ax, [edx+0x101c34e6] */
    II(0x100c142c, 0x2)   jged(0x100c1434, 0x6);                /* jge 0x100c1434 */
    II(0x100c142e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100c1431, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
l_0x100c1434:
    II(0x100c1434, 0x2)   jmpd(0x100c1401, -0x35);              /* jmp 0x100c1401 */
l_0x100c1436:
    II(0x100c1436, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c143a, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c143d, 0x5)   mov(edx, 0x101c34e4);                 /* mov edx, 0x101c34e4 */
    II(0x100c1442, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c1444, 0x5)   calld(0x100b9285, -0x81c4);           /* call 0x100b9285 */
    II(0x100c1449, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x100c144d, 0x3)   imul(edx, edx, 0x13);                 /* imul edx, edx, 0x13 */
    II(0x100c1450, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100c1453, 0x6)   mov(memb_a32(ds, edx + 0x101c34f4), al); /* mov [edx+0x101c34f4], al */
    II(0x100c1459, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c145d, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c1460, 0x9)   mov(memw_a32(ds, eax + 0x101c34f2), 0); /* mov word [eax+0x101c34f2], 0x0 */
    II(0x100c1469, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x100c146d, 0x3)   imul(edx, edx, 0x13);                 /* imul edx, edx, 0x13 */
    II(0x100c1470, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100c1473, 0x6)   mov(memb_a32(ds, edx + 0x101c34f5), al); /* mov [edx+0x101c34f5], al */
    II(0x100c1479, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x100c147d, 0x3)   imul(edx, edx, 0x13);                 /* imul edx, edx, 0x13 */
    II(0x100c1480, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x100c1483, 0x6)   mov(memb_a32(ds, edx + 0x101c34f6), al); /* mov [edx+0x101c34f6], al */
    II(0x100c1489, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x100c148d, 0x3)   imul(edx, edx, 0x13);                 /* imul edx, edx, 0x13 */
    II(0x100c1490, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c1493, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100c1496, 0x7)   mov(memw_a32(ds, edx + 0x101c34e4), ax); /* mov [edx+0x101c34e4], ax */
    II(0x100c149d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c14a1, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c14a4, 0x9)   mov(memw_a32(ds, eax + 0x101c34e6), 0); /* mov word [eax+0x101c34e6], 0x0 */
    II(0x100c14ad, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100c14b4, 0x2)   jmpd(0x100c14bc, 0x6);                /* jmp 0x100c14bc */
l_0x100c14b6:
    II(0x100c14b6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100c14b9, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
l_0x100c14bc:
    II(0x100c14bc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100c14c0, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x100c14c3, 0x2)   jged(0x100c14d5, 0x10);               /* jge 0x100c14d5 */
    II(0x100c14c5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100c14c9, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c14cc, 0x7)   inc(memw_a32(ds, eax + 0x101c34e6));  /* inc word [eax+0x101c34e6] */
    II(0x100c14d3, 0x2)   jmpd(0x100c14b6, -0x1f);              /* jmp 0x100c14b6 */
l_0x100c14d5:
    II(0x100c14d5, 0x4)   or_(memb_a32(ss, ebp - 0x24), 0x1);   /* or byte [ebp-0x24], 0x1 */
    II(0x100c14d9, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c14dc, 0x5)   calld(my_ctor_0x101b5724, -0x83b8);   /* call 0x100b9129 */
    II(0x100c14e1, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x100c14e4, 0x4)   and_(memb_a32(ss, ebp - 0x24), -0x2 /* 0xfe */); /* and byte [ebp-0x24], 0xfe */
    II(0x100c14e8, 0x4)   movsx(eax, memb_a32(ss, ebp - 0xc));  /* movsx eax, byte [ebp-0xc] */
    II(0x100c14ec, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100c14ee, 0x7)   mov(ax, memw_a32(ds, eax + 0x101b77dc)); /* mov ax, [eax+0x101b77dc] */
    II(0x100c14f5, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x100c14f8, 0x3)   lea(edx, ebp - 0x48);                 /* lea edx, [ebp-0x48] */
    II(0x100c14fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c14fe, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100c1501, 0x5)   calld(0x10078137, -0x493cf);          /* call 0x10078137 */
    II(0x100c1506, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0x1);    /* cmp byte [ebp-0x8], 0x1 */
    II(0x100c150a, 0x2)   jled(0x100c1514, 0x8);                /* jle 0x100c1514 */
    II(0x100c150c, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c150f, 0x5)   calld(0x100b9285, -0x828f);           /* call 0x100b9285 */
l_0x100c1514:
    II(0x100c1514, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0x1);    /* cmp byte [ebp-0x8], 0x1 */
    II(0x100c1518, 0x2)   jled(0x100c1540, 0x26);               /* jle 0x100c1540 */
    II(0x100c151a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x34));   /* mov edx, [ebp-0x34] */
    II(0x100c151d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c1520, 0x3)   add(eax, 0x4d);                       /* add eax, 0x4d */
    II(0x100c1523, 0x5)   calld(0x100c0c2f, -0x8f9);            /* call 0x100c0c2f */
    II(0x100c1528, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c152c, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c152f, 0x6)   mov(edx, memd_a32(ds, eax + 0x101c34e8)); /* mov edx, [eax+0x101c34e8] */
    II(0x100c1535, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c1538, 0x3)   add(eax, 0x57);                       /* add eax, 0x57 */
    II(0x100c153b, 0x5)   calld(0x100c0c2f, -0x911);            /* call 0x100c0c2f */
l_0x100c1540:
    II(0x100c1540, 0x4)   or_(memb_a32(ss, ebp - 0x24), 0x1);   /* or byte [ebp-0x24], 0x1 */
    II(0x100c1544, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100c1547, 0x5)   calld(0x1008a1e8, -0x37364);          /* call 0x1008a1e8 */
    II(0x100c154c, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x100c154f, 0x4)   and_(memb_a32(ss, ebp - 0x24), -0x2 /* 0xfe */); /* and byte [ebp-0x24], 0xfe */
    II(0x100c1553, 0x7)   mov(memd_a32(ss, ebp - 0x54), 0);     /* mov dword [ebp-0x54], 0x0 */
    II(0x100c155a, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x100c155e, 0x6)   jnzd(0x100c15fe, 0x9a);               /* jnz dword 0x100c15fe */
    II(0x100c1564, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c1567, 0x3)   add(eax, 0x43);                       /* add eax, 0x43 */
    II(0x100c156a, 0x5)   calld(0x100cb000, 0x9a91);            /* call 0x100cb000 */
    II(0x100c156f, 0x3)   lea(ebx, ebp - 0x4c);                 /* lea ebx, [ebp-0x4c] */
    II(0x100c1572, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c1574, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100c1576, 0x5)   calld(0x100caf68, 0x99ed);            /* call 0x100caf68 */
    II(0x100c157b, 0x2)   jmpd(0x100c1585, 0x8);                /* jmp 0x100c1585 */
l_0x100c157d:
    II(0x100c157d, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100c1580, 0x5)   calld(0x10076bf8, -0x4a98d);          /* call 0x10076bf8 */
l_0x100c1585:
    II(0x100c1585, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c1587, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100c158a, 0x5)   calld(0x1013ad71, 0x797e2);           /* call 0x1013ad71 */
    II(0x100c158f, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c1591, 0x2)   jzd(0x100c15f9, 0x66);                /* jz 0x100c15f9 */
    II(0x100c1593, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c1596, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x100c1599, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x40)); /* movsx edx, word [ebp-0x40] */
    II(0x100c159d, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100c15a0, 0x5)   calld(0x1008a0f8, -0x374ad);          /* call 0x1008a0f8 */
    II(0x100c15a5, 0x5)   calld(0x1008a370, -0x3723a);          /* call 0x1008a370 */
    II(0x100c15aa, 0x5)   calld(0x100c120a, -0x3a5);            /* call 0x100c120a */
    II(0x100c15af, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c15b1, 0x2)   jzd(0x100c15f7, 0x44);                /* jz 0x100c15f7 */
    II(0x100c15b3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x100c15b6, 0x3)   inc(memd_a32(ss, ebp - 0x54));        /* inc dword [ebp-0x54] */
    II(0x100c15b9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c15bd, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c15c0, 0x5)   mov(edx, 0x101c34e4);                 /* mov edx, 0x101c34e4 */
    II(0x100c15c5, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c15c7, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c15c8, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c15cb, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c15cc, 0x3)   lea(ecx, ebp - 0x48);                 /* lea ecx, [ebp-0x48] */
    II(0x100c15cf, 0x4)   movsx(ebx, memb_a32(ss, ebp - 0x8));  /* movsx ebx, byte [ebp-0x8] */
    II(0x100c15d3, 0x3)   lea(edx, ebp - 0x58);                 /* lea edx, [ebp-0x58] */
    II(0x100c15d6, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100c15d9, 0x5)   calld(0x1008a0f8, -0x374e6);          /* call 0x1008a0f8 */
    II(0x100c15de, 0x5)   calld(0x100b8e63, -0x8780);           /* call 0x100b8e63 */
    II(0x100c15e3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c15e5, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100c15e8, 0x5)   calld(0x1008a0f8, -0x374f5);          /* call 0x1008a0f8 */
    II(0x100c15ed, 0x5)   calld(0x1008a370, -0x37282);          /* call 0x1008a370 */
    II(0x100c15f2, 0x5)   calld(0x100c0d5c, -0x89b);            /* call 0x100c0d5c */
l_0x100c15f7:
    II(0x100c15f7, 0x2)   jmpd(0x100c157d, -0x7c);              /* jmp 0x100c157d */
l_0x100c15f9:
    II(0x100c15f9, 0x5)   jmpd(0x100c191c, 0x31e);              /* jmp 0x100c191c */
l_0x100c15fe:
    II(0x100c15fe, 0x5)   mov(eax, 0x4c);                       /* mov eax, 0x4c */
    II(0x100c1603, 0x5)   calld(0x10075fdc, -0x4b62c);          /* call 0x10075fdc */
    II(0x100c1608, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100c160b, 0x6)   jged(0x100c16d2, 0xc1);               /* jge dword 0x100c16d2 */
    II(0x100c1611, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c1614, 0x3)   add(eax, 0x43);                       /* add eax, 0x43 */
    II(0x100c1617, 0x5)   calld(0x100cb000, 0x99e4);            /* call 0x100cb000 */
    II(0x100c161c, 0x3)   lea(ebx, ebp - 0x4c);                 /* lea ebx, [ebp-0x4c] */
    II(0x100c161f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c1621, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100c1623, 0x5)   calld(0x100caf68, 0x9940);            /* call 0x100caf68 */
    II(0x100c1628, 0x2)   jmpd(0x100c1632, 0x8);                /* jmp 0x100c1632 */
l_0x100c162a:
    II(0x100c162a, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100c162d, 0x5)   calld(0x10076bf8, -0x4aa3a);          /* call 0x10076bf8 */
l_0x100c1632:
    II(0x100c1632, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c1634, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100c1637, 0x5)   calld(0x1013ad71, 0x79735);           /* call 0x1013ad71 */
    II(0x100c163c, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c163e, 0x6)   jzd(0x100c16cd, 0x89);                /* jz dword 0x100c16cd */
    II(0x100c1644, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c1647, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x100c164a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x40)); /* movsx edx, word [ebp-0x40] */
    II(0x100c164e, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100c1651, 0x5)   calld(0x1008a0f8, -0x3755e);          /* call 0x1008a0f8 */
    II(0x100c1656, 0x5)   calld(0x1008a370, -0x372eb);          /* call 0x1008a370 */
    II(0x100c165b, 0x5)   calld(0x100c120a, -0x456);            /* call 0x100c120a */
    II(0x100c1660, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c1662, 0x2)   jzd(0x100c16c8, 0x64);                /* jz 0x100c16c8 */
    II(0x100c1664, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x100c1667, 0x3)   inc(memd_a32(ss, ebp - 0x54));        /* inc dword [ebp-0x54] */
    II(0x100c166a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c166e, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c1671, 0x5)   mov(edx, 0x101c34e4);                 /* mov edx, 0x101c34e4 */
    II(0x100c1676, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c1678, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c1679, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c167c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c167d, 0x3)   lea(ecx, ebp - 0x48);                 /* lea ecx, [ebp-0x48] */
    II(0x100c1680, 0x4)   movsx(esi, memb_a32(ss, ebp - 0x8));  /* movsx esi, byte [ebp-0x8] */
    II(0x100c1684, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100c1687, 0x5)   calld(0x1008a0f8, -0x37594);          /* call 0x1008a0f8 */
    II(0x100c168c, 0x5)   calld(0x1008a370, -0x37321);          /* call 0x1008a370 */
    II(0x100c1691, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100c1694, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100c1697, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100c169a, 0x5)   calld(0x1008a0f8, -0x375a7);          /* call 0x1008a0f8 */
    II(0x100c169f, 0x5)   calld(0x1008a370, -0x37334);          /* call 0x1008a370 */
    II(0x100c16a4, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100c16a7, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c16aa, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x100c16ad, 0x5)   calld(0x10076aac, -0x4ac06);          /* call 0x10076aac */
    II(0x100c16b2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c16b4, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100c16b7, 0x5)   calld(0x1008a0f8, -0x375c4);          /* call 0x1008a0f8 */
    II(0x100c16bc, 0x5)   calld(0x1008a370, -0x37351);          /* call 0x1008a370 */
    II(0x100c16c1, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100c16c3, 0x5)   calld(0x100c0d5c, -0x96c);            /* call 0x100c0d5c */
l_0x100c16c8:
    II(0x100c16c8, 0x5)   jmpd(0x100c162a, -0xa3);              /* jmp 0x100c162a */
l_0x100c16cd:
    II(0x100c16cd, 0x5)   jmpd(0x100c191c, 0x24a);              /* jmp 0x100c191c */
l_0x100c16d2:
    II(0x100c16d2, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100c16d7, 0x5)   calld(0x10076338, -0x4b3a4);          /* call 0x10076338 */
    II(0x100c16dc, 0x3)   lea(ebx, ebp - 0x60);                 /* lea ebx, [ebp-0x60] */
    II(0x100c16df, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c16e1, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100c16e3, 0x5)   calld(0x100764b8, -0x4b230);          /* call 0x100764b8 */
    II(0x100c16e8, 0x2)   jmpd(0x100c16f2, 0x8);                /* jmp 0x100c16f2 */
l_0x100c16ea:
    II(0x100c16ea, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c16ed, 0x5)   calld(0x10076bf8, -0x4aafa);          /* call 0x10076bf8 */
l_0x100c16f2:
    II(0x100c16f2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c16f4, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c16f7, 0x5)   calld(0x1013ad71, 0x79675);           /* call 0x1013ad71 */
    II(0x100c16fc, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c16fe, 0x6)   jzd(0x100c1792, 0x8e);                /* jz dword 0x100c1792 */
    II(0x100c1704, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c1707, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x100c170a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x40)); /* movsx edx, word [ebp-0x40] */
    II(0x100c170e, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c1711, 0x5)   calld(0x100763d4, -0x4b342);          /* call 0x100763d4 */
    II(0x100c1716, 0x5)   calld(0x100c120a, -0x511);            /* call 0x100c120a */
    II(0x100c171b, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c171d, 0x2)   jzd(0x100c1736, 0x17);                /* jz 0x100c1736 */
    II(0x100c171f, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c1722, 0x5)   calld(0x100763a0, -0x4b387);          /* call 0x100763a0 */
    II(0x100c1727, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c1729, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100c172c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c172f, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100c1732, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c1734, 0x2)   jnzd(0x100c1738, 0x2);                /* jnz 0x100c1738 */
l_0x100c1736:
    II(0x100c1736, 0x2)   jmpd(0x100c178d, 0x55);               /* jmp 0x100c178d */
l_0x100c1738:
    II(0x100c1738, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x100c173b, 0x3)   inc(memd_a32(ss, ebp - 0x54));        /* inc dword [ebp-0x54] */
    II(0x100c173e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c1742, 0x3)   imul(edx, eax, 0x13);                 /* imul edx, eax, 0x13 */
    II(0x100c1745, 0x5)   mov(eax, 0x101c34e4);                 /* mov eax, 0x101c34e4 */
    II(0x100c174a, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c174c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c174d, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c1750, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c1751, 0x3)   lea(ecx, ebp - 0x48);                 /* lea ecx, [ebp-0x48] */
    II(0x100c1754, 0x4)   movsx(esi, memb_a32(ss, ebp - 0x8));  /* movsx esi, byte [ebp-0x8] */
    II(0x100c1758, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c175b, 0x5)   calld(0x100763a0, -0x4b3c0);          /* call 0x100763a0 */
    II(0x100c1760, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100c1763, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100c1766, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c1769, 0x5)   calld(0x100763a0, -0x4b3ce);          /* call 0x100763a0 */
    II(0x100c176e, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100c1771, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c1774, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100c1777, 0x5)   calld(0x10076aac, -0x4acd0);          /* call 0x10076aac */
    II(0x100c177c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c177e, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c1781, 0x5)   calld(0x100763d4, -0x4b3b2);          /* call 0x100763d4 */
    II(0x100c1786, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100c1788, 0x5)   calld(0x100c0d5c, -0xa31);            /* call 0x100c0d5c */
l_0x100c178d:
    II(0x100c178d, 0x5)   jmpd(0x100c16ea, -0xa8);              /* jmp 0x100c16ea */
l_0x100c1792:
    II(0x100c1792, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100c1797, 0x5)   calld(0x10076338, -0x4b464);          /* call 0x10076338 */
    II(0x100c179c, 0x3)   lea(ebx, ebp - 0x60);                 /* lea ebx, [ebp-0x60] */
    II(0x100c179f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c17a1, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100c17a3, 0x5)   calld(0x1007643c, -0x4b36c);          /* call 0x1007643c */
    II(0x100c17a8, 0x2)   jmpd(0x100c17b2, 0x8);                /* jmp 0x100c17b2 */
l_0x100c17aa:
    II(0x100c17aa, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c17ad, 0x5)   calld(0x10076bf8, -0x4abba);          /* call 0x10076bf8 */
l_0x100c17b2:
    II(0x100c17b2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c17b4, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c17b7, 0x5)   calld(0x1013ad71, 0x795b5);           /* call 0x1013ad71 */
    II(0x100c17bc, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c17be, 0x6)   jzd(0x100c1852, 0x8e);                /* jz dword 0x100c1852 */
    II(0x100c17c4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c17c7, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x100c17ca, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x40)); /* movsx edx, word [ebp-0x40] */
    II(0x100c17ce, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c17d1, 0x5)   calld(0x100763d4, -0x4b402);          /* call 0x100763d4 */
    II(0x100c17d6, 0x5)   calld(0x100c120a, -0x5d1);            /* call 0x100c120a */
    II(0x100c17db, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c17dd, 0x2)   jzd(0x100c17f6, 0x17);                /* jz 0x100c17f6 */
    II(0x100c17df, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c17e2, 0x5)   calld(0x100763a0, -0x4b447);          /* call 0x100763a0 */
    II(0x100c17e7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c17e9, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100c17ec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c17ef, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100c17f2, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c17f4, 0x2)   jnzd(0x100c17f8, 0x2);                /* jnz 0x100c17f8 */
l_0x100c17f6:
    II(0x100c17f6, 0x2)   jmpd(0x100c184d, 0x55);               /* jmp 0x100c184d */
l_0x100c17f8:
    II(0x100c17f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x100c17fb, 0x3)   inc(memd_a32(ss, ebp - 0x54));        /* inc dword [ebp-0x54] */
    II(0x100c17fe, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c1802, 0x3)   imul(edx, eax, 0x13);                 /* imul edx, eax, 0x13 */
    II(0x100c1805, 0x5)   mov(eax, 0x101c34e4);                 /* mov eax, 0x101c34e4 */
    II(0x100c180a, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c180c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c180d, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c1810, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c1811, 0x3)   lea(ecx, ebp - 0x48);                 /* lea ecx, [ebp-0x48] */
    II(0x100c1814, 0x4)   movsx(esi, memb_a32(ss, ebp - 0x8));  /* movsx esi, byte [ebp-0x8] */
    II(0x100c1818, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c181b, 0x5)   calld(0x100763a0, -0x4b480);          /* call 0x100763a0 */
    II(0x100c1820, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100c1823, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100c1826, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c1829, 0x5)   calld(0x100763a0, -0x4b48e);          /* call 0x100763a0 */
    II(0x100c182e, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100c1831, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c1834, 0x3)   lea(eax, ebp - 0x68);                 /* lea eax, [ebp-0x68] */
    II(0x100c1837, 0x5)   calld(0x10076aac, -0x4ad90);          /* call 0x10076aac */
    II(0x100c183c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c183e, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c1841, 0x5)   calld(0x100763d4, -0x4b472);          /* call 0x100763d4 */
    II(0x100c1846, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100c1848, 0x5)   calld(0x100c0d5c, -0xaf1);            /* call 0x100c0d5c */
l_0x100c184d:
    II(0x100c184d, 0x5)   jmpd(0x100c17aa, -0xa8);              /* jmp 0x100c17aa */
l_0x100c1852:
    II(0x100c1852, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x100c1857, 0x5)   calld(0x10076338, -0x4b524);          /* call 0x10076338 */
    II(0x100c185c, 0x3)   lea(ebx, ebp - 0x60);                 /* lea ebx, [ebp-0x60] */
    II(0x100c185f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c1861, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100c1863, 0x5)   calld(0x1007643c, -0x4b42c);          /* call 0x1007643c */
    II(0x100c1868, 0x2)   jmpd(0x100c1872, 0x8);                /* jmp 0x100c1872 */
l_0x100c186a:
    II(0x100c186a, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c186d, 0x5)   calld(0x10076bf8, -0x4ac7a);          /* call 0x10076bf8 */
l_0x100c1872:
    II(0x100c1872, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c1874, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c1877, 0x5)   calld(0x1013ad71, 0x794f5);           /* call 0x1013ad71 */
    II(0x100c187c, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c187e, 0x6)   jzd(0x100c1912, 0x8e);                /* jz dword 0x100c1912 */
    II(0x100c1884, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c1887, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x100c188a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x40)); /* movsx edx, word [ebp-0x40] */
    II(0x100c188e, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c1891, 0x5)   calld(0x100763d4, -0x4b4c2);          /* call 0x100763d4 */
    II(0x100c1896, 0x5)   calld(0x100c120a, -0x691);            /* call 0x100c120a */
    II(0x100c189b, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c189d, 0x2)   jzd(0x100c18b6, 0x17);                /* jz 0x100c18b6 */
    II(0x100c189f, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c18a2, 0x5)   calld(0x100763a0, -0x4b507);          /* call 0x100763a0 */
    II(0x100c18a7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c18a9, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100c18ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c18af, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100c18b2, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100c18b4, 0x2)   jnzd(0x100c18b8, 0x2);                /* jnz 0x100c18b8 */
l_0x100c18b6:
    II(0x100c18b6, 0x2)   jmpd(0x100c190d, 0x55);               /* jmp 0x100c190d */
l_0x100c18b8:
    II(0x100c18b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x100c18bb, 0x3)   inc(memd_a32(ss, ebp - 0x54));        /* inc dword [ebp-0x54] */
    II(0x100c18be, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c18c2, 0x3)   imul(edx, eax, 0x13);                 /* imul edx, eax, 0x13 */
    II(0x100c18c5, 0x5)   mov(eax, 0x101c34e4);                 /* mov eax, 0x101c34e4 */
    II(0x100c18ca, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c18cc, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c18cd, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c18d0, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c18d1, 0x3)   lea(ecx, ebp - 0x48);                 /* lea ecx, [ebp-0x48] */
    II(0x100c18d4, 0x4)   movsx(esi, memb_a32(ss, ebp - 0x8));  /* movsx esi, byte [ebp-0x8] */
    II(0x100c18d8, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c18db, 0x5)   calld(0x100763a0, -0x4b540);          /* call 0x100763a0 */
    II(0x100c18e0, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100c18e3, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100c18e6, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c18e9, 0x5)   calld(0x100763a0, -0x4b54e);          /* call 0x100763a0 */
    II(0x100c18ee, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100c18f1, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c18f4, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x100c18f7, 0x5)   calld(0x10076aac, -0x4ae50);          /* call 0x10076aac */
    II(0x100c18fc, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c18fe, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c1901, 0x5)   calld(0x100763d4, -0x4b532);          /* call 0x100763d4 */
    II(0x100c1906, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100c1908, 0x5)   calld(0x100c0d5c, -0xbb1);            /* call 0x100c0d5c */
l_0x100c190d:
    II(0x100c190d, 0x5)   jmpd(0x100c186a, -0xa8);              /* jmp 0x100c186a */
l_0x100c1912:
    II(0x100c1912, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c1914, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x100c1917, 0x5)   calld(0x10075f6c, -0x4b9b0);          /* call 0x10075f6c */
l_0x100c191c:
    II(0x100c191c, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0x1);    /* cmp byte [ebp-0x8], 0x1 */
    II(0x100c1920, 0x2)   jled(0x100c1967, 0x45);               /* jle 0x100c1967 */
    II(0x100c1922, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c1926, 0x3)   imul(edx, eax, 0x13);                 /* imul edx, eax, 0x13 */
    II(0x100c1929, 0x5)   mov(eax, 0x101c34e4);                 /* mov eax, 0x101c34e4 */
    II(0x100c192e, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c1930, 0x5)   calld(0x100c116a, -0x7cb);            /* call 0x100c116a */
    II(0x100c1935, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c1938, 0x5)   calld(0x100c116a, -0x7d3);            /* call 0x100c116a */
    II(0x100c193d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x34));   /* mov edx, [ebp-0x34] */
    II(0x100c1940, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c1944, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c1947, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c34e8)); /* mov eax, [eax+0x101c34e8] */
    II(0x100c194d, 0x5)   calld(0x100c10ef, -0x863);            /* call 0x100c10ef */
    II(0x100c1952, 0x3)   mov(edx, memd_a32(ss, ebp - 0x30));   /* mov edx, [ebp-0x30] */
    II(0x100c1955, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c1959, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c195c, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c34ec)); /* mov eax, [eax+0x101c34ec] */
    II(0x100c1962, 0x5)   calld(0x100c10ef, -0x878);            /* call 0x100c10ef */
l_0x100c1967:
    II(0x100c1967, 0x7)   mov(memd_a32(ss, ebp - 0x70), 0);     /* mov dword [ebp-0x70], 0x0 */
    II(0x100c196e, 0x7)   mov(memd_a32(ss, ebp - 0x74), 0);     /* mov dword [ebp-0x74], 0x0 */
    II(0x100c1975, 0x2)   jmpd(0x100c197d, 0x6);                /* jmp 0x100c197d */
l_0x100c1977:
    II(0x100c1977, 0x3)   mov(eax, memd_a32(ss, ebp - 0x74));   /* mov eax, [ebp-0x74] */
    II(0x100c197a, 0x3)   inc(memd_a32(ss, ebp - 0x74));        /* inc dword [ebp-0x74] */
l_0x100c197d:
    II(0x100c197d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x74)); /* movsx eax, word [ebp-0x74] */
    II(0x100c1981, 0x3)   cmp(eax, 0x5);                        /* cmp eax, 0x5 */
    II(0x100c1984, 0x2)   jged(0x100c19c1, 0x3b);               /* jge 0x100c19c1 */
    II(0x100c1986, 0x3)   mov(eax, memd_a32(ss, ebp - 0x74));   /* mov eax, [ebp-0x74] */
    II(0x100c1989, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100c198c, 0x3)   cmp(ax, memw_a32(ds, edx));           /* cmp ax, [edx] */
    II(0x100c198f, 0x2)   jzd(0x100c19aa, 0x19);                /* jz 0x100c19aa */
    II(0x100c1991, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x74)); /* movsx eax, word [ebp-0x74] */
    II(0x100c1995, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100c199b, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100c19a1, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c19a6, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c19a8, 0x2)   jnzd(0x100c19ac, 0x2);                /* jnz 0x100c19ac */
l_0x100c19aa:
    II(0x100c19aa, 0x2)   jmpd(0x100c19bf, 0x13);               /* jmp 0x100c19bf */
l_0x100c19ac:
    II(0x100c19ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x70));   /* mov eax, [ebp-0x70] */
    II(0x100c19af, 0x3)   inc(memd_a32(ss, ebp - 0x70));        /* inc dword [ebp-0x70] */
    II(0x100c19b2, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100c19b5, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x100c19b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x74));   /* mov eax, [ebp-0x74] */
    II(0x100c19ba, 0x5)   mov(memw_a32(ds, edx + ebp - 0x7c), ax); /* mov [edx+ebp-0x7c], ax */
l_0x100c19bf:
    II(0x100c19bf, 0x2)   jmpd(0x100c1977, -0x4a);              /* jmp 0x100c1977 */
l_0x100c19c1:
    II(0x100c19c1, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0x7);    /* cmp byte [ebp-0xc], 0x7 */
    II(0x100c19c5, 0x6)   jnzd(0x100c1aff, 0x134);              /* jnz dword 0x100c1aff */
    II(0x100c19cb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x70));   /* mov eax, [ebp-0x70] */
    II(0x100c19ce, 0x3)   mov(memd_a32(ss, ebp - 0x74), eax);   /* mov [ebp-0x74], eax */
l_0x100c19d1:
    II(0x100c19d1, 0x3)   dec(memd_a32(ss, ebp - 0x74));        /* dec dword [ebp-0x74] */
    II(0x100c19d4, 0x5)   cmp(memw_a32(ss, ebp - 0x74), -0x1 /* 0xff */); /* cmp word [ebp-0x74], 0xff */
    II(0x100c19d9, 0x2)   jzd(0x100c1a04, 0x29);                /* jz 0x100c1a04 */
    II(0x100c19db, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x74)); /* movsx eax, word [ebp-0x74] */
    II(0x100c19df, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100c19e1, 0x4)   mov(edx, memd_a32(ds, eax + ebp - 0x7e)); /* mov edx, [eax+ebp-0x7e] */
    II(0x100c19e5, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c19e8, 0x6)   imul(edx, edx, 0x247);                /* imul edx, edx, 0x247 */
    II(0x100c19ee, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x74)); /* movsx eax, word [ebp-0x74] */
    II(0x100c19f2, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100c19f5, 0x6)   mov(edx, memd_a32(ds, edx + 0x101ca6a7)); /* mov edx, [edx+0x101ca6a7] */
    II(0x100c19fb, 0x7)   mov(memd_a32(ds, eax + ebp - 0x8c), edx); /* mov [eax+ebp+0xffffff74], edx */
    II(0x100c1a02, 0x2)   jmpd(0x100c19d1, -0x33);              /* jmp 0x100c19d1 */
l_0x100c1a04:
    II(0x100c1a04, 0xa)   mov(memd_a32(ss, ebp - 0x90), 0);     /* mov dword [ebp+0xffffff70], 0x0 */
    II(0x100c1a0e, 0x2)   jmpd(0x100c1a1c, 0xc);                /* jmp 0x100c1a1c */
l_0x100c1a10:
    II(0x100c1a10, 0x6)   mov(eax, memd_a32(ss, ebp - 0x90));   /* mov eax, [ebp+0xffffff70] */
    II(0x100c1a16, 0x6)   inc(memd_a32(ss, ebp - 0x90));        /* inc dword [ebp+0xffffff70] */
l_0x100c1a1c:
    II(0x100c1a1c, 0x6)   mov(eax, memd_a32(ss, ebp - 0x90));   /* mov eax, [ebp+0xffffff70] */
    II(0x100c1a22, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x100c1a29, 0x6)   jged(0x100c1aff, 0xd0);               /* jge dword 0x100c1aff */
    II(0x100c1a2f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c1a33, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c1a36, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x90)); /* movsx edx, word [ebp+0xffffff70] */
    II(0x100c1a3d, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100c1a40, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c34e8)); /* mov eax, [eax+0x101c34e8] */
    II(0x100c1a46, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c1a48, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100c1a4a, 0x6)   mov(memd_a32(ss, ebp - 0x94), eax);   /* mov [ebp+0xffffff6c], eax */
    II(0x100c1a50, 0x6)   mov(eax, memd_a32(ss, ebp - 0x90));   /* mov eax, [ebp+0xffffff70] */
    II(0x100c1a56, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100c1a59, 0xa)   mov(memd_a32(ss, ebp - 0x98), 0);     /* mov dword [ebp+0xffffff68], 0x0 */
    II(0x100c1a63, 0x2)   jmpd(0x100c1a71, 0xc);                /* jmp 0x100c1a71 */
l_0x100c1a65:
    II(0x100c1a65, 0x6)   mov(eax, memd_a32(ss, ebp - 0x98));   /* mov eax, [ebp+0xffffff68] */
    II(0x100c1a6b, 0x6)   inc(memd_a32(ss, ebp - 0x98));        /* inc dword [ebp+0xffffff68] */
l_0x100c1a71:
    II(0x100c1a71, 0x6)   mov(eax, memd_a32(ss, ebp - 0x98));   /* mov eax, [ebp+0xffffff68] */
    II(0x100c1a77, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x100c1a7e, 0x6)   jged(0x100c1afa, 0x76);               /* jge dword 0x100c1afa */
    II(0x100c1a84, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100c1a88, 0x5)   mov(eax, memd_a32(ds, 0x101c9454));   /* mov eax, [0x101c9454] */
    II(0x100c1a8d, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c1a8f, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100c1a91, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c1a96, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100c1a99, 0x2)   jnzd(0x100c1adf, 0x44);               /* jnz 0x100c1adf */
    II(0x100c1a9b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x70));   /* mov eax, [ebp-0x70] */
    II(0x100c1a9e, 0x3)   mov(memd_a32(ss, ebp - 0x74), eax);   /* mov [ebp-0x74], eax */
l_0x100c1aa1:
    II(0x100c1aa1, 0x3)   dec(memd_a32(ss, ebp - 0x74));        /* dec dword [ebp-0x74] */
    II(0x100c1aa4, 0x5)   cmp(memw_a32(ss, ebp - 0x74), -0x1 /* 0xff */); /* cmp word [ebp-0x74], 0xff */
    II(0x100c1aa9, 0x2)   jzd(0x100c1acc, 0x21);                /* jz 0x100c1acc */
    II(0x100c1aab, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x74)); /* movsx eax, word [ebp-0x74] */
    II(0x100c1aaf, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100c1ab2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100c1ab6, 0x7)   mov(eax, memd_a32(ds, eax + ebp - 0x8c)); /* mov eax, [eax+ebp+0xffffff74] */
    II(0x100c1abd, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c1abf, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100c1ac1, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c1ac6, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c1ac8, 0x2)   jnzd(0x100c1acc, 0x2);                /* jnz 0x100c1acc */
    II(0x100c1aca, 0x2)   jmpd(0x100c1aa1, -0x2b);              /* jmp 0x100c1aa1 */
l_0x100c1acc:
    II(0x100c1acc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x74)); /* movsx eax, word [ebp-0x74] */
    II(0x100c1ad0, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c1ad2, 0x2)   jged(0x100c1adf, 0xb);                /* jge 0x100c1adf */
    II(0x100c1ad4, 0x6)   mov(eax, memd_a32(ss, ebp - 0x94));   /* mov eax, [ebp+0xffffff6c] */
    II(0x100c1ada, 0x5)   mov(memw_a32(ds, eax), 0);            /* mov word [eax], 0x0 */
l_0x100c1adf:
    II(0x100c1adf, 0x6)   mov(eax, memd_a32(ss, ebp - 0x94));   /* mov eax, [ebp+0xffffff6c] */
    II(0x100c1ae5, 0x7)   add(memd_a32(ss, ebp - 0x94), 0x2);   /* add dword [ebp+0xffffff6c], 0x2 */
    II(0x100c1aec, 0x6)   mov(ax, memw_a32(ds, 0x101c8172));    /* mov ax, [0x101c8172] */
    II(0x100c1af2, 0x3)   add(memd_a32(ss, ebp - 0x18), eax);   /* add [ebp-0x18], eax */
    II(0x100c1af5, 0x5)   jmpd(0x100c1a65, -0x95);              /* jmp 0x100c1a65 */
l_0x100c1afa:
    II(0x100c1afa, 0x5)   jmpd(0x100c1a10, -0xef);              /* jmp 0x100c1a10 */
l_0x100c1aff:
    II(0x100c1aff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x70));   /* mov eax, [ebp-0x70] */
    II(0x100c1b02, 0x3)   mov(memd_a32(ss, ebp - 0x74), eax);   /* mov [ebp-0x74], eax */
l_0x100c1b05:
    II(0x100c1b05, 0x3)   dec(memd_a32(ss, ebp - 0x74));        /* dec dword [ebp-0x74] */
    II(0x100c1b08, 0x5)   cmp(memw_a32(ss, ebp - 0x74), -0x1 /* 0xff */); /* cmp word [ebp-0x74], 0xff */
    II(0x100c1b0d, 0x6)   jzd(0x100c1c48, 0x135);               /* jz dword 0x100c1c48 */
    II(0x100c1b13, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x74)); /* movsx eax, word [ebp-0x74] */
    II(0x100c1b17, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100c1b19, 0x4)   mov(eax, memd_a32(ds, eax + ebp - 0x7e)); /* mov eax, [eax+ebp-0x7e] */
    II(0x100c1b1d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c1b20, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100c1b26, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a3)); /* mov eax, [eax+0x101ca6a3] */
    II(0x100c1b2c, 0x6)   mov(memd_a32(ss, ebp - 0x9c), eax);   /* mov [ebp+0xffffff64], eax */
    II(0x100c1b32, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0x6);    /* cmp byte [ebp-0xc], 0x6 */
    II(0x100c1b36, 0x2)   jnzd(0x100c1b59, 0x21);               /* jnz 0x100c1b59 */
    II(0x100c1b38, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x74)); /* movsx eax, word [ebp-0x74] */
    II(0x100c1b3c, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100c1b3e, 0x4)   mov(eax, memd_a32(ds, eax + ebp - 0x7e)); /* mov eax, [eax+ebp-0x7e] */
    II(0x100c1b42, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c1b45, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100c1b4b, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a7)); /* mov eax, [eax+0x101ca6a7] */
    II(0x100c1b51, 0x6)   mov(memd_a32(ss, ebp - 0x9c), eax);   /* mov [ebp+0xffffff64], eax */
    II(0x100c1b57, 0x2)   jmpd(0x100c1b84, 0x2b);               /* jmp 0x100c1b84 */
l_0x100c1b59:
    II(0x100c1b59, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0x5);    /* cmp byte [ebp-0xc], 0x5 */
    II(0x100c1b5d, 0x2)   jzd(0x100c1b65, 0x6);                 /* jz 0x100c1b65 */
    II(0x100c1b5f, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0x4);    /* cmp byte [ebp-0xc], 0x4 */
    II(0x100c1b63, 0x2)   jnzd(0x100c1b84, 0x1f);               /* jnz 0x100c1b84 */
l_0x100c1b65:
    II(0x100c1b65, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x74)); /* movsx eax, word [ebp-0x74] */
    II(0x100c1b69, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100c1b6b, 0x4)   mov(eax, memd_a32(ds, eax + ebp - 0x7e)); /* mov eax, [eax+ebp-0x7e] */
    II(0x100c1b6f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c1b72, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100c1b78, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6ab)); /* mov eax, [eax+0x101ca6ab] */
    II(0x100c1b7e, 0x6)   mov(memd_a32(ss, ebp - 0x9c), eax);   /* mov [ebp+0xffffff64], eax */
l_0x100c1b84:
    II(0x100c1b84, 0xa)   mov(memd_a32(ss, ebp - 0x90), 0);     /* mov dword [ebp+0xffffff70], 0x0 */
    II(0x100c1b8e, 0x2)   jmpd(0x100c1b9c, 0xc);                /* jmp 0x100c1b9c */
l_0x100c1b90:
    II(0x100c1b90, 0x6)   mov(eax, memd_a32(ss, ebp - 0x90));   /* mov eax, [ebp+0xffffff70] */
    II(0x100c1b96, 0x6)   inc(memd_a32(ss, ebp - 0x90));        /* inc dword [ebp+0xffffff70] */
l_0x100c1b9c:
    II(0x100c1b9c, 0x6)   mov(eax, memd_a32(ss, ebp - 0x90));   /* mov eax, [ebp+0xffffff70] */
    II(0x100c1ba2, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x100c1ba9, 0x6)   jged(0x100c1c43, 0x94);               /* jge dword 0x100c1c43 */
    II(0x100c1baf, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c1bb3, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c1bb6, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x90)); /* movsx edx, word [ebp+0xffffff70] */
    II(0x100c1bbd, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100c1bc0, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c34e8)); /* mov eax, [eax+0x101c34e8] */
    II(0x100c1bc6, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c1bc8, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100c1bca, 0x6)   mov(memd_a32(ss, ebp - 0x94), eax);   /* mov [ebp+0xffffff6c], eax */
    II(0x100c1bd0, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x90)); /* movsx eax, word [ebp+0xffffff70] */
    II(0x100c1bd7, 0x6)   mov(edx, memd_a32(ss, ebp - 0x9c));   /* mov edx, [ebp+0xffffff64] */
    II(0x100c1bdd, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100c1bdf, 0x6)   mov(memd_a32(ss, ebp - 0xa0), edx);   /* mov [ebp+0xffffff60], edx */
    II(0x100c1be5, 0xa)   mov(memd_a32(ss, ebp - 0x98), 0);     /* mov dword [ebp+0xffffff68], 0x0 */
    II(0x100c1bef, 0x2)   jmpd(0x100c1bfd, 0xc);                /* jmp 0x100c1bfd */
l_0x100c1bf1:
    II(0x100c1bf1, 0x6)   mov(eax, memd_a32(ss, ebp - 0x98));   /* mov eax, [ebp+0xffffff68] */
    II(0x100c1bf7, 0x6)   inc(memd_a32(ss, ebp - 0x98));        /* inc dword [ebp+0xffffff68] */
l_0x100c1bfd:
    II(0x100c1bfd, 0x6)   mov(eax, memd_a32(ss, ebp - 0x98));   /* mov eax, [ebp+0xffffff68] */
    II(0x100c1c03, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x100c1c0a, 0x2)   jged(0x100c1c3e, 0x32);               /* jge 0x100c1c3e */
    II(0x100c1c0c, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa0));   /* mov eax, [ebp+0xffffff60] */
    II(0x100c1c12, 0x3)   cmp(memb_a32(ds, eax), 0);            /* cmp byte [eax], 0x0 */
    II(0x100c1c15, 0x2)   jzd(0x100c1c21, 0xa);                 /* jz 0x100c1c21 */
    II(0x100c1c17, 0x6)   mov(eax, memd_a32(ss, ebp - 0x94));   /* mov eax, [ebp+0xffffff6c] */
    II(0x100c1c1d, 0x4)   or_(memb_a32(ds, eax + 0x1), -0x80 /* 0x80 */); /* or byte [eax+0x1], 0x80 */
l_0x100c1c21:
    II(0x100c1c21, 0x6)   mov(eax, memd_a32(ss, ebp - 0x94));   /* mov eax, [ebp+0xffffff6c] */
    II(0x100c1c27, 0x7)   add(memd_a32(ss, ebp - 0x94), 0x2);   /* add dword [ebp+0xffffff6c], 0x2 */
    II(0x100c1c2e, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x100c1c33, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c1c36, 0x6)   add(memd_a32(ss, ebp - 0xa0), eax);   /* add [ebp+0xffffff60], eax */
    II(0x100c1c3c, 0x2)   jmpd(0x100c1bf1, -0x4d);              /* jmp 0x100c1bf1 */
l_0x100c1c3e:
    II(0x100c1c3e, 0x5)   jmpd(0x100c1b90, -0xb3);              /* jmp 0x100c1b90 */
l_0x100c1c43:
    II(0x100c1c43, 0x5)   jmpd(0x100c1b05, -0x143);             /* jmp 0x100c1b05 */
l_0x100c1c48:
    II(0x100c1c48, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0x4);    /* cmp byte [ebp-0xc], 0x4 */
    II(0x100c1c4c, 0x6)   jnzd(0x100c1d13, 0xc1);               /* jnz dword 0x100c1d13 */
    II(0x100c1c52, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c1c56, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c1c59, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c34e8)); /* mov eax, [eax+0x101c34e8] */
    II(0x100c1c5f, 0x6)   mov(memd_a32(ss, ebp - 0xa4), eax);   /* mov [ebp+0xffffff5c], eax */
    II(0x100c1c65, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c1c68, 0x3)   add(eax, 0x43);                       /* add eax, 0x43 */
    II(0x100c1c6b, 0x5)   calld(0x100cb000, 0x9390);            /* call 0x100cb000 */
    II(0x100c1c70, 0x3)   lea(ebx, ebp - 0x4c);                 /* lea ebx, [ebp-0x4c] */
    II(0x100c1c73, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c1c75, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100c1c77, 0x5)   calld(0x100caf68, 0x92ec);            /* call 0x100caf68 */
    II(0x100c1c7c, 0x2)   jmpd(0x100c1c86, 0x8);                /* jmp 0x100c1c86 */
l_0x100c1c7e:
    II(0x100c1c7e, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100c1c81, 0x5)   calld(0x10076bf8, -0x4b08e);          /* call 0x10076bf8 */
l_0x100c1c86:
    II(0x100c1c86, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c1c88, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100c1c8b, 0x5)   calld(0x1013ad71, 0x790e1);           /* call 0x1013ad71 */
    II(0x100c1c90, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c1c92, 0x6)   jzd(0x100c1d13, 0x7b);                /* jz dword 0x100c1d13 */
    II(0x100c1c98, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100c1c9b, 0x5)   calld(0x1008a0f8, -0x37ba8);          /* call 0x1008a0f8 */
    II(0x100c1ca0, 0x5)   calld(0x1008a370, -0x37935);          /* call 0x1008a370 */
    II(0x100c1ca5, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1a);  /* cmp byte [eax+0x3d], 0x1a */
    II(0x100c1ca9, 0x2)   jnzd(0x100c1d0e, 0x63);               /* jnz 0x100c1d0e */
    II(0x100c1cab, 0x5)   mov(ebx, 0x4);                        /* mov ebx, 0x4 */
    II(0x100c1cb0, 0x6)   lea(edx, ebp - 0xa8);                 /* lea edx, [ebp+0xffffff58] */
    II(0x100c1cb6, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100c1cb9, 0x5)   calld(0x1008a0f8, -0x37bc6);          /* call 0x1008a0f8 */
    II(0x100c1cbe, 0x5)   calld(0x100b8e63, -0x8e60);           /* call 0x100b8e63 */
    II(0x100c1cc3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c1cc5, 0x6)   lea(eax, ebp - 0xb8);                 /* lea eax, [ebp+0xffffff48] */
    II(0x100c1ccb, 0x5)   calld(0x100a95c1, -0x1870f);          /* call 0x100a95c1 */
l_0x100c1cd0:
    II(0x100c1cd0, 0x6)   lea(eax, ebp - 0xb8);                 /* lea eax, [ebp+0xffffff48] */
    II(0x100c1cd6, 0x5)   calld(0x10089860, -0x3847b);          /* call 0x10089860 */
    II(0x100c1cdb, 0x1)   cwde();                               /* cwde */
    II(0x100c1cdc, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100c1cdf, 0x6)   mov(edx, memd_a32(ss, ebp - 0xa4));   /* mov edx, [ebp+0xffffff5c] */
    II(0x100c1ce5, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100c1ce7, 0x6)   lea(eax, ebp - 0xb8);                 /* lea eax, [ebp+0xffffff48] */
    II(0x100c1ced, 0x5)   calld(0x1008982c, -0x384c6);          /* call 0x1008982c */
    II(0x100c1cf2, 0x1)   cwde();                               /* cwde */
    II(0x100c1cf3, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100c1cf5, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100c1cf7, 0x2)   mov(eax, memd_a32(ds, edx));          /* mov eax, [edx] */
    II(0x100c1cf9, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100c1cfb, 0x4)   or_(memb_a32(ds, eax + 0x1), -0x80 /* 0x80 */); /* or byte [eax+0x1], 0x80 */
    II(0x100c1cff, 0x6)   lea(eax, ebp - 0xb8);                 /* lea eax, [ebp+0xffffff48] */
    II(0x100c1d05, 0x5)   calld(0x100a96db, -0x1862f);          /* call 0x100a96db */
    II(0x100c1d0a, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c1d0c, 0x2)   jnzd(0x100c1cd0, -0x3e);              /* jnz 0x100c1cd0 */
l_0x100c1d0e:
    II(0x100c1d0e, 0x5)   jmpd(0x100c1c7e, -0x95);              /* jmp 0x100c1c7e */
l_0x100c1d13:
    II(0x100c1d13, 0xa)   mov(memd_a32(ss, ebp - 0x90), 0);     /* mov dword [ebp+0xffffff70], 0x0 */
    II(0x100c1d1d, 0x2)   jmpd(0x100c1d2b, 0xc);                /* jmp 0x100c1d2b */
l_0x100c1d1f:
    II(0x100c1d1f, 0x6)   mov(eax, memd_a32(ss, ebp - 0x90));   /* mov eax, [ebp+0xffffff70] */
    II(0x100c1d25, 0x6)   inc(memd_a32(ss, ebp - 0x90));        /* inc dword [ebp+0xffffff70] */
l_0x100c1d2b:
    II(0x100c1d2b, 0x6)   mov(eax, memd_a32(ss, ebp - 0x90));   /* mov eax, [ebp+0xffffff70] */
    II(0x100c1d31, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x100c1d38, 0x6)   jged(0x100c1dbf, 0x81);               /* jge dword 0x100c1dbf */
    II(0x100c1d3e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c1d42, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c1d45, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x90)); /* movsx edx, word [ebp+0xffffff70] */
    II(0x100c1d4c, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100c1d4f, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c34e8)); /* mov eax, [eax+0x101c34e8] */
    II(0x100c1d55, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c1d57, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100c1d59, 0x6)   mov(memd_a32(ss, ebp - 0x94), eax);   /* mov [ebp+0xffffff6c], eax */
    II(0x100c1d5f, 0xa)   mov(memd_a32(ss, ebp - 0x98), 0);     /* mov dword [ebp+0xffffff68], 0x0 */
    II(0x100c1d69, 0x2)   jmpd(0x100c1d77, 0xc);                /* jmp 0x100c1d77 */
l_0x100c1d6b:
    II(0x100c1d6b, 0x6)   mov(eax, memd_a32(ss, ebp - 0x98));   /* mov eax, [ebp+0xffffff68] */
    II(0x100c1d71, 0x6)   inc(memd_a32(ss, ebp - 0x98));        /* inc dword [ebp+0xffffff68] */
l_0x100c1d77:
    II(0x100c1d77, 0x6)   mov(eax, memd_a32(ss, ebp - 0x98));   /* mov eax, [ebp+0xffffff68] */
    II(0x100c1d7d, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x100c1d84, 0x2)   jged(0x100c1dba, 0x34);               /* jge 0x100c1dba */
    II(0x100c1d86, 0x6)   mov(eax, memd_a32(ss, ebp - 0x94));   /* mov eax, [ebp+0xffffff6c] */
    II(0x100c1d8c, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100c1d8f, 0x3)   test(ah, 0x80);                       /* test ah, 0x80 */
    II(0x100c1d92, 0x2)   jzd(0x100c1da0, 0xc);                 /* jz 0x100c1da0 */
    II(0x100c1d94, 0x6)   mov(eax, memd_a32(ss, ebp - 0x94));   /* mov eax, [ebp+0xffffff6c] */
    II(0x100c1d9a, 0x4)   and_(memb_a32(ds, eax + 0x1), 0x7f);  /* and byte [eax+0x1], 0x7f */
    II(0x100c1d9e, 0x2)   jmpd(0x100c1dab, 0xb);                /* jmp 0x100c1dab */
l_0x100c1da0:
    II(0x100c1da0, 0x6)   mov(eax, memd_a32(ss, ebp - 0x94));   /* mov eax, [ebp+0xffffff6c] */
    II(0x100c1da6, 0x5)   mov(memw_a32(ds, eax), 0);            /* mov word [eax], 0x0 */
l_0x100c1dab:
    II(0x100c1dab, 0x6)   mov(eax, memd_a32(ss, ebp - 0x94));   /* mov eax, [ebp+0xffffff6c] */
    II(0x100c1db1, 0x7)   add(memd_a32(ss, ebp - 0x94), 0x2);   /* add dword [ebp+0xffffff6c], 0x2 */
    II(0x100c1db8, 0x2)   jmpd(0x100c1d6b, -0x4f);              /* jmp 0x100c1d6b */
l_0x100c1dba:
    II(0x100c1dba, 0x5)   jmpd(0x100c1d1f, -0xa0);              /* jmp 0x100c1d1f */
l_0x100c1dbf:
    II(0x100c1dbf, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0x3);    /* cmp byte [ebp-0xc], 0x3 */
    II(0x100c1dc3, 0x2)   jzd(0x100c1dcb, 0x6);                 /* jz 0x100c1dcb */
    II(0x100c1dc5, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0x2);    /* cmp byte [ebp-0xc], 0x2 */
    II(0x100c1dc9, 0x2)   jnzd(0x100c1dcd, 0x2);                /* jnz 0x100c1dcd */
l_0x100c1dcb:
    II(0x100c1dcb, 0x2)   jmpd(0x100c1dd6, 0x9);                /* jmp 0x100c1dd6 */
l_0x100c1dcd:
    II(0x100c1dcd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c1dd0, 0x4)   cmp(memd_a32(ds, eax + 0x67), 0);     /* cmp dword [eax+0x67], 0x0 */
    II(0x100c1dd4, 0x2)   jnzd(0x100c1ddb, 0x5);                /* jnz 0x100c1ddb */
l_0x100c1dd6:
    II(0x100c1dd6, 0x5)   jmpd(0x100c1eac, 0xd1);               /* jmp 0x100c1eac */
l_0x100c1ddb:
    II(0x100c1ddb, 0xa)   mov(memd_a32(ss, ebp - 0x90), 0);     /* mov dword [ebp+0xffffff70], 0x0 */
    II(0x100c1de5, 0x2)   jmpd(0x100c1df3, 0xc);                /* jmp 0x100c1df3 */
l_0x100c1de7:
    II(0x100c1de7, 0x6)   mov(eax, memd_a32(ss, ebp - 0x90));   /* mov eax, [ebp+0xffffff70] */
    II(0x100c1ded, 0x6)   inc(memd_a32(ss, ebp - 0x90));        /* inc dword [ebp+0xffffff70] */
l_0x100c1df3:
    II(0x100c1df3, 0x6)   mov(eax, memd_a32(ss, ebp - 0x90));   /* mov eax, [ebp+0xffffff70] */
    II(0x100c1df9, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x100c1e00, 0x6)   jged(0x100c1eac, 0xa6);               /* jge dword 0x100c1eac */
    II(0x100c1e06, 0xa)   mov(memd_a32(ss, ebp - 0x98), 0);     /* mov dword [ebp+0xffffff68], 0x0 */
    II(0x100c1e10, 0x2)   jmpd(0x100c1e1e, 0xc);                /* jmp 0x100c1e1e */
l_0x100c1e12:
    II(0x100c1e12, 0x6)   mov(eax, memd_a32(ss, ebp - 0x98));   /* mov eax, [ebp+0xffffff68] */
    II(0x100c1e18, 0x6)   inc(memd_a32(ss, ebp - 0x98));        /* inc dword [ebp+0xffffff68] */
l_0x100c1e1e:
    II(0x100c1e1e, 0x6)   mov(eax, memd_a32(ss, ebp - 0x98));   /* mov eax, [ebp+0xffffff68] */
    II(0x100c1e24, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x100c1e2b, 0x2)   jged(0x100c1ea7, 0x7a);               /* jge 0x100c1ea7 */
    II(0x100c1e2d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c1e31, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c1e34, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x90)); /* movsx edx, word [ebp+0xffffff70] */
    II(0x100c1e3b, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100c1e3e, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c34e8)); /* mov eax, [eax+0x101c34e8] */
    II(0x100c1e44, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c1e46, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x98)); /* movsx edx, word [ebp+0xffffff68] */
    II(0x100c1e4d, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x100c1e4f, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100c1e51, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c1e53, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x90)); /* movsx edx, word [ebp+0xffffff70] */
    II(0x100c1e5a, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100c1e5d, 0x2)   mov(ebx, edx);                        /* mov ebx, edx */
    II(0x100c1e5f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100c1e62, 0x3)   mov(edx, memd_a32(ds, edx + 0x67));   /* mov edx, [edx+0x67] */
    II(0x100c1e65, 0x2)   add(edx, ebx);                        /* add edx, ebx */
    II(0x100c1e67, 0x7)   movsx(ebx, memw_a32(ss, ebp - 0x98)); /* movsx ebx, word [ebp+0xffffff68] */
    II(0x100c1e6e, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x100c1e70, 0x2)   add(edx, ebx);                        /* add edx, ebx */
    II(0x100c1e72, 0x4)   movsx(dx, memb_a32(ds, edx));         /* movsx dx, byte [edx] */
    II(0x100c1e76, 0x3)   add(memw_a32(ds, eax), dx);           /* add [eax], dx */
    II(0x100c1e79, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c1e7d, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c1e80, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x90)); /* movsx edx, word [ebp+0xffffff70] */
    II(0x100c1e87, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100c1e8a, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c34ec)); /* mov eax, [eax+0x101c34ec] */
    II(0x100c1e90, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c1e92, 0x7)   movsx(edx, memw_a32(ss, ebp - 0x98)); /* movsx edx, word [ebp+0xffffff68] */
    II(0x100c1e99, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x100c1e9b, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100c1e9d, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c1e9f, 0x3)   inc(memw_a32(ds, eax));               /* inc word [eax] */
    II(0x100c1ea2, 0x5)   jmpd(0x100c1e12, -0x95);              /* jmp 0x100c1e12 */
l_0x100c1ea7:
    II(0x100c1ea7, 0x5)   jmpd(0x100c1de7, -0xc5);              /* jmp 0x100c1de7 */
l_0x100c1eac:
    II(0x100c1eac, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0x3);    /* cmp byte [ebp-0xc], 0x3 */
    II(0x100c1eb0, 0x6)   jzd(0x100c1f90, 0xda);                /* jz dword 0x100c1f90 */
    II(0x100c1eb6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c1eb9, 0x3)   add(eax, 0x43);                       /* add eax, 0x43 */
    II(0x100c1ebc, 0x5)   calld(0x100cb000, 0x913f);            /* call 0x100cb000 */
    II(0x100c1ec1, 0x3)   lea(ebx, ebp - 0x4c);                 /* lea ebx, [ebp-0x4c] */
    II(0x100c1ec4, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c1ec6, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100c1ec8, 0x5)   calld(0x100caf68, 0x909b);            /* call 0x100caf68 */
    II(0x100c1ecd, 0x2)   jmpd(0x100c1ed7, 0x8);                /* jmp 0x100c1ed7 */
l_0x100c1ecf:
    II(0x100c1ecf, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100c1ed2, 0x5)   calld(0x10076bf8, -0x4b2df);          /* call 0x10076bf8 */
l_0x100c1ed7:
    II(0x100c1ed7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c1ed9, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100c1edc, 0x5)   calld(0x1013ad71, 0x78e90);           /* call 0x1013ad71 */
    II(0x100c1ee1, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c1ee3, 0x6)   jzd(0x100c1f90, 0xa7);                /* jz dword 0x100c1f90 */
    II(0x100c1ee9, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100c1eec, 0x5)   calld(0x1008a0f8, -0x37df9);          /* call 0x1008a0f8 */
    II(0x100c1ef1, 0x5)   calld(0x1008a370, -0x37b86);          /* call 0x1008a370 */
    II(0x100c1ef6, 0x6)   mov(memd_a32(ss, ebp - 0xbc), eax);   /* mov [ebp+0xffffff44], eax */
//    II(0x100c1efc, 0x6)   mov(eax, memd_a32(ss, ebp - 0xbc));   /* mov eax, [ebp+0xffffff44] */
    II(0x100c1f02, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x29);   /* cmp word [eax+0x8], 0x29 */
    II(0x100c1f07, 0x2)   jzd(0x100c1f16, 0xd);                 /* jz 0x100c1f16 */
    II(0x100c1f09, 0x6)   mov(eax, memd_a32(ss, ebp - 0xbc));   /* mov eax, [ebp+0xffffff44] */
    II(0x100c1f0f, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x2a);   /* cmp word [eax+0x8], 0x2a */
    II(0x100c1f14, 0x2)   jnzd(0x100c1f8b, 0x75);               /* jnz 0x100c1f8b */
l_0x100c1f16:
    II(0x100c1f16, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c1f1a, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c1f1d, 0x6)   mov(edx, memd_a32(ss, ebp - 0xbc));   /* mov edx, [ebp+0xffffff44] */
    II(0x100c1f23, 0x3)   mov(edx, memd_a32(ds, edx + 0x18));   /* mov edx, [edx+0x18] */
    II(0x100c1f26, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c1f29, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100c1f2c, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c34e8)); /* mov eax, [eax+0x101c34e8] */
    II(0x100c1f32, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c1f34, 0x6)   mov(edx, memd_a32(ss, ebp - 0xbc));   /* mov edx, [ebp+0xffffff44] */
    II(0x100c1f3a, 0x3)   mov(edx, memd_a32(ds, edx + 0x1a));   /* mov edx, [edx+0x1a] */
    II(0x100c1f3d, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c1f40, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x100c1f42, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100c1f44, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100c1f46, 0x6)   mov(eax, memd_a32(ss, ebp - 0xbc));   /* mov eax, [ebp+0xffffff44] */
    II(0x100c1f4c, 0x5)   calld(0x1007623c, -0x4bd15);          /* call 0x1007623c */
    II(0x100c1f51, 0x4)   mov(ax, memw_a32(ds, eax + 0xe));     /* mov ax, [eax+0xe] */
    II(0x100c1f55, 0x3)   add(memw_a32(ds, edx), ax);           /* add [edx], ax */
    II(0x100c1f58, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x100c1f5c, 0x3)   imul(edx, edx, 0x13);                 /* imul edx, edx, 0x13 */
    II(0x100c1f5f, 0x6)   mov(eax, memd_a32(ss, ebp - 0xbc));   /* mov eax, [ebp+0xffffff44] */
    II(0x100c1f65, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x100c1f68, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100c1f6b, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100c1f6e, 0x6)   mov(edx, memd_a32(ds, edx + 0x101c34ec)); /* mov edx, [edx+0x101c34ec] */
    II(0x100c1f74, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c1f76, 0x6)   mov(edx, memd_a32(ss, ebp - 0xbc));   /* mov edx, [ebp+0xffffff44] */
    II(0x100c1f7c, 0x3)   mov(edx, memd_a32(ds, edx + 0x1a));   /* mov edx, [edx+0x1a] */
    II(0x100c1f7f, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c1f82, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x100c1f84, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100c1f86, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100c1f88, 0x3)   inc(memw_a32(ds, eax));               /* inc word [eax] */
l_0x100c1f8b:
    II(0x100c1f8b, 0x5)   jmpd(0x100c1ecf, -0xc1);              /* jmp 0x100c1ecf */
l_0x100c1f90:
    II(0x100c1f90, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100c1f94, 0x3)   imul(eax, eax, 0x13);                 /* imul eax, eax, 0x13 */
    II(0x100c1f97, 0x5)   mov(edx, 0x101c34e4);                 /* mov edx, 0x101c34e4 */
    II(0x100c1f9c, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100c1f9e, 0x3)   mov(memd_a32(ss, ebp - 0x14), edx);   /* mov [ebp-0x14], edx */
    II(0x100c1fa1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c1fa3, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100c1fa6, 0x5)   calld(0x10088e4c, -0x3915f);          /* call 0x10088e4c */
    II(0x100c1fab, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c1fad, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100c1fb0, 0x5)   calld(0x100b9183, -0x8e32);           /* call 0x100b9183 */
    II(0x100c1fb5, 0x2)   jmpd(0x100c1fcb, 0x14);               /* jmp 0x100c1fcb */
//  II(0x100c1fb7, 0x14)  /* Недостижимый код. */
l_0x100c1fcb:
    II(0x100c1fcb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100c1fce, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100c1fd0, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100c1fd1, 0x1)   popd(edi);                            /* pop edi */
    II(0x100c1fd2, 0x1)   popd(esi);                            /* pop esi */
    II(0x100c1fd3, 0x1)   retd();                               /* ret */
FUNC_END

