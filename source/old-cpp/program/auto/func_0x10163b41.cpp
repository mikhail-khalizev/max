FUNC_BEGIN(0x10163b41, 0x2287ea3346e8dab9, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x7, 0x22, 0, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf8, 0x88, 0x55, 0xfc, 0x8a, 0x45, 0xfc, 0x88, 0x45, 0xf4, 0xe9, 0x9f, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0xe, 0x89, 0x45, 0xf0, 0xe9, 0xd0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x14, 0x89, 0x45, 0xf0, 0xe9, 0xc2, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x12, 0x89, 0x45, 0xf0, 0xe9, 0xb4, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x1b, 0x89, 0x45, 0xf0, 0xe9, 0xa6, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0xc, 0x89, 0x45, 0xf0, 0xe9, 0x98, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0xa, 0x89, 0x45, 0xf0, 0xe9, 0x8a, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0x89, 0x45, 0xf0, 0xe9, 0x7c, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x10, 0x89, 0x45, 0xf0, 0xeb, 0x71, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x8, 0x89, 0x45, 0xf0, 0xeb, 0x66, 0xeb, 0x42, 0x90, 0x69, 0x3b, 0x16, 0x10, 0x77, 0x3b, 0x16, 0x10, 0x85, 0x3b, 0x16, 0x10, 0x93, 0x3b, 0x16, 0x10, 0xa1, 0x3b, 0x16, 0x10, 0xaf, 0x3b, 0x16, 0x10, 0xbd, 0x3b, 0x16, 0x10, 0xcb, 0x3b, 0x16, 0x10, 0xd6, 0x3b, 0x16, 0x10, 0x8a, 0x45, 0xf4, 0xfe, 0xc8, 0x88, 0x45, 0xec, 0x80, 0x7d, 0xec, 0x8, 0x77, 0xcb, 0x31, 0xc0, 0x8a, 0x45, 0xec, 0xc1, 0xe0, 0x2, 0x2e, 0xff, 0xa0, 0xe4, 0x3b, 0x16, 0x10, 0xb9, 0xd8, 0x1f, 0, 0, 0xbb, 0xd, 0x2b, 0x1b, 0x10, 0xba, 0x1a, 0x2b, 0x1b, 0x10, 0xb8, 0x4e, 0x2b, 0x1b, 0x10, 0xe8, 0x96, 0xcb, 0xf8, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0xa, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10163b41, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x10163b46, 0x5)   calld(sys_check_available_stack_size, 0x2207); /* call 0x10165d52 */
    II(0x10163b4b, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10163b4c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10163b4d, 0x1)   pushd(esi);                           /* push esi */
    II(0x10163b4e, 0x1)   pushd(edi);                           /* push edi */
    II(0x10163b4f, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10163b50, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10163b52, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x10163b58, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10163b5b, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x10163b5e, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10163b61, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x10163b64, 0x5)   jmpd(0x10163c08, 0x9f);               /* jmp 0x10163c08 */
l_0x10163b69:
    II(0x10163b69, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10163b6c, 0x3)   add(eax, 0xe);                        /* add eax, 0xe */
    II(0x10163b6f, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10163b72, 0x5)   jmpd(0x10163c47, 0xd0);               /* jmp 0x10163c47 */
l_0x10163b77:
    II(0x10163b77, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10163b7a, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x10163b7d, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10163b80, 0x5)   jmpd(0x10163c47, 0xc2);               /* jmp 0x10163c47 */
l_0x10163b85:
    II(0x10163b85, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10163b88, 0x3)   add(eax, 0x12);                       /* add eax, 0x12 */
    II(0x10163b8b, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10163b8e, 0x5)   jmpd(0x10163c47, 0xb4);               /* jmp 0x10163c47 */
l_0x10163b93:
    II(0x10163b93, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10163b96, 0x3)   add(eax, 0x1b);                       /* add eax, 0x1b */
    II(0x10163b99, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10163b9c, 0x5)   jmpd(0x10163c47, 0xa6);               /* jmp 0x10163c47 */
l_0x10163ba1:
    II(0x10163ba1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10163ba4, 0x3)   add(eax, 0xc);                        /* add eax, 0xc */
    II(0x10163ba7, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10163baa, 0x5)   jmpd(0x10163c47, 0x98);               /* jmp 0x10163c47 */
l_0x10163baf:
    II(0x10163baf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10163bb2, 0x3)   add(eax, 0xa);                        /* add eax, 0xa */
    II(0x10163bb5, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10163bb8, 0x5)   jmpd(0x10163c47, 0x8a);               /* jmp 0x10163c47 */
l_0x10163bbd:
    II(0x10163bbd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10163bc0, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x10163bc3, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10163bc6, 0x5)   jmpd(0x10163c47, 0x7c);               /* jmp 0x10163c47 */
l_0x10163bcb:
    II(0x10163bcb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10163bce, 0x3)   add(eax, 0x10);                       /* add eax, 0x10 */
    II(0x10163bd1, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10163bd4, 0x2)   jmpd(0x10163c47, 0x71);               /* jmp 0x10163c47 */
l_0x10163bd6:
    II(0x10163bd6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10163bd9, 0x3)   add(eax, 0x8);                        /* add eax, 0x8 */
    II(0x10163bdc, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10163bdf, 0x2)   jmpd(0x10163c47, 0x66);               /* jmp 0x10163c47 */
l_0x10163be1:
    II(0x10163be1, 0x2)   jmpd(0x10163c25, 0x42);               /* jmp 0x10163c25 */
//    II(0x10163be3, 0x1)   /* Выравнивание. */
//    II(0x10163be4, 0x24)  /* Служебная область с абсолютными адресами переходов. {0x10163b69, 0x10163b77, 0x10163b85, 0x10163b93, 0x10163ba1, 0x10163baf, 0x10163bbd, 0x10163bcb, 0x10163bd6}. */
l_0x10163c08:
    II(0x10163c08, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x10163c0b, 0x2)   dec(al);                              /* dec al */
    II(0x10163c0d, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x10163c10, 0x4)   cmp(memb_a32(ss, ebp - 0x14), 0x8);   /* cmp byte [ebp-0x14], 0x8 */
    II(0x10163c14, 0x2)   jad(0x10163be1, -0x35);               /* ja 0x10163be1 */
    II(0x10163c16, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10163c18, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x10163c1b, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10163c1e, 0x7)   jmpd_abs_switch(memd_a32(cs, eax + 0x10163be4), (0x10163b69)(0x10163b77)(0x10163b85)(0x10163b93)(0x10163ba1)(0x10163baf)(0x10163bbd)(0x10163bcb)(0x10163bd6)); /* jmp dword near [cs:eax+0x10163be4] */
l_0x10163c25:
    II(0x10163c25, 0x5)   mov(ecx, 0x1fd8);                     /* mov ecx, 0x1fd8 */
    II(0x10163c2a, 0x5)   mov(ebx, 0x101b2b0d);                 /* mov ebx, 0x101b2b0d */ /* "unitsmgr.cpp" */
    II(0x10163c2f, 0x5)   mov(edx, 0x101b2b1a);                 /* mov edx, 0x101b2b1a */ /* "UnitValues::GetAttribute called with invalid index." */
    II(0x10163c34, 0x5)   mov(eax, 0x101b2b4e);                 /* mov eax, 0x101b2b4e */ /* "FALSE" */
    II(0x10163c39, 0x5)   calld(0x100f07d4, -0x7346a);          /* call 0x100f07d4 */
    II(0x10163c3e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10163c41, 0x3)   add(eax, 0xa);                        /* add eax, 0xa */
    II(0x10163c44, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x10163c47:
    II(0x10163c47, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10163c4a, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10163c4c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10163c4d, 0x1)   popd(edi);                            /* pop edi */
    II(0x10163c4e, 0x1)   popd(esi);                            /* pop esi */
    II(0x10163c4f, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10163c50, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10163c51, 0x1)   retd();                               /* ret */
FUNC_END

