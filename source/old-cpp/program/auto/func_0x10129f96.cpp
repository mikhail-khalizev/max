FUNC_BEGIN(0x10129f96, 0xa2de317078fd11b4, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0xb2, 0xbd, 0x3, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0x7f, 0xc3, 0xf4, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf8, 0xe8, 0xf5, 0xc4, 0xf4, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf8, 0xe8, 0x2b, 0xcc, 0xf4, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x9a, 0xd, 0x1, 0, 0x84, 0xc0, 0xf, 0x84, 0, 0x1, 0, 0, 0x8d, 0x45, 0xf8, 0xe8, 0xb9, 0xc3, 0xf4, 0xff, 0x66, 0x83, 0x78, 0x8, 0x28, 0xf, 0x84, 0xe8, 0, 0, 0, 0xc7, 0x45, 0xec, 0x4, 0, 0, 0, 0xff, 0x4d, 0xec, 0x66, 0x83, 0x7d, 0xec, 0xff, 0x74, 0xd, 0xf, 0xbf, 0x45, 0xec, 0xc6, 0x80, 0xe0, 0x59, 0x1c, 0x10, 0, 0xeb, 0xe9, 0xc6, 0x5, 0x1c, 0x5c, 0x1c, 0x10, 0x17, 0x8d, 0x45, 0xf8, 0xe8, 0x81, 0xc3, 0xf4, 0xff, 0xe8, 0x30, 0xc1, 0xf4, 0xff, 0x66, 0xa3, 0x1d, 0x5c, 0x1c, 0x10, 0xba, 0x21, 0x5c, 0x1c, 0x10, 0x8d, 0x45, 0xf8, 0xe8, 0xd1, 0xc3, 0xf4, 0xff, 0xe8, 0xa6, 0xc2, 0xff, 0xff, 0x66, 0xa3, 0x1f, 0x5c, 0x1c, 0x10, 0xb8, 0x4, 0, 0, 0, 0xe8, 0x9d, 0xbb, 0xff, 0xff, 0xc6, 0x45, 0xf0, 0x1, 0x80, 0x7d, 0xf0, 0, 0x74, 0x9, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x75, 0x5, 0xe9, 0x76, 0, 0, 0, 0xe8, 0x84, 0xd5, 0xff, 0xff, 0x31, 0xc0, 0xe8, 0x8e, 0x6e, 0xfd, 0xff, 0xc6, 0x45, 0xf0, 0, 0xc7, 0x45, 0xec, 0x4, 0, 0, 0, 0xff, 0x4d, 0xec, 0x66, 0x83, 0x7d, 0xec, 0xff, 0x74, 0x33, 0xf, 0xbf, 0x45, 0xec, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x3, 0x75, 0x17, 0xf, 0xbf, 0x45, 0xec, 0x8a, 0x80, 0xe0, 0x59, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x4, 0xc6, 0x45, 0xf0, 0x1, 0xeb, 0xc3, 0xe8, 0x4b, 0x11, 0x4, 0, 0x83, 0xf8, 0x1b, 0x75, 0x13, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x99, 0xbe, 0xf4, 0xff, 0xeb, 0x27, 0xe9, 0x76, 0xff, 0xff, 0xff, 0xe9, 0xe6, 0xfe, 0xff, 0xff, 0xc7, 0x45, 0xf4, 0x1, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x7c, 0xbe, 0xf4, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x70, 0xbe, 0xf4, 0xff, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10129f96, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x10129f9b, 0x5)   calld(sys_check_available_stack_size, 0x3bdb2); /* call 0x10165d52 */
    II(0x10129fa0, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10129fa1, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10129fa2, 0x1)   pushd(edx);                           /* push edx */
    II(0x10129fa3, 0x1)   pushd(esi);                           /* push esi */
    II(0x10129fa4, 0x1)   pushd(edi);                           /* push edi */
    II(0x10129fa5, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10129fa6, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10129fa8, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x10129fae, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x10129fb1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10129fb4, 0x5)   calld(0x10076338, -0xb3c81);          /* call 0x10076338 */
    II(0x10129fb9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10129fbb, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x10129fbe, 0x5)   calld(0x100764b8, -0xb3b0b);          /* call 0x100764b8 */
    II(0x10129fc3, 0x2)   jmpd(0x10129fcd, 0x8);                /* jmp 0x10129fcd */
l_0x10129fc5:
    II(0x10129fc5, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x10129fc8, 0x5)   calld(0x10076bf8, -0xb33d5);          /* call 0x10076bf8 */
l_0x10129fcd:
    II(0x10129fcd, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10129fcf, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x10129fd2, 0x5)   calld(0x1013ad71, 0x10d9a);           /* call 0x1013ad71 */
    II(0x10129fd7, 0x2)   test(al, al);                         /* test al, al */
    II(0x10129fd9, 0x6)   jzd(0x1012a0df, 0x100);               /* jz dword 0x1012a0df */
    II(0x10129fdf, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x10129fe2, 0x5)   calld(0x100763a0, -0xb3c47);          /* call 0x100763a0 */
    II(0x10129fe7, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x28);   /* cmp word [eax+0x8], 0x28 */
    II(0x10129fec, 0x6)   jzd(0x1012a0da, 0xe8);                /* jz dword 0x1012a0da */
    II(0x10129ff2, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x4);   /* mov dword [ebp-0x14], 0x4 */
l_0x10129ff9:
    II(0x10129ff9, 0x3)   dec(memd_a32(ss, ebp - 0x14));        /* dec dword [ebp-0x14] */
    II(0x10129ffc, 0x5)   cmp(memw_a32(ss, ebp - 0x14), -0x1 /* 0xff */); /* cmp word [ebp-0x14], 0xff */
    II(0x1012a001, 0x2)   jzd(0x1012a010, 0xd);                 /* jz 0x1012a010 */
    II(0x1012a003, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1012a007, 0x7)   mov(memb_a32(ds, eax + 0x101c59e0), 0); /* mov byte [eax+0x101c59e0], 0x0 */
    II(0x1012a00e, 0x2)   jmpd(0x10129ff9, -0x17);              /* jmp 0x10129ff9 */
l_0x1012a010:
    II(0x1012a010, 0x7)   mov(memb_a32(ds, 0x101c5c1c), 0x17);  /* mov byte [0x101c5c1c], 0x17 */
    II(0x1012a017, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1012a01a, 0x5)   calld(0x100763a0, -0xb3c7f);          /* call 0x100763a0 */
    II(0x1012a01f, 0x5)   calld(0x10076154, -0xb3ed0);          /* call 0x10076154 */
    II(0x1012a024, 0x6)   mov(memw_a32(ds, 0x101c5c1d), ax);    /* mov [0x101c5c1d], ax */
    II(0x1012a02a, 0x5)   mov(edx, 0x101c5c21);                 /* mov edx, 0x101c5c21 */
    II(0x1012a02f, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1012a032, 0x5)   calld(0x10076408, -0xb3c2f);          /* call 0x10076408 */
    II(0x1012a037, 0x5)   calld(0x101262e2, -0x3d5a);           /* call 0x101262e2 */
    II(0x1012a03c, 0x6)   mov(memw_a32(ds, 0x101c5c1f), ax);    /* mov [0x101c5c1f], ax */
    II(0x1012a042, 0x5)   mov(eax, 0x4);                        /* mov eax, 0x4 */
    II(0x1012a047, 0x5)   calld(0x10125be9, -0x4463);           /* call 0x10125be9 */
    II(0x1012a04c, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
l_0x1012a050:
    II(0x1012a050, 0x4)   cmp(memb_a32(ss, ebp - 0x10), 0);     /* cmp byte [ebp-0x10], 0x0 */
    II(0x1012a054, 0x2)   jzd(0x1012a05f, 0x9);                 /* jz 0x1012a05f */
    II(0x1012a056, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x1012a05d, 0x2)   jnzd(0x1012a064, 0x5);                /* jnz 0x1012a064 */
l_0x1012a05f:
    II(0x1012a05f, 0x5)   jmpd(0x1012a0da, 0x76);               /* jmp 0x1012a0da */
l_0x1012a064:
    II(0x1012a064, 0x5)   calld(0x101275ed, -0x2a7c);           /* call 0x101275ed */
    II(0x1012a069, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012a06b, 0x5)   calld(0x10100efe, -0x29172);          /* call 0x10100efe */
    II(0x1012a070, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x1012a074, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x4);   /* mov dword [ebp-0x14], 0x4 */
l_0x1012a07b:
    II(0x1012a07b, 0x3)   dec(memd_a32(ss, ebp - 0x14));        /* dec dword [ebp-0x14] */
    II(0x1012a07e, 0x5)   cmp(memw_a32(ss, ebp - 0x14), -0x1 /* 0xff */); /* cmp word [ebp-0x14], 0xff */
    II(0x1012a083, 0x2)   jzd(0x1012a0b8, 0x33);                /* jz 0x1012a0b8 */
    II(0x1012a085, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1012a089, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1012a08f, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x1012a095, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1012a09a, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x1012a09d, 0x2)   jnzd(0x1012a0b6, 0x17);               /* jnz 0x1012a0b6 */
    II(0x1012a09f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1012a0a3, 0x6)   mov(al, memb_a32(ds, eax + 0x101c59e0)); /* mov al, [eax+0x101c59e0] */
    II(0x1012a0a9, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1012a0ae, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1012a0b0, 0x2)   jnzd(0x1012a0b6, 0x4);                /* jnz 0x1012a0b6 */
    II(0x1012a0b2, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
l_0x1012a0b6:
    II(0x1012a0b6, 0x2)   jmpd(0x1012a07b, -0x3d);              /* jmp 0x1012a07b */
l_0x1012a0b8:
    II(0x1012a0b8, 0x5)   calld(/* sys */ 0x1016b208, 0x4114b); /* call 0x1016b208 */
    II(0x1012a0bd, 0x3)   cmp(eax, 0x1b);                       /* cmp eax, 0x1b */
    II(0x1012a0c0, 0x2)   jnzd(0x1012a0d5, 0x13);               /* jnz 0x1012a0d5 */
    II(0x1012a0c2, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x1012a0c9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012a0cb, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1012a0ce, 0x5)   calld(0x10075f6c, -0xb4167);          /* call 0x10075f6c */
    II(0x1012a0d3, 0x2)   jmpd(0x1012a0fc, 0x27);               /* jmp 0x1012a0fc */
l_0x1012a0d5:
    II(0x1012a0d5, 0x5)   jmpd(0x1012a050, -0x8a);              /* jmp 0x1012a050 */
l_0x1012a0da:
    II(0x1012a0da, 0x5)   jmpd(0x10129fc5, -0x11a);             /* jmp 0x10129fc5 */
l_0x1012a0df:
    II(0x1012a0df, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x1);    /* mov dword [ebp-0xc], 0x1 */
    II(0x1012a0e6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012a0e8, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x1012a0eb, 0x5)   calld(0x10075f6c, -0xb4184);          /* call 0x10075f6c */
    II(0x1012a0f0, 0x2)   jmpd(0x1012a0fc, 0xa);                /* jmp 0x1012a0fc */
//  II(0x1012a0f2, 0xa)   /* Недостижимый код. */
l_0x1012a0fc:
    II(0x1012a0fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012a0ff, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1012a101, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1012a102, 0x1)   popd(edi);                            /* pop edi */
    II(0x1012a103, 0x1)   popd(esi);                            /* pop esi */
    II(0x1012a104, 0x1)   popd(edx);                            /* pop edx */
    II(0x1012a105, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1012a106, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1012a107, 0x1)   retd();                               /* ret */
FUNC_END

