FUNC_BEGIN(0x100c0c2f, 0x5b145c4d06f643c7, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0x19, 0x51, 0xa, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0xe4, 0x56, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x5a, 0x58, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0x90, 0x5f, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xff, 0xa0, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0xd0, 0, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0x1e, 0x57, 0xfb, 0xff, 0x8a, 0x40, 0x50, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7e, 0xe, 0x8d, 0x45, 0xec, 0xe8, 0xa, 0x57, 0xfb, 0xff, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xec, 0xe8, 0xfa, 0x56, 0xfb, 0xff, 0x80, 0x78, 0x3d, 0x1a, 0x75, 0x5, 0xe9, 0x94, 0, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0xe7, 0x56, 0xfb, 0xff, 0xe8, 0x7e, 0x55, 0xfb, 0xff, 0x66, 0x8b, 0x40, 0x12, 0x89, 0x45, 0xf0, 0x8d, 0x45, 0xec, 0xe8, 0xd3, 0x56, 0xfb, 0xff, 0xe8, 0x6a, 0x55, 0xfb, 0xff, 0x80, 0x78, 0x16, 0, 0x75, 0x4, 0x83, 0x45, 0xf0, 0xfd, 0x8d, 0x45, 0xec, 0xe8, 0xbc, 0x56, 0xfb, 0xff, 0xe8, 0x53, 0x55, 0xfb, 0xff, 0x66, 0x8b, 0x50, 0xe, 0xf7, 0xda, 0x8d, 0x45, 0xec, 0xe8, 0xa9, 0x56, 0xfb, 0xff, 0x8a, 0x40, 0x50, 0x30, 0xe4, 0xf, 0xaf, 0xd0, 0x89, 0x55, 0xf4, 0xf, 0xbf, 0x45, 0xf0, 0x85, 0xc0, 0x7e, 0x3b, 0x31, 0xc0, 0x50, 0xf, 0xbf, 0x4d, 0xf4, 0xf, 0xbf, 0x75, 0xf0, 0x8d, 0x45, 0xec, 0xe8, 0x83, 0x56, 0xfb, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8d, 0x45, 0xec, 0xe8, 0x75, 0x56, 0xfb, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xe8, 0xe8, 0x73, 0x5d, 0xfb, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x89, 0xf3, 0xe8, 0xf5, 0xfb, 0xff, 0xff, 0xe9, 0x16, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x18, 0x52, 0xfb, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100c0c2f, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x100c0c34, 0x5)   calld(sys_check_available_stack_size, 0xa5119); /* call 0x10165d52 */
    II(0x100c0c39, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100c0c3a, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100c0c3b, 0x1)   pushd(esi);                           /* push esi */
    II(0x100c0c3c, 0x1)   pushd(edi);                           /* push edi */
    II(0x100c0c3d, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100c0c3e, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100c0c40, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x100c0c46, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100c0c49, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100c0c4c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100c0c4f, 0x5)   calld(0x10076338, -0x4a91c);          /* call 0x10076338 */
    II(0x100c0c54, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c0c56, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100c0c59, 0x5)   calld(0x100764b8, -0x4a7a6);          /* call 0x100764b8 */
    II(0x100c0c5e, 0x2)   jmpd(0x100c0c68, 0x8);                /* jmp 0x100c0c68 */
l_0x100c0c60:
    II(0x100c0c60, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100c0c63, 0x5)   calld(0x10076bf8, -0x4a070);          /* call 0x10076bf8 */
l_0x100c0c68:
    II(0x100c0c68, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c0c6a, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100c0c6d, 0x5)   calld(0x1013ad71, 0x7a0ff);           /* call 0x1013ad71 */
    II(0x100c0c72, 0x2)   test(al, al);                         /* test al, al */
    II(0x100c0c74, 0x6)   jzd(0x100c0d4a, 0xd0);                /* jz dword 0x100c0d4a */
    II(0x100c0c7a, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100c0c7d, 0x5)   calld(0x100763a0, -0x4a8e2);          /* call 0x100763a0 */
    II(0x100c0c82, 0x3)   mov(al, memb_a32(ds, eax + 0x50));    /* mov al, [eax+0x50] */
    II(0x100c0c85, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100c0c8a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c0c8c, 0x2)   jled(0x100c0c9c, 0xe);                /* jle 0x100c0c9c */
    II(0x100c0c8e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100c0c91, 0x5)   calld(0x100763a0, -0x4a8f6);          /* call 0x100763a0 */
    II(0x100c0c96, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x100c0c9a, 0x2)   jnzd(0x100c0c9e, 0x2);                /* jnz 0x100c0c9e */
l_0x100c0c9c:
    II(0x100c0c9c, 0x2)   jmpd(0x100c0cac, 0xe);                /* jmp 0x100c0cac */
l_0x100c0c9e:
    II(0x100c0c9e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100c0ca1, 0x5)   calld(0x100763a0, -0x4a906);          /* call 0x100763a0 */
    II(0x100c0ca6, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1a);  /* cmp byte [eax+0x3d], 0x1a */
    II(0x100c0caa, 0x2)   jnzd(0x100c0cb1, 0x5);                /* jnz 0x100c0cb1 */
l_0x100c0cac:
    II(0x100c0cac, 0x5)   jmpd(0x100c0d45, 0x94);               /* jmp 0x100c0d45 */
l_0x100c0cb1:
    II(0x100c0cb1, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100c0cb4, 0x5)   calld(0x100763a0, -0x4a919);          /* call 0x100763a0 */
    II(0x100c0cb9, 0x5)   calld(0x1007623c, -0x4aa82);          /* call 0x1007623c */
    II(0x100c0cbe, 0x4)   mov(ax, memw_a32(ds, eax + 0x12));    /* mov ax, [eax+0x12] */
    II(0x100c0cc2, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100c0cc5, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100c0cc8, 0x5)   calld(0x100763a0, -0x4a92d);          /* call 0x100763a0 */
    II(0x100c0ccd, 0x5)   calld(0x1007623c, -0x4aa96);          /* call 0x1007623c */
    II(0x100c0cd2, 0x4)   cmp(memb_a32(ds, eax + 0x16), 0);     /* cmp byte [eax+0x16], 0x0 */
    II(0x100c0cd6, 0x2)   jnzd(0x100c0cdc, 0x4);                /* jnz 0x100c0cdc */
    II(0x100c0cd8, 0x4)   add(memd_a32(ss, ebp - 0x10), -0x3 /* 0xfd */); /* add dword [ebp-0x10], 0xfd */
l_0x100c0cdc:
    II(0x100c0cdc, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100c0cdf, 0x5)   calld(0x100763a0, -0x4a944);          /* call 0x100763a0 */
    II(0x100c0ce4, 0x5)   calld(0x1007623c, -0x4aaad);          /* call 0x1007623c */
    II(0x100c0ce9, 0x4)   mov(dx, memw_a32(ds, eax + 0xe));     /* mov dx, [eax+0xe] */
    II(0x100c0ced, 0x2)   neg(edx);                             /* neg edx */
    II(0x100c0cef, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100c0cf2, 0x5)   calld(0x100763a0, -0x4a957);          /* call 0x100763a0 */
    II(0x100c0cf7, 0x3)   mov(al, memb_a32(ds, eax + 0x50));    /* mov al, [eax+0x50] */
    II(0x100c0cfa, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x100c0cfc, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100c0cff, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100c0d02, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100c0d06, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c0d08, 0x2)   jled(0x100c0d45, 0x3b);               /* jle 0x100c0d45 */
    II(0x100c0d0a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100c0d0c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100c0d0d, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0xc));  /* movsx ecx, word [ebp-0xc] */
    II(0x100c0d11, 0x4)   movsx(esi, memw_a32(ss, ebp - 0x10)); /* movsx esi, word [ebp-0x10] */
    II(0x100c0d15, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100c0d18, 0x5)   calld(0x100763a0, -0x4a97d);          /* call 0x100763a0 */
    II(0x100c0d1d, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100c0d20, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100c0d23, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100c0d26, 0x5)   calld(0x100763a0, -0x4a98b);          /* call 0x100763a0 */
    II(0x100c0d2b, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100c0d2e, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100c0d31, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100c0d34, 0x5)   calld(0x10076aac, -0x4a28d);          /* call 0x10076aac */
    II(0x100c0d39, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100c0d3b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c0d3e, 0x2)   mov(ebx, esi);                        /* mov ebx, esi */
    II(0x100c0d40, 0x5)   calld(0x100c093a, -0x40b);            /* call 0x100c093a */
l_0x100c0d45:
    II(0x100c0d45, 0x5)   jmpd(0x100c0c60, -0xea);              /* jmp 0x100c0c60 */
l_0x100c0d4a:
    II(0x100c0d4a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100c0d4c, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100c0d4f, 0x5)   calld(0x10075f6c, -0x4ade8);          /* call 0x10075f6c */
    II(0x100c0d54, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100c0d56, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100c0d57, 0x1)   popd(edi);                            /* pop edi */
    II(0x100c0d58, 0x1)   popd(esi);                            /* pop esi */
    II(0x100c0d59, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100c0d5a, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100c0d5b, 0x1)   retd();                               /* ret */
FUNC_END

