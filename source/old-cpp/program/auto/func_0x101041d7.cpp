FUNC_BEGIN(0x101041d7, 0xb3c50c1158a05902, 0x20, ({0x68, 0x44, 0, 0, 0, 0xe8, 0x71, 0x1b, 0x6, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x2c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xdc, 0xe8, 0x20, 0xc5, 0xfd, 0xff, 0x89, 0x45, 0xe0, 0x80, 0x65, 0xf4, 0xfe, 0x8b, 0x45, 0xf8, 0xe8, 0xe2, 0xfd, 0xff, 0xff, 0xba, 0xb6, 0x32, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x8e, 0x1e, 0x4, 0, 0x89, 0x45, 0xf0, 0xbb, 0xfc, 0x56, 0x1b, 0x10, 0x8b, 0x55, 0xf8, 0x8b, 0x42, 0x2, 0x89, 0xda, 0xe8, 0x87, 0x1d, 0x6, 0, 0xe8, 0xa2, 0x1d, 0x6, 0, 0x8b, 0x45, 0xf0, 0x66, 0x89, 0x45, 0xec, 0xbb, 0xfc, 0x56, 0x1b, 0x10, 0x8b, 0x55, 0xea, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xea, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0xa, 0x83, 0xc0, 0x4, 0xe8, 0xb7, 0x1d, 0x6, 0, 0xe8, 0xa1, 0xdb, 0x6, 0, 0x8b, 0x55, 0xf8, 0x89, 0x42, 0x2, 0x8b, 0x45, 0xf0, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x2, 0x31, 0xc9, 0xbb, 0xc0, 0x32, 0x1a, 0x10, 0x8d, 0x55, 0xe4, 0x8b, 0x45, 0xfc, 0xe8, 0xdd, 0x1f, 0x4, 0, 0x89, 0xc2, 0x8d, 0x45, 0xdc, 0xe8, 0x1b, 0xc4, 0xfd, 0xff, 0x89, 0xca, 0xe8, 0xe1, 0x6a, 0x3, 0, 0x84, 0xc0, 0x74, 0x9, 0xc7, 0x45, 0xd8, 0x1, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xd4, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x48, 0xc1, 0xfd, 0xff, 0x83, 0x7d, 0xd4, 0, 0x74, 0x38, 0xba, 0xc5, 0x32, 0x1a, 0x10, 0x8d, 0x45, 0xdc, 0xe8, 0x81, 0xc3, 0xfd, 0xff, 0xe8, 0xde, 0x1d, 0x4, 0, 0x89, 0x45, 0xe8, 0x8d, 0x45, 0xdc, 0xe8, 0xe9, 0x5, 0, 0, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xe8, 0x6b, 0xd8, 0xa, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x2, 0x1, 0xd8, 0xe8, 0xaf, 0xeb, 0xff, 0xff, 0xe9, 0x7b, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0, 0xc1, 0xfd, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x101041d7, 0x5)   pushd(0x44);                          /* push dword 0x44 */
    II(0x101041dc, 0x5)   calld(sys_check_available_stack_size, 0x61b71); /* call 0x10165d52 */
    II(0x101041e1, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101041e2, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101041e3, 0x1)   pushd(esi);                           /* push esi */
    II(0x101041e4, 0x1)   pushd(edi);                           /* push edi */
    II(0x101041e5, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101041e6, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101041e8, 0x6)   sub(esp, 0x2c);                       /* sub esp, 0x2c */
    II(0x101041ee, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x101041f1, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x101041f4, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x101041f8, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x101041fb, 0x5)   calld(0x100e0720, -0x23ae0);          /* call 0x100e0720 */
    II(0x10104200, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10104203, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x10104207, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1010420a, 0x5)   calld(0x10103ff1, -0x21e);            /* call 0x10103ff1 */
    II(0x1010420f, 0x5)   mov(edx, 0x101a32b6);                 /* mov edx, 0x101a32b6 */ /* "hash_size" */
    II(0x10104214, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10104217, 0x5)   calld(0x101460aa, 0x41e8e);           /* call 0x101460aa */
    II(0x1010421c, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1010421f, 0x5)   mov(ebx, 0x101b56fc);                 /* mov ebx, 0x101b56fc */
    II(0x10104224, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10104227, 0x3)   mov(eax, memd_a32(ds, edx + 0x2));    /* mov eax, [edx+0x2] */
    II(0x1010422a, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x1010422c, 0x5)   calld(sys_call_dtor_arr, 0x61d87);    /* call 0x10165fb8 */
    II(0x10104231, 0x5)   calld(sys_delete_arr, 0x61da2);       /* call 0x10165fd8 */
    II(0x10104236, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10104239, 0x4)   mov(memw_a32(ss, ebp - 0x14), ax);    /* mov [ebp-0x14], ax */
    II(0x1010423d, 0x5)   mov(ebx, 0x101b56fc);                 /* mov ebx, 0x101b56fc */
    II(0x10104242, 0x3)   mov(edx, memd_a32(ss, ebp - 0x16));   /* mov edx, [ebp-0x16] */
    II(0x10104245, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10104248, 0x3)   mov(eax, memd_a32(ss, ebp - 0x16));   /* mov eax, [ebp-0x16] */
    II(0x1010424b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1010424e, 0x3)   imul(eax, eax, 0xa);                  /* imul eax, eax, 0xa */
    II(0x10104251, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x10104254, 0x5)   calld(sys_new_arr, 0x61db7);          /* call 0x10166010 */
    II(0x10104259, 0x5)   calld(sys_call_ctor_arr, 0x6dba1);    /* call 0x10171dff */
    II(0x1010425e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10104261, 0x3)   mov(memd_a32(ds, edx + 0x2), eax);    /* mov [edx+0x2], eax */
    II(0x10104264, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10104267, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1010426a, 0x3)   mov(memw_a32(ds, edx), ax);           /* mov [edx], ax */
l_0x1010426d:
    II(0x1010426d, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1010426f, 0x5)   mov(ebx, 0x101a32c0);                 /* mov ebx, 0x101a32c0 */ /* "list" */
    II(0x10104274, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x10104277, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010427a, 0x5)   calld(0x1014625c, 0x41fdd);           /* call 0x1014625c */
    II(0x1010427f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10104281, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10104284, 0x5)   calld(0x100e06a4, -0x23be5);          /* call 0x100e06a4 */
    II(0x10104289, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x1010428b, 0x5)   calld(0x1013ad71, 0x36ae1);           /* call 0x1013ad71 */
    II(0x10104290, 0x2)   test(al, al);                         /* test al, al */
    II(0x10104292, 0x2)   jzd(0x1010429d, 0x9);                 /* jz 0x1010429d */
    II(0x10104294, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0x1);   /* mov dword [ebp-0x28], 0x1 */
    II(0x1010429b, 0x2)   jmpd(0x101042a4, 0x7);                /* jmp 0x101042a4 */
l_0x1010429d:
    II(0x1010429d, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
l_0x101042a4:
    II(0x101042a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x101042a7, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x101042aa, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101042ac, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x101042af, 0x5)   calld(0x100e03fc, -0x23eb8);          /* call 0x100e03fc */
    II(0x101042b4, 0x4)   cmp(memd_a32(ss, ebp - 0x2c), 0);     /* cmp dword [ebp-0x2c], 0x0 */
    II(0x101042b8, 0x2)   jzd(0x101042f2, 0x38);                /* jz 0x101042f2 */
    II(0x101042ba, 0x5)   mov(edx, 0x101a32c5);                 /* mov edx, 0x101a32c5 */ /* "index" */
    II(0x101042bf, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x101042c2, 0x5)   calld(0x100e0648, -0x23c7f);          /* call 0x100e0648 */
    II(0x101042c7, 0x5)   calld(0x101460aa, 0x41dde);           /* call 0x101460aa */
    II(0x101042cc, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x101042cf, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x101042d2, 0x5)   calld(0x101048c0, 0x5e9);             /* call 0x101048c0 */
    II(0x101042d7, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101042d9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x101042dd, 0x3)   imul(ebx, eax, 0xa);                  /* imul ebx, eax, 0xa */
    II(0x101042e0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101042e3, 0x3)   mov(eax, memd_a32(ds, eax + 0x2));    /* mov eax, [eax+0x2] */
    II(0x101042e6, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x101042e8, 0x5)   calld(0x10102e9c, -0x1451);           /* call 0x10102e9c */
    II(0x101042ed, 0x5)   jmpd(0x1010426d, -0x85);              /* jmp 0x1010426d */
l_0x101042f2:
    II(0x101042f2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101042f4, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x101042f7, 0x5)   calld(0x100e03fc, -0x23f00);          /* call 0x100e03fc */
    II(0x101042fc, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101042fe, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101042ff, 0x1)   popd(edi);                            /* pop edi */
    II(0x10104300, 0x1)   popd(esi);                            /* pop esi */
    II(0x10104301, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10104302, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10104303, 0x1)   retd();                               /* ret */
FUNC_END

