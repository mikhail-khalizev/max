FUNC_BEGIN(0x100a8a3d, 0x22f4a1a56e080716, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xb, 0xd3, 0xb, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x4e, 0x8b, 0x45, 0xfc, 0xe8, 0x30, 0xe3, 0xfc, 0xff, 0x84, 0xc0, 0x74, 0x12, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xf0, 0xff, 0x52, 0x3c, 0xc6, 0x45, 0xf4, 0x1, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100a8a3d, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x100a8a42, 0x5)   calld(sys_check_available_stack_size, 0xbd30b); /* call 0x10165d52 */
    II(0x100a8a47, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a8a48, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a8a49, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a8a4a, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a8a4b, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a8a4c, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a8a4e, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x100a8a54, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a8a57, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100a8a5a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100a8a5d, 0x3)   add(edx, 0x4e);                       /* add edx, 0x4e */
    II(0x100a8a60, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a8a63, 0x5)   calld(0x10076d98, -0x31cd0);          /* call 0x10076d98 */
    II(0x100a8a68, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a8a6a, 0x2)   jzd(0x100a8a7e, 0x12);                /* jz 0x100a8a7e */
    II(0x100a8a6c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a8a6f, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x100a8a72, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100a8a75, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100a8a78, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100a8a7b, 0x3)   calld_abs(memd_a32(ds, edx + 0x3c));  /* call dword near [edx+0x3c] */
l_0x100a8a7e:
    II(0x100a8a7e, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100a8a82, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100a8a85, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a8a87, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a8a88, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a8a89, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a8a8a, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a8a8b, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a8a8c, 0x1)   retd();                               /* ret */
FUNC_END

