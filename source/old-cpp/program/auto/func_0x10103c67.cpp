FUNC_BEGIN(0x10103c67, 0xc95a41fa49738d00, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0xe1, 0x20, 0x6, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0x44, 0x9, 0, 0, 0x89, 0x45, 0xec, 0x80, 0x65, 0xf4, 0xfe, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x18, 0xba, 0x8, 0x32, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x4b, 0x38, 0x4, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x18, 0xc1, 0xfb, 0x10, 0xba, 0x12, 0x32, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x36, 0x38, 0x4, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x8b, 0x55, 0xf8, 0x66, 0x3b, 0x2, 0xf, 0x8d, 0xa5, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf0, 0x6b, 0xd0, 0xa, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x4, 0x1, 0xd0, 0xe8, 0x9f, 0x2e, 0xf7, 0xff, 0x98, 0x85, 0xc0, 0xf, 0x84, 0x83, 0, 0, 0, 0xba, 0x1a, 0x32, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xd7, 0x36, 0x4, 0, 0xf, 0xbf, 0x5d, 0xf0, 0xba, 0x20, 0x32, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xdd, 0x37, 0x4, 0, 0xf, 0xbf, 0x45, 0xf0, 0x6b, 0xd0, 0xa, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x4, 0x1, 0xd0, 0xe8, 0x78, 0x9, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0xde, 0x7, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0xb8, 0x2e, 0xf7, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x27, 0x70, 0x3, 0, 0x84, 0xc0, 0x74, 0x27, 0xba, 0x26, 0x32, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x83, 0x36, 0x4, 0, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xe8, 0xe8, 0x4a, 0x7, 0, 0, 0xe8, 0x76, 0xf4, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xd3, 0x36, 0x4, 0, 0xeb, 0xc3, 0x8b, 0x45, 0xfc, 0xe8, 0xc9, 0x36, 0x4, 0, 0xe9, 0x46, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xe4, 0x6, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10103c67, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x10103c6c, 0x5)   calld(sys_check_available_stack_size, 0x620e1); /* call 0x10165d52 */
    II(0x10103c71, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10103c72, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10103c73, 0x1)   pushd(esi);                           /* push esi */
    II(0x10103c74, 0x1)   pushd(edi);                           /* push edi */
    II(0x10103c75, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10103c76, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10103c78, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x10103c7e, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10103c81, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x10103c84, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x10103c88, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10103c8b, 0x5)   calld(0x101045d4, 0x944);             /* call 0x101045d4 */
    II(0x10103c90, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10103c93, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x10103c97, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10103c9a, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x10103c9d, 0x5)   mov(edx, 0x101a3208);                 /* mov edx, 0x101a3208 */ /* "hash_size" */
    II(0x10103ca2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10103ca5, 0x5)   calld(0x101474f5, 0x4384b);           /* call 0x101474f5 */
    II(0x10103caa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10103cad, 0x2)   mov(ebx, memd_a32(ds, eax));          /* mov ebx, [eax] */
    II(0x10103caf, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10103cb2, 0x5)   mov(edx, 0x101a3212);                 /* mov edx, 0x101a3212 */ /* "x_shift" */
    II(0x10103cb7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10103cba, 0x5)   calld(0x101474f5, 0x43836);           /* call 0x101474f5 */
    II(0x10103cbf, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x10103cc6, 0x2)   jmpd(0x10103cce, 0x6);                /* jmp 0x10103cce */
l_0x10103cc8:
    II(0x10103cc8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10103ccb, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x10103cce:
    II(0x10103cce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10103cd1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10103cd4, 0x3)   cmp(ax, memw_a32(ds, edx));           /* cmp ax, [edx] */
    II(0x10103cd7, 0x6)   jged(0x10103d82, 0xa5);               /* jge dword 0x10103d82 */
    II(0x10103cdd, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10103ce1, 0x3)   imul(edx, eax, 0xa);                  /* imul edx, eax, 0xa */
    II(0x10103ce4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10103ce7, 0x3)   mov(eax, memd_a32(ds, eax + 0x4));    /* mov eax, [eax+0x4] */
    II(0x10103cea, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10103cec, 0x5)   calld(0x10076b90, -0x8d161);          /* call 0x10076b90 */
    II(0x10103cf1, 0x1)   cwde();                               /* cwde */
    II(0x10103cf2, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10103cf4, 0x6)   jzd(0x10103d7d, 0x83);                /* jz dword 0x10103d7d */
    II(0x10103cfa, 0x5)   mov(edx, 0x101a321a);                 /* mov edx, 0x101a321a */ /* "entry" */
    II(0x10103cff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10103d02, 0x5)   calld(0x101473de, 0x436d7);           /* call 0x101473de */
    II(0x10103d07, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x10)); /* movsx ebx, word [ebp-0x10] */
    II(0x10103d0b, 0x5)   mov(edx, 0x101a3220);                 /* mov edx, 0x101a3220 */ /* "index" */
    II(0x10103d10, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10103d13, 0x5)   calld(0x101474f5, 0x437dd);           /* call 0x101474f5 */
    II(0x10103d18, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10103d1c, 0x3)   imul(edx, eax, 0xa);                  /* imul edx, eax, 0xa */
    II(0x10103d1f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10103d22, 0x3)   mov(eax, memd_a32(ds, eax + 0x4));    /* mov eax, [eax+0x4] */
    II(0x10103d25, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10103d27, 0x5)   calld(0x101046a4, 0x978);             /* call 0x101046a4 */
    II(0x10103d2c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10103d2e, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10103d31, 0x5)   calld(0x10104514, 0x7de);             /* call 0x10104514 */
    II(0x10103d36, 0x2)   jmpd(0x10103d40, 0x8);                /* jmp 0x10103d40 */
l_0x10103d38:
    II(0x10103d38, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10103d3b, 0x5)   calld(0x10076bf8, -0x8d148);          /* call 0x10076bf8 */
l_0x10103d40:
    II(0x10103d40, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10103d42, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10103d45, 0x5)   calld(0x1013ad71, 0x37027);           /* call 0x1013ad71 */
    II(0x10103d4a, 0x2)   test(al, al);                         /* test al, al */
    II(0x10103d4c, 0x2)   jzd(0x10103d75, 0x27);                /* jz 0x10103d75 */
    II(0x10103d4e, 0x5)   mov(edx, 0x101a3226);                 /* mov edx, 0x101a3226 */ /* "list" */
    II(0x10103d53, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10103d56, 0x5)   calld(0x101473de, 0x43683);           /* call 0x101473de */
    II(0x10103d5b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10103d5e, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10103d61, 0x5)   calld(0x101044b0, 0x74a);             /* call 0x101044b0 */
    II(0x10103d66, 0x5)   calld(0x101031e1, -0xb8a);            /* call 0x101031e1 */
    II(0x10103d6b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10103d6e, 0x5)   calld(0x10147446, 0x436d3);           /* call 0x10147446 */
    II(0x10103d73, 0x2)   jmpd(0x10103d38, -0x3d);              /* jmp 0x10103d38 */
l_0x10103d75:
    II(0x10103d75, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10103d78, 0x5)   calld(0x10147446, 0x436c9);           /* call 0x10147446 */
l_0x10103d7d:
    II(0x10103d7d, 0x5)   jmpd(0x10103cc8, -0xba);              /* jmp 0x10103cc8 */
l_0x10103d82:
    II(0x10103d82, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10103d84, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10103d87, 0x5)   calld(0x10104470, 0x6e4);             /* call 0x10104470 */
    II(0x10103d8c, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10103d8e, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10103d8f, 0x1)   popd(edi);                            /* pop edi */
    II(0x10103d90, 0x1)   popd(esi);                            /* pop esi */
    II(0x10103d91, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10103d92, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10103d93, 0x1)   retd();                               /* ret */
FUNC_END

