FUNC_BEGIN(0x10151399, 0xc1e1ed343a13bbab, 0x20, ({0x68, 0x54, 0, 0, 0, 0xe8, 0xaf, 0x49, 0x1, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x28, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xe4, 0xe8, 0x2e, 0x53, 0xf2, 0xff, 0x89, 0x45, 0xe0, 0x80, 0x65, 0xf4, 0xfe, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x33, 0xf6, 0x80, 0xc0, 0x81, 0x1c, 0x10, 0x10, 0x74, 0x10, 0xc7, 0x45, 0xec, 0x13, 0, 0, 0, 0xc7, 0x45, 0xe8, 0xf, 0, 0, 0, 0xeb, 0xe, 0xc7, 0x45, 0xec, 0x14, 0, 0, 0, 0xc7, 0x45, 0xe8, 0x10, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x41, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x3f, 0xc1, 0xf8, 0x10, 0xe8, 0x33, 0x29, 0xf2, 0xff, 0xa8, 0x6, 0x74, 0x8, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xeb, 0x50, 0xe8, 0x5e, 0x17, 0xfb, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x73, 0x17, 0xfb, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x41, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x3f, 0xc1, 0xf8, 0x10, 0x50, 0x31, 0xc9, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xec, 0x8d, 0x45, 0xdc, 0xe8, 0x73, 0x8e, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xbb, 0x4a, 0xf2, 0xff, 0xe8, 0xe, 0x17, 0xfb, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x23, 0x17, 0xfb, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xf, 0xbf, 0x45, 0xf0, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x41, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x3f, 0xc1, 0xf8, 0x10, 0x50, 0x31, 0xc9, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xe8, 0x8d, 0x45, 0xd8, 0xe8, 0x21, 0x8e, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0x55, 0x97, 0xf3, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x5f, 0x4a, 0xf2, 0xff, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xe4, 0xe8, 0x9c, 0x50, 0xf2, 0xff, 0xe8, 0xbb, 0x94, 0xf3, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x45, 0x4a, 0xf2, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10151399, 0x5)   pushd(0x54);                          /* push dword 0x54 */
    II(0x1015139e, 0x5)   calld(sys_check_available_stack_size, 0x149af); /* call 0x10165d52 */
    II(0x101513a3, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101513a4, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101513a5, 0x1)   pushd(esi);                           /* push esi */
    II(0x101513a6, 0x1)   pushd(edi);                           /* push edi */
    II(0x101513a7, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101513a8, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101513aa, 0x6)   sub(esp, 0x28);                       /* sub esp, 0x28 */
    II(0x101513b0, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x101513b3, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x101513b6, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x101513ba, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x101513bd, 0x5)   calld(my_ctor_0x101b38f8, -0xdacd2);  /* call 0x100766f0 */
    II(0x101513c2, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x101513c5, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x101513c9, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x101513d0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x101513d4, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x101513d7, 0x7)   test(memb_a32(ds, eax + 0x101c81c0), 0x10); /* test byte [eax+0x101c81c0], 0x10 */
    II(0x101513de, 0x2)   jzd(0x101513f0, 0x10);                /* jz 0x101513f0 */
    II(0x101513e0, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x13);  /* mov dword [ebp-0x14], 0x13 */
    II(0x101513e7, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0xf);   /* mov dword [ebp-0x18], 0xf */
    II(0x101513ee, 0x2)   jmpd(0x101513fe, 0xe);                /* jmp 0x101513fe */
l_0x101513f0:
    II(0x101513f0, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x14);  /* mov dword [ebp-0x14], 0x14 */
    II(0x101513f7, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x10);  /* mov dword [ebp-0x18], 0x10 */
l_0x101513fe:
    II(0x101513fe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10151401, 0x3)   mov(edx, memd_a32(ds, eax + 0x41));   /* mov edx, [eax+0x41] */
    II(0x10151404, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10151407, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015140a, 0x3)   mov(eax, memd_a32(ds, eax + 0x3f));   /* mov eax, [eax+0x3f] */
    II(0x1015140d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10151410, 0x5)   calld(0x10073d48, -0xdd6cd);          /* call 0x10073d48 */
    II(0x10151415, 0x2)   test(al, 0x6);                        /* test al, 0x6 */
    II(0x10151417, 0x2)   jzd(0x10151421, 0x8);                 /* jz 0x10151421 */
    II(0x10151419, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1015141c, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
    II(0x1015141f, 0x2)   jmpd(0x10151471, 0x50);               /* jmp 0x10151471 */
l_0x10151421:
    II(0x10151421, 0x5)   calld(0x10102b84, -0x4e8a2);          /* call 0x10102b84 */
    II(0x10151426, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015142b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015142c, 0x5)   calld(0x10102ba4, -0x4e88d);          /* call 0x10102ba4 */
    II(0x10151431, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10151436, 0x1)   pushd(eax);                           /* push eax */
    II(0x10151437, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10151439, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015143a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015143d, 0x3)   mov(eax, memd_a32(ds, eax + 0x41));   /* mov eax, [eax+0x41] */
    II(0x10151440, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10151443, 0x1)   pushd(eax);                           /* push eax */
    II(0x10151444, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10151447, 0x3)   mov(eax, memd_a32(ds, eax + 0x3f));   /* mov eax, [eax+0x3f] */
    II(0x1015144a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015144d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015144e, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10151450, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10151453, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10151456, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10151458, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015145b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1015145f, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10151462, 0x5)   calld(0x1015a2da, 0x8e73);            /* call 0x1015a2da */
    II(0x10151467, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10151469, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1015146c, 0x5)   calld(0x10075f2c, -0xdb545);          /* call 0x10075f2c */
l_0x10151471:
    II(0x10151471, 0x5)   calld(0x10102b84, -0x4e8f2);          /* call 0x10102b84 */
    II(0x10151476, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015147b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015147c, 0x5)   calld(0x10102ba4, -0x4e8dd);          /* call 0x10102ba4 */
    II(0x10151481, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10151486, 0x1)   pushd(eax);                           /* push eax */
    II(0x10151487, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1015148b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015148c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015148f, 0x3)   mov(eax, memd_a32(ds, eax + 0x41));   /* mov eax, [eax+0x41] */
    II(0x10151492, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10151495, 0x1)   pushd(eax);                           /* push eax */
    II(0x10151496, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10151499, 0x3)   mov(eax, memd_a32(ds, eax + 0x3f));   /* mov eax, [eax+0x3f] */
    II(0x1015149c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015149f, 0x1)   pushd(eax);                           /* push eax */
    II(0x101514a0, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x101514a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101514a5, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x101514a8, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x101514aa, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x101514ad, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x101514b1, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x101514b4, 0x5)   calld(0x1015a2da, 0x8e21);            /* call 0x1015a2da */
    II(0x101514b9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x101514bb, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x101514be, 0x5)   calld(0x1008ac18, -0xc68ab);          /* call 0x1008ac18 */
    II(0x101514c3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101514c5, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x101514c8, 0x5)   calld(0x10075f2c, -0xdb5a1);          /* call 0x10075f2c */
    II(0x101514cd, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x101514d0, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x101514d3, 0x5)   calld(0x10076574, -0xdaf64);          /* call 0x10076574 */
    II(0x101514d8, 0x5)   calld(0x1008a998, -0xc6b45);          /* call 0x1008a998 */
    II(0x101514dd, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101514df, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x101514e2, 0x5)   calld(0x10075f2c, -0xdb5bb);          /* call 0x10075f2c */
    II(0x101514e7, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101514e9, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101514ea, 0x1)   popd(edi);                            /* pop edi */
    II(0x101514eb, 0x1)   popd(esi);                            /* pop esi */
    II(0x101514ec, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x101514ed, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x101514ee, 0x1)   retd();                               /* ret */
FUNC_END

