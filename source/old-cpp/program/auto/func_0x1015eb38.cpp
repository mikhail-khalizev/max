FUNC_BEGIN(0x1015eb38, 0x5337da17a8adf582, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x10, 0x72, 0, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0x3d, 0x2b, 0xfe, 0xff, 0x89, 0x45, 0xec, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xf0, 0xe8, 0x86, 0x7b, 0xf1, 0xff, 0x89, 0x45, 0xf4, 0x80, 0x65, 0xf8, 0xfe, 0x8b, 0x45, 0xfc, 0xe8, 0xa3, 0x75, 0xf1, 0xff, 0x8d, 0x5d, 0xf0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xab, 0x7a, 0xf1, 0xff, 0x8d, 0x45, 0xf0, 0xe8, 0xe7, 0x79, 0xf1, 0xff, 0x66, 0xff, 0x40, 0x52, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8d, 0x45, 0xf0, 0xe8, 0x92, 0xc9, 0xf2, 0xff, 0x84, 0xc0, 0x74, 0x51, 0x8d, 0x45, 0xf0, 0xe8, 0x56, 0x7a, 0xf1, 0xff, 0xe8, 0x9e, 0x1d, 0xfa, 0xff, 0x8d, 0x45, 0xf0, 0xe8, 0xbd, 0x79, 0xf1, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x2c, 0xb9, 0x1, 0, 0, 0, 0xbb, 0x1, 0, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0x9b, 0x79, 0xf1, 0xff, 0xe8, 0x26, 0x76, 0xf1, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0x8c, 0x79, 0xf1, 0xff, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0x98, 0xe8, 0xc, 0x26, 0xfa, 0xff, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3d, 0x10, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x3, 0x8b, 0x45, 0xfc, 0xe8, 0xb4, 0xca, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x19, 0x73, 0xf1, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1015eb38, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x1015eb3d, 0x5)   calld(sys_check_available_stack_size, 0x7210); /* call 0x10165d52 */
    II(0x1015eb42, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1015eb43, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1015eb44, 0x1)   pushd(edx);                           /* push edx */
    II(0x1015eb45, 0x1)   pushd(esi);                           /* push esi */
    II(0x1015eb46, 0x1)   pushd(edi);                           /* push edi */
    II(0x1015eb47, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1015eb48, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1015eb4a, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x1015eb50, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1015eb53, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015eb56, 0x5)   calld(0x10141698, -0x1d4c3);          /* call 0x10141698 */
    II(0x1015eb5b, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1015eb5e, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x1015eb62, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015eb65, 0x5)   calld(my_ctor_0x101b38f8, -0xe847a);  /* call 0x100766f0 */
    II(0x1015eb6a, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1015eb6d, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x1015eb71, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015eb74, 0x5)   calld(0x1007611c, -0xe8a5d);          /* call 0x1007611c */
    II(0x1015eb79, 0x3)   lea(ebx, ebp - 0x10);                 /* lea ebx, [ebp-0x10] */
    II(0x1015eb7c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015eb7e, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015eb80, 0x5)   calld(0x10076630, -0xe8555);          /* call 0x10076630 */
    II(0x1015eb85, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015eb88, 0x5)   calld(0x10076574, -0xe8619);          /* call 0x10076574 */
    II(0x1015eb8d, 0x4)   inc(memw_a32(ds, eax + 0x52));        /* inc word [eax+0x52] */
    II(0x1015eb91, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x1015eb96, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015eb99, 0x5)   calld(0x1008b530, -0xd366e);          /* call 0x1008b530 */
    II(0x1015eb9e, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015eba0, 0x2)   jzd(0x1015ebf3, 0x51);                /* jz 0x1015ebf3 */
    II(0x1015eba2, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015eba5, 0x5)   calld(0x10076600, -0xe85aa);          /* call 0x10076600 */
    II(0x1015ebaa, 0x5)   calld(0x1010094d, -0x5e262);          /* call 0x1010094d */
    II(0x1015ebaf, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015ebb2, 0x5)   calld(0x10076574, -0xe8643);          /* call 0x10076574 */
    II(0x1015ebb7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015ebb9, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x1015ebbc, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015ebbe, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x1015ebc3, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1015ebc5, 0x2)   jnzd(0x1015ebf3, 0x2c);               /* jnz 0x1015ebf3 */
    II(0x1015ebc7, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1015ebcc, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1015ebd1, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015ebd4, 0x5)   calld(0x10076574, -0xe8665);          /* call 0x10076574 */
    II(0x1015ebd9, 0x5)   calld(0x10076204, -0xe89da);          /* call 0x10076204 */
    II(0x1015ebde, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015ebe0, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015ebe3, 0x5)   calld(0x10076574, -0xe8674);          /* call 0x10076574 */
    II(0x1015ebe8, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1015ebeb, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1015ebed, 0x1)   cwde();                               /* cwde */
    II(0x1015ebee, 0x5)   calld(0x101011ff, -0x5d9f4);          /* call 0x101011ff */
l_0x1015ebf3:
    II(0x1015ebf3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ebf6, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0x10);  /* mov byte [eax+0x3d], 0x10 */
    II(0x1015ebfa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ebfd, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x3);   /* mov byte [eax+0x3e], 0x3 */
    II(0x1015ec01, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015ec04, 0x5)   calld(0x1014b6bd, -0x1354c);          /* call 0x1014b6bd */
    II(0x1015ec09, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015ec0b, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015ec0e, 0x5)   calld(0x10075f2c, -0xe8ce7);          /* call 0x10075f2c */
    II(0x1015ec13, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1015ec15, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1015ec16, 0x1)   popd(edi);                            /* pop edi */
    II(0x1015ec17, 0x1)   popd(esi);                            /* pop esi */
    II(0x1015ec18, 0x1)   popd(edx);                            /* pop edx */
    II(0x1015ec19, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1015ec1a, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1015ec1b, 0x1)   retd();                               /* ret */
FUNC_END

