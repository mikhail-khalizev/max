FUNC_BEGIN(0x100861ff, 0x3d7386ebb864dc8d, 0x20, ({0x68, 0x58, 0, 0, 0, 0xe8, 0x49, 0xfb, 0xd, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x3c, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x20, 0xe8, 0xe3, 0x3a, 0, 0, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xb3, 0x39, 0, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x15, 0x1, 0x7d, 0x7, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x15, 0x1, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2a, 0xe8, 0x15, 0x4b, 0xb, 0, 0x84, 0xc0, 0x74, 0x14, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2a, 0xe8, 0x11, 0x3b, 0, 0, 0xe8, 0, 0x3d, 0, 0, 0x85, 0xc0, 0x75, 0x5, 0xe9, 0xfc, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2a, 0xe8, 0xef, 0x3a, 0, 0, 0xe8, 0xde, 0x3c, 0, 0, 0xe8, 0xdd, 0xfd, 0xfe, 0xff, 0x84, 0xc0, 0x75, 0x22, 0x8b, 0x45, 0xfc, 0xe8, 0xaa, 0xfc, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x16, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x15, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x8c, 0x2d, 0, 0, 0xe9, 0x87, 0x3, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2a, 0xe8, 0xb4, 0x3a, 0, 0, 0xe8, 0xa3, 0x3c, 0, 0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xe8, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xe4, 0xe8, 0xc2, 0x7, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x20, 0xe8, 0x13, 0x3a, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x69, 0x38, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0xef, 0x8, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x5e, 0x4a, 0xb, 0, 0x84, 0xc0, 0x74, 0x5e, 0x8d, 0x45, 0xec, 0xe8, 0x15, 0x38, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2a, 0xe8, 0xdc, 0x3a, 0, 0, 0x39, 0xc2, 0x74, 0x23, 0x8d, 0x55, 0xe4, 0x8d, 0x45, 0xe0, 0xe8, 0x29, 0xfb, 0xfe, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x87, 0x37, 0, 0, 0xe8, 0x26, 0x3c, 0, 0, 0xe8, 0xd, 0xca, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x10, 0x8d, 0x45, 0xec, 0xe8, 0x71, 0x37, 0, 0, 0xe8, 0x9c, 0x3c, 0, 0, 0x1, 0x45, 0xf0, 0x8d, 0x45, 0xec, 0xe8, 0x61, 0x37, 0, 0, 0xe8, 0xc0, 0x3c, 0, 0, 0x1, 0x45, 0xf4, 0xeb, 0x8c, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x45, 0xf0, 0x7c, 0x19, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x15, 0x1, 0x75, 0xe, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x15, 0x2, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x46, 0, 0xeb, 0x29, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x15, 0x1, 0x7e, 0x17, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x15, 0x7, 0x7c, 0xc, 0x8b, 0x45, 0xfc, 0xe8, 0xc, 0xfa, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x7, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x15, 0x1, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2a, 0xe8, 0x44, 0x49, 0xb, 0, 0x84, 0xc0, 0x75, 0x14, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2a, 0xe8, 0xa0, 0x39, 0, 0, 0xe8, 0x8f, 0x3b, 0, 0, 0x85, 0xc0, 0x75, 0x1f, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x15, 0x1, 0x7e, 0x7, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x15, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x45, 0x2c, 0, 0, 0xe9, 0x40, 0x2, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x15, 0x5, 0x75, 0xc, 0x8b, 0x45, 0xfc, 0xe8, 0x43, 0xd1, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x2, 0xeb, 0x7, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x15, 0x3, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x15, 0x2, 0x7c, 0x9, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x15, 0x5, 0x7c, 0x5, 0xe9, 0x72, 0x1, 0, 0, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xdc, 0xe8, 0xe3, 0x37, 0, 0, 0x89, 0x45, 0xd8, 0x80, 0x65, 0xf8, 0xfe, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xd4, 0xe8, 0xa4, 0, 0xff, 0xff, 0x89, 0x45, 0xd0, 0x80, 0x65, 0xf8, 0xfe, 0x8b, 0x45, 0xfc, 0xe8, 0x6e, 0xe9, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x9, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x46, 0, 0x75, 0x2, 0xeb, 0x14, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x32, 0xe8, 0x4f, 0x1, 0xff, 0xff, 0xe8, 0x55, 0xca, 0x1, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x17, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x32, 0xe8, 0xdd, 0, 0xff, 0xff, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x21, 0x8b, 0x45, 0xfc, 0xe8, 0x39, 0xe2, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x15, 0x8b, 0x45, 0xfc, 0xfe, 0x40, 0x15, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x46, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x15, 0xf8, 0xff, 0xff, 0x8d, 0x55, 0xcc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2a, 0xe8, 0xa8, 0x38, 0, 0, 0xe8, 0x5f, 0x3a, 0, 0, 0xe8, 0x85, 0x29, 0x3, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x20, 0xe8, 0x1f, 0x38, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xdc, 0xe8, 0x75, 0x36, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xdc, 0xe8, 0xfb, 0x6, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x6a, 0x48, 0xb, 0, 0x84, 0xc0, 0xf, 0x84, 0x88, 0, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0xb5, 0x35, 0, 0, 0xe8, 0xa8, 0x3a, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xd4, 0xe8, 0x16, 0xff, 0xfe, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xd4, 0xe8, 0xc8, 0x6, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0x37, 0x48, 0xb, 0, 0x84, 0xc0, 0x74, 0x54, 0x8d, 0x45, 0xd4, 0xe8, 0x5a, 0xfe, 0xfe, 0xff, 0xe8, 0x5e, 0xc5, 0xc, 0, 0x89, 0x45, 0xc8, 0xf, 0xbf, 0x55, 0xc8, 0xf, 0xbf, 0x45, 0xc8, 0xf, 0xaf, 0xd0, 0x89, 0xd3, 0x8d, 0x55, 0xcc, 0x8d, 0x45, 0xc4, 0xe8, 0xfe, 0xf8, 0xfe, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xd4, 0xe8, 0x64, 0xfe, 0xfe, 0xff, 0xe8, 0x2c, 0xa7, 0xfe, 0xff, 0x98, 0x39, 0xd8, 0x7f, 0x16, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x15, 0x5, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x46, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x4b, 0xf7, 0xff, 0xff, 0xeb, 0x96, 0xe9, 0x5e, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0xcb, 0xf9, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x99, 0x2a, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x15, 0x5, 0x74, 0x9, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x15, 0x6, 0x75, 0x22, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2a, 0xe8, 0xab, 0x37, 0, 0, 0xe8, 0x9a, 0x39, 0, 0, 0xe8, 0x99, 0xfa, 0xfe, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x16, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x15, 0x7, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x46, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xe4, 0xf6, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x15, 0x7, 0x75, 0x22, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2a, 0xe8, 0x68, 0x37, 0, 0, 0xe8, 0x57, 0x39, 0, 0, 0xe8, 0x56, 0xfa, 0xfe, 0xff, 0x84, 0xc0, 0x74, 0x2, 0xeb, 0x16, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x15, 0x5, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x46, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xa1, 0xf6, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0, 0x2a, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100861ff, 0x5)   pushd(0x58);                          /* push dword 0x58 */
    II(0x10086204, 0x5)   calld(sys_check_available_stack_size, 0xdfb49); /* call 0x10165d52 */
    II(0x10086209, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1008620a, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1008620b, 0x1)   pushd(edx);                           /* push edx */
    II(0x1008620c, 0x1)   pushd(esi);                           /* push esi */
    II(0x1008620d, 0x1)   pushd(edi);                           /* push edi */
    II(0x1008620e, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1008620f, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10086211, 0x6)   sub(esp, 0x3c);                       /* sub esp, 0x3c */
    II(0x10086217, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1008621a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008621d, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x10086220, 0x5)   calld(0x10089d08, 0x3ae3);            /* call 0x10089d08 */
    II(0x10086225, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x10086228, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008622a, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1008622c, 0x5)   calld(0x10089be4, 0x39b3);            /* call 0x10089be4 */
    II(0x10086231, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x10086238, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x1008623f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086242, 0x4)   cmp(memb_a32(ds, eax + 0x15), 0x1);   /* cmp byte [eax+0x15], 0x1 */
    II(0x10086246, 0x2)   jged(0x1008624f, 0x7);                /* jge 0x1008624f */
    II(0x10086248, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008624b, 0x4)   mov(memb_a32(ds, eax + 0x15), 0x1);   /* mov byte [eax+0x15], 0x1 */
l_0x1008624f:
    II(0x1008624f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10086251, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086254, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x10086257, 0x5)   calld(0x1013ad71, 0xb4b15);           /* call 0x1013ad71 */
    II(0x1008625c, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008625e, 0x2)   jzd(0x10086274, 0x14);                /* jz 0x10086274 */
    II(0x10086260, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086263, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x10086266, 0x5)   calld(0x10089d7c, 0x3b11);            /* call 0x10089d7c */
    II(0x1008626b, 0x5)   calld(0x10089f70, 0x3d00);            /* call 0x10089f70 */
    II(0x10086270, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10086272, 0x2)   jnzd(0x10086279, 0x5);                /* jnz 0x10086279 */
l_0x10086274:
    II(0x10086274, 0x5)   jmpd(0x10086375, 0xfc);               /* jmp 0x10086375 */
l_0x10086279:
    II(0x10086279, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008627c, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x1008627f, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10086282, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086285, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x10086288, 0x5)   calld(0x10089d7c, 0x3aef);            /* call 0x10089d7c */
    II(0x1008628d, 0x5)   calld(0x10089f70, 0x3cde);            /* call 0x10089f70 */
    II(0x10086292, 0x5)   calld(0x10076074, -0x10223);          /* call 0x10076074 */
    II(0x10086297, 0x2)   test(al, al);                         /* test al, al */
    II(0x10086299, 0x2)   jnzd(0x100862bd, 0x22);               /* jnz 0x100862bd */
    II(0x1008629b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008629e, 0x5)   calld(0x10085f4d, -0x356);            /* call 0x10085f4d */
    II(0x100862a3, 0x2)   test(al, al);                         /* test al, al */
    II(0x100862a5, 0x2)   jnzd(0x100862bd, 0x16);               /* jnz 0x100862bd */
    II(0x100862a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100862aa, 0x4)   mov(memb_a32(ds, eax + 0x15), 0x1);   /* mov byte [eax+0x15], 0x1 */
    II(0x100862ae, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100862b0, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100862b3, 0x5)   calld(0x10089044, 0x2d8c);            /* call 0x10089044 */
    II(0x100862b8, 0x5)   jmpd(0x10086644, 0x387);              /* jmp 0x10086644 */
l_0x100862bd:
    II(0x100862bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100862c0, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x100862c3, 0x5)   calld(0x10089d7c, 0x3ab4);            /* call 0x10089d7c */
    II(0x100862c8, 0x5)   calld(0x10089f70, 0x3ca3);            /* call 0x10089f70 */
    II(0x100862cd, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x100862d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100862d3, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100862d6, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100862d9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100862dc, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100862df, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100862e2, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100862e5, 0x5)   calld(0x10076aac, -0xf83e);           /* call 0x10076aac */
    II(0x100862ea, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100862ed, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x100862f0, 0x5)   calld(0x10089d08, 0x3a13);            /* call 0x10089d08 */
    II(0x100862f5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100862f7, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100862fa, 0x5)   calld(0x10089b68, 0x3869);            /* call 0x10089b68 */
    II(0x100862ff, 0x2)   jmpd(0x10086309, 0x8);                /* jmp 0x10086309 */
l_0x10086301:
    II(0x10086301, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10086304, 0x5)   calld(0x10076bf8, -0xf711);           /* call 0x10076bf8 */
l_0x10086309:
    II(0x10086309, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008630b, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1008630e, 0x5)   calld(0x1013ad71, 0xb4a5e);           /* call 0x1013ad71 */
    II(0x10086313, 0x2)   test(al, al);                         /* test al, al */
    II(0x10086315, 0x2)   jzd(0x10086375, 0x5e);                /* jz 0x10086375 */
    II(0x10086317, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1008631a, 0x5)   calld(0x10089b34, 0x3815);            /* call 0x10089b34 */
    II(0x1008631f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10086321, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086324, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x10086327, 0x5)   calld(0x10089e08, 0x3adc);            /* call 0x10089e08 */
    II(0x1008632c, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1008632e, 0x2)   jzd(0x10086353, 0x23);                /* jz 0x10086353 */
    II(0x10086330, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x10086333, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10086336, 0x5)   calld(0x10075e64, -0x104d7);          /* call 0x10075e64 */
    II(0x1008633b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008633d, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10086340, 0x5)   calld(0x10089acc, 0x3787);            /* call 0x10089acc */
    II(0x10086345, 0x5)   calld(0x10089f70, 0x3c26);            /* call 0x10089f70 */
    II(0x1008634a, 0x5)   calld(0x10082d5c, -0x35f3);           /* call 0x10082d5c */
    II(0x1008634f, 0x2)   test(al, al);                         /* test al, al */
    II(0x10086351, 0x2)   jzd(0x10086363, 0x10);                /* jz 0x10086363 */
l_0x10086353:
    II(0x10086353, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10086356, 0x5)   calld(0x10089acc, 0x3771);            /* call 0x10089acc */
    II(0x1008635b, 0x5)   calld(0x10089ffc, 0x3c9c);            /* call 0x10089ffc */
    II(0x10086360, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
l_0x10086363:
    II(0x10086363, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10086366, 0x5)   calld(0x10089acc, 0x3761);            /* call 0x10089acc */
    II(0x1008636b, 0x5)   calld(0x1008a030, 0x3cc0);            /* call 0x1008a030 */
    II(0x10086370, 0x3)   add(memd_a32(ss, ebp - 0xc), eax);    /* add [ebp-0xc], eax */
    II(0x10086373, 0x2)   jmpd(0x10086301, -0x74);              /* jmp 0x10086301 */
l_0x10086375:
    II(0x10086375, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10086378, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x1008637c, 0x2)   jld(0x10086397, 0x19);                /* jl 0x10086397 */
    II(0x1008637e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086381, 0x4)   cmp(memb_a32(ds, eax + 0x15), 0x1);   /* cmp byte [eax+0x15], 0x1 */
    II(0x10086385, 0x2)   jnzd(0x10086395, 0xe);                /* jnz 0x10086395 */
    II(0x10086387, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008638a, 0x4)   mov(memb_a32(ds, eax + 0x15), 0x2);   /* mov byte [eax+0x15], 0x2 */
    II(0x1008638e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086391, 0x4)   mov(memb_a32(ds, eax + 0x46), 0);     /* mov byte [eax+0x46], 0x0 */
l_0x10086395:
    II(0x10086395, 0x2)   jmpd(0x100863c0, 0x29);               /* jmp 0x100863c0 */
l_0x10086397:
    II(0x10086397, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008639a, 0x4)   cmp(memb_a32(ds, eax + 0x15), 0x1);   /* cmp byte [eax+0x15], 0x1 */
    II(0x1008639e, 0x2)   jled(0x100863b7, 0x17);               /* jle 0x100863b7 */
    II(0x100863a0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100863a3, 0x4)   cmp(memb_a32(ds, eax + 0x15), 0x7);   /* cmp byte [eax+0x15], 0x7 */
    II(0x100863a7, 0x2)   jld(0x100863b5, 0xc);                 /* jl 0x100863b5 */
    II(0x100863a9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100863ac, 0x5)   calld(0x10085dbd, -0x5f4);            /* call 0x10085dbd */
    II(0x100863b1, 0x2)   test(al, al);                         /* test al, al */
    II(0x100863b3, 0x2)   jnzd(0x100863b7, 0x2);                /* jnz 0x100863b7 */
l_0x100863b5:
    II(0x100863b5, 0x2)   jmpd(0x100863b9, 0x2);                /* jmp 0x100863b9 */
l_0x100863b7:
    II(0x100863b7, 0x2)   jmpd(0x100863c0, 0x7);                /* jmp 0x100863c0 */
l_0x100863b9:
    II(0x100863b9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100863bc, 0x4)   mov(memb_a32(ds, eax + 0x15), 0x1);   /* mov byte [eax+0x15], 0x1 */
l_0x100863c0:
    II(0x100863c0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100863c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100863c5, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x100863c8, 0x5)   calld(0x1013ad11, 0xb4944);           /* call 0x1013ad11 */
    II(0x100863cd, 0x2)   test(al, al);                         /* test al, al */
    II(0x100863cf, 0x2)   jnzd(0x100863e5, 0x14);               /* jnz 0x100863e5 */
    II(0x100863d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100863d4, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x100863d7, 0x5)   calld(0x10089d7c, 0x39a0);            /* call 0x10089d7c */
    II(0x100863dc, 0x5)   calld(0x10089f70, 0x3b8f);            /* call 0x10089f70 */
    II(0x100863e1, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100863e3, 0x2)   jnzd(0x10086404, 0x1f);               /* jnz 0x10086404 */
l_0x100863e5:
    II(0x100863e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100863e8, 0x4)   cmp(memb_a32(ds, eax + 0x15), 0x1);   /* cmp byte [eax+0x15], 0x1 */
    II(0x100863ec, 0x2)   jled(0x100863f5, 0x7);                /* jle 0x100863f5 */
    II(0x100863ee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100863f1, 0x4)   mov(memb_a32(ds, eax + 0x15), 0x1);   /* mov byte [eax+0x15], 0x1 */
l_0x100863f5:
    II(0x100863f5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100863f7, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100863fa, 0x5)   calld(0x10089044, 0x2c45);            /* call 0x10089044 */
    II(0x100863ff, 0x5)   jmpd(0x10086644, 0x240);              /* jmp 0x10086644 */
l_0x10086404:
    II(0x10086404, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086407, 0x4)   cmp(memb_a32(ds, eax + 0x15), 0x5);   /* cmp byte [eax+0x15], 0x5 */
    II(0x1008640b, 0x2)   jnzd(0x10086419, 0xc);                /* jnz 0x10086419 */
    II(0x1008640d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086410, 0x5)   calld(0x10083558, -0x2ebd);           /* call 0x10083558 */
    II(0x10086415, 0x2)   test(al, al);                         /* test al, al */
    II(0x10086417, 0x2)   jzd(0x1008641b, 0x2);                 /* jz 0x1008641b */
l_0x10086419:
    II(0x10086419, 0x2)   jmpd(0x10086422, 0x7);                /* jmp 0x10086422 */
l_0x1008641b:
    II(0x1008641b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008641e, 0x4)   mov(memb_a32(ds, eax + 0x15), 0x3);   /* mov byte [eax+0x15], 0x3 */
l_0x10086422:
    II(0x10086422, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086425, 0x4)   cmp(memb_a32(ds, eax + 0x15), 0x2);   /* cmp byte [eax+0x15], 0x2 */
    II(0x10086429, 0x2)   jld(0x10086434, 0x9);                 /* jl 0x10086434 */
    II(0x1008642b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008642e, 0x4)   cmp(memb_a32(ds, eax + 0x15), 0x5);   /* cmp byte [eax+0x15], 0x5 */
    II(0x10086432, 0x2)   jld(0x10086439, 0x5);                 /* jl 0x10086439 */
l_0x10086434:
    II(0x10086434, 0x5)   jmpd(0x100865ab, 0x172);              /* jmp 0x100865ab */
l_0x10086439:
    II(0x10086439, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x1008643d, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10086440, 0x5)   calld(0x10089c28, 0x37e3);            /* call 0x10089c28 */
    II(0x10086445, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x10086448, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x1008644c, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x10086450, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x10086453, 0x5)   calld(0x100764fc, -0xff5c);           /* call 0x100764fc */
    II(0x10086458, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x1008645b, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x1008645f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086462, 0x5)   calld(0x10084dd5, -0x1692);           /* call 0x10084dd5 */
    II(0x10086467, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10086469, 0x2)   jzd(0x10086474, 0x9);                 /* jz 0x10086474 */
    II(0x1008646b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008646e, 0x4)   cmp(memb_a32(ds, eax + 0x46), 0);     /* cmp byte [eax+0x46], 0x0 */
    II(0x10086472, 0x2)   jnzd(0x10086476, 0x2);                /* jnz 0x10086476 */
l_0x10086474:
    II(0x10086474, 0x2)   jmpd(0x1008648a, 0x14);               /* jmp 0x1008648a */
l_0x10086476:
    II(0x10086476, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086479, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x1008647c, 0x5)   calld(0x100765d0, -0xfeb1);           /* call 0x100765d0 */
    II(0x10086481, 0x5)   calld(0x100a2edb, 0x1ca55);           /* call 0x100a2edb */
    II(0x10086486, 0x2)   test(al, al);                         /* test al, al */
    II(0x10086488, 0x2)   jnzd(0x1008648c, 0x2);                /* jnz 0x1008648c */
l_0x1008648a:
    II(0x1008648a, 0x2)   jmpd(0x100864a3, 0x17);               /* jmp 0x100864a3 */
l_0x1008648c:
    II(0x1008648c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008648f, 0x3)   add(eax, 0x32);                       /* add eax, 0x32 */
    II(0x10086492, 0x5)   calld(0x10076574, -0xff23);           /* call 0x10076574 */
    II(0x10086497, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x1008649a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1008649f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100864a1, 0x2)   jgd(0x100864a5, 0x2);                 /* jg 0x100864a5 */
l_0x100864a3:
    II(0x100864a3, 0x2)   jmpd(0x100864c6, 0x21);               /* jmp 0x100864c6 */
l_0x100864a5:
    II(0x100864a5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100864a8, 0x5)   calld(0x100846e6, -0x1dc7);           /* call 0x100846e6 */
    II(0x100864ad, 0x2)   test(al, al);                         /* test al, al */
    II(0x100864af, 0x2)   jzd(0x100864c6, 0x15);                /* jz 0x100864c6 */
    II(0x100864b1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100864b4, 0x3)   inc(memb_a32(ds, eax + 0x15));        /* inc byte [eax+0x15] */
    II(0x100864b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100864ba, 0x4)   mov(memb_a32(ds, eax + 0x46), 0);     /* mov byte [eax+0x46], 0x0 */
    II(0x100864be, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100864c1, 0x5)   calld(0x10085cdb, -0x7eb);            /* call 0x10085cdb */
l_0x100864c6:
    II(0x100864c6, 0x3)   lea(edx, ebp - 0x34);                 /* lea edx, [ebp-0x34] */
    II(0x100864c9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100864cc, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x100864cf, 0x5)   calld(0x10089d7c, 0x38a8);            /* call 0x10089d7c */
    II(0x100864d4, 0x5)   calld(0x10089f38, 0x3a5f);            /* call 0x10089f38 */
    II(0x100864d9, 0x5)   calld(0x100b8e63, 0x32985);           /* call 0x100b8e63 */
    II(0x100864de, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100864e1, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x100864e4, 0x5)   calld(0x10089d08, 0x381f);            /* call 0x10089d08 */
    II(0x100864e9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100864eb, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100864ee, 0x5)   calld(0x10089b68, 0x3675);            /* call 0x10089b68 */
    II(0x100864f3, 0x2)   jmpd(0x100864fd, 0x8);                /* jmp 0x100864fd */
l_0x100864f5:
    II(0x100864f5, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100864f8, 0x5)   calld(0x10076bf8, -0xf905);           /* call 0x10076bf8 */
l_0x100864fd:
    II(0x100864fd, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100864ff, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10086502, 0x5)   calld(0x1013ad71, 0xb486a);           /* call 0x1013ad71 */
    II(0x10086507, 0x2)   test(al, al);                         /* test al, al */
    II(0x10086509, 0x6)   jzd(0x10086597, 0x88);                /* jz dword 0x10086597 */
    II(0x1008650f, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10086512, 0x5)   calld(0x10089acc, 0x35b5);            /* call 0x10089acc */
    II(0x10086517, 0x5)   calld(0x10089fc4, 0x3aa8);            /* call 0x10089fc4 */
    II(0x1008651c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008651e, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x10086521, 0x5)   calld(0x1007643c, -0x100ea);          /* call 0x1007643c */
    II(0x10086526, 0x2)   jmpd(0x10086530, 0x8);                /* jmp 0x10086530 */
l_0x10086528:
    II(0x10086528, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1008652b, 0x5)   calld(0x10076bf8, -0xf938);           /* call 0x10076bf8 */
l_0x10086530:
    II(0x10086530, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10086532, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x10086535, 0x5)   calld(0x1013ad71, 0xb4837);           /* call 0x1013ad71 */
    II(0x1008653a, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008653c, 0x2)   jzd(0x10086592, 0x54);                /* jz 0x10086592 */
    II(0x1008653e, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x10086541, 0x5)   calld(0x100763a0, -0x101a6);          /* call 0x100763a0 */
    II(0x10086546, 0x5)   calld(0x10152aa9, 0xcc55e);           /* call 0x10152aa9 */
    II(0x1008654b, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x1008654e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x38)); /* movsx edx, word [ebp-0x38] */
    II(0x10086552, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x38)); /* movsx eax, word [ebp-0x38] */
    II(0x10086556, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x10086559, 0x2)   mov(ebx, edx);                        /* mov ebx, edx */
    II(0x1008655b, 0x3)   lea(edx, ebp - 0x34);                 /* lea edx, [ebp-0x34] */
    II(0x1008655e, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10086561, 0x5)   calld(0x10075e64, -0x10702);          /* call 0x10075e64 */
    II(0x10086566, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10086568, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1008656b, 0x5)   calld(0x100763d4, -0x1019c);          /* call 0x100763d4 */
    II(0x10086570, 0x5)   calld(0x10070ca1, -0x158d4);          /* call 0x10070ca1 */
    II(0x10086575, 0x1)   cwde();                               /* cwde */
    II(0x10086576, 0x2)   cmp(eax, ebx);                        /* cmp eax, ebx */
    II(0x10086578, 0x2)   jgd(0x10086590, 0x16);                /* jg 0x10086590 */
    II(0x1008657a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008657d, 0x4)   mov(memb_a32(ds, eax + 0x15), 0x5);   /* mov byte [eax+0x15], 0x5 */
    II(0x10086581, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086584, 0x4)   mov(memb_a32(ds, eax + 0x46), 0);     /* mov byte [eax+0x46], 0x0 */
    II(0x10086588, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008658b, 0x5)   calld(0x10085cdb, -0x8b5);            /* call 0x10085cdb */
l_0x10086590:
    II(0x10086590, 0x2)   jmpd(0x10086528, -0x6a);              /* jmp 0x10086528 */
l_0x10086592:
    II(0x10086592, 0x5)   jmpd(0x100864f5, -0xa2);              /* jmp 0x100864f5 */
l_0x10086597:
    II(0x10086597, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10086599, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1008659c, 0x5)   calld(0x10075f6c, -0x10635);          /* call 0x10075f6c */
    II(0x100865a1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100865a3, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100865a6, 0x5)   calld(0x10089044, 0x2a99);            /* call 0x10089044 */
l_0x100865ab:
    II(0x100865ab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100865ae, 0x4)   cmp(memb_a32(ds, eax + 0x15), 0x5);   /* cmp byte [eax+0x15], 0x5 */
    II(0x100865b2, 0x2)   jzd(0x100865bd, 0x9);                 /* jz 0x100865bd */
    II(0x100865b4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100865b7, 0x4)   cmp(memb_a32(ds, eax + 0x15), 0x6);   /* cmp byte [eax+0x15], 0x6 */
    II(0x100865bb, 0x2)   jnzd(0x100865df, 0x22);               /* jnz 0x100865df */
l_0x100865bd:
    II(0x100865bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100865c0, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x100865c3, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100865c6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100865c9, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x100865cc, 0x5)   calld(0x10089d7c, 0x37ab);            /* call 0x10089d7c */
    II(0x100865d1, 0x5)   calld(0x10089f70, 0x399a);            /* call 0x10089f70 */
    II(0x100865d6, 0x5)   calld(0x10076074, -0x10567);          /* call 0x10076074 */
    II(0x100865db, 0x2)   test(al, al);                         /* test al, al */
    II(0x100865dd, 0x2)   jnzd(0x100865e1, 0x2);                /* jnz 0x100865e1 */
l_0x100865df:
    II(0x100865df, 0x2)   jmpd(0x100865f7, 0x16);               /* jmp 0x100865f7 */
l_0x100865e1:
    II(0x100865e1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100865e4, 0x4)   mov(memb_a32(ds, eax + 0x15), 0x7);   /* mov byte [eax+0x15], 0x7 */
    II(0x100865e8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100865eb, 0x4)   mov(memb_a32(ds, eax + 0x46), 0);     /* mov byte [eax+0x46], 0x0 */
    II(0x100865ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100865f2, 0x5)   calld(0x10085cdb, -0x91c);            /* call 0x10085cdb */
l_0x100865f7:
    II(0x100865f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100865fa, 0x4)   cmp(memb_a32(ds, eax + 0x15), 0x7);   /* cmp byte [eax+0x15], 0x7 */
    II(0x100865fe, 0x2)   jnzd(0x10086622, 0x22);               /* jnz 0x10086622 */
    II(0x10086600, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086603, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x10086606, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10086609, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008660c, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x1008660f, 0x5)   calld(0x10089d7c, 0x3768);            /* call 0x10089d7c */
    II(0x10086614, 0x5)   calld(0x10089f70, 0x3957);            /* call 0x10089f70 */
    II(0x10086619, 0x5)   calld(0x10076074, -0x105aa);          /* call 0x10076074 */
    II(0x1008661e, 0x2)   test(al, al);                         /* test al, al */
    II(0x10086620, 0x2)   jzd(0x10086624, 0x2);                 /* jz 0x10086624 */
l_0x10086622:
    II(0x10086622, 0x2)   jmpd(0x1008663a, 0x16);               /* jmp 0x1008663a */
l_0x10086624:
    II(0x10086624, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086627, 0x4)   mov(memb_a32(ds, eax + 0x15), 0x5);   /* mov byte [eax+0x15], 0x5 */
    II(0x1008662b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008662e, 0x4)   mov(memb_a32(ds, eax + 0x46), 0);     /* mov byte [eax+0x46], 0x0 */
    II(0x10086632, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086635, 0x5)   calld(0x10085cdb, -0x95f);            /* call 0x10085cdb */
l_0x1008663a:
    II(0x1008663a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008663c, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1008663f, 0x5)   calld(0x10089044, 0x2a00);            /* call 0x10089044 */
l_0x10086644:
    II(0x10086644, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10086646, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10086647, 0x1)   popd(edi);                            /* pop edi */
    II(0x10086648, 0x1)   popd(esi);                            /* pop esi */
    II(0x10086649, 0x1)   popd(edx);                            /* pop edx */
    II(0x1008664a, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1008664b, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1008664c, 0x1)   retd();                               /* ret */
FUNC_END

