FUNC_BEGIN(0x10105db3, 0xa97e38dc82f16be6, 0x20, ({0x68, 0xd0, 0, 0, 0, 0xe8, 0x95, 0xff, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xa8, 0, 0, 0, 0x89, 0x45, 0xfc, 0xba, 0x70, 0x3d, 0x1c, 0x10, 0x8d, 0x45, 0x90, 0xe8, 0xf4, 0, 0x6, 0, 0xba, 0x80, 0x3a, 0x1a, 0x10, 0x8d, 0x45, 0x90, 0xe8, 0x49, 0x1, 0x6, 0, 0xba, 0x88, 0x3a, 0x1a, 0x10, 0x8d, 0x45, 0x90, 0xe8, 0x85, 0xc5, 0x6, 0, 0x89, 0x45, 0xf4, 0x83, 0x7d, 0xf4, 0, 0xf, 0x85, 0x23, 0x1, 0, 0, 0xb8, 0x8b, 0x3a, 0x1a, 0x10, 0x50, 0xe8, 0x2f, 0x68, 0x6, 0, 0x83, 0xc4, 0x4, 0xba, 0xbc, 0x3a, 0x1a, 0x10, 0x8d, 0x45, 0x90, 0xe8, 0x5d, 0xc5, 0x6, 0, 0x89, 0x45, 0xf4, 0x83, 0x7d, 0xf4, 0, 0x75, 0x18, 0xb8, 0xbf, 0x3a, 0x1a, 0x10, 0x50, 0xe8, 0xb, 0x68, 0x6, 0, 0x83, 0xc4, 0x4, 0xb8, 0xc, 0, 0, 0, 0xe8, 0x62, 0x95, 0xfe, 0xff, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0x76, 0xf, 0x8d, 0xcb, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x8d, 0x4, 0xc0, 0xf6, 0x80, 0x88, 0x8b, 0x1b, 0x10, 0x1, 0x74, 0x53, 0x66, 0x83, 0x7d, 0xf8, 0, 0x74, 0x12, 0xba, 0xe4, 0x3a, 0x1a, 0x10, 0x8d, 0x85, 0x5c, 0xff, 0xff, 0xff, 0xe8, 0x4e, 0, 0x6, 0, 0xeb, 0x10, 0xba, 0xe7, 0x3a, 0x1a, 0x10, 0x8d, 0x85, 0x5c, 0xff, 0xff, 0xff, 0xe8, 0x3c, 0, 0x6, 0, 0xf, 0xbf, 0x45, 0xf8, 0x8d, 0x4, 0xc0, 0x8b, 0x90, 0x80, 0x8b, 0x1b, 0x10, 0x8d, 0x85, 0x5c, 0xff, 0xff, 0xff, 0xe8, 0x86, 0, 0x6, 0, 0xba, 0xe9, 0x3a, 0x1a, 0x10, 0x8d, 0x85, 0x5c, 0xff, 0xff, 0xff, 0xe8, 0x76, 0, 0x6, 0, 0xeb, 0x40, 0xf, 0xbf, 0x55, 0xf8, 0x8d, 0x14, 0xd2, 0x8b, 0x92, 0x80, 0x8b, 0x1b, 0x10, 0x8d, 0x85, 0x5c, 0xff, 0xff, 0xff, 0xe8, 0xfa, 0xff, 0x5, 0, 0xba, 0xeb, 0x3a, 0x1a, 0x10, 0x8d, 0x85, 0x5c, 0xff, 0xff, 0xff, 0xe8, 0x4c, 0, 0x6, 0, 0xf, 0xbf, 0x55, 0xf8, 0x8d, 0x14, 0xd2, 0x8b, 0x92, 0x84, 0x8b, 0x1b, 0x10, 0x8d, 0x85, 0x5c, 0xff, 0xff, 0xff, 0xe8, 0x34, 0, 0x6, 0, 0xba, 0xed, 0x3a, 0x1a, 0x10, 0x8d, 0x85, 0x5c, 0xff, 0xff, 0xff, 0xe8, 0x24, 0, 0x6, 0, 0x8d, 0x85, 0x5c, 0xff, 0xff, 0xff, 0x50, 0x8b, 0x45, 0xf4, 0x50, 0xe8, 0x1e, 0x32, 0x7, 0, 0x83, 0xc4, 0x8, 0xe9, 0x22, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0xe8, 0x3c, 0xc1, 0x6, 0, 0x8d, 0x45, 0x90, 0x50, 0x8b, 0x45, 0xfc, 0x50, 0xe8, 0x35, 0xd5, 0x1, 0, 0x83, 0xc4, 0x8, 0x85, 0xc0, 0x75, 0xa, 0xb8, 0xc, 0, 0, 0, 0xe8, 0x55, 0x94, 0xfe, 0xff, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0x76, 0xf, 0x8d, 0xe4, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x8d, 0x4, 0xc0, 0xf6, 0x80, 0x88, 0x8b, 0x1b, 0x10, 0x1, 0x74, 0x1e, 0xf, 0xbf, 0x45, 0xf8, 0x8d, 0x4, 0xc0, 0xff, 0xb0, 0x80, 0x8b, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x50, 0xe8, 0x6d, 0xd7, 0x1, 0, 0x83, 0xc4, 0x8, 0xe9, 0xb1, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x8d, 0x4, 0xc0, 0xf6, 0x80, 0x88, 0x8b, 0x1b, 0x10, 0x2, 0xf, 0x84, 0x9d, 0, 0, 0, 0x8d, 0x85, 0x58, 0xff, 0xff, 0xff, 0x50, 0xf, 0xbf, 0x45, 0xf8, 0x8d, 0x4, 0xc0, 0xff, 0xb0, 0x80, 0x8b, 0x1b, 0x10, 0x8b, 0x45, 0xfc, 0x50, 0xe8, 0x4d, 0xe1, 0x1, 0, 0x83, 0xc4, 0xc, 0x85, 0xc0, 0x74, 0x14, 0x8b, 0x9d, 0x58, 0xff, 0xff, 0xff, 0xf, 0xbe, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0xe8, 0x2b, 0x1, 0, 0, 0xeb, 0x65, 0xbb, 0x2, 0, 0, 0, 0xba, 0xef, 0x3a, 0x1a, 0x10, 0xf, 0xbf, 0x45, 0xf8, 0x8d, 0x4, 0xc0, 0x8b, 0x80, 0x84, 0x8b, 0x1b, 0x10, 0xe8, 0x5f, 0x31, 0x7, 0, 0x85, 0xc0, 0x75, 0x25, 0xf, 0xbf, 0x45, 0xf8, 0x8d, 0x4, 0xc0, 0x8b, 0x80, 0x84, 0x8b, 0x1b, 0x10, 0x83, 0xc0, 0x2, 0xe8, 0x99, 0xe7, 0x1, 0, 0x89, 0xc3, 0xf, 0xbe, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0xe8, 0xe6, 0, 0, 0, 0xeb, 0x20, 0xf, 0xbf, 0x45, 0xf8, 0x8d, 0x4, 0xc0, 0x8b, 0x80, 0x84, 0x8b, 0x1b, 0x10, 0xe8, 0x96, 0x30, 0x7, 0, 0x89, 0xc3, 0xf, 0xbe, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0xe8, 0xc4, 0, 0, 0, 0xe9, 0x9, 0xff, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10105db3, 0x5)   pushd(0xd0);                          /* push dword 0xd0 */
    II(0x10105db8, 0x5)   calld(sys_check_available_stack_size, 0x5ff95); /* call 0x10165d52 */
    II(0x10105dbd, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10105dbe, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10105dbf, 0x1)   pushd(edx);                           /* push edx */
    II(0x10105dc0, 0x1)   pushd(esi);                           /* push esi */
    II(0x10105dc1, 0x1)   pushd(edi);                           /* push edi */
    II(0x10105dc2, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10105dc3, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10105dc5, 0x6)   sub(esp, 0xa8);                       /* sub esp, 0xa8 */
    II(0x10105dcb, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10105dce, 0x5)   mov(edx, 0x101c3d70);                 /* mov edx, 0x101c3d70 */
    II(0x10105dd3, 0x3)   lea(eax, ebp - 0x70);                 /* lea eax, [ebp-0x70] */
    II(0x10105dd6, 0x5)   calld(sys_strcpy, 0x600f4);           /* call 0x10165ecf */
    II(0x10105ddb, 0x5)   mov(edx, 0x101a3a80);                 /* mov edx, 0x101a3a80 */ /* "max.ini" */
    II(0x10105de0, 0x3)   lea(eax, ebp - 0x70);                 /* lea eax, [ebp-0x70] */
    II(0x10105de3, 0x5)   calld(sys_strcat, 0x60149);           /* call 0x10165f31 */
    II(0x10105de8, 0x5)   mov(edx, 0x101a3a88);                 /* mov edx, 0x101a3a88 */ /* "rt" */
    II(0x10105ded, 0x3)   lea(eax, ebp - 0x70);                 /* lea eax, [ebp-0x70] */
    II(0x10105df0, 0x5)   calld(sys_fopen, 0x6c585);            /* call 0x1017237a */
    II(0x10105df5, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10105df8, 0x4)   cmp(memd_a32(ss, ebp - 0xc), 0);      /* cmp dword [ebp-0xc], 0x0 */
    II(0x10105dfc, 0x6)   jnzd(0x10105f25, 0x123);              /* jnz dword 0x10105f25 */
    II(0x10105e02, 0x5)   mov(eax, 0x101a3a8b);                 /* mov eax, 0x101a3a8b */ /* "\nMANDER.INI File not found..  Using Defaults...\n" */
    II(0x10105e07, 0x1)   pushd(eax);                           /* push eax */
    II(0x10105e08, 0x5)   calld(sys_printf, 0x6682f);           /* call 0x1016c63c */
    II(0x10105e0d, 0x3)   add(esp, 0x4);                        /* add esp, 0x4 */
    II(0x10105e10, 0x5)   mov(edx, 0x101a3abc);                 /* mov edx, 0x101a3abc */ /* "wt" */
    II(0x10105e15, 0x3)   lea(eax, ebp - 0x70);                 /* lea eax, [ebp-0x70] */
    II(0x10105e18, 0x5)   calld(sys_fopen, 0x6c55d);            /* call 0x1017237a */
    II(0x10105e1d, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10105e20, 0x4)   cmp(memd_a32(ss, ebp - 0xc), 0);      /* cmp dword [ebp-0xc], 0x0 */
    II(0x10105e24, 0x2)   jnzd(0x10105e3e, 0x18);               /* jnz 0x10105e3e */
    II(0x10105e26, 0x5)   mov(eax, 0x101a3abf);                 /* mov eax, 0x101a3abf */ /* "\nUnable to Write File..  Disk Full?\n" */
    II(0x10105e2b, 0x1)   pushd(eax);                           /* push eax */
    II(0x10105e2c, 0x5)   calld(sys_printf, 0x6680b);           /* call 0x1016c63c */
    II(0x10105e31, 0x3)   add(esp, 0x4);                        /* add esp, 0x4 */
    II(0x10105e34, 0x5)   mov(eax, 0xc);                        /* mov eax, 0xc */
    II(0x10105e39, 0x5)   calld(0x100ef3a0, -0x16a9e);          /* call 0x100ef3a0 */
l_0x10105e3e:
    II(0x10105e3e, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x10105e45, 0x2)   jmpd(0x10105e4d, 0x6);                /* jmp 0x10105e4d */
l_0x10105e47:
    II(0x10105e47, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10105e4a, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x10105e4d:
    II(0x10105e4d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10105e51, 0x3)   cmp(eax, 0x76);                       /* cmp eax, 0x76 */
    II(0x10105e54, 0x6)   jged(0x10105f25, 0xcb);               /* jge dword 0x10105f25 */
    II(0x10105e5a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10105e5e, 0x3)   lea(eax, eax + eax * 0x8);            /* lea eax, [eax+eax*8] */
    II(0x10105e61, 0x7)   test(memb_a32(ds, eax + 0x101b8b88), 0x1); /* test byte [eax+0x101b8b88], 0x1 */
    II(0x10105e68, 0x2)   jzd(0x10105ebd, 0x53);                /* jz 0x10105ebd */
    II(0x10105e6a, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0);      /* cmp word [ebp-0x8], 0x0 */
    II(0x10105e6f, 0x2)   jzd(0x10105e83, 0x12);                /* jz 0x10105e83 */
    II(0x10105e71, 0x5)   mov(edx, 0x101a3ae4);                 /* mov edx, 0x101a3ae4 */ /* "\n[" */
    II(0x10105e76, 0x6)   lea(eax, ebp - 0xa4);                 /* lea eax, [ebp+0xffffff5c] */
    II(0x10105e7c, 0x5)   calld(sys_strcpy, 0x6004e);           /* call 0x10165ecf */
    II(0x10105e81, 0x2)   jmpd(0x10105e93, 0x10);               /* jmp 0x10105e93 */
l_0x10105e83:
    II(0x10105e83, 0x5)   mov(edx, 0x101a3ae7);                 /* mov edx, 0x101a3ae7 */ /* "[" */
    II(0x10105e88, 0x6)   lea(eax, ebp - 0xa4);                 /* lea eax, [ebp+0xffffff5c] */
    II(0x10105e8e, 0x5)   calld(sys_strcpy, 0x6003c);           /* call 0x10165ecf */
l_0x10105e93:
    II(0x10105e93, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10105e97, 0x3)   lea(eax, eax + eax * 0x8);            /* lea eax, [eax+eax*8] */
    II(0x10105e9a, 0x6)   mov(edx, memd_a32(ds, eax + 0x101b8b80)); /* mov edx, [eax+0x101b8b80] */
    II(0x10105ea0, 0x6)   lea(eax, ebp - 0xa4);                 /* lea eax, [ebp+0xffffff5c] */
    II(0x10105ea6, 0x5)   calld(sys_strcat, 0x60086);           /* call 0x10165f31 */
    II(0x10105eab, 0x5)   mov(edx, 0x101a3ae9);                 /* mov edx, 0x101a3ae9 */ /* "]" */
    II(0x10105eb0, 0x6)   lea(eax, ebp - 0xa4);                 /* lea eax, [ebp+0xffffff5c] */
    II(0x10105eb6, 0x5)   calld(sys_strcat, 0x60076);           /* call 0x10165f31 */
    II(0x10105ebb, 0x2)   jmpd(0x10105efd, 0x40);               /* jmp 0x10105efd */
l_0x10105ebd:
    II(0x10105ebd, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10105ec1, 0x3)   lea(edx, edx + edx * 0x8);            /* lea edx, [edx+edx*8] */
    II(0x10105ec4, 0x6)   mov(edx, memd_a32(ds, edx + 0x101b8b80)); /* mov edx, [edx+0x101b8b80] */
    II(0x10105eca, 0x6)   lea(eax, ebp - 0xa4);                 /* lea eax, [ebp+0xffffff5c] */
    II(0x10105ed0, 0x5)   calld(sys_strcpy, 0x5fffa);           /* call 0x10165ecf */
    II(0x10105ed5, 0x5)   mov(edx, 0x101a3aeb);                 /* mov edx, 0x101a3aeb */ /* "=" */
    II(0x10105eda, 0x6)   lea(eax, ebp - 0xa4);                 /* lea eax, [ebp+0xffffff5c] */
    II(0x10105ee0, 0x5)   calld(sys_strcat, 0x6004c);           /* call 0x10165f31 */
    II(0x10105ee5, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10105ee9, 0x3)   lea(edx, edx + edx * 0x8);            /* lea edx, [edx+edx*8] */
    II(0x10105eec, 0x6)   mov(edx, memd_a32(ds, edx + 0x101b8b84)); /* mov edx, [edx+0x101b8b84] */
    II(0x10105ef2, 0x6)   lea(eax, ebp - 0xa4);                 /* lea eax, [ebp+0xffffff5c] */
    II(0x10105ef8, 0x5)   calld(sys_strcat, 0x60034);           /* call 0x10165f31 */
l_0x10105efd:
    II(0x10105efd, 0x5)   mov(edx, 0x101a3aed);                 /* mov edx, 0x101a3aed */ /* "\n" */
    II(0x10105f02, 0x6)   lea(eax, ebp - 0xa4);                 /* lea eax, [ebp+0xffffff5c] */
    II(0x10105f08, 0x5)   calld(sys_strcat, 0x60024);           /* call 0x10165f31 */
    II(0x10105f0d, 0x6)   lea(eax, ebp - 0xa4);                 /* lea eax, [ebp+0xffffff5c] */
    II(0x10105f13, 0x1)   pushd(eax);                           /* push eax */
    II(0x10105f14, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10105f17, 0x1)   pushd(eax);                           /* push eax */
    II(0x10105f18, 0x5)   calld(/* sys */ 0x1017913b, 0x7321e); /* call 0x1017913b */
    II(0x10105f1d, 0x3)   add(esp, 0x8);                        /* add esp, 0x8 */
    II(0x10105f20, 0x5)   jmpd(0x10105e47, -0xde);              /* jmp 0x10105e47 */
l_0x10105f25:
    II(0x10105f25, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10105f28, 0x5)   calld(sys_fclose, 0x6c13c);           /* call 0x10172069 */
    II(0x10105f2d, 0x3)   lea(eax, ebp - 0x70);                 /* lea eax, [ebp-0x70] */
    II(0x10105f30, 0x1)   pushd(eax);                           /* push eax */
    II(0x10105f31, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10105f34, 0x1)   pushd(eax);                           /* push eax */
    II(0x10105f35, 0x5)   calld(0x1012346f, 0x1d535);           /* call 0x1012346f */
    II(0x10105f3a, 0x3)   add(esp, 0x8);                        /* add esp, 0x8 */
    II(0x10105f3d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10105f3f, 0x2)   jnzd(0x10105f4b, 0xa);                /* jnz 0x10105f4b */
    II(0x10105f41, 0x5)   mov(eax, 0xc);                        /* mov eax, 0xc */
    II(0x10105f46, 0x5)   calld(0x100ef3a0, -0x16bab);          /* call 0x100ef3a0 */
l_0x10105f4b:
    II(0x10105f4b, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x10105f52, 0x2)   jmpd(0x10105f5a, 0x6);                /* jmp 0x10105f5a */
l_0x10105f54:
    II(0x10105f54, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10105f57, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x10105f5a:
    II(0x10105f5a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10105f5e, 0x3)   cmp(eax, 0x76);                       /* cmp eax, 0x76 */
    II(0x10105f61, 0x6)   jged(0x1010604b, 0xe4);               /* jge dword 0x1010604b */
    II(0x10105f67, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10105f6b, 0x3)   lea(eax, eax + eax * 0x8);            /* lea eax, [eax+eax*8] */
    II(0x10105f6e, 0x7)   test(memb_a32(ds, eax + 0x101b8b88), 0x1); /* test byte [eax+0x101b8b88], 0x1 */
    II(0x10105f75, 0x2)   jzd(0x10105f95, 0x1e);                /* jz 0x10105f95 */
    II(0x10105f77, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10105f7b, 0x3)   lea(eax, eax + eax * 0x8);            /* lea eax, [eax+eax*8] */
    II(0x10105f7e, 0x6)   pushd(memd_a32(ds, eax + 0x101b8b80)); /* push dword [eax+0x101b8b80] */
    II(0x10105f84, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10105f87, 0x1)   pushd(eax);                           /* push eax */
    II(0x10105f88, 0x5)   calld(0x101236fa, 0x1d76d);           /* call 0x101236fa */
    II(0x10105f8d, 0x3)   add(esp, 0x8);                        /* add esp, 0x8 */
    II(0x10105f90, 0x5)   jmpd(0x10106046, 0xb1);               /* jmp 0x10106046 */
l_0x10105f95:
    II(0x10105f95, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10105f99, 0x3)   lea(eax, eax + eax * 0x8);            /* lea eax, [eax+eax*8] */
    II(0x10105f9c, 0x7)   test(memb_a32(ds, eax + 0x101b8b88), 0x2); /* test byte [eax+0x101b8b88], 0x2 */
    II(0x10105fa3, 0x6)   jzd(0x10106046, 0x9d);                /* jz dword 0x10106046 */
    II(0x10105fa9, 0x6)   lea(eax, ebp - 0xa8);                 /* lea eax, [ebp+0xffffff58] */
    II(0x10105faf, 0x1)   pushd(eax);                           /* push eax */
    II(0x10105fb0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10105fb4, 0x3)   lea(eax, eax + eax * 0x8);            /* lea eax, [eax+eax*8] */
    II(0x10105fb7, 0x6)   pushd(memd_a32(ds, eax + 0x101b8b80)); /* push dword [eax+0x101b8b80] */
    II(0x10105fbd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10105fc0, 0x1)   pushd(eax);                           /* push eax */
    II(0x10105fc1, 0x5)   calld(0x10124113, 0x1e14d);           /* call 0x10124113 */
    II(0x10105fc6, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x10105fc9, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10105fcb, 0x2)   jzd(0x10105fe1, 0x14);                /* jz 0x10105fe1 */
    II(0x10105fcd, 0x6)   mov(ebx, memd_a32(ss, ebp - 0xa8));   /* mov ebx, [ebp+0xffffff58] */
    II(0x10105fd3, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x8));  /* movsx edx, byte [ebp-0x8] */
    II(0x10105fd7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10105fda, 0x5)   calld(0x1010610a, 0x12b);             /* call 0x1010610a */
    II(0x10105fdf, 0x2)   jmpd(0x10106046, 0x65);               /* jmp 0x10106046 */
l_0x10105fe1:
    II(0x10105fe1, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x10105fe6, 0x5)   mov(edx, 0x101a3aef);                 /* mov edx, 0x101a3aef */ /* "0x" */
    II(0x10105feb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10105fef, 0x3)   lea(eax, eax + eax * 0x8);            /* lea eax, [eax+eax*8] */
    II(0x10105ff2, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b8b84)); /* mov eax, [eax+0x101b8b84] */
    II(0x10105ff8, 0x5)   calld(sys_strncmp, 0x7315f);          /* call 0x1017915c */
    II(0x10105ffd, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10105fff, 0x2)   jnzd(0x10106026, 0x25);               /* jnz 0x10106026 */
    II(0x10106001, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10106005, 0x3)   lea(eax, eax + eax * 0x8);            /* lea eax, [eax+eax*8] */
    II(0x10106008, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b8b84)); /* mov eax, [eax+0x101b8b84] */
    II(0x1010600e, 0x3)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x10106011, 0x5)   calld(0x101247af, 0x1e799);           /* call 0x101247af */
    II(0x10106016, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10106018, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x8));  /* movsx edx, byte [ebp-0x8] */
    II(0x1010601c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1010601f, 0x5)   calld(0x1010610a, 0xe6);              /* call 0x1010610a */
    II(0x10106024, 0x2)   jmpd(0x10106046, 0x20);               /* jmp 0x10106046 */
l_0x10106026:
    II(0x10106026, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1010602a, 0x3)   lea(eax, eax + eax * 0x8);            /* lea eax, [eax+eax*8] */
    II(0x1010602d, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b8b84)); /* mov eax, [eax+0x101b8b84] */
    II(0x10106033, 0x5)   calld(/* sys */ 0x101790ce, 0x73096); /* call 0x101790ce */
    II(0x10106038, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1010603a, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x8));  /* movsx edx, byte [ebp-0x8] */
    II(0x1010603e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10106041, 0x5)   calld(0x1010610a, 0xc4);              /* call 0x1010610a */
l_0x10106046:
    II(0x10106046, 0x5)   jmpd(0x10105f54, -0xf7);              /* jmp 0x10105f54 */
l_0x1010604b:
    II(0x1010604b, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010604d, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010604e, 0x1)   popd(edi);                            /* pop edi */
    II(0x1010604f, 0x1)   popd(esi);                            /* pop esi */
    II(0x10106050, 0x1)   popd(edx);                            /* pop edx */
    II(0x10106051, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10106052, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10106053, 0x1)   retd();                               /* ret */
FUNC_END

