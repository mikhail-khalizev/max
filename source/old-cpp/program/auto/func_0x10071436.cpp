FUNC_BEGIN(0x10071436, 0x5f3b16b710731b90, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0x12, 0x49, 0xf, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x80, 0x4d, 0xf0, 0x1, 0x8d, 0x45, 0xe4, 0xe8, 0x9b, 0x50, 0, 0, 0x89, 0x45, 0xe0, 0x80, 0x65, 0xf0, 0xfe, 0x31, 0xc0, 0x8b, 0x55, 0xf4, 0x8a, 0x42, 0x26, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xfc, 0x66, 0xf, 0xaf, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x8b, 0x55, 0xf8, 0x1, 0xc2, 0x89, 0x55, 0xec, 0x8b, 0x45, 0xf4, 0x66, 0x83, 0x78, 0x8, 0x45, 0x75, 0x18, 0xf, 0xbf, 0x45, 0xe8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xf, 0xbf, 0x55, 0xec, 0x8b, 0x80, 0xa7, 0xa6, 0x1c, 0x10, 0x1, 0xd0, 0xfe, 0x8, 0x8b, 0x45, 0xf4, 0x66, 0x83, 0x78, 0x8, 0x42, 0x74, 0xa, 0x8b, 0x45, 0xf4, 0x66, 0x83, 0x78, 0x8, 0x43, 0x75, 0x18, 0xf, 0xbf, 0x45, 0xe8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xf, 0xbf, 0x55, 0xec, 0x8b, 0x80, 0xab, 0xa6, 0x1c, 0x10, 0x1, 0xd0, 0xfe, 0x8, 0xf, 0xbf, 0x45, 0xe8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xf, 0xbf, 0x55, 0xec, 0x8b, 0x80, 0xa3, 0xa6, 0x1c, 0x10, 0x1, 0xd0, 0xfe, 0x8, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0xf, 0x85, 0xd3, 0, 0, 0, 0xf, 0xbf, 0x4d, 0xe8, 0xf, 0xbf, 0x5d, 0xfc, 0xf, 0xbf, 0x55, 0xf8, 0x8d, 0x45, 0xdc, 0xe8, 0x9d, 0x55, 0, 0, 0x89, 0xca, 0xe8, 0x85, 0x7d, 0x3, 0, 0xf, 0xbf, 0x55, 0xe8, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x2b, 0xf, 0xbf, 0x45, 0xec, 0x8b, 0x15, 0xe8, 0x70, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x8b, 0x15, 0xcc, 0x70, 0x1c, 0x10, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xec, 0x8b, 0x1d, 0xe0, 0x70, 0x1c, 0x10, 0x1, 0xd8, 0x8a, 0x12, 0x88, 0x10, 0xf, 0xbf, 0x5d, 0xfc, 0xf, 0xbf, 0x55, 0xf8, 0xb8, 0xb8, 0x39, 0x1c, 0x10, 0xe8, 0xdf, 0x1f, 0x9, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0xd0, 0x4e, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xfb, 0x97, 0xc, 0, 0x84, 0xc0, 0x74, 0x54, 0x31, 0xd2, 0x8a, 0x15, 0x89, 0x38, 0x1c, 0x10, 0x31, 0xc0, 0xa0, 0x8a, 0x38, 0x1c, 0x10, 0x9, 0xd0, 0x85, 0xc0, 0x74, 0xf, 0xb8, 0x24, 0x39, 0x1c, 0x10, 0xe8, 0xf7, 0x55, 0, 0, 0x98, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x5, 0xe8, 0x1c, 0xe0, 0x8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xc2, 0x97, 0xc, 0, 0x84, 0xc0, 0x74, 0x1b, 0xf, 0xbf, 0x55, 0xe8, 0x8d, 0x45, 0xe4, 0xe8, 0xe1, 0x4d, 0, 0, 0xe8, 0xde, 0xdc, 0xd, 0, 0x8d, 0x45, 0xe4, 0xe8, 0x2c, 0x56, 0, 0, 0xeb, 0xd7, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x94, 0x49, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x10071436, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x1007143b, 0x5)   calld(sys_check_available_stack_size, 0xf4912); /* call 0x10165d52 */
    II(0x10071440, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10071441, 0x1)   pushd(esi);                           /* push esi */
    II(0x10071442, 0x1)   pushd(edi);                           /* push edi */
    II(0x10071443, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10071444, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10071446, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x1007144c, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1007144f, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x10071452, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x10071455, 0x4)   or_(memb_a32(ss, ebp - 0x10), 0x1);   /* or byte [ebp-0x10], 0x1 */
    II(0x10071459, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1007145c, 0x5)   calld(0x100764fc, 0x509b);            /* call 0x100764fc */
    II(0x10071461, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10071464, 0x4)   and_(memb_a32(ss, ebp - 0x10), -0x2 /* 0xfe */); /* and byte [ebp-0x10], 0xfe */
    II(0x10071468, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1007146a, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1007146d, 0x3)   mov(al, memb_a32(ds, edx + 0x26));    /* mov al, [edx+0x26] */
    II(0x10071470, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10071473, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10071476, 0x8)   imul(ax, memw_a32(ds, 0x101c8172));   /* imul ax, [0x101c8172] */
    II(0x1007147e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10071481, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10071483, 0x3)   mov(memd_a32(ss, ebp - 0x14), edx);   /* mov [ebp-0x14], edx */
    II(0x10071486, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10071489, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x45);   /* cmp word [eax+0x8], 0x45 */
    II(0x1007148e, 0x2)   jnzd(0x100714a8, 0x18);               /* jnz 0x100714a8 */
    II(0x10071490, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x10071494, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1007149a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1007149e, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a7)); /* mov eax, [eax+0x101ca6a7] */
    II(0x100714a4, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100714a6, 0x2)   dec(memb_a32(ds, eax));               /* dec byte [eax] */
l_0x100714a8:
    II(0x100714a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100714ab, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x100714b0, 0x2)   jzd(0x100714bc, 0xa);                 /* jz 0x100714bc */
    II(0x100714b2, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100714b5, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x43);   /* cmp word [eax+0x8], 0x43 */
    II(0x100714ba, 0x2)   jnzd(0x100714d4, 0x18);               /* jnz 0x100714d4 */
l_0x100714bc:
    II(0x100714bc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100714c0, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100714c6, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100714ca, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6ab)); /* mov eax, [eax+0x101ca6ab] */
    II(0x100714d0, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100714d2, 0x2)   dec(memb_a32(ds, eax));               /* dec byte [eax] */
l_0x100714d4:
    II(0x100714d4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100714d8, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100714de, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100714e2, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a3)); /* mov eax, [eax+0x101ca6a3] */
    II(0x100714e8, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100714ea, 0x2)   dec(memb_a32(ds, eax));               /* dec byte [eax] */
    II(0x100714ec, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100714ee, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100714f3, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100714f5, 0x6)   jnzd(0x100715ce, 0xd3);               /* jnz dword 0x100715ce */
    II(0x100714fb, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x18)); /* movsx ecx, word [ebp-0x18] */
    II(0x100714ff, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x10071503, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10071507, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1007150a, 0x5)   calld(0x10076aac, 0x559d);            /* call 0x10076aac */
    II(0x1007150f, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x10071511, 0x5)   calld(0x100a929b, 0x37d85);           /* call 0x100a929b */
    II(0x10071516, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x1007151a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1007151c, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x10071521, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10071523, 0x2)   jnzd(0x10071550, 0x2b);               /* jnz 0x10071550 */
    II(0x10071525, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10071529, 0x6)   mov(edx, memd_a32(ds, 0x101c70e8));   /* mov edx, [0x101c70e8] */
    II(0x1007152f, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10071531, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10071533, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10071538, 0x6)   mov(edx, memd_a32(ds, 0x101c70cc));   /* mov edx, [0x101c70cc] */
    II(0x1007153e, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10071540, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10071544, 0x6)   mov(ebx, memd_a32(ds, 0x101c70e0));   /* mov ebx, [0x101c70e0] */
    II(0x1007154a, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x1007154c, 0x2)   mov(dl, memb_a32(ds, edx));           /* mov dl, [edx] */
    II(0x1007154e, 0x2)   mov(memb_a32(ds, eax), dl);           /* mov [eax], dl */
l_0x10071550:
    II(0x10071550, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x10071554, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10071558, 0x5)   mov(eax, 0x101c39b8);                 /* mov eax, 0x101c39b8 */
    II(0x1007155d, 0x5)   calld(0x10103541, 0x91fdf);           /* call 0x10103541 */
    II(0x10071562, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10071564, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10071567, 0x5)   calld(0x1007643c, 0x4ed0);            /* call 0x1007643c */
    II(0x1007156c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007156e, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10071571, 0x5)   calld(0x1013ad71, 0xc97fb);           /* call 0x1013ad71 */
    II(0x10071576, 0x2)   test(al, al);                         /* test al, al */
    II(0x10071578, 0x2)   jzd(0x100715ce, 0x54);                /* jz 0x100715ce */
    II(0x1007157a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007157c, 0x6)   mov(dl, memb_a32(ds, 0x101c3889));    /* mov dl, [0x101c3889] */
    II(0x10071582, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10071584, 0x5)   mov(al, memb_a32(ds, 0x101c388a));    /* mov al, [0x101c388a] */
    II(0x10071589, 0x2)   or_(eax, edx);                        /* or eax, edx */
    II(0x1007158b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007158d, 0x2)   jzd(0x1007159e, 0xf);                 /* jz 0x1007159e */
    II(0x1007158f, 0x5)   mov(eax, 0x101c3924);                 /* mov eax, 0x101c3924 */
    II(0x10071594, 0x5)   calld(0x10076b90, 0x55f7);            /* call 0x10076b90 */
    II(0x10071599, 0x1)   cwde();                               /* cwde */
    II(0x1007159a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007159c, 0x2)   jnzd(0x100715a0, 0x2);                /* jnz 0x100715a0 */
l_0x1007159e:
    II(0x1007159e, 0x2)   jmpd(0x100715a5, 0x5);                /* jmp 0x100715a5 */
l_0x100715a0:
    II(0x100715a0, 0x5)   calld(0x100ff5c1, 0x8e01c);           /* call 0x100ff5c1 */
l_0x100715a5:
    II(0x100715a5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100715a7, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100715aa, 0x5)   calld(0x1013ad71, 0xc97c2);           /* call 0x1013ad71 */
    II(0x100715af, 0x2)   test(al, al);                         /* test al, al */
    II(0x100715b1, 0x2)   jzd(0x100715ce, 0x1b);                /* jz 0x100715ce */
    II(0x100715b3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100715b7, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100715ba, 0x5)   calld(0x100763a0, 0x4de1);            /* call 0x100763a0 */
    II(0x100715bf, 0x5)   calld(0x1014f2a2, 0xddcde);           /* call 0x1014f2a2 */
    II(0x100715c4, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100715c7, 0x5)   calld(0x10076bf8, 0x562c);            /* call 0x10076bf8 */
    II(0x100715cc, 0x2)   jmpd(0x100715a5, -0x29);              /* jmp 0x100715a5 */
l_0x100715ce:
    II(0x100715ce, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100715d0, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100715d3, 0x5)   calld(0x10075f6c, 0x4994);            /* call 0x10075f6c */
    II(0x100715d8, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100715da, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100715db, 0x1)   popd(edi);                            /* pop edi */
    II(0x100715dc, 0x1)   popd(esi);                            /* pop esi */
    II(0x100715dd, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100715de, 0x1)   retd();                               /* ret */
FUNC_END

