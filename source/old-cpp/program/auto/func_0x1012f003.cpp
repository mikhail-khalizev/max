FUNC_BEGIN(0x1012f003, 0xa90b6459a09d4b41, 0x20, ({0x68, 0x40, 0, 0, 0, 0xe8, 0x45, 0x6d, 0x3, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xfc, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0xd2, 0x74, 0xf4, 0xff, 0x89, 0x45, 0xec, 0x80, 0x65, 0xf8, 0xfe, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xbb, 0x5d, 0, 0, 0, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x40, 0xe8, 0x93, 0x6d, 0x3, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x55, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x4c, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x66, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x61, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x67, 0, 0x80, 0x3d, 0xb0, 0x61, 0x1c, 0x10, 0, 0x74, 0x43, 0xbb, 0x5d, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x40, 0xe8, 0x55, 0x6d, 0x3, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x71, 0x1, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x7d, 0x1, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x58, 0x1, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x59, 0x1, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x5b, 0x1, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x57, 0x1, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x60, 0x1, 0x80, 0x3d, 0xb1, 0x61, 0x1c, 0x10, 0, 0x74, 0x4c, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x5d, 0x7d, 0x34, 0xf, 0xbf, 0x55, 0xf4, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xbb, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0x32, 0xc, 0xfb, 0xff, 0x8b, 0x40, 0xc, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0xb, 0xf, 0xbf, 0x45, 0xf4, 0x3, 0x45, 0xfc, 0xc6, 0x40, 0x40, 0, 0xeb, 0xbd, 0x80, 0x3d, 0xb3, 0x61, 0x1c, 0x10, 0, 0x74, 0x39, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x5d, 0x7d, 0x21, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x47, 0x74, 0x9, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x42, 0x75, 0x2, 0xeb, 0xb, 0xf, 0xbf, 0x45, 0xf4, 0x3, 0x45, 0xfc, 0xc6, 0x40, 0x40, 0, 0xeb, 0xd0, 0x80, 0x3d, 0x8c, 0xb4, 0x1b, 0x10, 0, 0x74, 0x4, 0x83, 0x4d, 0xe4, 0x40, 0x80, 0x3d, 0x8d, 0xb4, 0x1b, 0x10, 0, 0x74, 0x7, 0x81, 0x4d, 0xe4, 0, 0x1, 0, 0, 0x80, 0x3d, 0x8e, 0xb4, 0x1b, 0x10, 0, 0x74, 0x7, 0x81, 0x4d, 0xe4, 0x80, 0, 0, 0, 0x80, 0x3d, 0x8f, 0xb4, 0x1b, 0x10, 0, 0x74, 0x7, 0x81, 0x4d, 0xe4, 0, 0x2, 0, 0, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x5d, 0x7d, 0x39, 0xf, 0xbf, 0x45, 0xf4, 0x6b, 0xc0, 0x33, 0x8b, 0x80, 0xc0, 0x81, 0x1c, 0x10, 0x89, 0x45, 0xe0, 0xf7, 0x45, 0xe0, 0, 0, 0x40, 0, 0x74, 0x9, 0xf7, 0x45, 0xe0, 0x1, 0, 0, 0, 0x74, 0x2, 0xeb, 0x8, 0x8b, 0x45, 0xe0, 0x85, 0x45, 0xe4, 0x75, 0xb, 0xf, 0xbf, 0x45, 0xf4, 0x3, 0x45, 0xfc, 0xc6, 0x40, 0x40, 0, 0xeb, 0xb8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0x39, 0xc1, 0, 0, 0xba, 0x84, 0x81, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x14, 0xf9, 0xff, 0xff, 0xba, 0xa8, 0x81, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x7, 0xf9, 0xff, 0xff, 0xba, 0x9c, 0x81, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xfa, 0xf8, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x45, 0xef, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x30, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x38, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0xa0, 0xc2, 0xf7, 0xff, 0x98, 0x29, 0xd0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x2e, 0xc1, 0xf8, 0x10, 0x39, 0xd0, 0x7e, 0x1d, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0x83, 0xc2, 0xf7, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x58, 0x3a, 0x8b, 0x45, 0xfc, 0x29, 0xda, 0x66, 0x89, 0x50, 0x30, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x2e, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7d, 0x9, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0x30, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x22, 0xe8, 0x70, 0xd8, 0xf6, 0xff, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x5d, 0x7d, 0x62, 0xf, 0xbf, 0x45, 0xf4, 0x3, 0x45, 0xfc, 0x80, 0x78, 0x40, 0, 0x74, 0x53, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x4, 0x7d, 0x1e, 0xf, 0xbf, 0x45, 0xf0, 0x69, 0xd0, 0x47, 0x2, 0, 0, 0xf, 0xbf, 0x45, 0xf4, 0x1, 0xc0, 0x1, 0xd0, 0x66, 0x83, 0xb8, 0xe9, 0xa5, 0x1c, 0x10, 0, 0x75, 0x2, 0xeb, 0xd3, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x4, 0x7d, 0x14, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xdc, 0x8d, 0x55, 0xdc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x22, 0xe8, 0xa8, 0xbf, 0xf5, 0xff, 0xeb, 0x8f, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0x32, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x57, 0x6c, 0xf4, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1012f003, 0x5)   pushd(0x40);                          /* push dword 0x40 */
    II(0x1012f008, 0x5)   calld(sys_check_available_stack_size, 0x36d45); /* call 0x10165d52 */
    II(0x1012f00d, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1012f00e, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1012f00f, 0x1)   pushd(edx);                           /* push edx */
    II(0x1012f010, 0x1)   pushd(esi);                           /* push esi */
    II(0x1012f011, 0x1)   pushd(edi);                           /* push edi */
    II(0x1012f012, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1012f013, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1012f015, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x1012f01b, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1012f01e, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x1012f022, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1012f025, 0x5)   calld(0x100764fc, -0xb8b2e);          /* call 0x100764fc */
    II(0x1012f02a, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1012f02d, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x1012f031, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x1012f038, 0x5)   mov(ebx, 0x5d);                       /* mov ebx, 0x5d */
    II(0x1012f03d, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1012f042, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f045, 0x3)   add(eax, 0x40);                       /* add eax, 0x40 */
    II(0x1012f048, 0x5)   calld(sys_memset, 0x36d93);           /* call 0x10165de0 */
    II(0x1012f04d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f050, 0x4)   mov(memb_a32(ds, eax + 0x55), 0);     /* mov byte [eax+0x55], 0x0 */
    II(0x1012f054, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f057, 0x4)   mov(memb_a32(ds, eax + 0x4c), 0);     /* mov byte [eax+0x4c], 0x0 */
    II(0x1012f05b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f05e, 0x4)   mov(memb_a32(ds, eax + 0x66), 0);     /* mov byte [eax+0x66], 0x0 */
    II(0x1012f062, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f065, 0x4)   mov(memb_a32(ds, eax + 0x61), 0);     /* mov byte [eax+0x61], 0x0 */
    II(0x1012f069, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f06c, 0x4)   mov(memb_a32(ds, eax + 0x67), 0);     /* mov byte [eax+0x67], 0x0 */
    II(0x1012f070, 0x7)   cmp(memb_a32(ds, 0x101c61b0), 0);     /* cmp byte [0x101c61b0], 0x0 */
    II(0x1012f077, 0x2)   jzd(0x1012f0bc, 0x43);                /* jz 0x1012f0bc */
    II(0x1012f079, 0x5)   mov(ebx, 0x5d);                       /* mov ebx, 0x5d */
    II(0x1012f07e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012f080, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f083, 0x3)   add(eax, 0x40);                       /* add eax, 0x40 */
    II(0x1012f086, 0x5)   calld(sys_memset, 0x36d55);           /* call 0x10165de0 */
    II(0x1012f08b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f08e, 0x4)   mov(memb_a32(ds, eax + 0x71), 0x1);   /* mov byte [eax+0x71], 0x1 */
    II(0x1012f092, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f095, 0x4)   mov(memb_a32(ds, eax + 0x7d), 0x1);   /* mov byte [eax+0x7d], 0x1 */
    II(0x1012f099, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f09c, 0x4)   mov(memb_a32(ds, eax + 0x58), 0x1);   /* mov byte [eax+0x58], 0x1 */
    II(0x1012f0a0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f0a3, 0x4)   mov(memb_a32(ds, eax + 0x59), 0x1);   /* mov byte [eax+0x59], 0x1 */
    II(0x1012f0a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f0aa, 0x4)   mov(memb_a32(ds, eax + 0x5b), 0x1);   /* mov byte [eax+0x5b], 0x1 */
    II(0x1012f0ae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f0b1, 0x4)   mov(memb_a32(ds, eax + 0x57), 0x1);   /* mov byte [eax+0x57], 0x1 */
    II(0x1012f0b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f0b8, 0x4)   mov(memb_a32(ds, eax + 0x60), 0x1);   /* mov byte [eax+0x60], 0x1 */
l_0x1012f0bc:
    II(0x1012f0bc, 0x7)   cmp(memb_a32(ds, 0x101c61b1), 0);     /* cmp byte [0x101c61b1], 0x0 */
    II(0x1012f0c3, 0x2)   jzd(0x1012f111, 0x4c);                /* jz 0x1012f111 */
    II(0x1012f0c5, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x1012f0cc, 0x2)   jmpd(0x1012f0d4, 0x6);                /* jmp 0x1012f0d4 */
l_0x1012f0ce:
    II(0x1012f0ce, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012f0d1, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x1012f0d4:
    II(0x1012f0d4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1012f0d8, 0x3)   cmp(eax, 0x5d);                       /* cmp eax, 0x5d */
    II(0x1012f0db, 0x2)   jged(0x1012f111, 0x34);               /* jge 0x1012f111 */
    II(0x1012f0dd, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1012f0e1, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012f0e3, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x1012f0e8, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1012f0ee, 0x5)   mov(ebx, 0x101ca468);                 /* mov ebx, 0x101ca468 */
    II(0x1012f0f3, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x1012f0f5, 0x5)   calld(0x100dfd2c, -0x4f3ce);          /* call 0x100dfd2c */
    II(0x1012f0fa, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x1012f0fd, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1012f100, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1012f102, 0x2)   jnzd(0x1012f10f, 0xb);                /* jnz 0x1012f10f */
    II(0x1012f104, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1012f108, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1012f10b, 0x4)   mov(memb_a32(ds, eax + 0x40), 0);     /* mov byte [eax+0x40], 0x0 */
l_0x1012f10f:
    II(0x1012f10f, 0x2)   jmpd(0x1012f0ce, -0x43);              /* jmp 0x1012f0ce */
l_0x1012f111:
    II(0x1012f111, 0x7)   cmp(memb_a32(ds, 0x101c61b3), 0);     /* cmp byte [0x101c61b3], 0x0 */
    II(0x1012f118, 0x2)   jzd(0x1012f153, 0x39);                /* jz 0x1012f153 */
    II(0x1012f11a, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x1012f121, 0x2)   jmpd(0x1012f129, 0x6);                /* jmp 0x1012f129 */
l_0x1012f123:
    II(0x1012f123, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012f126, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x1012f129:
    II(0x1012f129, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1012f12d, 0x3)   cmp(eax, 0x5d);                       /* cmp eax, 0x5d */
    II(0x1012f130, 0x2)   jged(0x1012f153, 0x21);               /* jge 0x1012f153 */
    II(0x1012f132, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1012f136, 0x3)   cmp(eax, 0x47);                       /* cmp eax, 0x47 */
    II(0x1012f139, 0x2)   jzd(0x1012f144, 0x9);                 /* jz 0x1012f144 */
    II(0x1012f13b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1012f13f, 0x3)   cmp(eax, 0x42);                       /* cmp eax, 0x42 */
    II(0x1012f142, 0x2)   jnzd(0x1012f146, 0x2);                /* jnz 0x1012f146 */
l_0x1012f144:
    II(0x1012f144, 0x2)   jmpd(0x1012f151, 0xb);                /* jmp 0x1012f151 */
l_0x1012f146:
    II(0x1012f146, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1012f14a, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1012f14d, 0x4)   mov(memb_a32(ds, eax + 0x40), 0);     /* mov byte [eax+0x40], 0x0 */
l_0x1012f151:
    II(0x1012f151, 0x2)   jmpd(0x1012f123, -0x30);              /* jmp 0x1012f123 */
l_0x1012f153:
    II(0x1012f153, 0x7)   cmp(memb_a32(ds, 0x101bb48c), 0);     /* cmp byte [0x101bb48c], 0x0 */
    II(0x1012f15a, 0x2)   jzd(0x1012f160, 0x4);                 /* jz 0x1012f160 */
    II(0x1012f15c, 0x4)   or_(memd_a32(ss, ebp - 0x1c), 0x40);  /* or dword [ebp-0x1c], 0x40 */
l_0x1012f160:
    II(0x1012f160, 0x7)   cmp(memb_a32(ds, 0x101bb48d), 0);     /* cmp byte [0x101bb48d], 0x0 */
    II(0x1012f167, 0x2)   jzd(0x1012f170, 0x7);                 /* jz 0x1012f170 */
    II(0x1012f169, 0x7)   or_(memd_a32(ss, ebp - 0x1c), 0x100); /* or dword [ebp-0x1c], 0x100 */
l_0x1012f170:
    II(0x1012f170, 0x7)   cmp(memb_a32(ds, 0x101bb48e), 0);     /* cmp byte [0x101bb48e], 0x0 */
    II(0x1012f177, 0x2)   jzd(0x1012f180, 0x7);                 /* jz 0x1012f180 */
    II(0x1012f179, 0x7)   or_(memd_a32(ss, ebp - 0x1c), 0x80);  /* or dword [ebp-0x1c], 0x80 */
l_0x1012f180:
    II(0x1012f180, 0x7)   cmp(memb_a32(ds, 0x101bb48f), 0);     /* cmp byte [0x101bb48f], 0x0 */
    II(0x1012f187, 0x2)   jzd(0x1012f190, 0x7);                 /* jz 0x1012f190 */
    II(0x1012f189, 0x7)   or_(memd_a32(ss, ebp - 0x1c), 0x200); /* or dword [ebp-0x1c], 0x200 */
l_0x1012f190:
    II(0x1012f190, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x1012f197, 0x2)   jmpd(0x1012f19f, 0x6);                /* jmp 0x1012f19f */
l_0x1012f199:
    II(0x1012f199, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012f19c, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x1012f19f:
    II(0x1012f19f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1012f1a3, 0x3)   cmp(eax, 0x5d);                       /* cmp eax, 0x5d */
    II(0x1012f1a6, 0x2)   jged(0x1012f1e1, 0x39);               /* jge 0x1012f1e1 */
    II(0x1012f1a8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1012f1ac, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x1012f1af, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c81c0)); /* mov eax, [eax+0x101c81c0] */
    II(0x1012f1b5, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1012f1b8, 0x7)   test(memd_a32(ss, ebp - 0x20), 0x400000); /* test dword [ebp-0x20], 0x400000 */
    II(0x1012f1bf, 0x2)   jzd(0x1012f1ca, 0x9);                 /* jz 0x1012f1ca */
    II(0x1012f1c1, 0x7)   test(memd_a32(ss, ebp - 0x20), 0x1);  /* test dword [ebp-0x20], 0x1 */
    II(0x1012f1c8, 0x2)   jzd(0x1012f1cc, 0x2);                 /* jz 0x1012f1cc */
l_0x1012f1ca:
    II(0x1012f1ca, 0x2)   jmpd(0x1012f1d4, 0x8);                /* jmp 0x1012f1d4 */
l_0x1012f1cc:
    II(0x1012f1cc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1012f1cf, 0x3)   test(memd_a32(ss, ebp - 0x1c), eax);  /* test [ebp-0x1c], eax */
    II(0x1012f1d2, 0x2)   jnzd(0x1012f1df, 0xb);                /* jnz 0x1012f1df */
l_0x1012f1d4:
    II(0x1012f1d4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1012f1d8, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1012f1db, 0x4)   mov(memb_a32(ds, eax + 0x40), 0);     /* mov byte [eax+0x40], 0x0 */
l_0x1012f1df:
    II(0x1012f1df, 0x2)   jmpd(0x1012f199, -0x48);              /* jmp 0x1012f199 */
l_0x1012f1e1:
    II(0x1012f1e1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f1e4, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1012f1e7, 0x5)   calld(0x1013b325, 0xc139);            /* call 0x1013b325 */
    II(0x1012f1ec, 0x5)   mov(edx, 0x101c8184);                 /* mov edx, 0x101c8184 */
    II(0x1012f1f1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f1f4, 0x5)   calld(0x1012eb0d, -0x6ec);            /* call 0x1012eb0d */
    II(0x1012f1f9, 0x5)   mov(edx, 0x101c81a8);                 /* mov edx, 0x101c81a8 */
    II(0x1012f1fe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f201, 0x5)   calld(0x1012eb0d, -0x6f9);            /* call 0x1012eb0d */
    II(0x1012f206, 0x5)   mov(edx, 0x101c819c);                 /* mov edx, 0x101c819c */
    II(0x1012f20b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f20e, 0x5)   calld(0x1012eb0d, -0x706);            /* call 0x1012eb0d */
    II(0x1012f213, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f216, 0x5)   calld(0x1012e160, -0x10bb);           /* call 0x1012e160 */
    II(0x1012f21b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012f21d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f220, 0x4)   mov(memw_a32(ds, eax + 0x30), dx);    /* mov [eax+0x30], dx */
    II(0x1012f224, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f227, 0x3)   mov(edx, memd_a32(ds, eax + 0x38));   /* mov edx, [eax+0x38] */
    II(0x1012f22a, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1012f22d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f230, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1012f233, 0x5)   calld(my_1_get_count, -0x83d60);      /* call 0x100ab4d8 */
    II(0x1012f238, 0x1)   cwde();                               /* cwde */
    II(0x1012f239, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1012f23b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012f23d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f240, 0x3)   mov(eax, memd_a32(ds, eax + 0x2e));   /* mov eax, [eax+0x2e] */
    II(0x1012f243, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1012f246, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x1012f248, 0x2)   jled(0x1012f267, 0x1d);               /* jle 0x1012f267 */
    II(0x1012f24a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f24d, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1012f250, 0x5)   calld(my_1_get_count, -0x83d7d);      /* call 0x100ab4d8 */
    II(0x1012f255, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012f257, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f25a, 0x4)   mov(bx, memw_a32(ds, eax + 0x3a));    /* mov bx, [eax+0x3a] */
//    II(0x1012f25e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f261, 0x2)   sub(edx, ebx);                        /* sub edx, ebx */
    II(0x1012f263, 0x4)   mov(memw_a32(ds, eax + 0x30), dx);    /* mov [eax+0x30], dx */
l_0x1012f267:
    II(0x1012f267, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f26a, 0x3)   mov(eax, memd_a32(ds, eax + 0x2e));   /* mov eax, [eax+0x2e] */
    II(0x1012f26d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1012f270, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1012f272, 0x2)   jged(0x1012f27d, 0x9);                /* jge 0x1012f27d */
    II(0x1012f274, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f277, 0x6)   mov(memw_a32(ds, eax + 0x30), 0);     /* mov word [eax+0x30], 0x0 */
l_0x1012f27d:
    II(0x1012f27d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f280, 0x3)   add(eax, 0x22);                       /* add eax, 0x22 */
    II(0x1012f283, 0x5)   calld(0x1009caf8, -0x92790);          /* call 0x1009caf8 */
    II(0x1012f288, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x1012f28f, 0x2)   jmpd(0x1012f297, 0x6);                /* jmp 0x1012f297 */
l_0x1012f291:
    II(0x1012f291, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012f294, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x1012f297:
    II(0x1012f297, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1012f29b, 0x3)   cmp(eax, 0x5d);                       /* cmp eax, 0x5d */
    II(0x1012f29e, 0x2)   jged(0x1012f302, 0x62);               /* jge 0x1012f302 */
    II(0x1012f2a0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1012f2a4, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1012f2a7, 0x4)   cmp(memb_a32(ds, eax + 0x40), 0);     /* cmp byte [eax+0x40], 0x0 */
    II(0x1012f2ab, 0x2)   jzd(0x1012f300, 0x53);                /* jz 0x1012f300 */
    II(0x1012f2ad, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x1012f2b4, 0x2)   jmpd(0x1012f2bc, 0x6);                /* jmp 0x1012f2bc */
l_0x1012f2b6:
    II(0x1012f2b6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1012f2b9, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x1012f2bc:
    II(0x1012f2bc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1012f2c0, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x1012f2c3, 0x2)   jged(0x1012f2e3, 0x1e);               /* jge 0x1012f2e3 */
    II(0x1012f2c5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1012f2c9, 0x6)   imul(edx, eax, 0x247);                /* imul edx, eax, 0x247 */
    II(0x1012f2cf, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1012f2d3, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1012f2d5, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1012f2d7, 0x8)   cmp(memw_a32(ds, eax + 0x101ca5e9), 0); /* cmp word [eax+0x101ca5e9], 0x0 */
    II(0x1012f2df, 0x2)   jnzd(0x1012f2e3, 0x2);                /* jnz 0x1012f2e3 */
    II(0x1012f2e1, 0x2)   jmpd(0x1012f2b6, -0x2d);              /* jmp 0x1012f2b6 */
l_0x1012f2e3:
    II(0x1012f2e3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1012f2e7, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x1012f2ea, 0x2)   jged(0x1012f300, 0x14);               /* jge 0x1012f300 */
    II(0x1012f2ec, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012f2ef, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1012f2f2, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x1012f2f5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f2f8, 0x3)   add(eax, 0x22);                       /* add eax, 0x22 */
    II(0x1012f2fb, 0x5)   calld(0x1008b2a8, -0xa4058);          /* call 0x1008b2a8 */
l_0x1012f300:
    II(0x1012f300, 0x2)   jmpd(0x1012f291, -0x71);              /* jmp 0x1012f291 */
l_0x1012f302:
    II(0x1012f302, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f305, 0x6)   mov(memw_a32(ds, eax + 0x32), 0);     /* mov word [eax+0x32], 0x0 */
    II(0x1012f30b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012f30d, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1012f310, 0x5)   calld(0x10075f6c, -0xb93a9);          /* call 0x10075f6c */
    II(0x1012f315, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1012f317, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1012f318, 0x1)   popd(edi);                            /* pop edi */
    II(0x1012f319, 0x1)   popd(esi);                            /* pop esi */
    II(0x1012f31a, 0x1)   popd(edx);                            /* pop edx */
    II(0x1012f31b, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1012f31c, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1012f31d, 0x1)   retd();                               /* ret */
FUNC_END

