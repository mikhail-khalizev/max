FUNC_BEGIN(0x100a6df3, 0x44795307ebc14fd4, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0x55, 0xef, 0xb, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xfc, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0xd6, 0xf8, 0xfc, 0xff, 0x89, 0x45, 0xec, 0x80, 0x65, 0xf8, 0xfe, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xe3, 0x3e, 0x9, 0, 0x84, 0xc0, 0x74, 0xf, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xf0, 0xf0, 0xfc, 0xff, 0xe9, 0x38, 0x1, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0xe2, 0xf7, 0xfc, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1b, 0xe8, 0xd5, 0xf7, 0xfc, 0xff, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xf0, 0xff, 0x52, 0x74, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0xb9, 0xf7, 0xfc, 0xff, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xf4, 0xff, 0x52, 0x78, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xde, 0x3e, 0x9, 0, 0x84, 0xc0, 0xf, 0x84, 0x81, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0x69, 0x3e, 0x9, 0, 0x84, 0xc0, 0x74, 0x10, 0x8d, 0x55, 0xe8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0x5e, 0x3d, 0xfe, 0xff, 0xeb, 0x60, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xf5, 0x3c, 0xfe, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0xeb, 0x3c, 0xfe, 0xff, 0xe8, 0x44, 0xf1, 0xff, 0xff, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xd8, 0x3c, 0xfe, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0xcb, 0x3c, 0xfe, 0xff, 0xe8, 0x24, 0xf1, 0xff, 0xff, 0x89, 0x45, 0xe0, 0xf, 0xbf, 0x55, 0xe0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xf, 0xbf, 0x55, 0xe4, 0x39, 0xd0, 0x7e, 0xe, 0x8d, 0x55, 0xe8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0xfc, 0x3c, 0xfe, 0xff, 0x8d, 0x55, 0xe8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0x9a, 0x5c, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x11, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x17, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1b, 0xe8, 0xd9, 0x3c, 0xfe, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1b, 0xe8, 0xc5, 0x3d, 0x9, 0, 0x84, 0xc0, 0x74, 0xc, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xd2, 0xef, 0xfc, 0xff, 0xeb, 0x1d, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1b, 0xe8, 0xa, 0xf6, 0xfc, 0xff, 0xe8, 0x7e, 0xb8, 0xa, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xb3, 0xef, 0xfc, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100a6df3, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x100a6df8, 0x5)   calld(sys_check_available_stack_size, 0xbef55); /* call 0x10165d52 */
    II(0x100a6dfd, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a6dfe, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a6dff, 0x1)   pushd(edx);                           /* push edx */
    II(0x100a6e00, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a6e01, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a6e02, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a6e03, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a6e05, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x100a6e0b, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100a6e0e, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x100a6e12, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a6e15, 0x5)   calld(my_ctor_0x101b38f8, -0x3072a);  /* call 0x100766f0 */
    II(0x100a6e1a, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100a6e1d, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x100a6e21, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a6e23, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6e26, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100a6e29, 0x5)   calld(0x1013ad11, 0x93ee3);           /* call 0x1013ad11 */
    II(0x100a6e2e, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a6e30, 0x2)   jzd(0x100a6e41, 0xf);                 /* jz 0x100a6e41 */
    II(0x100a6e32, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a6e34, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a6e37, 0x5)   calld(0x10075f2c, -0x30f10);          /* call 0x10075f2c */
    II(0x100a6e3c, 0x5)   jmpd(0x100a6f79, 0x138);              /* jmp 0x100a6f79 */
l_0x100a6e41:
    II(0x100a6e41, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a6e43, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6e46, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100a6e49, 0x5)   calld(0x10076630, -0x3081e);          /* call 0x10076630 */
    II(0x100a6e4e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a6e50, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6e53, 0x3)   add(eax, 0x1b);                       /* add eax, 0x1b */
    II(0x100a6e56, 0x5)   calld(0x10076630, -0x3082b);          /* call 0x10076630 */
    II(0x100a6e5b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6e5e, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x100a6e61, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100a6e64, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100a6e67, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100a6e6a, 0x3)   calld_abs(memd_a32(ds, edx + 0x74));  /* call dword near [edx+0x74] */
    II(0x100a6e6d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a6e6f, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a6e72, 0x5)   calld(0x10076630, -0x30847);          /* call 0x10076630 */
    II(0x100a6e77, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6e7a, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x100a6e7d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a6e80, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100a6e83, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100a6e86, 0x3)   calld_abs(memd_a32(ds, edx + 0x78));  /* call dword near [edx+0x78] */
    II(0x100a6e89, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a6e8b, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a6e8e, 0x5)   calld(0x1013ad71, 0x93ede);           /* call 0x1013ad71 */
    II(0x100a6e93, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a6e95, 0x6)   jzd(0x100a6f1c, 0x81);                /* jz dword 0x100a6f1c */
    II(0x100a6e9b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a6e9d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6ea0, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100a6ea3, 0x5)   calld(0x1013ad11, 0x93e69);           /* call 0x1013ad11 */
    II(0x100a6ea8, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a6eaa, 0x2)   jzd(0x100a6ebc, 0x10);                /* jz 0x100a6ebc */
    II(0x100a6eac, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x100a6eaf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6eb2, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100a6eb5, 0x5)   calld(0x1008ac18, -0x1c2a2);          /* call 0x1008ac18 */
    II(0x100a6eba, 0x2)   jmpd(0x100a6f1c, 0x60);               /* jmp 0x100a6f1c */
l_0x100a6ebc:
    II(0x100a6ebc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6ebf, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100a6ec2, 0x5)   calld(0x1008abbc, -0x1c30b);          /* call 0x1008abbc */
    II(0x100a6ec7, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a6ec9, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a6ecc, 0x5)   calld(0x1008abbc, -0x1c315);          /* call 0x1008abbc */
    II(0x100a6ed1, 0x5)   calld(0x100a601a, -0xebc);            /* call 0x100a601a */
    II(0x100a6ed6, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100a6ed9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6edc, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100a6edf, 0x5)   calld(0x1008abbc, -0x1c328);          /* call 0x1008abbc */
    II(0x100a6ee4, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a6ee6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6ee9, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100a6eec, 0x5)   calld(0x1008abbc, -0x1c335);          /* call 0x1008abbc */
    II(0x100a6ef1, 0x5)   calld(0x100a601a, -0xedc);            /* call 0x100a601a */
    II(0x100a6ef6, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100a6ef9, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x100a6efd, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100a6eff, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100a6f02, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100a6f04, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100a6f06, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100a6f0a, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x100a6f0c, 0x2)   jled(0x100a6f1c, 0xe);                /* jle 0x100a6f1c */
    II(0x100a6f0e, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x100a6f11, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6f14, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100a6f17, 0x5)   calld(0x1008ac18, -0x1c304);          /* call 0x1008ac18 */
l_0x100a6f1c:
    II(0x100a6f1c, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x100a6f1f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6f22, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100a6f25, 0x5)   calld(0x1009cbc4, -0xa366);           /* call 0x1009cbc4 */
    II(0x100a6f2a, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a6f2c, 0x2)   jzd(0x100a6f3f, 0x11);                /* jz 0x100a6f3f */
    II(0x100a6f2e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a6f31, 0x3)   add(edx, 0x17);                       /* add edx, 0x17 */
    II(0x100a6f34, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6f37, 0x3)   add(eax, 0x1b);                       /* add eax, 0x1b */
    II(0x100a6f3a, 0x5)   calld(0x1008ac18, -0x1c327);          /* call 0x1008ac18 */
l_0x100a6f3f:
    II(0x100a6f3f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a6f41, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6f44, 0x3)   add(eax, 0x1b);                       /* add eax, 0x1b */
    II(0x100a6f47, 0x5)   calld(0x1013ad11, 0x93dc5);           /* call 0x1013ad11 */
    II(0x100a6f4c, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a6f4e, 0x2)   jzd(0x100a6f5c, 0xc);                 /* jz 0x100a6f5c */
    II(0x100a6f50, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a6f52, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a6f55, 0x5)   calld(0x10075f2c, -0x3102e);          /* call 0x10075f2c */
    II(0x100a6f5a, 0x2)   jmpd(0x100a6f79, 0x1d);               /* jmp 0x100a6f79 */
l_0x100a6f5c:
    II(0x100a6f5c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a6f5f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a6f62, 0x3)   add(eax, 0x1b);                       /* add eax, 0x1b */
    II(0x100a6f65, 0x5)   calld(0x10076574, -0x309f6);          /* call 0x10076574 */
    II(0x100a6f6a, 0x5)   calld(0x101527ed, 0xab87e);           /* call 0x101527ed */
    II(0x100a6f6f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a6f71, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100a6f74, 0x5)   calld(0x10075f2c, -0x3104d);          /* call 0x10075f2c */
l_0x100a6f79:
    II(0x100a6f79, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a6f7b, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a6f7c, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a6f7d, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a6f7e, 0x1)   popd(edx);                            /* pop edx */
    II(0x100a6f7f, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a6f80, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a6f81, 0x1)   retd();                               /* ret */
FUNC_END

