FUNC_BEGIN(my_ctor_c11, 0x5847ae43c4b12422, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x7f, 0x24, 0xc, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0xc2, 0x67, 0, 0, 0x89, 0x45, 0xf8, 0x8d, 0x45, 0xf8, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x6, 0xe8, 0xa2, 0x77, 0xfe, 0xff, 0x83, 0xe8, 0x6, 0x89, 0x45, 0xf8, 0x8d, 0x45, 0xf8, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x2, 0x24, 0x4f, 0x1b, 0x10, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x6, 0xe8, 0xbe, 0x76, 0xfe, 0xff, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x6, 0xe8, 0xf2, 0x75, 0xfe, 0xff, 0xe8, 0x8d, 0x78, 0, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100a38c9, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x100a38ce, 0x5)   calld(sys_check_available_stack_size, 0xc247f); /* call 0x10165d52 */
    II(0x100a38d3, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a38d4, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a38d5, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a38d6, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a38d7, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a38d8, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a38da, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100a38e0, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a38e3, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100a38e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a38e9, 0x5)   calld(0x100aa0b0, 0x67c2);            /* call 0x100aa0b0 */
    II(0x100a38ee, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a38f1, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a38f4, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100a38f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a38fa, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x100a38fd, 0x5)   calld(my_ctor_0x101b3b58, -0x1885e);  /* call 0x1008b0a4 */
    II(0x100a3902, 0x3)   sub(eax, 0x6);                        /* sub eax, 0x6 */
    II(0x100a3905, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a3908, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a390b, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100a390e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a3911, 0x7)   mov(memd_a32(ds, eax + 0x2), 0x101b4f24); /* mov dword [eax+0x2], 0x101b4f24 */
    II(0x100a3918, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100a391b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a391e, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x100a3921, 0x5)   calld(0x1008afe4, -0x18942);          /* call 0x1008afe4 */
    II(0x100a3926, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100a392b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a392e, 0x3)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x100a3931, 0x5)   calld(0x1008af28, -0x18a0e);          /* call 0x1008af28 */
    II(0x100a3936, 0x5)   calld(0x100ab1c8, 0x788d);            /* call 0x100ab1c8 */
    II(0x100a393b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a393e, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100a3941, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a3944, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a3946, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a3947, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a3948, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a3949, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a394a, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a394b, 0x1)   retd();                               /* ret */
FUNC_END

