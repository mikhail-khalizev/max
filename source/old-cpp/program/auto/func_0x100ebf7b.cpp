FUNC_BEGIN(0x100ebf7b, 0xe37c24725c894d9, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0xcd, 0x9d, 0x7, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x98, 0xa3, 0xf8, 0xff, 0x8d, 0x5d, 0xf4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xc, 0xa5, 0xf8, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf4, 0xe8, 0x42, 0xac, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xb1, 0xed, 0x4, 0, 0x84, 0xc0, 0x74, 0x2a, 0x8d, 0x45, 0xf4, 0xe8, 0xd4, 0xa3, 0xf8, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xfc, 0x39, 0xc2, 0x75, 0xf, 0x8d, 0x45, 0xf4, 0xe8, 0xbf, 0xa3, 0xf8, 0xff, 0x66, 0x83, 0x78, 0x8, 0x31, 0x74, 0x2, 0xeb, 0x2, 0xeb, 0x2, 0xeb, 0xc0, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x19, 0xed, 0x4, 0, 0x84, 0xc0, 0x74, 0x13, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x62, 0x9f, 0xf8, 0xff, 0xe9, 0xa2, 0x1, 0, 0, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x1f, 0xa3, 0xf8, 0xff, 0x8d, 0x5d, 0xf4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x17, 0xa4, 0xf8, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf4, 0xe8, 0xc9, 0xab, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x38, 0xed, 0x4, 0, 0x84, 0xc0, 0x74, 0x2a, 0x8d, 0x45, 0xf4, 0xe8, 0x5b, 0xa3, 0xf8, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xfc, 0x39, 0xc2, 0x75, 0xf, 0x8d, 0x45, 0xf4, 0xe8, 0x46, 0xa3, 0xf8, 0xff, 0x66, 0x83, 0x78, 0x8, 0x3d, 0x74, 0x2, 0xeb, 0x2, 0xeb, 0x2, 0xeb, 0xc0, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xa0, 0xec, 0x4, 0, 0x84, 0xc0, 0x74, 0x13, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xe9, 0x9e, 0xf8, 0xff, 0xe9, 0x29, 0x1, 0, 0, 0xc7, 0x45, 0xf0, 0x26, 0, 0, 0, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x9f, 0xa2, 0xf8, 0xff, 0x8d, 0x5d, 0xf4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x97, 0xa3, 0xf8, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf4, 0xe8, 0x49, 0xab, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xb8, 0xec, 0x4, 0, 0x84, 0xc0, 0x74, 0x2a, 0x8d, 0x45, 0xf4, 0xe8, 0xdb, 0xa2, 0xf8, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xfc, 0x39, 0xc2, 0x75, 0xf, 0x8d, 0x45, 0xf4, 0xe8, 0xc6, 0xa2, 0xf8, 0xff, 0x66, 0x83, 0x78, 0x8, 0x28, 0x74, 0x2, 0xeb, 0x2, 0xeb, 0x2, 0xeb, 0xc0, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x80, 0xec, 0x4, 0, 0x84, 0xc0, 0x74, 0x7, 0xc7, 0x45, 0xf0, 0x8, 0, 0, 0, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x32, 0xa2, 0xf8, 0xff, 0x8d, 0x5d, 0xf4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x2a, 0xa3, 0xf8, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf4, 0xe8, 0xdc, 0xaa, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x4b, 0xec, 0x4, 0, 0x84, 0xc0, 0x74, 0x33, 0x8d, 0x45, 0xf4, 0xe8, 0x6e, 0xa2, 0xf8, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xfc, 0x39, 0xc2, 0x75, 0x18, 0x8d, 0x45, 0xf4, 0xe8, 0x59, 0xa2, 0xf8, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xdc, 0x5d, 0xf8, 0xff, 0x98, 0x85, 0xc0, 0x7c, 0x2, 0xeb, 0x2, 0xeb, 0x2, 0xeb, 0xb7, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xa, 0xec, 0x4, 0, 0x84, 0xc0, 0x74, 0x4, 0x83, 0x45, 0xf0, 0xf8, 0xf, 0xbf, 0x45, 0xf0, 0x85, 0xc0, 0x74, 0x14, 0xba, 0x1, 0, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0x72, 0xfa, 0xff, 0xff, 0x66, 0x3b, 0x45, 0xf0, 0x7c, 0x6, 0xc6, 0x45, 0xec, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xec, 0, 0x8a, 0x45, 0xec, 0x88, 0x45, 0xf8, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xc7, 0x9d, 0xf8, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xbb, 0x9d, 0xf8, 0xff, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100ebf7b, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x100ebf80, 0x5)   calld(sys_check_available_stack_size, 0x79dcd); /* call 0x10165d52 */
    II(0x100ebf85, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100ebf86, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ebf87, 0x1)   pushd(edx);                           /* push edx */
    II(0x100ebf88, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ebf89, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ebf8a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ebf8b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ebf8d, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100ebf93, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100ebf96, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100ebf9b, 0x5)   calld(0x10076338, -0x75c68);          /* call 0x10076338 */
    II(0x100ebfa0, 0x3)   lea(ebx, ebp - 0xc);                  /* lea ebx, [ebp-0xc] */
    II(0x100ebfa3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ebfa5, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100ebfa7, 0x5)   calld(0x100764b8, -0x75af4);          /* call 0x100764b8 */
    II(0x100ebfac, 0x2)   jmpd(0x100ebfb6, 0x8);                /* jmp 0x100ebfb6 */
l_0x100ebfae:
    II(0x100ebfae, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ebfb1, 0x5)   calld(0x10076bf8, -0x753be);          /* call 0x10076bf8 */
l_0x100ebfb6:
    II(0x100ebfb6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ebfb8, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ebfbb, 0x5)   calld(0x1013ad71, 0x4edb1);           /* call 0x1013ad71 */
    II(0x100ebfc0, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ebfc2, 0x2)   jzd(0x100ebfee, 0x2a);                /* jz 0x100ebfee */
    II(0x100ebfc4, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ebfc7, 0x5)   calld(0x100763a0, -0x75c2c);          /* call 0x100763a0 */
    II(0x100ebfcc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ebfce, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100ebfd1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100ebfd5, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ebfd7, 0x2)   jnzd(0x100ebfe8, 0xf);                /* jnz 0x100ebfe8 */
    II(0x100ebfd9, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ebfdc, 0x5)   calld(0x100763a0, -0x75c41);          /* call 0x100763a0 */
    II(0x100ebfe1, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x31);   /* cmp word [eax+0x8], 0x31 */
    II(0x100ebfe6, 0x2)   jzd(0x100ebfea, 0x2);                 /* jz 0x100ebfea */
l_0x100ebfe8:
    II(0x100ebfe8, 0x2)   jmpd(0x100ebfec, 0x2);                /* jmp 0x100ebfec */
l_0x100ebfea:
    II(0x100ebfea, 0x2)   jmpd(0x100ebfee, 0x2);                /* jmp 0x100ebfee */
l_0x100ebfec:
    II(0x100ebfec, 0x2)   jmpd(0x100ebfae, -0x40);              /* jmp 0x100ebfae */
l_0x100ebfee:
    II(0x100ebfee, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ebff0, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ebff3, 0x5)   calld(0x1013ad11, 0x4ed19);           /* call 0x1013ad11 */
    II(0x100ebff8, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ebffa, 0x2)   jzd(0x100ec00f, 0x13);                /* jz 0x100ec00f */
    II(0x100ebffc, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100ec000, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ec002, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec005, 0x5)   calld(0x10075f6c, -0x7609e);          /* call 0x10075f6c */
    II(0x100ec00a, 0x5)   jmpd(0x100ec1b1, 0x1a2);              /* jmp 0x100ec1b1 */
l_0x100ec00f:
    II(0x100ec00f, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100ec014, 0x5)   calld(0x10076338, -0x75ce1);          /* call 0x10076338 */
    II(0x100ec019, 0x3)   lea(ebx, ebp - 0xc);                  /* lea ebx, [ebp-0xc] */
    II(0x100ec01c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ec01e, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100ec020, 0x5)   calld(0x1007643c, -0x75be9);          /* call 0x1007643c */
    II(0x100ec025, 0x2)   jmpd(0x100ec02f, 0x8);                /* jmp 0x100ec02f */
l_0x100ec027:
    II(0x100ec027, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec02a, 0x5)   calld(0x10076bf8, -0x75437);          /* call 0x10076bf8 */
l_0x100ec02f:
    II(0x100ec02f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ec031, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec034, 0x5)   calld(0x1013ad71, 0x4ed38);           /* call 0x1013ad71 */
    II(0x100ec039, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ec03b, 0x2)   jzd(0x100ec067, 0x2a);                /* jz 0x100ec067 */
    II(0x100ec03d, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec040, 0x5)   calld(0x100763a0, -0x75ca5);          /* call 0x100763a0 */
    II(0x100ec045, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ec047, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100ec04a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100ec04e, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ec050, 0x2)   jnzd(0x100ec061, 0xf);                /* jnz 0x100ec061 */
    II(0x100ec052, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec055, 0x5)   calld(0x100763a0, -0x75cba);          /* call 0x100763a0 */
    II(0x100ec05a, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x3d);   /* cmp word [eax+0x8], 0x3d */
    II(0x100ec05f, 0x2)   jzd(0x100ec063, 0x2);                 /* jz 0x100ec063 */
l_0x100ec061:
    II(0x100ec061, 0x2)   jmpd(0x100ec065, 0x2);                /* jmp 0x100ec065 */
l_0x100ec063:
    II(0x100ec063, 0x2)   jmpd(0x100ec067, 0x2);                /* jmp 0x100ec067 */
l_0x100ec065:
    II(0x100ec065, 0x2)   jmpd(0x100ec027, -0x40);              /* jmp 0x100ec027 */
l_0x100ec067:
    II(0x100ec067, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ec069, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec06c, 0x5)   calld(0x1013ad11, 0x4eca0);           /* call 0x1013ad11 */
    II(0x100ec071, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ec073, 0x2)   jzd(0x100ec088, 0x13);                /* jz 0x100ec088 */
    II(0x100ec075, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100ec079, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ec07b, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec07e, 0x5)   calld(0x10075f6c, -0x76117);          /* call 0x10075f6c */
    II(0x100ec083, 0x5)   jmpd(0x100ec1b1, 0x129);              /* jmp 0x100ec1b1 */
l_0x100ec088:
    II(0x100ec088, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x26);  /* mov dword [ebp-0x10], 0x26 */
    II(0x100ec08f, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100ec094, 0x5)   calld(0x10076338, -0x75d61);          /* call 0x10076338 */
    II(0x100ec099, 0x3)   lea(ebx, ebp - 0xc);                  /* lea ebx, [ebp-0xc] */
    II(0x100ec09c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ec09e, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100ec0a0, 0x5)   calld(0x1007643c, -0x75c69);          /* call 0x1007643c */
    II(0x100ec0a5, 0x2)   jmpd(0x100ec0af, 0x8);                /* jmp 0x100ec0af */
l_0x100ec0a7:
    II(0x100ec0a7, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec0aa, 0x5)   calld(0x10076bf8, -0x754b7);          /* call 0x10076bf8 */
l_0x100ec0af:
    II(0x100ec0af, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ec0b1, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec0b4, 0x5)   calld(0x1013ad71, 0x4ecb8);           /* call 0x1013ad71 */
    II(0x100ec0b9, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ec0bb, 0x2)   jzd(0x100ec0e7, 0x2a);                /* jz 0x100ec0e7 */
    II(0x100ec0bd, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec0c0, 0x5)   calld(0x100763a0, -0x75d25);          /* call 0x100763a0 */
    II(0x100ec0c5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ec0c7, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100ec0ca, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100ec0ce, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ec0d0, 0x2)   jnzd(0x100ec0e1, 0xf);                /* jnz 0x100ec0e1 */
    II(0x100ec0d2, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec0d5, 0x5)   calld(0x100763a0, -0x75d3a);          /* call 0x100763a0 */
    II(0x100ec0da, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x28);   /* cmp word [eax+0x8], 0x28 */
    II(0x100ec0df, 0x2)   jzd(0x100ec0e3, 0x2);                 /* jz 0x100ec0e3 */
l_0x100ec0e1:
    II(0x100ec0e1, 0x2)   jmpd(0x100ec0e5, 0x2);                /* jmp 0x100ec0e5 */
l_0x100ec0e3:
    II(0x100ec0e3, 0x2)   jmpd(0x100ec0e7, 0x2);                /* jmp 0x100ec0e7 */
l_0x100ec0e5:
    II(0x100ec0e5, 0x2)   jmpd(0x100ec0a7, -0x40);              /* jmp 0x100ec0a7 */
l_0x100ec0e7:
    II(0x100ec0e7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ec0e9, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec0ec, 0x5)   calld(0x1013ad71, 0x4ec80);           /* call 0x1013ad71 */
    II(0x100ec0f1, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ec0f3, 0x2)   jzd(0x100ec0fc, 0x7);                 /* jz 0x100ec0fc */
    II(0x100ec0f5, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x8);   /* mov dword [ebp-0x10], 0x8 */
l_0x100ec0fc:
    II(0x100ec0fc, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100ec101, 0x5)   calld(0x10076338, -0x75dce);          /* call 0x10076338 */
    II(0x100ec106, 0x3)   lea(ebx, ebp - 0xc);                  /* lea ebx, [ebp-0xc] */
    II(0x100ec109, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ec10b, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100ec10d, 0x5)   calld(0x1007643c, -0x75cd6);          /* call 0x1007643c */
    II(0x100ec112, 0x2)   jmpd(0x100ec11c, 0x8);                /* jmp 0x100ec11c */
l_0x100ec114:
    II(0x100ec114, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec117, 0x5)   calld(0x10076bf8, -0x75524);          /* call 0x10076bf8 */
l_0x100ec11c:
    II(0x100ec11c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ec11e, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec121, 0x5)   calld(0x1013ad71, 0x4ec4b);           /* call 0x1013ad71 */
    II(0x100ec126, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ec128, 0x2)   jzd(0x100ec15d, 0x33);                /* jz 0x100ec15d */
    II(0x100ec12a, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec12d, 0x5)   calld(0x100763a0, -0x75d92);          /* call 0x100763a0 */
    II(0x100ec132, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ec134, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100ec137, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100ec13b, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ec13d, 0x2)   jnzd(0x100ec157, 0x18);               /* jnz 0x100ec157 */
    II(0x100ec13f, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec142, 0x5)   calld(0x100763a0, -0x75da7);          /* call 0x100763a0 */
    II(0x100ec147, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100ec14a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ec14d, 0x5)   calld(0x10071f2e, -0x7a224);          /* call 0x10071f2e */
    II(0x100ec152, 0x1)   cwde();                               /* cwde */
    II(0x100ec153, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ec155, 0x2)   jld(0x100ec159, 0x2);                 /* jl 0x100ec159 */
l_0x100ec157:
    II(0x100ec157, 0x2)   jmpd(0x100ec15b, 0x2);                /* jmp 0x100ec15b */
l_0x100ec159:
    II(0x100ec159, 0x2)   jmpd(0x100ec15d, 0x2);                /* jmp 0x100ec15d */
l_0x100ec15b:
    II(0x100ec15b, 0x2)   jmpd(0x100ec114, -0x49);              /* jmp 0x100ec114 */
l_0x100ec15d:
    II(0x100ec15d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ec15f, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec162, 0x5)   calld(0x1013ad71, 0x4ec0a);           /* call 0x1013ad71 */
    II(0x100ec167, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ec169, 0x2)   jzd(0x100ec16f, 0x4);                 /* jz 0x100ec16f */
    II(0x100ec16b, 0x4)   add(memd_a32(ss, ebp - 0x10), -0x8 /* 0xf8 */); /* add dword [ebp-0x10], 0xf8 */
l_0x100ec16f:
    II(0x100ec16f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100ec173, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ec175, 0x2)   jzd(0x100ec18b, 0x14);                /* jz 0x100ec18b */
    II(0x100ec177, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100ec17c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100ec180, 0x5)   calld(0x100ebbf7, -0x58e);            /* call 0x100ebbf7 */
    II(0x100ec185, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x100ec189, 0x2)   jld(0x100ec191, 0x6);                 /* jl 0x100ec191 */
l_0x100ec18b:
    II(0x100ec18b, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
    II(0x100ec18f, 0x2)   jmpd(0x100ec195, 0x4);                /* jmp 0x100ec195 */
l_0x100ec191:
    II(0x100ec191, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
l_0x100ec195:
    II(0x100ec195, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x100ec198, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
    II(0x100ec19b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ec19d, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100ec1a0, 0x5)   calld(0x10075f6c, -0x76239);          /* call 0x10075f6c */
    II(0x100ec1a5, 0x2)   jmpd(0x100ec1b1, 0xa);                /* jmp 0x100ec1b1 */
//  II(0x100ec1a7, 0xa)   /* Недостижимый код. */
l_0x100ec1b1:
    II(0x100ec1b1, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100ec1b4, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ec1b6, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ec1b7, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ec1b8, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ec1b9, 0x1)   popd(edx);                            /* pop edx */
    II(0x100ec1ba, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ec1bb, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ec1bc, 0x1)   retd();                               /* ret */
FUNC_END

