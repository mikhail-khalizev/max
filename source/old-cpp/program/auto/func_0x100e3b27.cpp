FUNC_BEGIN(0x100e3b27, 0x573ccce7a4c13ba9, 0x20, ({0x68, 0x7c, 0, 0, 0, 0xe8, 0x21, 0x22, 0x8, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x60, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x17, 0x1, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x26, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0xf, 0x8e, 0xa2, 0x2, 0, 0, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0x8b, 0x45, 0xf8, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x42, 0x28, 0x7d, 0x44, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x40, 0x2c, 0x89, 0x45, 0xf4, 0x83, 0x7d, 0xf4, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xf4, 0xe8, 0x65, 0xd8, 0xff, 0xff, 0xe8, 0xca, 0x23, 0x8, 0, 0x89, 0x45, 0xf0, 0xeb, 0x7, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0xc7, 0x40, 0x2c, 0, 0, 0, 0, 0xeb, 0xaa, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0x28, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0x78, 0x44, 0, 0x74, 0x68, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x44, 0x89, 0x45, 0xec, 0x83, 0x7d, 0xec, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xec, 0xe8, 0x4f, 0x41, 0xff, 0xff, 0xe8, 0x7b, 0x23, 0x8, 0, 0x89, 0x45, 0xe8, 0xeb, 0x7, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0x44, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x48, 0x89, 0x45, 0xe4, 0x83, 0x7d, 0xe4, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xe4, 0xe8, 0x1b, 0x41, 0xff, 0xff, 0xe8, 0x47, 0x23, 0x8, 0, 0x89, 0x45, 0xe0, 0xeb, 0x7, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0x48, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0x78, 0x4c, 0, 0x74, 0x2a, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x4c, 0x89, 0x45, 0xdc, 0x83, 0x7d, 0xdc, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xdc, 0xe8, 0xe3, 0xa8, 0xfe, 0xff, 0xe8, 0xa, 0x23, 0x8, 0, 0x89, 0x45, 0xd8, 0xeb, 0x7, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0x4c, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0x78, 0x50, 0, 0xf, 0x84, 0x9c, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x50, 0x89, 0x45, 0xd4, 0x83, 0x7d, 0xd4, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xd4, 0xe8, 0xa2, 0xa8, 0xfe, 0xff, 0xe8, 0xc9, 0x22, 0x8, 0, 0x89, 0x45, 0xd0, 0xeb, 0x7, 0xc7, 0x45, 0xd0, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0x50, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x54, 0x89, 0x45, 0xcc, 0x83, 0x7d, 0xcc, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xcc, 0xe8, 0x6e, 0xa8, 0xfe, 0xff, 0xe8, 0x95, 0x22, 0x8, 0, 0x89, 0x45, 0xc8, 0xeb, 0x7, 0xc7, 0x45, 0xc8, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0x54, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x58, 0x89, 0x45, 0xc4, 0x83, 0x7d, 0xc4, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xc4, 0xe8, 0x3a, 0xa8, 0xfe, 0xff, 0xe8, 0x61, 0x22, 0x8, 0, 0x89, 0x45, 0xc0, 0xeb, 0x7, 0xc7, 0x45, 0xc0, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0x58, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x5c, 0x89, 0x45, 0xbc, 0x83, 0x7d, 0xbc, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xbc, 0xe8, 0x6, 0xa8, 0xfe, 0xff, 0xe8, 0x2d, 0x22, 0x8, 0, 0x89, 0x45, 0xb8, 0xeb, 0x7, 0xc7, 0x45, 0xb8, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0x5c, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x60, 0x89, 0x45, 0xb4, 0x83, 0x7d, 0xb4, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xb4, 0xe8, 0xd2, 0xa7, 0xfe, 0xff, 0xe8, 0xf9, 0x21, 0x8, 0, 0x89, 0x45, 0xb0, 0xeb, 0x7, 0xc7, 0x45, 0xb0, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0x60, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x64, 0x89, 0x45, 0xac, 0x83, 0x7d, 0xac, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xac, 0xe8, 0x9e, 0xa7, 0xfe, 0xff, 0xe8, 0xc5, 0x21, 0x8, 0, 0x89, 0x45, 0xa8, 0xeb, 0x7, 0xc7, 0x45, 0xa8, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0x64, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x68, 0x89, 0x45, 0xa4, 0x83, 0x7d, 0xa4, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xa4, 0xe8, 0x6a, 0xa7, 0xfe, 0xff, 0xe8, 0x91, 0x21, 0x8, 0, 0x89, 0x45, 0xa0, 0xeb, 0x7, 0xc7, 0x45, 0xa0, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0x68, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0x9d, 0x2b, 0x8, 0, 0x8b, 0x45, 0xfc, 0xc7, 0, 0, 0, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100e3b27, 0x5)   pushd(0x7c);                          /* push dword 0x7c */
    II(0x100e3b2c, 0x5)   calld(sys_check_available_stack_size, 0x82221); /* call 0x10165d52 */
    II(0x100e3b31, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100e3b32, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100e3b33, 0x1)   pushd(edx);                           /* push edx */
    II(0x100e3b34, 0x1)   pushd(esi);                           /* push esi */
    II(0x100e3b35, 0x1)   pushd(edi);                           /* push edi */
    II(0x100e3b36, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100e3b37, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100e3b39, 0x6)   sub(esp, 0x60);                       /* sub esp, 0x60 */
    II(0x100e3b3f, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100e3b42, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3b45, 0x4)   mov(memb_a32(ds, eax + 0x17), 0x1);   /* mov byte [eax+0x17], 0x1 */
    II(0x100e3b49, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3b4c, 0x3)   mov(eax, memd_a32(ds, eax + 0x26));   /* mov eax, [eax+0x26] */
    II(0x100e3b4f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100e3b52, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100e3b54, 0x6)   jled(0x100e3dfc, 0x2a2);              /* jle dword 0x100e3dfc */
    II(0x100e3b5a, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x100e3b61, 0x2)   jmpd(0x100e3b69, 0x6);                /* jmp 0x100e3b69 */
l_0x100e3b63:
    II(0x100e3b63, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e3b66, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x100e3b69:
    II(0x100e3b69, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100e3b6c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100e3b6f, 0x4)   cmp(ax, memw_a32(ds, edx + 0x28));    /* cmp ax, [edx+0x28] */
    II(0x100e3b73, 0x2)   jged(0x100e3bb9, 0x44);               /* jge 0x100e3bb9 */
    II(0x100e3b75, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100e3b79, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100e3b7c, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x100e3b7f, 0x3)   mov(eax, memd_a32(ds, eax + 0x2c));   /* mov eax, [eax+0x2c] */
    II(0x100e3b82, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100e3b85, 0x4)   cmp(memd_a32(ss, ebp - 0xc), 0);      /* cmp dword [ebp-0xc], 0x0 */
    II(0x100e3b89, 0x2)   jzd(0x100e3b9f, 0x14);                /* jz 0x100e3b9f */
    II(0x100e3b8b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e3b8d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100e3b90, 0x5)   calld(my_dtor_d5, -0x279b);           /* call 0x100e13fa */
    II(0x100e3b95, 0x5)   calld(sys_delete, 0x823ca);           /* call 0x10165f64 */
    II(0x100e3b9a, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100e3b9d, 0x2)   jmpd(0x100e3ba6, 0x7);                /* jmp 0x100e3ba6 */
l_0x100e3b9f:
    II(0x100e3b9f, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
l_0x100e3ba6:
    II(0x100e3ba6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100e3baa, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100e3bad, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x100e3bb0, 0x7)   mov(memd_a32(ds, eax + 0x2c), 0);     /* mov dword [eax+0x2c], 0x0 */
    II(0x100e3bb7, 0x2)   jmpd(0x100e3b63, -0x56);              /* jmp 0x100e3b63 */
l_0x100e3bb9:
    II(0x100e3bb9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3bbc, 0x6)   mov(memw_a32(ds, eax + 0x28), 0);     /* mov word [eax+0x28], 0x0 */
    II(0x100e3bc2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3bc5, 0x4)   cmp(memd_a32(ds, eax + 0x44), 0);     /* cmp dword [eax+0x44], 0x0 */
    II(0x100e3bc9, 0x2)   jzd(0x100e3c33, 0x68);                /* jz 0x100e3c33 */
    II(0x100e3bcb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3bce, 0x3)   mov(eax, memd_a32(ds, eax + 0x44));   /* mov eax, [eax+0x44] */
    II(0x100e3bd1, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100e3bd4, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0);     /* cmp dword [ebp-0x14], 0x0 */
    II(0x100e3bd8, 0x2)   jzd(0x100e3bee, 0x14);                /* jz 0x100e3bee */
    II(0x100e3bda, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e3bdc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100e3bdf, 0x5)   calld(my_dtor_d3, -0xbeb1);           /* call 0x100d7d33 */
    II(0x100e3be4, 0x5)   calld(sys_delete, 0x8237b);           /* call 0x10165f64 */
    II(0x100e3be9, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100e3bec, 0x2)   jmpd(0x100e3bf5, 0x7);                /* jmp 0x100e3bf5 */
l_0x100e3bee:
    II(0x100e3bee, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
l_0x100e3bf5:
    II(0x100e3bf5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3bf8, 0x7)   mov(memd_a32(ds, eax + 0x44), 0);     /* mov dword [eax+0x44], 0x0 */
    II(0x100e3bff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3c02, 0x3)   mov(eax, memd_a32(ds, eax + 0x48));   /* mov eax, [eax+0x48] */
    II(0x100e3c05, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100e3c08, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0);     /* cmp dword [ebp-0x1c], 0x0 */
    II(0x100e3c0c, 0x2)   jzd(0x100e3c22, 0x14);                /* jz 0x100e3c22 */
    II(0x100e3c0e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e3c10, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100e3c13, 0x5)   calld(my_dtor_d3, -0xbee5);           /* call 0x100d7d33 */
    II(0x100e3c18, 0x5)   calld(sys_delete, 0x82347);           /* call 0x10165f64 */
    II(0x100e3c1d, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100e3c20, 0x2)   jmpd(0x100e3c29, 0x7);                /* jmp 0x100e3c29 */
l_0x100e3c22:
    II(0x100e3c22, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
l_0x100e3c29:
    II(0x100e3c29, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3c2c, 0x7)   mov(memd_a32(ds, eax + 0x48), 0);     /* mov dword [eax+0x48], 0x0 */
l_0x100e3c33:
    II(0x100e3c33, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3c36, 0x4)   cmp(memd_a32(ds, eax + 0x4c), 0);     /* cmp dword [eax+0x4c], 0x0 */
    II(0x100e3c3a, 0x2)   jzd(0x100e3c66, 0x2a);                /* jz 0x100e3c66 */
    II(0x100e3c3c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3c3f, 0x3)   mov(eax, memd_a32(ds, eax + 0x4c));   /* mov eax, [eax+0x4c] */
    II(0x100e3c42, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100e3c45, 0x4)   cmp(memd_a32(ss, ebp - 0x24), 0);     /* cmp dword [ebp-0x24], 0x0 */
    II(0x100e3c49, 0x2)   jzd(0x100e3c5f, 0x14);                /* jz 0x100e3c5f */
    II(0x100e3c4b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e3c4d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100e3c50, 0x5)   calld(my_dtor_d2, -0x1571d);          /* call 0x100ce538 */
    II(0x100e3c55, 0x5)   calld(sys_delete, 0x8230a);           /* call 0x10165f64 */
    II(0x100e3c5a, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100e3c5d, 0x2)   jmpd(0x100e3c66, 0x7);                /* jmp 0x100e3c66 */
l_0x100e3c5f:
    II(0x100e3c5f, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
l_0x100e3c66:
    II(0x100e3c66, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3c69, 0x7)   mov(memd_a32(ds, eax + 0x4c), 0);     /* mov dword [eax+0x4c], 0x0 */
    II(0x100e3c70, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3c73, 0x4)   cmp(memd_a32(ds, eax + 0x50), 0);     /* cmp dword [eax+0x50], 0x0 */
    II(0x100e3c77, 0x6)   jzd(0x100e3d19, 0x9c);                /* jz dword 0x100e3d19 */
    II(0x100e3c7d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3c80, 0x3)   mov(eax, memd_a32(ds, eax + 0x50));   /* mov eax, [eax+0x50] */
    II(0x100e3c83, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100e3c86, 0x4)   cmp(memd_a32(ss, ebp - 0x2c), 0);     /* cmp dword [ebp-0x2c], 0x0 */
    II(0x100e3c8a, 0x2)   jzd(0x100e3ca0, 0x14);                /* jz 0x100e3ca0 */
    II(0x100e3c8c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e3c8e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100e3c91, 0x5)   calld(my_dtor_d2, -0x1575e);          /* call 0x100ce538 */
    II(0x100e3c96, 0x5)   calld(sys_delete, 0x822c9);           /* call 0x10165f64 */
    II(0x100e3c9b, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100e3c9e, 0x2)   jmpd(0x100e3ca7, 0x7);                /* jmp 0x100e3ca7 */
l_0x100e3ca0:
    II(0x100e3ca0, 0x7)   mov(memd_a32(ss, ebp - 0x30), 0);     /* mov dword [ebp-0x30], 0x0 */
l_0x100e3ca7:
    II(0x100e3ca7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3caa, 0x7)   mov(memd_a32(ds, eax + 0x50), 0);     /* mov dword [eax+0x50], 0x0 */
    II(0x100e3cb1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3cb4, 0x3)   mov(eax, memd_a32(ds, eax + 0x54));   /* mov eax, [eax+0x54] */
    II(0x100e3cb7, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100e3cba, 0x4)   cmp(memd_a32(ss, ebp - 0x34), 0);     /* cmp dword [ebp-0x34], 0x0 */
    II(0x100e3cbe, 0x2)   jzd(0x100e3cd4, 0x14);                /* jz 0x100e3cd4 */
    II(0x100e3cc0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e3cc2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100e3cc5, 0x5)   calld(my_dtor_d2, -0x15792);          /* call 0x100ce538 */
    II(0x100e3cca, 0x5)   calld(sys_delete, 0x82295);           /* call 0x10165f64 */
    II(0x100e3ccf, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x100e3cd2, 0x2)   jmpd(0x100e3cdb, 0x7);                /* jmp 0x100e3cdb */
l_0x100e3cd4:
    II(0x100e3cd4, 0x7)   mov(memd_a32(ss, ebp - 0x38), 0);     /* mov dword [ebp-0x38], 0x0 */
l_0x100e3cdb:
    II(0x100e3cdb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3cde, 0x7)   mov(memd_a32(ds, eax + 0x54), 0);     /* mov dword [eax+0x54], 0x0 */
    II(0x100e3ce5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3ce8, 0x3)   mov(eax, memd_a32(ds, eax + 0x58));   /* mov eax, [eax+0x58] */
    II(0x100e3ceb, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x100e3cee, 0x4)   cmp(memd_a32(ss, ebp - 0x3c), 0);     /* cmp dword [ebp-0x3c], 0x0 */
    II(0x100e3cf2, 0x2)   jzd(0x100e3d08, 0x14);                /* jz 0x100e3d08 */
    II(0x100e3cf4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e3cf6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x100e3cf9, 0x5)   calld(my_dtor_d2, -0x157c6);          /* call 0x100ce538 */
    II(0x100e3cfe, 0x5)   calld(sys_delete, 0x82261);           /* call 0x10165f64 */
    II(0x100e3d03, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x100e3d06, 0x2)   jmpd(0x100e3d0f, 0x7);                /* jmp 0x100e3d0f */
l_0x100e3d08:
    II(0x100e3d08, 0x7)   mov(memd_a32(ss, ebp - 0x40), 0);     /* mov dword [ebp-0x40], 0x0 */
l_0x100e3d0f:
    II(0x100e3d0f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3d12, 0x7)   mov(memd_a32(ds, eax + 0x58), 0);     /* mov dword [eax+0x58], 0x0 */
l_0x100e3d19:
    II(0x100e3d19, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3d1c, 0x3)   mov(eax, memd_a32(ds, eax + 0x5c));   /* mov eax, [eax+0x5c] */
    II(0x100e3d1f, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x100e3d22, 0x4)   cmp(memd_a32(ss, ebp - 0x44), 0);     /* cmp dword [ebp-0x44], 0x0 */
    II(0x100e3d26, 0x2)   jzd(0x100e3d3c, 0x14);                /* jz 0x100e3d3c */
    II(0x100e3d28, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e3d2a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x100e3d2d, 0x5)   calld(my_dtor_d2, -0x157fa);          /* call 0x100ce538 */
    II(0x100e3d32, 0x5)   calld(sys_delete, 0x8222d);           /* call 0x10165f64 */
    II(0x100e3d37, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x100e3d3a, 0x2)   jmpd(0x100e3d43, 0x7);                /* jmp 0x100e3d43 */
l_0x100e3d3c:
    II(0x100e3d3c, 0x7)   mov(memd_a32(ss, ebp - 0x48), 0);     /* mov dword [ebp-0x48], 0x0 */
l_0x100e3d43:
    II(0x100e3d43, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3d46, 0x7)   mov(memd_a32(ds, eax + 0x5c), 0);     /* mov dword [eax+0x5c], 0x0 */
    II(0x100e3d4d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3d50, 0x3)   mov(eax, memd_a32(ds, eax + 0x60));   /* mov eax, [eax+0x60] */
    II(0x100e3d53, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x100e3d56, 0x4)   cmp(memd_a32(ss, ebp - 0x4c), 0);     /* cmp dword [ebp-0x4c], 0x0 */
    II(0x100e3d5a, 0x2)   jzd(0x100e3d70, 0x14);                /* jz 0x100e3d70 */
    II(0x100e3d5c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e3d5e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100e3d61, 0x5)   calld(my_dtor_d2, -0x1582e);          /* call 0x100ce538 */
    II(0x100e3d66, 0x5)   calld(sys_delete, 0x821f9);           /* call 0x10165f64 */
    II(0x100e3d6b, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x100e3d6e, 0x2)   jmpd(0x100e3d77, 0x7);                /* jmp 0x100e3d77 */
l_0x100e3d70:
    II(0x100e3d70, 0x7)   mov(memd_a32(ss, ebp - 0x50), 0);     /* mov dword [ebp-0x50], 0x0 */
l_0x100e3d77:
    II(0x100e3d77, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3d7a, 0x7)   mov(memd_a32(ds, eax + 0x60), 0);     /* mov dword [eax+0x60], 0x0 */
    II(0x100e3d81, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3d84, 0x3)   mov(eax, memd_a32(ds, eax + 0x64));   /* mov eax, [eax+0x64] */
    II(0x100e3d87, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x100e3d8a, 0x4)   cmp(memd_a32(ss, ebp - 0x54), 0);     /* cmp dword [ebp-0x54], 0x0 */
    II(0x100e3d8e, 0x2)   jzd(0x100e3da4, 0x14);                /* jz 0x100e3da4 */
    II(0x100e3d90, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e3d92, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x100e3d95, 0x5)   calld(my_dtor_d2, -0x15862);          /* call 0x100ce538 */
    II(0x100e3d9a, 0x5)   calld(sys_delete, 0x821c5);           /* call 0x10165f64 */
    II(0x100e3d9f, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
    II(0x100e3da2, 0x2)   jmpd(0x100e3dab, 0x7);                /* jmp 0x100e3dab */
l_0x100e3da4:
    II(0x100e3da4, 0x7)   mov(memd_a32(ss, ebp - 0x58), 0);     /* mov dword [ebp-0x58], 0x0 */
l_0x100e3dab:
    II(0x100e3dab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3dae, 0x7)   mov(memd_a32(ds, eax + 0x64), 0);     /* mov dword [eax+0x64], 0x0 */
    II(0x100e3db5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3db8, 0x3)   mov(eax, memd_a32(ds, eax + 0x68));   /* mov eax, [eax+0x68] */
    II(0x100e3dbb, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x100e3dbe, 0x4)   cmp(memd_a32(ss, ebp - 0x5c), 0);     /* cmp dword [ebp-0x5c], 0x0 */
    II(0x100e3dc2, 0x2)   jzd(0x100e3dd8, 0x14);                /* jz 0x100e3dd8 */
    II(0x100e3dc4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100e3dc6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x100e3dc9, 0x5)   calld(my_dtor_d2, -0x15896);          /* call 0x100ce538 */
    II(0x100e3dce, 0x5)   calld(sys_delete, 0x82191);           /* call 0x10165f64 */
    II(0x100e3dd3, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
    II(0x100e3dd6, 0x2)   jmpd(0x100e3ddf, 0x7);                /* jmp 0x100e3ddf */
l_0x100e3dd8:
    II(0x100e3dd8, 0x7)   mov(memd_a32(ss, ebp - 0x60), 0);     /* mov dword [ebp-0x60], 0x0 */
l_0x100e3ddf:
    II(0x100e3ddf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3de2, 0x7)   mov(memd_a32(ds, eax + 0x68), 0);     /* mov dword [eax+0x68], 0x0 */
    II(0x100e3de9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3dec, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100e3dee, 0x5)   calld(/* sys */ 0x10166990, 0x82b9d); /* call 0x10166990 */
    II(0x100e3df3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100e3df6, 0x6)   mov(memd_a32(ds, eax), 0);            /* mov dword [eax], 0x0 */
l_0x100e3dfc:
    II(0x100e3dfc, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100e3dfe, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100e3dff, 0x1)   popd(edi);                            /* pop edi */
    II(0x100e3e00, 0x1)   popd(esi);                            /* pop esi */
    II(0x100e3e01, 0x1)   popd(edx);                            /* pop edx */
    II(0x100e3e02, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100e3e03, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100e3e04, 0x1)   retd();                               /* ret */
FUNC_END

