FUNC_BEGIN(0x10150a9e, 0xfe961516bd08c6c4, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xaa, 0x52, 0x1, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x74, 0xe8, 0xa4, 0xa8, 0xf3, 0xff, 0x98, 0x85, 0xc0, 0x75, 0x32, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x74, 0xe8, 0x94, 0xa8, 0xf3, 0xff, 0x98, 0x85, 0xc0, 0x7e, 0x9, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0x15, 0xc, 0, 0, 0xbb, 0xf1, 0xdd, 0x1a, 0x10, 0xba, 0xfe, 0xdd, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0x9a, 0x52, 0x1, 0, 0x89, 0x45, 0xf4, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x74, 0xe8, 0x20, 0xa7, 0xf3, 0xff, 0x66, 0x8b, 0, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10150a9e, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x10150aa3, 0x5)   calld(sys_check_available_stack_size, 0x152aa); /* call 0x10165d52 */
    II(0x10150aa8, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10150aa9, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10150aaa, 0x1)   pushd(edx);                           /* push edx */
    II(0x10150aab, 0x1)   pushd(esi);                           /* push esi */
    II(0x10150aac, 0x1)   pushd(edi);                           /* push edi */
    II(0x10150aad, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10150aae, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10150ab0, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x10150ab6, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x10150ab9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150abc, 0x3)   add(eax, 0x74);                       /* add eax, 0x74 */
    II(0x10150abf, 0x5)   calld(my_2_get_count, -0xc575c);      /* call 0x1008b368 */
    II(0x10150ac4, 0x1)   cwde();                               /* cwde */
    II(0x10150ac5, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10150ac7, 0x2)   jnzd(0x10150afb, 0x32);               /* jnz 0x10150afb */
    II(0x10150ac9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150acc, 0x3)   add(eax, 0x74);                       /* add eax, 0x74 */
    II(0x10150acf, 0x5)   calld(my_2_get_count, -0xc576c);      /* call 0x1008b368 */
    II(0x10150ad4, 0x1)   cwde();                               /* cwde */
    II(0x10150ad5, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10150ad7, 0x2)   jled(0x10150ae2, 0x9);                /* jle 0x10150ae2 */
    II(0x10150ad9, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x10150ae0, 0x2)   jmpd(0x10150afb, 0x19);               /* jmp 0x10150afb */
l_0x10150ae2:
    II(0x10150ae2, 0x5)   mov(ecx, 0xc15);                      /* mov ecx, 0xc15 */
    II(0x10150ae7, 0x5)   mov(ebx, 0x101addf1);                 /* mov ebx, 0x101addf1 */ /* "unitinfo.cpp" */
    II(0x10150aec, 0x5)   mov(edx, 0x101addfe);                 /* mov edx, 0x101addfe */ /* "build_list.GetCount() > 0" */
    II(0x10150af1, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10150af3, 0x5)   calld(sys_assert, 0x1529a);           /* call 0x10165d92 */
    II(0x10150af8, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
l_0x10150afb:
    II(0x10150afb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10150afd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10150b00, 0x3)   add(eax, 0x74);                       /* add eax, 0x74 */
    II(0x10150b03, 0x5)   calld(0x1008b228, -0xc58e0);          /* call 0x1008b228 */
    II(0x10150b08, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x10150b0b, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
//    II(0x10150b0e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10150b11, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10150b13, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10150b14, 0x1)   popd(edi);                            /* pop edi */
    II(0x10150b15, 0x1)   popd(esi);                            /* pop esi */
    II(0x10150b16, 0x1)   popd(edx);                            /* pop edx */
    II(0x10150b17, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10150b18, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10150b19, 0x1)   retd();                               /* ret */
FUNC_END

