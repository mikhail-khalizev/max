FUNC_BEGIN(0x100bd398, 0x83623d6e0cff602, 0x20, ({0x68, 0xd8, 0, 0, 0, 0xe8, 0xb0, 0x89, 0xa, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xbc, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0x78, 0x63, 0, 0x74, 0xd, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x5, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7f, 0x5, 0xe9, 0xc2, 0xa, 0, 0, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xc8, 0xe8, 0x13, 0xe8, 0xfc, 0xff, 0x89, 0x45, 0xc4, 0x80, 0x65, 0xf8, 0xfe, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x4d, 0x8f, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xd0, 0xe8, 0xc3, 0x90, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xd0, 0xe8, 0xf9, 0x97, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x68, 0xd9, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0xd4, 0x1, 0, 0, 0x8d, 0x45, 0xd0, 0xe8, 0x87, 0x8f, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0xf, 0x85, 0xb4, 0x1, 0, 0, 0x8d, 0x45, 0xd0, 0xe8, 0x6c, 0x8f, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x22, 0x74, 0xf, 0x8d, 0x45, 0xd0, 0xe8, 0x5d, 0x8f, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x25, 0x75, 0x2, 0xeb, 0x13, 0x8d, 0x45, 0xd0, 0xe8, 0x4c, 0x8f, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x24, 0xf, 0x85, 0xc1, 0, 0, 0, 0x8d, 0x45, 0xd0, 0xe8, 0x39, 0x8f, 0xfb, 0xff, 0xe8, 0xd0, 0x8d, 0xfb, 0xff, 0x8b, 0x48, 0x10, 0xc1, 0xf9, 0x10, 0x8d, 0x45, 0xd0, 0xe8, 0x26, 0x8f, 0xfb, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8d, 0x45, 0xd0, 0xe8, 0x18, 0x8f, 0xfb, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xc0, 0xe8, 0x16, 0x96, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xb0, 0x89, 0xcb, 0xe8, 0x1f, 0xc1, 0xfe, 0xff, 0x8d, 0x45, 0xd0, 0xe8, 0xf6, 0x8e, 0xfb, 0xff, 0x8b, 0x50, 0x1a, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xd0, 0xe8, 0xe8, 0x8e, 0xfb, 0xff, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0xe8, 0x3a, 0x68, 0xfb, 0xff, 0x89, 0x45, 0xdc, 0x8d, 0x45, 0xb0, 0xe8, 0x5e, 0xc3, 0xfc, 0xff, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xb0, 0xe8, 0x87, 0xc3, 0xfc, 0xff, 0x98, 0xe8, 0x1e, 0x68, 0xfb, 0xff, 0x31, 0xd2, 0x66, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xdc, 0x39, 0xc2, 0x75, 0x23, 0x8d, 0x45, 0xb0, 0xe8, 0x38, 0xc3, 0xfc, 0xff, 0xf, 0xbf, 0xd8, 0x8d, 0x45, 0xb0, 0xe8, 0x61, 0xc3, 0xfc, 0xff, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xc8, 0xe8, 0x1e, 0xd2, 0xfc, 0xff, 0x1, 0xd8, 0xc6, 0, 0x1, 0x8d, 0x45, 0xb0, 0xe8, 0xc4, 0xc1, 0xfe, 0xff, 0x84, 0xc0, 0x75, 0xab, 0xe9, 0xc0, 0, 0, 0, 0x8d, 0x45, 0xd0, 0xe8, 0x78, 0x8e, 0xfb, 0xff, 0xf6, 0x40, 0x12, 0x10, 0xf, 0x84, 0xae, 0, 0, 0, 0xb9, 0x8, 0, 0, 0, 0x8d, 0x45, 0xd0, 0xe8, 0x61, 0x8e, 0xfb, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8d, 0x45, 0xd0, 0xe8, 0x53, 0x8e, 0xfb, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xac, 0xe8, 0x51, 0x95, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0x9c, 0x89, 0xcb, 0xe8, 0x5a, 0xc0, 0xfe, 0xff, 0x8d, 0x45, 0xd0, 0xe8, 0x31, 0x8e, 0xfb, 0xff, 0x8b, 0x50, 0x1a, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xd0, 0xe8, 0x23, 0x8e, 0xfb, 0xff, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0xe8, 0x75, 0x67, 0xfb, 0xff, 0x89, 0x45, 0xdc, 0x8d, 0x45, 0x9c, 0xe8, 0x99, 0xc2, 0xfc, 0xff, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0x9c, 0xe8, 0xc2, 0xc2, 0xfc, 0xff, 0x98, 0xe8, 0x59, 0x67, 0xfb, 0xff, 0x31, 0xd2, 0x66, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xdc, 0x39, 0xc2, 0x75, 0x23, 0x8d, 0x45, 0x9c, 0xe8, 0x73, 0xc2, 0xfc, 0xff, 0xf, 0xbf, 0xd8, 0x8d, 0x45, 0x9c, 0xe8, 0x9c, 0xc2, 0xfc, 0xff, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xc8, 0xe8, 0x59, 0xd1, 0xfc, 0xff, 0x1, 0xd8, 0xc6, 0, 0x1, 0x8d, 0x45, 0x9c, 0xe8, 0xff, 0xc0, 0xfe, 0xff, 0x84, 0xc0, 0x75, 0xab, 0xe9, 0x12, 0xfe, 0xff, 0xff, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x79, 0xd1, 0xfc, 0xff, 0x8d, 0x5d, 0xd4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x75, 0xd8, 0xfc, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xd4, 0xe8, 0xf3, 0x95, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0x62, 0xd7, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0x15, 0x1, 0, 0, 0x8d, 0x45, 0xd4, 0xe8, 0xa5, 0xd7, 0xfc, 0xff, 0xe8, 0x6c, 0xd7, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x10, 0x75, 0x1b, 0x8d, 0x45, 0xd4, 0xe8, 0x8e, 0xd7, 0xfc, 0xff, 0x89, 0x45, 0x98, 0x8b, 0x45, 0x98, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0x98, 0xff, 0x52, 0x20, 0x3c, 0x9, 0x74, 0x5, 0xe9, 0xd9, 0, 0, 0, 0x8d, 0x45, 0xd4, 0xe8, 0xa2, 0xd7, 0xfc, 0xff, 0x89, 0x45, 0x94, 0x8b, 0x45, 0x94, 0x89, 0x45, 0x90, 0x8b, 0x45, 0x90, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0x90, 0xff, 0x52, 0x70, 0x84, 0xc0, 0x74, 0x15, 0x8b, 0x45, 0x94, 0xe8, 0x4d, 0xee, 0xfd, 0xff, 0x98, 0x6b, 0xc0, 0x33, 0xf6, 0x80, 0xc0, 0x81, 0x1c, 0x10, 0x10, 0x75, 0x5, 0xe9, 0x9e, 0, 0, 0, 0x8d, 0x55, 0x8c, 0x8b, 0x45, 0x94, 0xe8, 0xa9, 0x56, 0xfe, 0xff, 0xbb, 0x8, 0, 0, 0, 0x8d, 0x55, 0x8c, 0x8d, 0x45, 0x88, 0xe8, 0xc0, 0x87, 0xfb, 0xff, 0x8d, 0x8d, 0x78, 0xff, 0xff, 0xff, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0xe, 0xbf, 0xfe, 0xff, 0xf, 0xbf, 0x55, 0x8e, 0xf, 0xbf, 0x45, 0x8c, 0xe8, 0x3d, 0x66, 0xfb, 0xff, 0x89, 0x45, 0xdc, 0x8d, 0x85, 0x78, 0xff, 0xff, 0xff, 0xe8, 0x5e, 0xc1, 0xfc, 0xff, 0xf, 0xbf, 0xd0, 0x8d, 0x85, 0x78, 0xff, 0xff, 0xff, 0xe8, 0x84, 0xc1, 0xfc, 0xff, 0x98, 0xe8, 0x1b, 0x66, 0xfb, 0xff, 0x31, 0xd2, 0x66, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xdc, 0x39, 0xc2, 0x75, 0x29, 0x8d, 0x85, 0x78, 0xff, 0xff, 0xff, 0xe8, 0x32, 0xc1, 0xfc, 0xff, 0xf, 0xbf, 0xd8, 0x8d, 0x85, 0x78, 0xff, 0xff, 0xff, 0xe8, 0x58, 0xc1, 0xfc, 0xff, 0xf, 0xbf, 0xd0, 0x8d, 0x45, 0xc8, 0xe8, 0x15, 0xd0, 0xfc, 0xff, 0x1, 0xd8, 0xc6, 0, 0x1, 0x8d, 0x85, 0x78, 0xff, 0xff, 0xff, 0xe8, 0xb8, 0xbf, 0xfe, 0xff, 0x84, 0xc0, 0x75, 0x9c, 0xe9, 0xd1, 0xfe, 0xff, 0xff, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x32, 0xd0, 0xfc, 0xff, 0x8d, 0x5d, 0xd4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xb6, 0xda, 0xfe, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xd4, 0xe8, 0xac, 0x94, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0x1b, 0xd6, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0x66, 0x1, 0, 0, 0x8d, 0x45, 0xd4, 0xe8, 0x5e, 0xd6, 0xfc, 0xff, 0xe8, 0x25, 0xd6, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x10, 0x75, 0x24, 0x8d, 0x45, 0xd4, 0xe8, 0x47, 0xd6, 0xfc, 0xff, 0x89, 0x85, 0x74, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x74, 0xff, 0xff, 0xff, 0x8b, 0x50, 0x2, 0x8b, 0x85, 0x74, 0xff, 0xff, 0xff, 0xff, 0x52, 0x20, 0x3c, 0x9, 0x74, 0x5, 0xe9, 0x21, 0x1, 0, 0, 0x8d, 0x45, 0xd4, 0xe8, 0x52, 0xd6, 0xfc, 0xff, 0x89, 0x85, 0x70, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, 0x89, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x8b, 0x50, 0x2, 0x8b, 0x85, 0x6c, 0xff, 0xff, 0xff, 0xff, 0x52, 0x70, 0x84, 0xc0, 0xf, 0x84, 0xed, 0, 0, 0, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, 0x89, 0x85, 0x68, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x68, 0xff, 0xff, 0xff, 0x8b, 0x58, 0x2, 0x8d, 0x95, 0x58, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x68, 0xff, 0xff, 0xff, 0xff, 0x53, 0x1c, 0x8b, 0x85, 0x70, 0xff, 0xff, 0xff, 0xe8, 0xc3, 0xec, 0xfd, 0xff, 0x98, 0x6b, 0xc0, 0x33, 0xf6, 0x80, 0xc0, 0x81, 0x1c, 0x10, 0x10, 0x74, 0x66, 0x8b, 0x95, 0x58, 0xff, 0xff, 0xff, 0x83, 0xea, 0x2, 0x31, 0xc0, 0xe8, 0x5e, 0x96, 0xfb, 0xff, 0x89, 0x85, 0x58, 0xff, 0xff, 0xff, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x85, 0x60, 0xff, 0xff, 0xff, 0x83, 0xc0, 0x2, 0xe8, 0x49, 0xbf, 0xfc, 0xff, 0x89, 0x85, 0x60, 0xff, 0xff, 0xff, 0x8b, 0x95, 0x5c, 0xff, 0xff, 0xff, 0x83, 0xea, 0x2, 0x31, 0xc0, 0xe8, 0x2b, 0x96, 0xfb, 0xff, 0x89, 0x85, 0x5c, 0xff, 0xff, 0xff, 0x8b, 0x15, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x85, 0x64, 0xff, 0xff, 0xff, 0x83, 0xc0, 0x2, 0xe8, 0x16, 0xbf, 0xfc, 0xff, 0x89, 0x85, 0x64, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x58, 0xff, 0xff, 0xff, 0x89, 0x45, 0xe4, 0xeb, 0x6, 0x8b, 0x45, 0xe4, 0xff, 0x45, 0xe4, 0xf, 0xbf, 0x45, 0xe4, 0x85, 0xc0, 0x7d, 0x32, 0x8b, 0x85, 0x5c, 0xff, 0xff, 0xff, 0x89, 0x45, 0xd8, 0xeb, 0x6, 0x8b, 0x45, 0xd8, 0xff, 0x45, 0xd8, 0xf, 0xbf, 0x45, 0xd8, 0x85, 0xc0, 0x7d, 0x17, 0xf, 0xbf, 0x55, 0xe4, 0x8d, 0x45, 0xc8, 0xe8, 0x76, 0xce, 0xfc, 0xff, 0xf, 0xbf, 0x55, 0xd8, 0x1, 0xd0, 0xc6, 0, 0, 0xeb, 0xdb, 0xeb, 0xc0, 0xe9, 0x80, 0xfe, 0xff, 0xff, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x6a, 0x8a, 0xfb, 0xff, 0x8d, 0x5d, 0xd0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x62, 0x8b, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xd0, 0xe8, 0x14, 0x93, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x83, 0xd4, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0xfe, 0, 0, 0, 0x8d, 0x45, 0xd0, 0xe8, 0xa2, 0x8a, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0xf, 0x85, 0xde, 0, 0, 0, 0x8d, 0x95, 0x58, 0xff, 0xff, 0xff, 0x8d, 0x45, 0xd0, 0xe8, 0x81, 0x8a, 0xfb, 0xff, 0xe8, 0xe, 0x4c, 0x9, 0, 0x8d, 0x45, 0xd0, 0xe8, 0x74, 0x8a, 0xfb, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0xf6, 0x80, 0xc0, 0x81, 0x1c, 0x10, 0x10, 0x74, 0x66, 0x8b, 0x95, 0x58, 0xff, 0xff, 0xff, 0x83, 0xea, 0x2, 0x31, 0xc0, 0xe8, 0x2e, 0x95, 0xfb, 0xff, 0x89, 0x85, 0x58, 0xff, 0xff, 0xff, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x85, 0x60, 0xff, 0xff, 0xff, 0x83, 0xc0, 0x2, 0xe8, 0x19, 0xbe, 0xfc, 0xff, 0x89, 0x85, 0x60, 0xff, 0xff, 0xff, 0x8b, 0x95, 0x5c, 0xff, 0xff, 0xff, 0x83, 0xea, 0x2, 0x31, 0xc0, 0xe8, 0xfb, 0x94, 0xfb, 0xff, 0x89, 0x85, 0x5c, 0xff, 0xff, 0xff, 0x8b, 0x15, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x85, 0x64, 0xff, 0xff, 0xff, 0x83, 0xc0, 0x2, 0xe8, 0xe6, 0xbd, 0xfc, 0xff, 0x89, 0x85, 0x64, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x58, 0xff, 0xff, 0xff, 0x89, 0x45, 0xe4, 0xeb, 0x6, 0x8b, 0x45, 0xe4, 0xff, 0x45, 0xe4, 0xf, 0xbf, 0x45, 0xe4, 0x85, 0xc0, 0x7d, 0x32, 0x8b, 0x85, 0x5c, 0xff, 0xff, 0xff, 0x89, 0x45, 0xd8, 0xeb, 0x6, 0x8b, 0x45, 0xd8, 0xff, 0x45, 0xd8, 0xf, 0xbf, 0x45, 0xd8, 0x85, 0xc0, 0x7d, 0x17, 0xf, 0xbf, 0x55, 0xe4, 0x8d, 0x45, 0xc8, 0xe8, 0x46, 0xcd, 0xfc, 0xff, 0xf, 0xbf, 0x55, 0xd8, 0x1, 0xd0, 0xc6, 0, 0, 0xeb, 0xdb, 0xeb, 0xc0, 0xe9, 0xe8, 0xfe, 0xff, 0xff, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x4, 0xf, 0x8d, 0xba, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x8b, 0x55, 0xfc, 0x66, 0x3b, 0x2, 0x74, 0x19, 0xf, 0xbf, 0x45, 0xf4, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x5, 0xe9, 0x8c, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf4, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0xa3, 0xa6, 0x1c, 0x10, 0x89, 0x85, 0x54, 0xff, 0xff, 0xff, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe4, 0xff, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7d, 0x5b, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xd8, 0xff, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x7d, 0x3e, 0xf, 0xbf, 0x45, 0xd8, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xf, 0xaf, 0xd0, 0xf, 0xbf, 0x45, 0xe4, 0x1, 0xd0, 0x3, 0x85, 0x54, 0xff, 0xff, 0xff, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x15, 0xf, 0xbf, 0x55, 0xe4, 0x8d, 0x45, 0xc8, 0xe8, 0x70, 0xcc, 0xfc, 0xff, 0xf, 0xbf, 0x55, 0xd8, 0x1, 0xd0, 0xc6, 0, 0, 0xeb, 0xb0, 0xeb, 0x93, 0xe9, 0x33, 0xff, 0xff, 0xff, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe4, 0xff, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0xb1, 0, 0, 0, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xd8, 0xff, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0xf, 0x8d, 0x8d, 0, 0, 0, 0xf, 0xbf, 0x55, 0xd8, 0xf, 0xbf, 0x45, 0xe4, 0xe8, 0xd3, 0x61, 0xfb, 0xff, 0x89, 0x45, 0xdc, 0xf, 0xbf, 0x55, 0xe4, 0x8d, 0x45, 0xc8, 0xe8, 0xef, 0xcb, 0xfc, 0xff, 0xf, 0xbf, 0x55, 0xd8, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x1c, 0xf, 0xbf, 0x55, 0xe4, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x63, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xd8, 0x8b, 0, 0x1, 0xd0, 0x80, 0x20, 0xfd, 0xeb, 0x3f, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0xf, 0xbf, 0x45, 0xe4, 0xc1, 0xe0, 0x2, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x63, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xd8, 0x8b, 0, 0x1, 0xd0, 0xf6, 0, 0x2, 0x74, 0x1b, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0xf, 0xbf, 0x55, 0xe4, 0x8d, 0x45, 0xc8, 0xe8, 0x8c, 0xcb, 0xfc, 0xff, 0xf, 0xbf, 0x55, 0xd8, 0x1, 0xd0, 0xc6, 0, 0, 0xe9, 0x5d, 0xff, 0xff, 0xff, 0xe9, 0x39, 0xff, 0xff, 0xff, 0xb8, 0x78, 0x81, 0x1c, 0x10, 0xe8, 0x7f, 0x87, 0xfb, 0xff, 0x8d, 0x5d, 0xd0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x77, 0x88, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xd0, 0xe8, 0x29, 0x90, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x98, 0xd1, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0xd0, 0, 0, 0, 0x8d, 0x45, 0xd0, 0xe8, 0xb7, 0x87, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0x75, 0x20, 0x8d, 0x45, 0xd0, 0xe8, 0xa0, 0x87, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x29, 0x74, 0xf, 0x8d, 0x45, 0xd0, 0xe8, 0x91, 0x87, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x2a, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x31, 0x8d, 0x45, 0xd0, 0xe8, 0x7e, 0x87, 0xfb, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8d, 0x45, 0xd0, 0xe8, 0x70, 0x87, 0xfb, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xc8, 0xe8, 0xea, 0xca, 0xfc, 0xff, 0x1, 0xd8, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x5f, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0x8d, 0x45, 0xd0, 0xe8, 0x45, 0x87, 0xfb, 0xff, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x63, 0x1, 0xc2, 0x8d, 0x45, 0xd0, 0xe8, 0x2a, 0x87, 0xfb, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x2, 0x1, 0xd8, 0x80, 0x20, 0xfd, 0x8d, 0x45, 0xd0, 0xe8, 0x15, 0x87, 0xfb, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8d, 0x45, 0xd0, 0xe8, 0x7, 0x87, 0xfb, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xc8, 0xe8, 0x81, 0xca, 0xfc, 0xff, 0x1, 0xd8, 0xc6, 0, 0, 0xe9, 0x16, 0xff, 0xff, 0xff, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0x5, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x45, 0xe8, 0xf, 0xaf, 0xd0, 0xbb, 0x64, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0xf, 0xbf, 0x55, 0xec, 0x29, 0xd0, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xf0, 0x29, 0xc2, 0x89, 0x55, 0xe0, 0xf, 0xbf, 0x45, 0xec, 0xba, 0x20, 0, 0, 0, 0x29, 0xc2, 0x89, 0xd0, 0xf, 0xbf, 0x55, 0xe0, 0x39, 0xc2, 0x7c, 0xb, 0xb8, 0x20, 0, 0, 0, 0x2b, 0x45, 0xec, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xec, 0x3, 0x45, 0xf0, 0x29, 0x45, 0xe8, 0xf, 0xbf, 0x45, 0xe0, 0x85, 0xc0, 0x7f, 0x23, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0xa3, 0xae, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0x49, 0x82, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0x72, 0xdf, 0xfc, 0xff, 0xe9, 0x5e, 0x1, 0, 0, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe4, 0xff, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7d, 0x7, 0x66, 0x83, 0x7d, 0xe0, 0, 0x75, 0x5, 0xe9, 0x86, 0, 0, 0, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xd8, 0xff, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x7d, 0x7, 0x66, 0x83, 0x7d, 0xe0, 0, 0x75, 0x2, 0xeb, 0x5d, 0xf, 0xbf, 0x55, 0xe4, 0x8d, 0x45, 0xc8, 0xe8, 0x9f, 0xc9, 0xfc, 0xff, 0xf, 0xbf, 0x55, 0xd8, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x3e, 0xf, 0xbf, 0x55, 0xe8, 0xe8, 0xf8, 0x80, 0xa, 0, 0xf, 0xaf, 0xc2, 0xc1, 0xe8, 0xf, 0xf, 0xbf, 0x55, 0xe0, 0x40, 0x39, 0xd0, 0x7f, 0x20, 0xf, 0xbf, 0x55, 0xe4, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x63, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xd8, 0x8b, 0, 0x1, 0xd0, 0x80, 0x8, 0x2, 0x8b, 0x45, 0xe0, 0xff, 0x4d, 0xe0, 0x8b, 0x45, 0xe8, 0xff, 0x4d, 0xe8, 0xeb, 0x88, 0xe9, 0x5c, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x25, 0xe8, 0x25, 0xcf, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0x7e, 0, 0, 0, 0xb8, 0x21, 0, 0, 0, 0xe8, 0x2, 0x80, 0xa, 0, 0x89, 0x85, 0x50, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x50, 0xff, 0xff, 0xff, 0x89, 0x85, 0x4c, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x4c, 0xff, 0xff, 0xff, 0, 0x74, 0x25, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x10, 0x8b, 0x85, 0x50, 0xff, 0xff, 0xff, 0xe8, 0x43, 0x29, 0xfc, 0xff, 0x89, 0x85, 0x48, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x48, 0xff, 0xff, 0xff, 0x89, 0x85, 0x44, 0xff, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x4c, 0xff, 0xff, 0xff, 0x89, 0x85, 0x44, 0xff, 0xff, 0xff, 0x8b, 0x95, 0x44, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x25, 0xe8, 0x89, 0xd1, 0xfc, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x25, 0xe8, 0x1e, 0xd1, 0xfc, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xde, 0x6e, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0x40, 0xad, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd0, 0xe8, 0xe6, 0x80, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0xf, 0xde, 0xfc, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100bd398, 0x5)   pushd(0xd8);                          /* push dword 0xd8 */
    II(0x100bd39d, 0x5)   calld(sys_check_available_stack_size, 0xa89b0); /* call 0x10165d52 */
    II(0x100bd3a2, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100bd3a3, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100bd3a4, 0x1)   pushd(edx);                           /* push edx */
    II(0x100bd3a5, 0x1)   pushd(esi);                           /* push esi */
    II(0x100bd3a6, 0x1)   pushd(edi);                           /* push edi */
    II(0x100bd3a7, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100bd3a8, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100bd3aa, 0x6)   sub(esp, 0xbc);                       /* sub esp, 0xbc */
    II(0x100bd3b0, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100bd3b3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bd3b6, 0x4)   cmp(memd_a32(ds, eax + 0x63), 0);     /* cmp dword [eax+0x63], 0x0 */
    II(0x100bd3ba, 0x2)   jzd(0x100bd3c9, 0xd);                 /* jz 0x100bd3c9 */
    II(0x100bd3bc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bd3bf, 0x3)   mov(eax, memd_a32(ds, eax + 0x5));    /* mov eax, [eax+0x5] */
    II(0x100bd3c2, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bd3c5, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bd3c7, 0x2)   jgd(0x100bd3ce, 0x5);                 /* jg 0x100bd3ce */
l_0x100bd3c9:
    II(0x100bd3c9, 0x5)   jmpd(0x100bde90, 0xac2);              /* jmp 0x100bde90 */
l_0x100bd3ce:
    II(0x100bd3ce, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x100bd3d2, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100bd3d5, 0x5)   calld(0x1008bbed, -0x317ed);          /* call 0x1008bbed */
    II(0x100bd3da, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x100bd3dd, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x100bd3e1, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100bd3e6, 0x5)   calld(0x10076338, -0x470b3);          /* call 0x10076338 */
    II(0x100bd3eb, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bd3ed, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bd3f0, 0x5)   calld(0x100764b8, -0x46f3d);          /* call 0x100764b8 */
    II(0x100bd3f5, 0x2)   jmpd(0x100bd3ff, 0x8);                /* jmp 0x100bd3ff */
l_0x100bd3f7:
    II(0x100bd3f7, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bd3fa, 0x5)   calld(0x10076bf8, -0x46807);          /* call 0x10076bf8 */
l_0x100bd3ff:
    II(0x100bd3ff, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bd401, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bd404, 0x5)   calld(0x1013ad71, 0x7d968);           /* call 0x1013ad71 */
    II(0x100bd409, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bd40b, 0x6)   jzd(0x100bd5e5, 0x1d4);               /* jz dword 0x100bd5e5 */
    II(0x100bd411, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bd414, 0x5)   calld(0x100763a0, -0x47079);          /* call 0x100763a0 */
    II(0x100bd419, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bd41b, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100bd41e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bd421, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bd424, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bd426, 0x6)   jnzd(0x100bd5e0, 0x1b4);              /* jnz dword 0x100bd5e0 */
    II(0x100bd42c, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bd42f, 0x5)   calld(0x100763a0, -0x47094);          /* call 0x100763a0 */
    II(0x100bd434, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x22);   /* cmp word [eax+0x8], 0x22 */
    II(0x100bd439, 0x2)   jzd(0x100bd44a, 0xf);                 /* jz 0x100bd44a */
    II(0x100bd43b, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bd43e, 0x5)   calld(0x100763a0, -0x470a3);          /* call 0x100763a0 */
    II(0x100bd443, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x25);   /* cmp word [eax+0x8], 0x25 */
    II(0x100bd448, 0x2)   jnzd(0x100bd44c, 0x2);                /* jnz 0x100bd44c */
l_0x100bd44a:
    II(0x100bd44a, 0x2)   jmpd(0x100bd45f, 0x13);               /* jmp 0x100bd45f */
l_0x100bd44c:
    II(0x100bd44c, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bd44f, 0x5)   calld(0x100763a0, -0x470b4);          /* call 0x100763a0 */
    II(0x100bd454, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x24);   /* cmp word [eax+0x8], 0x24 */
    II(0x100bd459, 0x6)   jnzd(0x100bd520, 0xc1);               /* jnz dword 0x100bd520 */
l_0x100bd45f:
    II(0x100bd45f, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bd462, 0x5)   calld(0x100763a0, -0x470c7);          /* call 0x100763a0 */
    II(0x100bd467, 0x5)   calld(0x1007623c, -0x47230);          /* call 0x1007623c */
    II(0x100bd46c, 0x3)   mov(ecx, memd_a32(ds, eax + 0x10));   /* mov ecx, [eax+0x10] */
    II(0x100bd46f, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100bd472, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bd475, 0x5)   calld(0x100763a0, -0x470da);          /* call 0x100763a0 */
    II(0x100bd47a, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100bd47d, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100bd480, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bd483, 0x5)   calld(0x100763a0, -0x470e8);          /* call 0x100763a0 */
    II(0x100bd488, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100bd48b, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100bd48e, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x100bd491, 0x5)   calld(0x10076aac, -0x469ea);          /* call 0x10076aac */
    II(0x100bd496, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bd498, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x100bd49b, 0x2)   mov(ebx, ecx);                        /* mov ebx, ecx */
    II(0x100bd49d, 0x5)   calld(0x100a95c1, -0x13ee1);          /* call 0x100a95c1 */
    II(0x100bd4a2, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bd4a5, 0x5)   calld(0x100763a0, -0x4710a);          /* call 0x100763a0 */
    II(0x100bd4aa, 0x3)   mov(edx, memd_a32(ds, eax + 0x1a));   /* mov edx, [eax+0x1a] */
    II(0x100bd4ad, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100bd4b0, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bd4b3, 0x5)   calld(0x100763a0, -0x47118);          /* call 0x100763a0 */
    II(0x100bd4b8, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x100bd4bb, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bd4be, 0x5)   calld(0x10073cfd, -0x497c6);          /* call 0x10073cfd */
    II(0x100bd4c3, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
l_0x100bd4c6:
    II(0x100bd4c6, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x100bd4c9, 0x5)   calld(0x1008982c, -0x33ca2);          /* call 0x1008982c */
    II(0x100bd4ce, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100bd4d1, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x100bd4d4, 0x5)   calld(0x10089860, -0x33c79);          /* call 0x10089860 */
    II(0x100bd4d9, 0x1)   cwde();                               /* cwde */
    II(0x100bd4da, 0x5)   calld(0x10073cfd, -0x497e2);          /* call 0x10073cfd */
    II(0x100bd4df, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bd4e1, 0x3)   mov(dx, ax);                          /* mov dx, ax */
    II(0x100bd4e4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100bd4e8, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bd4ea, 0x2)   jnzd(0x100bd50f, 0x23);               /* jnz 0x100bd50f */
    II(0x100bd4ec, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x100bd4ef, 0x5)   calld(0x1008982c, -0x33cc8);          /* call 0x1008982c */
    II(0x100bd4f4, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100bd4f7, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x100bd4fa, 0x5)   calld(0x10089860, -0x33c9f);          /* call 0x10089860 */
    II(0x100bd4ff, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100bd502, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100bd505, 0x5)   calld(0x1008a728, -0x32de2);          /* call 0x1008a728 */
    II(0x100bd50a, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100bd50c, 0x3)   mov(memb_a32(ds, eax), 0x1);          /* mov byte [eax], 0x1 */
l_0x100bd50f:
    II(0x100bd50f, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x100bd512, 0x5)   calld(0x100a96db, -0x13e3c);          /* call 0x100a96db */
    II(0x100bd517, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bd519, 0x2)   jnzd(0x100bd4c6, -0x55);              /* jnz 0x100bd4c6 */
    II(0x100bd51b, 0x5)   jmpd(0x100bd5e0, 0xc0);               /* jmp 0x100bd5e0 */
l_0x100bd520:
    II(0x100bd520, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bd523, 0x5)   calld(0x100763a0, -0x47188);          /* call 0x100763a0 */
    II(0x100bd528, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x100bd52c, 0x6)   jzd(0x100bd5e0, 0xae);                /* jz dword 0x100bd5e0 */
    II(0x100bd532, 0x5)   mov(ecx, 0x8);                        /* mov ecx, 0x8 */
    II(0x100bd537, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bd53a, 0x5)   calld(0x100763a0, -0x4719f);          /* call 0x100763a0 */
    II(0x100bd53f, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100bd542, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100bd545, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bd548, 0x5)   calld(0x100763a0, -0x471ad);          /* call 0x100763a0 */
    II(0x100bd54d, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100bd550, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100bd553, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100bd556, 0x5)   calld(0x10076aac, -0x46aaf);          /* call 0x10076aac */
    II(0x100bd55b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bd55d, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100bd560, 0x2)   mov(ebx, ecx);                        /* mov ebx, ecx */
    II(0x100bd562, 0x5)   calld(0x100a95c1, -0x13fa6);          /* call 0x100a95c1 */
    II(0x100bd567, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bd56a, 0x5)   calld(0x100763a0, -0x471cf);          /* call 0x100763a0 */
    II(0x100bd56f, 0x3)   mov(edx, memd_a32(ds, eax + 0x1a));   /* mov edx, [eax+0x1a] */
    II(0x100bd572, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100bd575, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bd578, 0x5)   calld(0x100763a0, -0x471dd);          /* call 0x100763a0 */
    II(0x100bd57d, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x100bd580, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bd583, 0x5)   calld(0x10073cfd, -0x4988b);          /* call 0x10073cfd */
    II(0x100bd588, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
l_0x100bd58b:
    II(0x100bd58b, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100bd58e, 0x5)   calld(0x1008982c, -0x33d67);          /* call 0x1008982c */
    II(0x100bd593, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100bd596, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100bd599, 0x5)   calld(0x10089860, -0x33d3e);          /* call 0x10089860 */
    II(0x100bd59e, 0x1)   cwde();                               /* cwde */
    II(0x100bd59f, 0x5)   calld(0x10073cfd, -0x498a7);          /* call 0x10073cfd */
    II(0x100bd5a4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bd5a6, 0x3)   mov(dx, ax);                          /* mov dx, ax */
    II(0x100bd5a9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100bd5ad, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bd5af, 0x2)   jnzd(0x100bd5d4, 0x23);               /* jnz 0x100bd5d4 */
    II(0x100bd5b1, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100bd5b4, 0x5)   calld(0x1008982c, -0x33d8d);          /* call 0x1008982c */
    II(0x100bd5b9, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100bd5bc, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100bd5bf, 0x5)   calld(0x10089860, -0x33d64);          /* call 0x10089860 */
    II(0x100bd5c4, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100bd5c7, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100bd5ca, 0x5)   calld(0x1008a728, -0x32ea7);          /* call 0x1008a728 */
    II(0x100bd5cf, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100bd5d1, 0x3)   mov(memb_a32(ds, eax), 0x1);          /* mov byte [eax], 0x1 */
l_0x100bd5d4:
    II(0x100bd5d4, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100bd5d7, 0x5)   calld(0x100a96db, -0x13f01);          /* call 0x100a96db */
    II(0x100bd5dc, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bd5de, 0x2)   jnzd(0x100bd58b, -0x55);              /* jnz 0x100bd58b */
l_0x100bd5e0:
    II(0x100bd5e0, 0x5)   jmpd(0x100bd3f7, -0x1ee);             /* jmp 0x100bd3f7 */
l_0x100bd5e5:
    II(0x100bd5e5, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100bd5ea, 0x5)   calld(0x1008a768, -0x32e87);          /* call 0x1008a768 */
    II(0x100bd5ef, 0x3)   lea(ebx, ebp - 0x2c);                 /* lea ebx, [ebp-0x2c] */
    II(0x100bd5f2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bd5f4, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bd5f6, 0x5)   calld(0x1008ae70, -0x3278b);          /* call 0x1008ae70 */
    II(0x100bd5fb, 0x2)   jmpd(0x100bd605, 0x8);                /* jmp 0x100bd605 */
l_0x100bd5fd:
    II(0x100bd5fd, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100bd600, 0x5)   calld(0x10076bf8, -0x46a0d);          /* call 0x10076bf8 */
l_0x100bd605:
    II(0x100bd605, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bd607, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100bd60a, 0x5)   calld(0x1013ad71, 0x7d762);           /* call 0x1013ad71 */
    II(0x100bd60f, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bd611, 0x6)   jzd(0x100bd72c, 0x115);               /* jz dword 0x100bd72c */
    II(0x100bd617, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100bd61a, 0x5)   calld(0x1008adc4, -0x3285b);          /* call 0x1008adc4 */
    II(0x100bd61f, 0x5)   calld(0x1008ad90, -0x32894);          /* call 0x1008ad90 */
    II(0x100bd624, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bd626, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bd629, 0x3)   cmp(dx, memw_a32(ds, eax));           /* cmp dx, [eax] */
    II(0x100bd62c, 0x2)   jnzd(0x100bd649, 0x1b);               /* jnz 0x100bd649 */
    II(0x100bd62e, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100bd631, 0x5)   calld(0x1008adc4, -0x32872);          /* call 0x1008adc4 */
    II(0x100bd636, 0x3)   mov(memd_a32(ss, ebp - 0x68), eax);   /* mov [ebp-0x68], eax */
//    II(0x100bd639, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x100bd63c, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100bd63f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x100bd642, 0x3)   calld_abs(memd_a32(ds, edx + 0x20));  /* call dword near [edx+0x20] */
    II(0x100bd645, 0x2)   cmp(al, 0x9);                         /* cmp al, 0x9 */
    II(0x100bd647, 0x2)   jzd(0x100bd64e, 0x5);                 /* jz 0x100bd64e */
l_0x100bd649:
    II(0x100bd649, 0x5)   jmpd(0x100bd727, 0xd9);               /* jmp 0x100bd727 */
l_0x100bd64e:
    II(0x100bd64e, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100bd651, 0x5)   calld(0x1008adf8, -0x3285e);          /* call 0x1008adf8 */
    II(0x100bd656, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
//    II(0x100bd659, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x100bd65c, 0x3)   mov(memd_a32(ss, ebp - 0x70), eax);   /* mov [ebp-0x70], eax */
//    II(0x100bd65f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x70));   /* mov eax, [ebp-0x70] */
    II(0x100bd662, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100bd665, 0x3)   mov(eax, memd_a32(ss, ebp - 0x70));   /* mov eax, [ebp-0x70] */
    II(0x100bd668, 0x3)   calld_abs(memd_a32(ds, edx + 0x70));  /* call dword near [edx+0x70] */
    II(0x100bd66b, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bd66d, 0x2)   jzd(0x100bd684, 0x15);                /* jz 0x100bd684 */
    II(0x100bd66f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x100bd672, 0x5)   calld(0x1009c4c4, -0x211b3);          /* call 0x1009c4c4 */
    II(0x100bd677, 0x1)   cwde();                               /* cwde */
    II(0x100bd678, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100bd67b, 0x7)   test(memb_a32(ds, eax + 0x101c81c0), 0x10); /* test byte [eax+0x101c81c0], 0x10 */
    II(0x100bd682, 0x2)   jnzd(0x100bd689, 0x5);                /* jnz 0x100bd689 */
l_0x100bd684:
    II(0x100bd684, 0x5)   jmpd(0x100bd727, 0x9e);               /* jmp 0x100bd727 */
l_0x100bd689:
    II(0x100bd689, 0x3)   lea(edx, ebp - 0x74);                 /* lea edx, [ebp-0x74] */
    II(0x100bd68c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x100bd68f, 0x5)   calld(0x100a2d3d, -0x1a957);          /* call 0x100a2d3d */
    II(0x100bd694, 0x5)   mov(ebx, 0x8);                        /* mov ebx, 0x8 */
    II(0x100bd699, 0x3)   lea(edx, ebp - 0x74);                 /* lea edx, [ebp-0x74] */
    II(0x100bd69c, 0x3)   lea(eax, ebp - 0x78);                 /* lea eax, [ebp-0x78] */
    II(0x100bd69f, 0x5)   calld(0x10075e64, -0x47840);          /* call 0x10075e64 */
    II(0x100bd6a4, 0x6)   lea(ecx, ebp - 0x88);                 /* lea ecx, [ebp+0xffffff78] */
    II(0x100bd6aa, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bd6ac, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x100bd6ae, 0x5)   calld(0x100a95c1, -0x140f2);          /* call 0x100a95c1 */
    II(0x100bd6b3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x72)); /* movsx edx, word [ebp-0x72] */
    II(0x100bd6b7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x74)); /* movsx eax, word [ebp-0x74] */
    II(0x100bd6bb, 0x5)   calld(0x10073cfd, -0x499c3);          /* call 0x10073cfd */
    II(0x100bd6c0, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
l_0x100bd6c3:
    II(0x100bd6c3, 0x6)   lea(eax, ebp - 0x88);                 /* lea eax, [ebp+0xffffff78] */
    II(0x100bd6c9, 0x5)   calld(0x1008982c, -0x33ea2);          /* call 0x1008982c */
    II(0x100bd6ce, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100bd6d1, 0x6)   lea(eax, ebp - 0x88);                 /* lea eax, [ebp+0xffffff78] */
    II(0x100bd6d7, 0x5)   calld(0x10089860, -0x33e7c);          /* call 0x10089860 */
    II(0x100bd6dc, 0x1)   cwde();                               /* cwde */
    II(0x100bd6dd, 0x5)   calld(0x10073cfd, -0x499e5);          /* call 0x10073cfd */
    II(0x100bd6e2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bd6e4, 0x3)   mov(dx, ax);                          /* mov dx, ax */
    II(0x100bd6e7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100bd6eb, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bd6ed, 0x2)   jnzd(0x100bd718, 0x29);               /* jnz 0x100bd718 */
    II(0x100bd6ef, 0x6)   lea(eax, ebp - 0x88);                 /* lea eax, [ebp+0xffffff78] */
    II(0x100bd6f5, 0x5)   calld(0x1008982c, -0x33ece);          /* call 0x1008982c */
    II(0x100bd6fa, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100bd6fd, 0x6)   lea(eax, ebp - 0x88);                 /* lea eax, [ebp+0xffffff78] */
    II(0x100bd703, 0x5)   calld(0x10089860, -0x33ea8);          /* call 0x10089860 */
    II(0x100bd708, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100bd70b, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100bd70e, 0x5)   calld(0x1008a728, -0x32feb);          /* call 0x1008a728 */
    II(0x100bd713, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100bd715, 0x3)   mov(memb_a32(ds, eax), 0x1);          /* mov byte [eax], 0x1 */
l_0x100bd718:
    II(0x100bd718, 0x6)   lea(eax, ebp - 0x88);                 /* lea eax, [ebp+0xffffff78] */
    II(0x100bd71e, 0x5)   calld(0x100a96db, -0x14048);          /* call 0x100a96db */
    II(0x100bd723, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bd725, 0x2)   jnzd(0x100bd6c3, -0x64);              /* jnz 0x100bd6c3 */
l_0x100bd727:
    II(0x100bd727, 0x5)   jmpd(0x100bd5fd, -0x12f);             /* jmp 0x100bd5fd */
l_0x100bd72c:
    II(0x100bd72c, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100bd731, 0x5)   calld(0x1008a768, -0x32fce);          /* call 0x1008a768 */
    II(0x100bd736, 0x3)   lea(ebx, ebp - 0x2c);                 /* lea ebx, [ebp-0x2c] */
    II(0x100bd739, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bd73b, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bd73d, 0x5)   calld(0x100ab1f8, -0x1254a);          /* call 0x100ab1f8 */
    II(0x100bd742, 0x2)   jmpd(0x100bd74c, 0x8);                /* jmp 0x100bd74c */
l_0x100bd744:
    II(0x100bd744, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100bd747, 0x5)   calld(0x10076bf8, -0x46b54);          /* call 0x10076bf8 */
l_0x100bd74c:
    II(0x100bd74c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bd74e, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100bd751, 0x5)   calld(0x1013ad71, 0x7d61b);           /* call 0x1013ad71 */
    II(0x100bd756, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bd758, 0x6)   jzd(0x100bd8c4, 0x166);               /* jz dword 0x100bd8c4 */
    II(0x100bd75e, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100bd761, 0x5)   calld(0x1008adc4, -0x329a2);          /* call 0x1008adc4 */
    II(0x100bd766, 0x5)   calld(0x1008ad90, -0x329db);          /* call 0x1008ad90 */
    II(0x100bd76b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bd76d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bd770, 0x3)   cmp(dx, memw_a32(ds, eax));           /* cmp dx, [eax] */
    II(0x100bd773, 0x2)   jnzd(0x100bd799, 0x24);               /* jnz 0x100bd799 */
    II(0x100bd775, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100bd778, 0x5)   calld(0x1008adc4, -0x329b9);          /* call 0x1008adc4 */
    II(0x100bd77d, 0x6)   mov(memd_a32(ss, ebp - 0x8c), eax);   /* mov [ebp+0xffffff74], eax */
//    II(0x100bd783, 0x6)   mov(eax, memd_a32(ss, ebp - 0x8c));   /* mov eax, [ebp+0xffffff74] */
    II(0x100bd789, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100bd78c, 0x6)   mov(eax, memd_a32(ss, ebp - 0x8c));   /* mov eax, [ebp+0xffffff74] */
    II(0x100bd792, 0x3)   calld_abs(memd_a32(ds, edx + 0x20));  /* call dword near [edx+0x20] */
    II(0x100bd795, 0x2)   cmp(al, 0x9);                         /* cmp al, 0x9 */
    II(0x100bd797, 0x2)   jzd(0x100bd79e, 0x5);                 /* jz 0x100bd79e */
l_0x100bd799:
    II(0x100bd799, 0x5)   jmpd(0x100bd8bf, 0x121);              /* jmp 0x100bd8bf */
l_0x100bd79e:
    II(0x100bd79e, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100bd7a1, 0x5)   calld(0x1008adf8, -0x329ae);          /* call 0x1008adf8 */
    II(0x100bd7a6, 0x6)   mov(memd_a32(ss, ebp - 0x90), eax);   /* mov [ebp+0xffffff70], eax */
//    II(0x100bd7ac, 0x6)   mov(eax, memd_a32(ss, ebp - 0x90));   /* mov eax, [ebp+0xffffff70] */
    II(0x100bd7b2, 0x6)   mov(memd_a32(ss, ebp - 0x94), eax);   /* mov [ebp+0xffffff6c], eax */
//    II(0x100bd7b8, 0x6)   mov(eax, memd_a32(ss, ebp - 0x94));   /* mov eax, [ebp+0xffffff6c] */
    II(0x100bd7be, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100bd7c1, 0x6)   mov(eax, memd_a32(ss, ebp - 0x94));   /* mov eax, [ebp+0xffffff6c] */
    II(0x100bd7c7, 0x3)   calld_abs(memd_a32(ds, edx + 0x70));  /* call dword near [edx+0x70] */
    II(0x100bd7ca, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bd7cc, 0x6)   jzd(0x100bd8bf, 0xed);                /* jz dword 0x100bd8bf */
    II(0x100bd7d2, 0x6)   mov(eax, memd_a32(ss, ebp - 0x90));   /* mov eax, [ebp+0xffffff70] */
    II(0x100bd7d8, 0x6)   mov(memd_a32(ss, ebp - 0x98), eax);   /* mov [ebp+0xffffff68], eax */
//    II(0x100bd7de, 0x6)   mov(eax, memd_a32(ss, ebp - 0x98));   /* mov eax, [ebp+0xffffff68] */
    II(0x100bd7e4, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x100bd7e7, 0x6)   lea(edx, ebp - 0xa8);                 /* lea edx, [ebp+0xffffff58] */
    II(0x100bd7ed, 0x6)   mov(eax, memd_a32(ss, ebp - 0x98));   /* mov eax, [ebp+0xffffff68] */
    II(0x100bd7f3, 0x3)   calld_abs(memd_a32(ds, ebx + 0x1c));  /* call dword near [ebx+0x1c] */
    II(0x100bd7f6, 0x6)   mov(eax, memd_a32(ss, ebp - 0x90));   /* mov eax, [ebp+0xffffff70] */
    II(0x100bd7fc, 0x5)   calld(0x1009c4c4, -0x2133d);          /* call 0x1009c4c4 */
    II(0x100bd801, 0x1)   cwde();                               /* cwde */
    II(0x100bd802, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100bd805, 0x7)   test(memb_a32(ds, eax + 0x101c81c0), 0x10); /* test byte [eax+0x101c81c0], 0x10 */
    II(0x100bd80c, 0x2)   jzd(0x100bd874, 0x66);                /* jz 0x100bd874 */
    II(0x100bd80e, 0x6)   mov(edx, memd_a32(ss, ebp - 0xa8));   /* mov edx, [ebp+0xffffff58] */
    II(0x100bd814, 0x3)   sub(edx, 0x2);                        /* sub edx, 0x2 */
    II(0x100bd817, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100bd819, 0x5)   calld(0x10076e7c, -0x469a2);          /* call 0x10076e7c */
    II(0x100bd81e, 0x6)   mov(memd_a32(ss, ebp - 0xa8), eax);   /* mov [ebp+0xffffff58], eax */
    II(0x100bd824, 0x6)   mov(edx, memd_a32(ds, 0x101c8170));   /* mov edx, [0x101c8170] */
    II(0x100bd82a, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100bd82d, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa0));   /* mov eax, [ebp+0xffffff60] */
    II(0x100bd833, 0x3)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x100bd836, 0x5)   calld(my_min, -0x340b7);              /* call 0x10089784 */
    II(0x100bd83b, 0x6)   mov(memd_a32(ss, ebp - 0xa0), eax);   /* mov [ebp+0xffffff60], eax */
    II(0x100bd841, 0x6)   mov(edx, memd_a32(ss, ebp - 0xa4));   /* mov edx, [ebp+0xffffff5c] */
    II(0x100bd847, 0x3)   sub(edx, 0x2);                        /* sub edx, 0x2 */
    II(0x100bd84a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100bd84c, 0x5)   calld(0x10076e7c, -0x469d5);          /* call 0x10076e7c */
    II(0x100bd851, 0x6)   mov(memd_a32(ss, ebp - 0xa4), eax);   /* mov [ebp+0xffffff5c], eax */
    II(0x100bd857, 0x6)   mov(edx, memd_a32(ds, 0x101c8172));   /* mov edx, [0x101c8172] */
    II(0x100bd85d, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100bd860, 0x6)   mov(eax, memd_a32(ss, ebp - 0x9c));   /* mov eax, [ebp+0xffffff64] */
    II(0x100bd866, 0x3)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x100bd869, 0x5)   calld(my_min, -0x340ea);              /* call 0x10089784 */
    II(0x100bd86e, 0x6)   mov(memd_a32(ss, ebp - 0x9c), eax);   /* mov [ebp+0xffffff64], eax */
l_0x100bd874:
    II(0x100bd874, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa8));   /* mov eax, [ebp+0xffffff58] */
    II(0x100bd87a, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100bd87d, 0x2)   jmpd(0x100bd885, 0x6);                /* jmp 0x100bd885 */
l_0x100bd87f:
    II(0x100bd87f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100bd882, 0x3)   inc(memd_a32(ss, ebp - 0x1c));        /* inc dword [ebp-0x1c] */
l_0x100bd885:
    II(0x100bd885, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x100bd889, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bd88b, 0x2)   jged(0x100bd8bf, 0x32);               /* jge 0x100bd8bf */
    II(0x100bd88d, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa4));   /* mov eax, [ebp+0xffffff5c] */
    II(0x100bd893, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100bd896, 0x2)   jmpd(0x100bd89e, 0x6);                /* jmp 0x100bd89e */
l_0x100bd898:
    II(0x100bd898, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100bd89b, 0x3)   inc(memd_a32(ss, ebp - 0x28));        /* inc dword [ebp-0x28] */
l_0x100bd89e:
    II(0x100bd89e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100bd8a2, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bd8a4, 0x2)   jged(0x100bd8bd, 0x17);               /* jge 0x100bd8bd */
    II(0x100bd8a6, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100bd8aa, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100bd8ad, 0x5)   calld(0x1008a728, -0x3318a);          /* call 0x1008a728 */
    II(0x100bd8b2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100bd8b6, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bd8b8, 0x3)   mov(memb_a32(ds, eax), 0);            /* mov byte [eax], 0x0 */
    II(0x100bd8bb, 0x2)   jmpd(0x100bd898, -0x25);              /* jmp 0x100bd898 */
l_0x100bd8bd:
    II(0x100bd8bd, 0x2)   jmpd(0x100bd87f, -0x40);              /* jmp 0x100bd87f */
l_0x100bd8bf:
    II(0x100bd8bf, 0x5)   jmpd(0x100bd744, -0x180);             /* jmp 0x100bd744 */
l_0x100bd8c4:
    II(0x100bd8c4, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100bd8c9, 0x5)   calld(0x10076338, -0x47596);          /* call 0x10076338 */
    II(0x100bd8ce, 0x3)   lea(ebx, ebp - 0x30);                 /* lea ebx, [ebp-0x30] */
    II(0x100bd8d1, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bd8d3, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bd8d5, 0x5)   calld(0x1007643c, -0x4749e);          /* call 0x1007643c */
    II(0x100bd8da, 0x2)   jmpd(0x100bd8e4, 0x8);                /* jmp 0x100bd8e4 */
l_0x100bd8dc:
    II(0x100bd8dc, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bd8df, 0x5)   calld(0x10076bf8, -0x46cec);          /* call 0x10076bf8 */
l_0x100bd8e4:
    II(0x100bd8e4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bd8e6, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bd8e9, 0x5)   calld(0x1013ad71, 0x7d483);           /* call 0x1013ad71 */
    II(0x100bd8ee, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bd8f0, 0x6)   jzd(0x100bd9f4, 0xfe);                /* jz dword 0x100bd9f4 */
    II(0x100bd8f6, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bd8f9, 0x5)   calld(0x100763a0, -0x4755e);          /* call 0x100763a0 */
    II(0x100bd8fe, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bd900, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100bd903, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bd906, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bd909, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bd90b, 0x6)   jnzd(0x100bd9ef, 0xde);               /* jnz dword 0x100bd9ef */
    II(0x100bd911, 0x6)   lea(edx, ebp - 0xa8);                 /* lea edx, [ebp+0xffffff58] */
    II(0x100bd917, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bd91a, 0x5)   calld(0x100763a0, -0x4757f);          /* call 0x100763a0 */
    II(0x100bd91f, 0x5)   calld(0x10152532, 0x94c0e);           /* call 0x10152532 */
    II(0x100bd924, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bd927, 0x5)   calld(0x100763a0, -0x4758c);          /* call 0x100763a0 */
    II(0x100bd92c, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100bd92f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bd932, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100bd935, 0x7)   test(memb_a32(ds, eax + 0x101c81c0), 0x10); /* test byte [eax+0x101c81c0], 0x10 */
    II(0x100bd93c, 0x2)   jzd(0x100bd9a4, 0x66);                /* jz 0x100bd9a4 */
    II(0x100bd93e, 0x6)   mov(edx, memd_a32(ss, ebp - 0xa8));   /* mov edx, [ebp+0xffffff58] */
    II(0x100bd944, 0x3)   sub(edx, 0x2);                        /* sub edx, 0x2 */
    II(0x100bd947, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100bd949, 0x5)   calld(0x10076e7c, -0x46ad2);          /* call 0x10076e7c */
    II(0x100bd94e, 0x6)   mov(memd_a32(ss, ebp - 0xa8), eax);   /* mov [ebp+0xffffff58], eax */
    II(0x100bd954, 0x6)   mov(edx, memd_a32(ds, 0x101c8170));   /* mov edx, [0x101c8170] */
    II(0x100bd95a, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100bd95d, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa0));   /* mov eax, [ebp+0xffffff60] */
    II(0x100bd963, 0x3)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x100bd966, 0x5)   calld(my_min, -0x341e7);              /* call 0x10089784 */
    II(0x100bd96b, 0x6)   mov(memd_a32(ss, ebp - 0xa0), eax);   /* mov [ebp+0xffffff60], eax */
    II(0x100bd971, 0x6)   mov(edx, memd_a32(ss, ebp - 0xa4));   /* mov edx, [ebp+0xffffff5c] */
    II(0x100bd977, 0x3)   sub(edx, 0x2);                        /* sub edx, 0x2 */
    II(0x100bd97a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100bd97c, 0x5)   calld(0x10076e7c, -0x46b05);          /* call 0x10076e7c */
    II(0x100bd981, 0x6)   mov(memd_a32(ss, ebp - 0xa4), eax);   /* mov [ebp+0xffffff5c], eax */
    II(0x100bd987, 0x6)   mov(edx, memd_a32(ds, 0x101c8172));   /* mov edx, [0x101c8172] */
    II(0x100bd98d, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100bd990, 0x6)   mov(eax, memd_a32(ss, ebp - 0x9c));   /* mov eax, [ebp+0xffffff64] */
    II(0x100bd996, 0x3)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x100bd999, 0x5)   calld(my_min, -0x3421a);              /* call 0x10089784 */
    II(0x100bd99e, 0x6)   mov(memd_a32(ss, ebp - 0x9c), eax);   /* mov [ebp+0xffffff64], eax */
l_0x100bd9a4:
    II(0x100bd9a4, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa8));   /* mov eax, [ebp+0xffffff58] */
    II(0x100bd9aa, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100bd9ad, 0x2)   jmpd(0x100bd9b5, 0x6);                /* jmp 0x100bd9b5 */
l_0x100bd9af:
    II(0x100bd9af, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100bd9b2, 0x3)   inc(memd_a32(ss, ebp - 0x1c));        /* inc dword [ebp-0x1c] */
l_0x100bd9b5:
    II(0x100bd9b5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x100bd9b9, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bd9bb, 0x2)   jged(0x100bd9ef, 0x32);               /* jge 0x100bd9ef */
    II(0x100bd9bd, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa4));   /* mov eax, [ebp+0xffffff5c] */
    II(0x100bd9c3, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100bd9c6, 0x2)   jmpd(0x100bd9ce, 0x6);                /* jmp 0x100bd9ce */
l_0x100bd9c8:
    II(0x100bd9c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100bd9cb, 0x3)   inc(memd_a32(ss, ebp - 0x28));        /* inc dword [ebp-0x28] */
l_0x100bd9ce:
    II(0x100bd9ce, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100bd9d2, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bd9d4, 0x2)   jged(0x100bd9ed, 0x17);               /* jge 0x100bd9ed */
    II(0x100bd9d6, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100bd9da, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100bd9dd, 0x5)   calld(0x1008a728, -0x332ba);          /* call 0x1008a728 */
    II(0x100bd9e2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100bd9e6, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bd9e8, 0x3)   mov(memb_a32(ds, eax), 0);            /* mov byte [eax], 0x0 */
    II(0x100bd9eb, 0x2)   jmpd(0x100bd9c8, -0x25);              /* jmp 0x100bd9c8 */
l_0x100bd9ed:
    II(0x100bd9ed, 0x2)   jmpd(0x100bd9af, -0x40);              /* jmp 0x100bd9af */
l_0x100bd9ef:
    II(0x100bd9ef, 0x5)   jmpd(0x100bd8dc, -0x118);             /* jmp 0x100bd8dc */
l_0x100bd9f4:
    II(0x100bd9f4, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x100bd9fb, 0x2)   jmpd(0x100bda03, 0x6);                /* jmp 0x100bda03 */
l_0x100bd9fd:
    II(0x100bd9fd, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100bda00, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x100bda03:
    II(0x100bda03, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100bda07, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x100bda0a, 0x6)   jged(0x100bdaca, 0xba);               /* jge dword 0x100bdaca */
    II(0x100bda10, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100bda13, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100bda16, 0x3)   cmp(ax, memw_a32(ds, edx));           /* cmp ax, [edx] */
    II(0x100bda19, 0x2)   jzd(0x100bda34, 0x19);                /* jz 0x100bda34 */
    II(0x100bda1b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100bda1f, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100bda25, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100bda2b, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100bda30, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bda32, 0x2)   jnzd(0x100bda39, 0x5);                /* jnz 0x100bda39 */
l_0x100bda34:
    II(0x100bda34, 0x5)   jmpd(0x100bdac5, 0x8c);               /* jmp 0x100bdac5 */
l_0x100bda39:
    II(0x100bda39, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100bda3d, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100bda43, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a3)); /* mov eax, [eax+0x101ca6a3] */
    II(0x100bda49, 0x6)   mov(memd_a32(ss, ebp - 0xac), eax);   /* mov [ebp+0xffffff54], eax */
    II(0x100bda4f, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x100bda56, 0x2)   jmpd(0x100bda5e, 0x6);                /* jmp 0x100bda5e */
l_0x100bda58:
    II(0x100bda58, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100bda5b, 0x3)   inc(memd_a32(ss, ebp - 0x1c));        /* inc dword [ebp-0x1c] */
l_0x100bda5e:
    II(0x100bda5e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100bda61, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x100bda68, 0x2)   jged(0x100bdac5, 0x5b);               /* jge 0x100bdac5 */
    II(0x100bda6a, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
    II(0x100bda71, 0x2)   jmpd(0x100bda79, 0x6);                /* jmp 0x100bda79 */
l_0x100bda73:
    II(0x100bda73, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100bda76, 0x3)   inc(memd_a32(ss, ebp - 0x28));        /* inc dword [ebp-0x28] */
l_0x100bda79:
    II(0x100bda79, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100bda7c, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x100bda83, 0x2)   jged(0x100bdac3, 0x3e);               /* jge 0x100bdac3 */
    II(0x100bda85, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x100bda89, 0x6)   mov(edx, memd_a32(ds, 0x101c8170));   /* mov edx, [0x101c8170] */
    II(0x100bda8f, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100bda92, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100bda95, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x100bda99, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bda9b, 0x6)   add(eax, memd_a32(ss, ebp - 0xac));   /* add eax, [ebp+0xffffff54] */
    II(0x100bdaa1, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100bdaa3, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100bdaa8, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bdaaa, 0x2)   jzd(0x100bdac1, 0x15);                /* jz 0x100bdac1 */
    II(0x100bdaac, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100bdab0, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100bdab3, 0x5)   calld(0x1008a728, -0x33390);          /* call 0x1008a728 */
    II(0x100bdab8, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100bdabc, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bdabe, 0x3)   mov(memb_a32(ds, eax), 0);            /* mov byte [eax], 0x0 */
l_0x100bdac1:
    II(0x100bdac1, 0x2)   jmpd(0x100bda73, -0x50);              /* jmp 0x100bda73 */
l_0x100bdac3:
    II(0x100bdac3, 0x2)   jmpd(0x100bda58, -0x6d);              /* jmp 0x100bda58 */
l_0x100bdac5:
    II(0x100bdac5, 0x5)   jmpd(0x100bd9fd, -0xcd);              /* jmp 0x100bd9fd */
l_0x100bdaca:
    II(0x100bdaca, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100bdad1, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x100bdad8, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100bdadf, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x100bdae6, 0x2)   jmpd(0x100bdaee, 0x6);                /* jmp 0x100bdaee */
l_0x100bdae8:
    II(0x100bdae8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100bdaeb, 0x3)   inc(memd_a32(ss, ebp - 0x1c));        /* inc dword [ebp-0x1c] */
l_0x100bdaee:
    II(0x100bdaee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100bdaf1, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x100bdaf8, 0x6)   jged(0x100bdbaf, 0xb1);               /* jge dword 0x100bdbaf */
    II(0x100bdafe, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
    II(0x100bdb05, 0x2)   jmpd(0x100bdb0d, 0x6);                /* jmp 0x100bdb0d */
l_0x100bdb07:
    II(0x100bdb07, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100bdb0a, 0x3)   inc(memd_a32(ss, ebp - 0x28));        /* inc dword [ebp-0x28] */
l_0x100bdb0d:
    II(0x100bdb0d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100bdb10, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x100bdb17, 0x6)   jged(0x100bdbaa, 0x8d);               /* jge dword 0x100bdbaa */
    II(0x100bdb1d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100bdb21, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x100bdb25, 0x5)   calld(0x10073cfd, -0x49e2d);          /* call 0x10073cfd */
    II(0x100bdb2a, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100bdb2d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100bdb31, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100bdb34, 0x5)   calld(0x1008a728, -0x33411);          /* call 0x1008a728 */
    II(0x100bdb39, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100bdb3d, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bdb3f, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100bdb41, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100bdb46, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bdb48, 0x2)   jnzd(0x100bdb66, 0x1c);               /* jnz 0x100bdb66 */
    II(0x100bdb4a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100bdb4e, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100bdb51, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bdb54, 0x3)   mov(eax, memd_a32(ds, eax + 0x63));   /* mov eax, [eax+0x63] */
    II(0x100bdb57, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bdb59, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100bdb5d, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100bdb5f, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bdb61, 0x3)   and_(memb_a32(ds, eax), -0x3 /* 0xfd */); /* and byte [eax], 0xfd */
    II(0x100bdb64, 0x2)   jmpd(0x100bdba5, 0x3f);               /* jmp 0x100bdba5 */
l_0x100bdb66:
    II(0x100bdb66, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100bdb69, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
    II(0x100bdb6c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x100bdb70, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100bdb73, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bdb75, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bdb78, 0x3)   mov(eax, memd_a32(ds, eax + 0x63));   /* mov eax, [eax+0x63] */
    II(0x100bdb7b, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bdb7d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100bdb81, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100bdb83, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bdb85, 0x3)   test(memb_a32(ds, eax), 0x2);         /* test byte [eax], 0x2 */
    II(0x100bdb88, 0x2)   jzd(0x100bdba5, 0x1b);                /* jz 0x100bdba5 */
    II(0x100bdb8a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100bdb8d, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
    II(0x100bdb90, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100bdb94, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100bdb97, 0x5)   calld(0x1008a728, -0x33474);          /* call 0x1008a728 */
    II(0x100bdb9c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100bdba0, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bdba2, 0x3)   mov(memb_a32(ds, eax), 0);            /* mov byte [eax], 0x0 */
l_0x100bdba5:
    II(0x100bdba5, 0x5)   jmpd(0x100bdb07, -0xa3);              /* jmp 0x100bdb07 */
l_0x100bdbaa:
    II(0x100bdbaa, 0x5)   jmpd(0x100bdae8, -0xc7);              /* jmp 0x100bdae8 */
l_0x100bdbaf:
    II(0x100bdbaf, 0x5)   mov(eax, 0x101c8178);                 /* mov eax, 0x101c8178 */
    II(0x100bdbb4, 0x5)   calld(0x10076338, -0x47881);          /* call 0x10076338 */
    II(0x100bdbb9, 0x3)   lea(ebx, ebp - 0x30);                 /* lea ebx, [ebp-0x30] */
    II(0x100bdbbc, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bdbbe, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100bdbc0, 0x5)   calld(0x1007643c, -0x47789);          /* call 0x1007643c */
    II(0x100bdbc5, 0x2)   jmpd(0x100bdbcf, 0x8);                /* jmp 0x100bdbcf */
l_0x100bdbc7:
    II(0x100bdbc7, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bdbca, 0x5)   calld(0x10076bf8, -0x46fd7);          /* call 0x10076bf8 */
l_0x100bdbcf:
    II(0x100bdbcf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bdbd1, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bdbd4, 0x5)   calld(0x1013ad71, 0x7d198);           /* call 0x1013ad71 */
    II(0x100bdbd9, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bdbdb, 0x6)   jzd(0x100bdcb1, 0xd0);                /* jz dword 0x100bdcb1 */
    II(0x100bdbe1, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bdbe4, 0x5)   calld(0x100763a0, -0x47849);          /* call 0x100763a0 */
    II(0x100bdbe9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bdbeb, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100bdbee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bdbf1, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100bdbf4, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bdbf6, 0x2)   jnzd(0x100bdc18, 0x20);               /* jnz 0x100bdc18 */
    II(0x100bdbf8, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bdbfb, 0x5)   calld(0x100763a0, -0x47860);          /* call 0x100763a0 */
    II(0x100bdc00, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x29);   /* cmp word [eax+0x8], 0x29 */
    II(0x100bdc05, 0x2)   jzd(0x100bdc16, 0xf);                 /* jz 0x100bdc16 */
    II(0x100bdc07, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bdc0a, 0x5)   calld(0x100763a0, -0x4786f);          /* call 0x100763a0 */
    II(0x100bdc0f, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x2a);   /* cmp word [eax+0x8], 0x2a */
    II(0x100bdc14, 0x2)   jnzd(0x100bdc18, 0x2);                /* jnz 0x100bdc18 */
l_0x100bdc16:
    II(0x100bdc16, 0x2)   jmpd(0x100bdc1a, 0x2);                /* jmp 0x100bdc1a */
l_0x100bdc18:
    II(0x100bdc18, 0x2)   jmpd(0x100bdc4b, 0x31);               /* jmp 0x100bdc4b */
l_0x100bdc1a:
    II(0x100bdc1a, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bdc1d, 0x5)   calld(0x100763a0, -0x47882);          /* call 0x100763a0 */
    II(0x100bdc22, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100bdc25, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100bdc28, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bdc2b, 0x5)   calld(0x100763a0, -0x47890);          /* call 0x100763a0 */
    II(0x100bdc30, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100bdc33, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100bdc36, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100bdc39, 0x5)   calld(0x1008a728, -0x33516);          /* call 0x1008a728 */
    II(0x100bdc3e, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100bdc40, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100bdc42, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100bdc47, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bdc49, 0x2)   jnzd(0x100bdc4d, 0x2);                /* jnz 0x100bdc4d */
l_0x100bdc4b:
    II(0x100bdc4b, 0x2)   jmpd(0x100bdcac, 0x5f);               /* jmp 0x100bdcac */
l_0x100bdc4d:
    II(0x100bdc4d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100bdc50, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
    II(0x100bdc53, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bdc56, 0x5)   calld(0x100763a0, -0x478bb);          /* call 0x100763a0 */
    II(0x100bdc5b, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x100bdc5e, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100bdc61, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100bdc64, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bdc66, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bdc69, 0x3)   mov(eax, memd_a32(ds, eax + 0x63));   /* mov eax, [eax+0x63] */
    II(0x100bdc6c, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100bdc6e, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bdc71, 0x5)   calld(0x100763a0, -0x478d6);          /* call 0x100763a0 */
    II(0x100bdc76, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100bdc79, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100bdc7c, 0x2)   mov(eax, memd_a32(ds, edx));          /* mov eax, [edx] */
    II(0x100bdc7e, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100bdc80, 0x3)   and_(memb_a32(ds, eax), -0x3 /* 0xfd */); /* and byte [eax], 0xfd */
    II(0x100bdc83, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bdc86, 0x5)   calld(0x100763a0, -0x478eb);          /* call 0x100763a0 */
    II(0x100bdc8b, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100bdc8e, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100bdc91, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bdc94, 0x5)   calld(0x100763a0, -0x478f9);          /* call 0x100763a0 */
    II(0x100bdc99, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100bdc9c, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100bdc9f, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100bdca2, 0x5)   calld(0x1008a728, -0x3357f);          /* call 0x1008a728 */
    II(0x100bdca7, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100bdca9, 0x3)   mov(memb_a32(ds, eax), 0);            /* mov byte [eax], 0x0 */
l_0x100bdcac:
    II(0x100bdcac, 0x5)   jmpd(0x100bdbc7, -0xea);              /* jmp 0x100bdbc7 */
l_0x100bdcb1:
    II(0x100bdcb1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100bdcb4, 0x3)   mov(edx, memd_a32(ds, edx + 0x5));    /* mov edx, [edx+0x5] */
    II(0x100bdcb7, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100bdcba, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100bdcbe, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100bdcc1, 0x5)   mov(ebx, 0x64);                       /* mov ebx, 0x64 */
    II(0x100bdcc6, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100bdcc8, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100bdccb, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x100bdccd, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x100bdcd1, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100bdcd3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bdcd5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100bdcd9, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x100bdcdb, 0x3)   mov(memd_a32(ss, ebp - 0x20), edx);   /* mov [ebp-0x20], edx */
    II(0x100bdcde, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100bdce2, 0x5)   mov(edx, 0x20);                       /* mov edx, 0x20 */
    II(0x100bdce7, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x100bdce9, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100bdceb, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x100bdcef, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100bdcf1, 0x2)   jld(0x100bdcfe, 0xb);                 /* jl 0x100bdcfe */
    II(0x100bdcf3, 0x5)   mov(eax, 0x20);                       /* mov eax, 0x20 */
    II(0x100bdcf8, 0x3)   sub(eax, memd_a32(ss, ebp - 0x14));   /* sub eax, [ebp-0x14] */
    II(0x100bdcfb, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
l_0x100bdcfe:
    II(0x100bdcfe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100bdd01, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x100bdd04, 0x3)   sub(memd_a32(ss, ebp - 0x18), eax);   /* sub [ebp-0x18], eax */
    II(0x100bdd07, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100bdd0b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bdd0d, 0x2)   jgd(0x100bdd32, 0x23);                /* jg 0x100bdd32 */
    II(0x100bdd0f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bdd11, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100bdd14, 0x5)   calld(0x10088bbc, -0x3515d);          /* call 0x10088bbc */
    II(0x100bdd19, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bdd1b, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bdd1e, 0x5)   calld(0x10075f6c, -0x47db7);          /* call 0x10075f6c */
    II(0x100bdd23, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bdd25, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100bdd28, 0x5)   calld(0x1008bc9f, -0x3208e);          /* call 0x1008bc9f */
    II(0x100bdd2d, 0x5)   jmpd(0x100bde90, 0x15e);              /* jmp 0x100bde90 */
l_0x100bdd32:
    II(0x100bdd32, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x100bdd39, 0x2)   jmpd(0x100bdd41, 0x6);                /* jmp 0x100bdd41 */
l_0x100bdd3b:
    II(0x100bdd3b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100bdd3e, 0x3)   inc(memd_a32(ss, ebp - 0x1c));        /* inc dword [ebp-0x1c] */
l_0x100bdd41:
    II(0x100bdd41, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100bdd44, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x100bdd4b, 0x2)   jged(0x100bdd54, 0x7);                /* jge 0x100bdd54 */
    II(0x100bdd4d, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0);     /* cmp word [ebp-0x20], 0x0 */
    II(0x100bdd52, 0x2)   jnzd(0x100bdd59, 0x5);                /* jnz 0x100bdd59 */
l_0x100bdd54:
    II(0x100bdd54, 0x5)   jmpd(0x100bdddf, 0x86);               /* jmp 0x100bdddf */
l_0x100bdd59:
    II(0x100bdd59, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
    II(0x100bdd60, 0x2)   jmpd(0x100bdd68, 0x6);                /* jmp 0x100bdd68 */
l_0x100bdd62:
    II(0x100bdd62, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100bdd65, 0x3)   inc(memd_a32(ss, ebp - 0x28));        /* inc dword [ebp-0x28] */
l_0x100bdd68:
    II(0x100bdd68, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100bdd6b, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x100bdd72, 0x2)   jged(0x100bdd7b, 0x7);                /* jge 0x100bdd7b */
    II(0x100bdd74, 0x5)   cmp(memw_a32(ss, ebp - 0x20), 0);     /* cmp word [ebp-0x20], 0x0 */
    II(0x100bdd79, 0x2)   jnzd(0x100bdd7d, 0x2);                /* jnz 0x100bdd7d */
l_0x100bdd7b:
    II(0x100bdd7b, 0x2)   jmpd(0x100bddda, 0x5d);               /* jmp 0x100bddda */
l_0x100bdd7d:
    II(0x100bdd7d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100bdd81, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100bdd84, 0x5)   calld(0x1008a728, -0x33661);          /* call 0x1008a728 */
    II(0x100bdd89, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100bdd8d, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bdd8f, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100bdd91, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100bdd96, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100bdd98, 0x2)   jzd(0x100bddd8, 0x3e);                /* jz 0x100bddd8 */
    II(0x100bdd9a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x100bdd9e, 0x5)   calld(/* sys */ 0x10165e9b, 0xa80f8); /* call 0x10165e9b */
    II(0x100bdda3, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100bdda6, 0x3)   shr(eax, 0xf);                        /* shr eax, 0xf */
    II(0x100bdda9, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x100bddad, 0x1)   inc(eax);                             /* inc eax */
    II(0x100bddae, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x100bddb0, 0x2)   jgd(0x100bddd2, 0x20);                /* jg 0x100bddd2 */
    II(0x100bddb2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100bddb6, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100bddb9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bddbc, 0x3)   mov(eax, memd_a32(ds, eax + 0x63));   /* mov eax, [eax+0x63] */
    II(0x100bddbf, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bddc1, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x100bddc5, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100bddc7, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100bddc9, 0x3)   or_(memb_a32(ds, eax), 0x2);          /* or byte [eax], 0x2 */
    II(0x100bddcc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100bddcf, 0x3)   dec(memd_a32(ss, ebp - 0x20));        /* dec dword [ebp-0x20] */
l_0x100bddd2:
    II(0x100bddd2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100bddd5, 0x3)   dec(memd_a32(ss, ebp - 0x18));        /* dec dword [ebp-0x18] */
l_0x100bddd8:
    II(0x100bddd8, 0x2)   jmpd(0x100bdd62, -0x78);              /* jmp 0x100bdd62 */
l_0x100bddda:
    II(0x100bddda, 0x5)   jmpd(0x100bdd3b, -0xa4);              /* jmp 0x100bdd3b */
l_0x100bdddf:
    II(0x100bdddf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bdde1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bdde4, 0x3)   add(eax, 0x25);                       /* add eax, 0x25 */
    II(0x100bdde7, 0x5)   calld(0x1013ad11, 0x7cf25);           /* call 0x1013ad11 */
    II(0x100bddec, 0x2)   test(al, al);                         /* test al, al */
    II(0x100bddee, 0x6)   jzd(0x100bde72, 0x7e);                /* jz dword 0x100bde72 */
    II(0x100bddf4, 0x5)   mov(eax, 0x21);                       /* mov eax, 0x21 */
    II(0x100bddf9, 0x5)   calld(sys_new, 0xa8002);              /* call 0x10165e00 */
    II(0x100bddfe, 0x6)   mov(memd_a32(ss, ebp - 0xb0), eax);   /* mov [ebp+0xffffff50], eax */
//    II(0x100bde04, 0x6)   mov(eax, memd_a32(ss, ebp - 0xb0));   /* mov eax, [ebp+0xffffff50] */
    II(0x100bde0a, 0x6)   mov(memd_a32(ss, ebp - 0xb4), eax);   /* mov [ebp+0xffffff4c], eax */
    II(0x100bde10, 0x7)   cmp(memd_a32(ss, ebp - 0xb4), 0);     /* cmp dword [ebp+0xffffff4c], 0x0 */
    II(0x100bde17, 0x2)   jzd(0x100bde3e, 0x25);                /* jz 0x100bde3e */
    II(0x100bde19, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bde1c, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100bde1f, 0x6)   mov(eax, memd_a32(ss, ebp - 0xb0));   /* mov eax, [ebp+0xffffff50] */
    II(0x100bde25, 0x5)   calld(0x1008076d, -0x3d6bd);          /* call 0x1008076d */
    II(0x100bde2a, 0x6)   mov(memd_a32(ss, ebp - 0xb8), eax);   /* mov [ebp+0xffffff48], eax */
//    II(0x100bde30, 0x6)   mov(eax, memd_a32(ss, ebp - 0xb8));   /* mov eax, [ebp+0xffffff48] */
    II(0x100bde36, 0x6)   mov(memd_a32(ss, ebp - 0xbc), eax);   /* mov [ebp+0xffffff44], eax */
    II(0x100bde3c, 0x2)   jmpd(0x100bde4a, 0xc);                /* jmp 0x100bde4a */
l_0x100bde3e:
    II(0x100bde3e, 0x6)   mov(eax, memd_a32(ss, ebp - 0xb4));   /* mov eax, [ebp+0xffffff4c] */
    II(0x100bde44, 0x6)   mov(memd_a32(ss, ebp - 0xbc), eax);   /* mov [ebp+0xffffff44], eax */
l_0x100bde4a:
    II(0x100bde4a, 0x6)   mov(edx, memd_a32(ss, ebp - 0xbc));   /* mov edx, [ebp+0xffffff44] */
    II(0x100bde50, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bde53, 0x3)   add(eax, 0x25);                       /* add eax, 0x25 */
    II(0x100bde56, 0x5)   calld(0x1008afe4, -0x32e77);          /* call 0x1008afe4 */
    II(0x100bde5b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100bde5e, 0x3)   add(eax, 0x25);                       /* add eax, 0x25 */
    II(0x100bde61, 0x5)   calld(0x1008af84, -0x32ee2);          /* call 0x1008af84 */
    II(0x100bde66, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100bde68, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100bde6d, 0x5)   calld(0x100a4d50, -0x19122);          /* call 0x100a4d50 */
l_0x100bde72:
    II(0x100bde72, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bde74, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100bde77, 0x5)   calld(0x10088bbc, -0x352c0);          /* call 0x10088bbc */
    II(0x100bde7c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bde7e, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x100bde81, 0x5)   calld(0x10075f6c, -0x47f1a);          /* call 0x10075f6c */
    II(0x100bde86, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100bde88, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100bde8b, 0x5)   calld(0x1008bc9f, -0x321f1);          /* call 0x1008bc9f */
l_0x100bde90:
    II(0x100bde90, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100bde92, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100bde93, 0x1)   popd(edi);                            /* pop edi */
    II(0x100bde94, 0x1)   popd(esi);                            /* pop esi */
    II(0x100bde95, 0x1)   popd(edx);                            /* pop edx */
    II(0x100bde96, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100bde97, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100bde98, 0x1)   retd();                               /* ret */
FUNC_END

