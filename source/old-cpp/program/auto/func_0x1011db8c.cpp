FUNC_BEGIN(0x1011db8c, 0xeb2941202286301f, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0xbc, 0x81, 0x4, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0xf, 0xbf, 0x55, 0xf4, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x27, 0x1, 0xd0, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0, 0x1, 0xd0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf8, 0x29, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xff, 0x4d, 0xfc, 0x98, 0x85, 0xc0, 0x7e, 0xb, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0x80, 0x8, 0x20, 0xeb, 0xea, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x1011db8c, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x1011db91, 0x5)   calld(sys_check_available_stack_size, 0x481bc); /* call 0x10165d52 */
    II(0x1011db96, 0x1)   pushd(esi);                           /* push esi */
    II(0x1011db97, 0x1)   pushd(edi);                           /* push edi */
    II(0x1011db98, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1011db99, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1011db9b, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x1011dba1, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1011dba4, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x1011dba7, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x1011dbaa, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x1011dbad, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1011dbb1, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1011dbb4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1011dbb7, 0x3)   mov(eax, memd_a32(ds, eax + 0x27));   /* mov eax, [eax+0x27] */
    II(0x1011dbba, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011dbbc, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x1011dbc0, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1011dbc2, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1011dbc4, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1011dbc7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011dbca, 0x3)   sub(memd_a32(ss, ebp - 0x4), eax);    /* sub [ebp-0x4], eax */
l_0x1011dbcd:
    II(0x1011dbcd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011dbd0, 0x3)   dec(memd_a32(ss, ebp - 0x4));         /* dec dword [ebp-0x4] */
    II(0x1011dbd3, 0x1)   cwde();                               /* cwde */
    II(0x1011dbd4, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1011dbd6, 0x2)   jled(0x1011dbe3, 0xb);                /* jle 0x1011dbe3 */
    II(0x1011dbd8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1011dbdb, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
    II(0x1011dbde, 0x3)   or_(memb_a32(ds, eax), 0x20);         /* or byte [eax], 0x20 */
    II(0x1011dbe1, 0x2)   jmpd(0x1011dbcd, -0x16);              /* jmp 0x1011dbcd */
l_0x1011dbe3:
    II(0x1011dbe3, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1011dbe5, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1011dbe6, 0x1)   popd(edi);                            /* pop edi */
    II(0x1011dbe7, 0x1)   popd(esi);                            /* pop esi */
    II(0x1011dbe8, 0x1)   retd();                               /* ret */
FUNC_END

