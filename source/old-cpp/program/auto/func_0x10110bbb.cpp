FUNC_BEGIN(0x10110bbb, 0xd56db2a9a054634d, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x8d, 0x51, 0x5, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xf8, 0x88, 0x55, 0xfc, 0x31, 0xc0, 0xe8, 0x5e, 0x7c, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x89, 0x10, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x4, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x8, 0, 0, 0, 0, 0xb8, 0x3d, 0, 0, 0, 0xe8, 0xd8, 0x53, 0xf6, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x82, 0x42, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x31, 0xd2, 0x8a, 0x90, 0x42, 0x1, 0, 0, 0x4a, 0xbb, 0xc, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x6b, 0xc0, 0xc, 0x40, 0x8b, 0x55, 0xf8, 0x88, 0x82, 0x40, 0x1, 0, 0, 0x8b, 0x55, 0xf8, 0xc7, 0x82, 0x44, 0x1, 0, 0, 0, 0, 0, 0, 0x8b, 0x55, 0xf8, 0x66, 0xc7, 0x82, 0x4a, 0x1, 0, 0, 0, 0, 0xe8, 0xe4, 0xb1, 0x5, 0, 0xe8, 0xe7, 0x46, 0xfc, 0xff, 0x98, 0x50, 0xe8, 0x4, 0x47, 0xfc, 0xff, 0x98, 0x50, 0x31, 0xc0, 0x50, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0xf, 0xbf, 0xc8, 0x8b, 0x55, 0xf8, 0x8b, 0x1a, 0x8b, 0x5b, 0xe, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x10, 0xb8, 0xc0, 0x6, 0, 0, 0xe8, 0xce, 0x7f, 0xfd, 0xff, 0x8b, 0x55, 0xf8, 0x80, 0xba, 0x43, 0x1, 0, 0, 0x1, 0x75, 0x11, 0xba, 0x82, 0x46, 0x1a, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0, 0xe8, 0x8a, 0xb9, 0xff, 0xff, 0xeb, 0x49, 0x8b, 0x45, 0xf8, 0x80, 0xb8, 0x43, 0x1, 0, 0, 0x8, 0x75, 0x11, 0xba, 0x94, 0x46, 0x1a, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0, 0xe8, 0x6d, 0xb9, 0xff, 0xff, 0xeb, 0x2c, 0x8b, 0x45, 0xf8, 0x80, 0xb8, 0x43, 0x1, 0, 0, 0x2, 0x75, 0x11, 0xba, 0xa9, 0x46, 0x1a, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0, 0xe8, 0x50, 0xb9, 0xff, 0xff, 0xeb, 0xf, 0xba, 0xb7, 0x46, 0x1a, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0, 0xe8, 0x3f, 0xb9, 0xff, 0xff, 0xc7, 0x45, 0xf4, 0x13, 0, 0, 0, 0xff, 0x4d, 0xf4, 0x66, 0x83, 0x7d, 0xf4, 0xff, 0x74, 0x1f, 0xf, 0xbf, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0xc7, 0x40, 0x10, 0, 0, 0, 0, 0xf, 0xbe, 0x55, 0xf4, 0x8b, 0x45, 0xf8, 0xe8, 0x8e, 0xf8, 0xff, 0xff, 0xeb, 0xd7, 0x8b, 0x45, 0xf8, 0xe8, 0xf1, 0xfa, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xe8, 0xc7, 0xfc, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xe8, 0x65, 0xf7, 0xff, 0xff, 0xe8, 0x8e, 0xaf, 0x5, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10110bbb, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x10110bc0, 0x5)   calld(sys_check_available_stack_size, 0x5518d); /* call 0x10165d52 */
    II(0x10110bc5, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10110bc6, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10110bc7, 0x1)   pushd(esi);                           /* push esi */
    II(0x10110bc8, 0x1)   pushd(edi);                           /* push edi */
    II(0x10110bc9, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10110bca, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10110bcc, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x10110bd2, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10110bd5, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x10110bd8, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10110bda, 0x5)   calld(0x100e883d, -0x283a2);          /* call 0x100e883d */
    II(0x10110bdf, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10110be1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10110be4, 0x2)   mov(memd_a32(ds, eax), edx);          /* mov [eax], edx */
    II(0x10110be6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10110be9, 0x7)   mov(memd_a32(ds, eax + 0x4), 0);      /* mov dword [eax+0x4], 0x0 */
    II(0x10110bf0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10110bf3, 0x7)   mov(memd_a32(ds, eax + 0x8), 0);      /* mov dword [eax+0x8], 0x0 */
    II(0x10110bfa, 0x5)   mov(eax, 0x3d);                       /* mov eax, 0x3d */
    II(0x10110bff, 0x5)   calld(0x10075fdc, -0x9ac28);          /* call 0x10075fdc */
    II(0x10110c04, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10110c07, 0x6)   mov(memb_a32(ds, edx + 0x142), al);   /* mov [edx+0x142], al */
    II(0x10110c0d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10110c10, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10110c12, 0x6)   mov(dl, memb_a32(ds, eax + 0x142));   /* mov dl, [eax+0x142] */
    II(0x10110c18, 0x1)   dec(edx);                             /* dec edx */
    II(0x10110c19, 0x5)   mov(ebx, 0xc);                        /* mov ebx, 0xc */
    II(0x10110c1e, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10110c20, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10110c23, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10110c25, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x10110c28, 0x1)   inc(eax);                             /* inc eax */
    II(0x10110c29, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10110c2c, 0x6)   mov(memb_a32(ds, edx + 0x140), al);   /* mov [edx+0x140], al */
    II(0x10110c32, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10110c35, 0xa)   mov(memd_a32(ds, edx + 0x144), 0);    /* mov dword [edx+0x144], 0x0 */
    II(0x10110c3f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10110c42, 0x9)   mov(memw_a32(ds, edx + 0x14a), 0);    /* mov word [edx+0x14a], 0x0 */
    II(0x10110c4b, 0x5)   calld(/* sys */ 0x1016be34, 0x5b1e4); /* call 0x1016be34 */
    II(0x10110c50, 0x5)   calld(0x100d533c, -0x3b919);          /* call 0x100d533c */
    II(0x10110c55, 0x1)   cwde();                               /* cwde */
    II(0x10110c56, 0x1)   pushd(eax);                           /* push eax */
    II(0x10110c57, 0x5)   calld(0x100d5360, -0x3b8fc);          /* call 0x100d5360 */
    II(0x10110c5c, 0x1)   cwde();                               /* cwde */
    II(0x10110c5d, 0x1)   pushd(eax);                           /* push eax */
    II(0x10110c5e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10110c60, 0x1)   pushd(eax);                           /* push eax */
    II(0x10110c61, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10110c63, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10110c66, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x10110c69, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10110c6c, 0x2)   mov(ebx, memd_a32(ds, edx));          /* mov ebx, [edx] */
    II(0x10110c6e, 0x3)   mov(ebx, memd_a32(ds, ebx + 0xe));    /* mov ebx, [ebx+0xe] */
    II(0x10110c71, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10110c74, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10110c77, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x10110c79, 0x5)   mov(eax, 0x6c0);                      /* mov eax, 0x6c0 */
    II(0x10110c7e, 0x5)   calld(0x100e8c51, -0x28032);          /* call 0x100e8c51 */
    II(0x10110c83, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10110c86, 0x7)   cmp(memb_a32(ds, edx + 0x143), 0x1);  /* cmp byte [edx+0x143], 0x1 */
    II(0x10110c8d, 0x2)   jnzd(0x10110ca0, 0x11);               /* jnz 0x10110ca0 */
    II(0x10110c8f, 0x5)   mov(edx, 0x101a4682);                 /* mov edx, 0x101a4682 */ /* "Training Missions" */
    II(0x10110c94, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10110c97, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10110c99, 0x5)   calld(0x1010c628, -0x4676);           /* call 0x1010c628 */
    II(0x10110c9e, 0x2)   jmpd(0x10110ce9, 0x49);               /* jmp 0x10110ce9 */
l_0x10110ca0:
    II(0x10110ca0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10110ca3, 0x7)   cmp(memb_a32(ds, eax + 0x143), 0x8);  /* cmp byte [eax+0x143], 0x8 */
    II(0x10110caa, 0x2)   jnzd(0x10110cbd, 0x11);               /* jnz 0x10110cbd */
    II(0x10110cac, 0x5)   mov(edx, 0x101a4694);                 /* mov edx, 0x101a4694 */ /* "Stand Alone Missions" */
    II(0x10110cb1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10110cb4, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10110cb6, 0x5)   calld(0x1010c628, -0x4693);           /* call 0x1010c628 */
    II(0x10110cbb, 0x2)   jmpd(0x10110ce9, 0x2c);               /* jmp 0x10110ce9 */
l_0x10110cbd:
    II(0x10110cbd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10110cc0, 0x7)   cmp(memb_a32(ds, eax + 0x143), 0x2);  /* cmp byte [eax+0x143], 0x2 */
    II(0x10110cc7, 0x2)   jnzd(0x10110cda, 0x11);               /* jnz 0x10110cda */
    II(0x10110cc9, 0x5)   mov(edx, 0x101a46a9);                 /* mov edx, 0x101a46a9 */ /* "Campaign Game" */
    II(0x10110cce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10110cd1, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10110cd3, 0x5)   calld(0x1010c628, -0x46b0);           /* call 0x1010c628 */
    II(0x10110cd8, 0x2)   jmpd(0x10110ce9, 0xf);                /* jmp 0x10110ce9 */
l_0x10110cda:
    II(0x10110cda, 0x5)   mov(edx, 0x101a46b7);                 /* mov edx, 0x101a46b7 */ /* "Multiplayer Scenarios" */
    II(0x10110cdf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10110ce2, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10110ce4, 0x5)   calld(0x1010c628, -0x46c1);           /* call 0x1010c628 */
l_0x10110ce9:
    II(0x10110ce9, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x13);   /* mov dword [ebp-0xc], 0x13 */
l_0x10110cf0:
    II(0x10110cf0, 0x3)   dec(memd_a32(ss, ebp - 0xc));         /* dec dword [ebp-0xc] */
    II(0x10110cf3, 0x5)   cmp(memw_a32(ss, ebp - 0xc), -0x1 /* 0xff */); /* cmp word [ebp-0xc], 0xff */
    II(0x10110cf8, 0x2)   jzd(0x10110d19, 0x1f);                /* jz 0x10110d19 */
    II(0x10110cfa, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10110cfe, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10110d01, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10110d04, 0x7)   mov(memd_a32(ds, eax + 0x10), 0);     /* mov dword [eax+0x10], 0x0 */
    II(0x10110d0b, 0x4)   movsx(edx, memb_a32(ss, ebp - 0xc));  /* movsx edx, byte [ebp-0xc] */
    II(0x10110d0f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10110d12, 0x5)   calld(0x101105a5, -0x772);            /* call 0x101105a5 */
    II(0x10110d17, 0x2)   jmpd(0x10110cf0, -0x29);              /* jmp 0x10110cf0 */
l_0x10110d19:
    II(0x10110d19, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10110d1c, 0x5)   calld(0x10110812, -0x50f);            /* call 0x10110812 */
    II(0x10110d21, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10110d24, 0x5)   calld(0x101109f0, -0x339);            /* call 0x101109f0 */
    II(0x10110d29, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10110d2c, 0x5)   calld(0x10110496, -0x89b);            /* call 0x10110496 */
    II(0x10110d31, 0x5)   calld(/* sys */ 0x1016bcc4, 0x5af8e); /* call 0x1016bcc4 */
    II(0x10110d36, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10110d38, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10110d39, 0x1)   popd(edi);                            /* pop edi */
    II(0x10110d3a, 0x1)   popd(esi);                            /* pop esi */
    II(0x10110d3b, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10110d3c, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10110d3d, 0x1)   retd();                               /* ret */
FUNC_END

