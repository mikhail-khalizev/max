FUNC_BEGIN(0x10108b99, 0xa1f6fc86885c40f1, 0x20, ({0x68, 0x2c, 0x4, 0, 0, 0xe8, 0xaf, 0xd1, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0x4, 0, 0, 0x89, 0x45, 0xfc, 0xc7, 0x45, 0xf4, 0x1, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x8, 0xf, 0x8f, 0xa0, 0, 0, 0, 0x8a, 0x45, 0xf4, 0x88, 0x45, 0xec, 0xb9, 0x64, 0, 0, 0, 0x8d, 0x9d, 0xf4, 0xfd, 0xff, 0xff, 0x31, 0xc0, 0x8a, 0x45, 0xec, 0xf, 0xbf, 0xd0, 0xb8, 0x4c, 0x3c, 0x1c, 0x10, 0xe8, 0x6e, 0xdc, 0xff, 0xff, 0xf, 0xbf, 0x55, 0xf4, 0x6b, 0xd2, 0x14, 0x8d, 0x85, 0xf4, 0xfd, 0xff, 0xff, 0x89, 0x82, 0x60, 0x99, 0x1b, 0x10, 0xe8, 0xd, 0xc7, 0, 0, 0x25, 0xff, 0, 0, 0, 0x89, 0x85, 0xf0, 0xfd, 0xff, 0xff, 0xff, 0xb5, 0xf0, 0xfd, 0xff, 0xff, 0xc7, 0x85, 0xec, 0xfd, 0xff, 0xff, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x9, 0xc1, 0xf8, 0x10, 0x31, 0xd2, 0x8a, 0x55, 0xec, 0x39, 0xc2, 0x75, 0x6, 0xc6, 0x45, 0xe8, 0x2, 0xeb, 0x4, 0xc6, 0x45, 0xe8, 0xa2, 0x31, 0xdb, 0x8a, 0x5d, 0xe8, 0x81, 0xcb, 0, 0, 0x1, 0, 0xf, 0xbf, 0x45, 0xf4, 0x6b, 0xc0, 0x14, 0xba, 0x50, 0x99, 0x1b, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0, 0x8b, 0x8d, 0xec, 0xfd, 0xff, 0xff, 0xe8, 0x9a, 0xfd, 0xff, 0xff, 0xe9, 0x4d, 0xff, 0xff, 0xff, 0xc7, 0x45, 0xf0, 0x4, 0x9a, 0x1b, 0x10, 0x8b, 0x45, 0xf0, 0x8b, 0x48, 0x2, 0xc1, 0xf9, 0x10, 0x8b, 0x45, 0xf0, 0xf, 0xbf, 0x18, 0x8b, 0x45, 0xfc, 0x8b, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x11, 0xe8, 0x9, 0xf4, 0xfc, 0xff, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xb9, 0x64, 0, 0, 0, 0x8d, 0x9d, 0xf4, 0xfd, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x9, 0xc1, 0xfa, 0x10, 0xb8, 0x4c, 0x3c, 0x1c, 0x10, 0xe8, 0x26, 0xdb, 0xff, 0xff, 0xb9, 0x2, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0xf, 0xbf, 0xd8, 0x8d, 0x95, 0xf4, 0xfd, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xca, 0xfd, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0xb, 0, 0xf, 0x84, 0xc4, 0, 0, 0, 0xbb, 0x64, 0, 0, 0, 0x8d, 0x95, 0xf8, 0xfb, 0xff, 0xff, 0xb8, 0x4c, 0x3c, 0x1c, 0x10, 0xe8, 0x1b, 0xda, 0xff, 0xff, 0xba, 0x72, 0x45, 0x1a, 0x10, 0x8d, 0x85, 0xf8, 0xfb, 0xff, 0xff, 0xe8, 0x6, 0x3, 0x7, 0, 0x89, 0x85, 0xf4, 0xfb, 0xff, 0xff, 0x83, 0xbd, 0xf4, 0xfb, 0xff, 0xff, 0, 0xf, 0x84, 0x8c, 0, 0, 0, 0x8b, 0x85, 0xf4, 0xfb, 0xff, 0xff, 0xc6, 0, 0, 0x8d, 0x95, 0xf8, 0xfb, 0xff, 0xff, 0x8d, 0x85, 0xf4, 0xfd, 0xff, 0xff, 0xe8, 0x98, 0xd1, 0x5, 0, 0xba, 0x74, 0x45, 0x1a, 0x10, 0x8d, 0x85, 0xf4, 0xfd, 0xff, 0xff, 0xe8, 0xe9, 0xd3, 0x5, 0, 0x85, 0xc0, 0x74, 0x14, 0xba, 0x79, 0x45, 0x1a, 0x10, 0x8d, 0x85, 0xf4, 0xfd, 0xff, 0xff, 0xe8, 0xd5, 0xd3, 0x5, 0, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x43, 0xba, 0x7e, 0x45, 0x1a, 0x10, 0x8d, 0x85, 0xf4, 0xfd, 0xff, 0xff, 0xe8, 0xc0, 0xd1, 0x5, 0, 0xff, 0x85, 0xf4, 0xfb, 0xff, 0xff, 0x8b, 0x95, 0xf4, 0xfb, 0xff, 0xff, 0x8d, 0x85, 0xf4, 0xfd, 0xff, 0xff, 0xe8, 0xa9, 0xd1, 0x5, 0, 0xb9, 0xa2, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0xf, 0xbf, 0xd8, 0x8d, 0x95, 0xf4, 0xfd, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xfd, 0xfc, 0xff, 0xff, 0xe9, 0x2e, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0, 0x8b, 0x40, 0x12, 0xe8, 0xce, 0xe6, 0x5, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10108b99, 0x5)   pushd(0x42c);                         /* push dword 0x42c */
    II(0x10108b9e, 0x5)   calld(sys_check_available_stack_size, 0x5d1af); /* call 0x10165d52 */
    II(0x10108ba3, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10108ba4, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10108ba5, 0x1)   pushd(edx);                           /* push edx */
    II(0x10108ba6, 0x1)   pushd(esi);                           /* push esi */
    II(0x10108ba7, 0x1)   pushd(edi);                           /* push edi */
    II(0x10108ba8, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10108ba9, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10108bab, 0x6)   sub(esp, 0x40c);                      /* sub esp, 0x40c */
    II(0x10108bb1, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10108bb4, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x1);    /* mov dword [ebp-0xc], 0x1 */
    II(0x10108bbb, 0x2)   jmpd(0x10108bc3, 0x6);                /* jmp 0x10108bc3 */
l_0x10108bbd:
    II(0x10108bbd, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10108bc0, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x10108bc3:
    II(0x10108bc3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10108bc7, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x10108bca, 0x6)   jgd(0x10108c70, 0xa0);                /* jg dword 0x10108c70 */
    II(0x10108bd0, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x10108bd3, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x10108bd6, 0x5)   mov(ecx, 0x64);                       /* mov ecx, 0x64 */
    II(0x10108bdb, 0x6)   lea(ebx, ebp - 0x20c);                /* lea ebx, [ebp+0xfffffdf4] */
    II(0x10108be1, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10108be3, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x10108be6, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10108be9, 0x5)   mov(eax, 0x101c3c4c);                 /* mov eax, 0x101c3c4c */
    II(0x10108bee, 0x5)   calld(0x10106861, -0x2392);           /* call 0x10106861 */
    II(0x10108bf3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x10108bf7, 0x3)   imul(edx, edx, 0x14);                 /* imul edx, edx, 0x14 */
    II(0x10108bfa, 0x6)   lea(eax, ebp - 0x20c);                /* lea eax, [ebp+0xfffffdf4] */
    II(0x10108c00, 0x6)   mov(memd_a32(ds, edx + 0x101b9960), eax); /* mov [edx+0x101b9960], eax */
    II(0x10108c06, 0x5)   calld(0x10115318, 0xc70d);            /* call 0x10115318 */
    II(0x10108c0b, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10108c10, 0x6)   mov(memd_a32(ss, ebp - 0x210), eax);  /* mov [ebp+0xfffffdf0], eax */
    II(0x10108c16, 0x6)   pushd(memd_a32(ss, ebp - 0x210));     /* push dword [ebp+0xfffffdf0] */
    II(0x10108c1c, 0xa)   mov(memd_a32(ss, ebp - 0x214), 0x1);  /* mov dword [ebp+0xfffffdec], 0x1 */
    II(0x10108c26, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10108c29, 0x3)   mov(eax, memd_a32(ds, eax + 0x9));    /* mov eax, [eax+0x9] */
    II(0x10108c2c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10108c2f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10108c31, 0x3)   mov(dl, memb_a32(ss, ebp - 0x14));    /* mov dl, [ebp-0x14] */
    II(0x10108c34, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10108c36, 0x2)   jnzd(0x10108c3e, 0x6);                /* jnz 0x10108c3e */
    II(0x10108c38, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0x2);   /* mov byte [ebp-0x18], 0x2 */
    II(0x10108c3c, 0x2)   jmpd(0x10108c42, 0x4);                /* jmp 0x10108c42 */
l_0x10108c3e:
    II(0x10108c3e, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0xa2);  /* mov byte [ebp-0x18], 0xa2 */
l_0x10108c42:
    II(0x10108c42, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10108c44, 0x3)   mov(bl, memb_a32(ss, ebp - 0x18));    /* mov bl, [ebp-0x18] */
    II(0x10108c47, 0x6)   or_(ebx, 0x10000);                    /* or ebx, 0x10000 */
    II(0x10108c4d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10108c51, 0x3)   imul(eax, eax, 0x14);                 /* imul eax, eax, 0x14 */
    II(0x10108c54, 0x5)   mov(edx, 0x101b9950);                 /* mov edx, 0x101b9950 */
    II(0x10108c59, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10108c5b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10108c5e, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10108c60, 0x6)   mov(ecx, memd_a32(ss, ebp - 0x214));  /* mov ecx, [ebp+0xfffffdec] */
    II(0x10108c66, 0x5)   calld(0x10108a05, -0x266);            /* call 0x10108a05 */
    II(0x10108c6b, 0x5)   jmpd(0x10108bbd, -0xb3);              /* jmp 0x10108bbd */
l_0x10108c70:
    II(0x10108c70, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x101b9a04); /* mov dword [ebp-0x10], 0x101b9a04 */
    II(0x10108c77, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10108c7a, 0x3)   mov(ecx, memd_a32(ds, eax + 0x2));    /* mov ecx, [eax+0x2] */
    II(0x10108c7d, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x10108c80, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10108c83, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x10108c86, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10108c89, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
//    II(0x10108c8b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10108c8e, 0x3)   mov(eax, memd_a32(ds, eax + 0x11));   /* mov eax, [eax+0x11] */
    II(0x10108c91, 0x5)   calld(0x100d809f, -0x30bf7);          /* call 0x100d809f */
    II(0x10108c96, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x10108c9d, 0x5)   mov(ecx, 0x64);                       /* mov ecx, 0x64 */
    II(0x10108ca2, 0x6)   lea(ebx, ebp - 0x20c);                /* lea ebx, [ebp+0xfffffdf4] */
    II(0x10108ca8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10108cab, 0x3)   mov(edx, memd_a32(ds, eax + 0x9));    /* mov edx, [eax+0x9] */
    II(0x10108cae, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10108cb1, 0x5)   mov(eax, 0x101c3c4c);                 /* mov eax, 0x101c3c4c */
    II(0x10108cb6, 0x5)   calld(0x101067e1, -0x24da);           /* call 0x101067e1 */
    II(0x10108cbb, 0x5)   mov(ecx, 0x2);                        /* mov ecx, 0x2 */
    II(0x10108cc0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10108cc3, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
    II(0x10108cc6, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10108cc9, 0x6)   lea(edx, ebp - 0x20c);                /* lea edx, [ebp+0xfffffdf4] */
    II(0x10108ccf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10108cd2, 0x5)   calld(0x10108aa1, -0x236);            /* call 0x10108aa1 */
l_0x10108cd7:
    II(0x10108cd7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10108cda, 0x5)   cmp(memw_a32(ds, eax + 0xb), 0);      /* cmp word [eax+0xb], 0x0 */
    II(0x10108cdf, 0x6)   jzd(0x10108da9, 0xc4);                /* jz dword 0x10108da9 */
    II(0x10108ce5, 0x5)   mov(ebx, 0x64);                       /* mov ebx, 0x64 */
    II(0x10108cea, 0x6)   lea(edx, ebp - 0x408);                /* lea edx, [ebp+0xfffffbf8] */
    II(0x10108cf0, 0x5)   mov(eax, 0x101c3c4c);                 /* mov eax, 0x101c3c4c */
    II(0x10108cf5, 0x5)   calld(0x10106715, -0x25e5);           /* call 0x10106715 */
    II(0x10108cfa, 0x5)   mov(edx, 0x101a4572);                 /* mov edx, 0x101a4572 */ /* "=" */
    II(0x10108cff, 0x6)   lea(eax, ebp - 0x408);                /* lea eax, [ebp+0xfffffbf8] */
    II(0x10108d05, 0x5)   calld(sys_strstr, 0x70306);           /* call 0x10179010 */
    II(0x10108d0a, 0x6)   mov(memd_a32(ss, ebp - 0x40c), eax);  /* mov [ebp+0xfffffbf4], eax */
    II(0x10108d10, 0x7)   cmp(memd_a32(ss, ebp - 0x40c), 0);    /* cmp dword [ebp+0xfffffbf4], 0x0 */
    II(0x10108d17, 0x6)   jzd(0x10108da9, 0x8c);                /* jz dword 0x10108da9 */
    II(0x10108d1d, 0x6)   mov(eax, memd_a32(ss, ebp - 0x40c));  /* mov eax, [ebp+0xfffffbf4] */
    II(0x10108d23, 0x3)   mov(memb_a32(ds, eax), 0);            /* mov byte [eax], 0x0 */
    II(0x10108d26, 0x6)   lea(edx, ebp - 0x408);                /* lea edx, [ebp+0xfffffbf8] */
    II(0x10108d2c, 0x6)   lea(eax, ebp - 0x20c);                /* lea eax, [ebp+0xfffffdf4] */
    II(0x10108d32, 0x5)   calld(sys_strcpy, 0x5d198);           /* call 0x10165ecf */
    II(0x10108d37, 0x5)   mov(edx, 0x101a4574);                 /* mov edx, 0x101a4574 */ /* "Name" */
    II(0x10108d3c, 0x6)   lea(eax, ebp - 0x20c);                /* lea eax, [ebp+0xfffffdf4] */
    II(0x10108d42, 0x5)   calld(sys_strcasecmp, 0x5d3e9);       /* call 0x10166130 */
    II(0x10108d47, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10108d49, 0x2)   jzd(0x10108d5f, 0x14);                /* jz 0x10108d5f */
    II(0x10108d4b, 0x5)   mov(edx, 0x101a4579);                 /* mov edx, 0x101a4579 */ /* "Text" */
    II(0x10108d50, 0x6)   lea(eax, ebp - 0x20c);                /* lea eax, [ebp+0xfffffdf4] */
    II(0x10108d56, 0x5)   calld(sys_strcasecmp, 0x5d3d5);       /* call 0x10166130 */
    II(0x10108d5b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10108d5d, 0x2)   jnzd(0x10108d61, 0x2);                /* jnz 0x10108d61 */
l_0x10108d5f:
    II(0x10108d5f, 0x2)   jmpd(0x10108da4, 0x43);               /* jmp 0x10108da4 */
l_0x10108d61:
    II(0x10108d61, 0x5)   mov(edx, 0x101a457e);                 /* mov edx, 0x101a457e */ /* ": " */
    II(0x10108d66, 0x6)   lea(eax, ebp - 0x20c);                /* lea eax, [ebp+0xfffffdf4] */
    II(0x10108d6c, 0x5)   calld(sys_strcat, 0x5d1c0);           /* call 0x10165f31 */
    II(0x10108d71, 0x6)   inc(memd_a32(ss, ebp - 0x40c));       /* inc dword [ebp+0xfffffbf4] */
    II(0x10108d77, 0x6)   mov(edx, memd_a32(ss, ebp - 0x40c));  /* mov edx, [ebp+0xfffffbf4] */
    II(0x10108d7d, 0x6)   lea(eax, ebp - 0x20c);                /* lea eax, [ebp+0xfffffdf4] */
    II(0x10108d83, 0x5)   calld(sys_strcat, 0x5d1a9);           /* call 0x10165f31 */
    II(0x10108d88, 0x5)   mov(ecx, 0xa2);                       /* mov ecx, 0xa2 */
    II(0x10108d8d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10108d90, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
    II(0x10108d93, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10108d96, 0x6)   lea(edx, ebp - 0x20c);                /* lea edx, [ebp+0xfffffdf4] */
    II(0x10108d9c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10108d9f, 0x5)   calld(0x10108aa1, -0x303);            /* call 0x10108aa1 */
l_0x10108da4:
    II(0x10108da4, 0x5)   jmpd(0x10108cd7, -0xd2);              /* jmp 0x10108cd7 */
l_0x10108da9:
    II(0x10108da9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10108dac, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10108dae, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x10108db1, 0x5)   calld(sys_display_draw_0, 0x5e6ce);   /* call 0x10167484 */
    II(0x10108db6, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10108db8, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10108db9, 0x1)   popd(edi);                            /* pop edi */
    II(0x10108dba, 0x1)   popd(esi);                            /* pop esi */
    II(0x10108dbb, 0x1)   popd(edx);                            /* pop edx */
    II(0x10108dbc, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10108dbd, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10108dbe, 0x1)   retd();                               /* ret */
FUNC_END

