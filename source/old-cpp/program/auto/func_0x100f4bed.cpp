FUNC_BEGIN(0x100f4bed, 0x3245565834e6449b, 0x20, ({0x68, 0xac, 0, 0, 0, 0xe8, 0x5b, 0x11, 0x7, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x7c, 0, 0, 0, 0x31, 0xd2, 0xa1, 0xdf, 0x87, 0x1b, 0x10, 0xe8, 0x62, 0xaf, 0xfd, 0xff, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x26, 0xe8, 0xf4, 0xaf, 0, 0, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x98, 0xe8, 0x4e, 0x14, 0xfe, 0xff, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x9a, 0x19, 0xf8, 0xff, 0xe8, 0x35, 0xae, 0, 0, 0xe9, 0x71, 0x1, 0, 0, 0x66, 0x83, 0x3d, 0x82, 0x39, 0x1c, 0x10, 0, 0xf, 0x84, 0x63, 0x1, 0, 0, 0xb8, 0x3e, 0, 0, 0, 0xe8, 0x84, 0x13, 0xf8, 0xff, 0x89, 0x45, 0xfc, 0xf, 0xbf, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0xff, 0xb0, 0x2c, 0xd4, 0x1b, 0x10, 0xa1, 0x80, 0x39, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0xb8, 0, 0x3f, 0x1c, 0x10, 0x50, 0xb8, 0x2c, 0x25, 0x1a, 0x10, 0x50, 0x8d, 0x45, 0x98, 0x50, 0xe8, 0x7b, 0x12, 0x7, 0, 0x83, 0xc4, 0x14, 0xba, 0x39, 0x25, 0x1a, 0x10, 0x8d, 0x45, 0x98, 0xe8, 0x89, 0xa7, 0xff, 0xff, 0x89, 0x45, 0x94, 0x83, 0x7d, 0x94, 0, 0xf, 0x84, 0xe, 0x1, 0, 0, 0xbb, 0x2, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0x94, 0xe8, 0xa3, 0xa7, 0xff, 0xff, 0x8b, 0x45, 0x94, 0xe8, 0x8d, 0xda, 0x7, 0, 0x89, 0x45, 0x8c, 0xf, 0xbf, 0x45, 0xfc, 0x83, 0xf8, 0x1, 0x75, 0x16, 0xa1, 0x80, 0x39, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x8b, 0x80, 0x68, 0xd3, 0x1b, 0x10, 0x89, 0x45, 0x88, 0xeb, 0x33, 0xf, 0xbf, 0x45, 0xfc, 0x83, 0xf8, 0x8, 0x75, 0x16, 0xa1, 0x80, 0x39, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x8b, 0x80, 0xa4, 0xd3, 0x1b, 0x10, 0x89, 0x45, 0x88, 0xeb, 0x14, 0xa1, 0x80, 0x39, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x8b, 0x80, 0x4, 0xd4, 0x1b, 0x10, 0x89, 0x45, 0x88, 0x8b, 0x45, 0x88, 0xe8, 0xb0, 0xd1, 0x7, 0, 0x5, 0x2, 0, 0, 0, 0x89, 0x45, 0x90, 0xf, 0xbf, 0x45, 0x90, 0x3, 0x45, 0x8c, 0x83, 0xc0, 0x5, 0xe8, 0xe2, 0x12, 0x7, 0, 0x89, 0x45, 0x84, 0xf, 0xbf, 0x45, 0x90, 0x3, 0x45, 0x8c, 0x8d, 0x58, 0x5, 0x31, 0xd2, 0x8b, 0x45, 0x84, 0xe8, 0x9b, 0x10, 0x7, 0, 0x8b, 0x55, 0x88, 0x8b, 0x45, 0x84, 0xe8, 0x7f, 0x11, 0x7, 0, 0xba, 0x3c, 0x25, 0x1a, 0x10, 0x8b, 0x45, 0x84, 0xe8, 0xd4, 0x11, 0x7, 0, 0x31, 0xdb, 0x31, 0xd2, 0x8b, 0x45, 0x94, 0xe8, 0xec, 0xa6, 0xff, 0xff, 0x8b, 0x4d, 0x94, 0x8b, 0x5d, 0x8c, 0xba, 0x1, 0, 0, 0, 0xf, 0xbf, 0x45, 0x90, 0x3, 0x45, 0x84, 0xe8, 0xf, 0xa7, 0xff, 0xff, 0xe8, 0x7b, 0x5c, 0xfd, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x90, 0x5c, 0xfd, 0xff, 0x89, 0xc1, 0xbb, 0x1, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0x84, 0xe8, 0x82, 0xf, 0x2, 0, 0x8b, 0x45, 0x84, 0xe8, 0xbb, 0x11, 0x7, 0, 0x8b, 0x45, 0x94, 0xe8, 0xb8, 0xd2, 0x7, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100f4bed, 0x5)   pushd(0xac);                          /* push dword 0xac */
    II(0x100f4bf2, 0x5)   calld(sys_check_available_stack_size, 0x7115b); /* call 0x10165d52 */
    II(0x100f4bf7, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100f4bf8, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100f4bf9, 0x1)   pushd(edx);                           /* push edx */
    II(0x100f4bfa, 0x1)   pushd(esi);                           /* push esi */
    II(0x100f4bfb, 0x1)   pushd(edi);                           /* push edi */
    II(0x100f4bfc, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100f4bfd, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100f4bff, 0x6)   sub(esp, 0x7c);                       /* sub esp, 0x7c */
    II(0x100f4c05, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f4c07, 0x5)   mov(eax, memd_a32(ds, 0x101b87df));   /* mov eax, [0x101b87df] */
    II(0x100f4c0c, 0x5)   calld(0x100cfb73, -0x2509e);          /* call 0x100cfb73 */
    II(0x100f4c11, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x100f4c18, 0x2)   jzd(0x100f4c40, 0x26);                /* jz 0x100f4c40 */
    II(0x100f4c1a, 0x5)   calld(0x100ffc13, 0xaff4);            /* call 0x100ffc13 */
    II(0x100f4c1f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f4c21, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100f4c26, 0x1)   cwde();                               /* cwde */
    II(0x100f4c27, 0x5)   calld(0x100d607a, -0x1ebb2);          /* call 0x100d607a */
    II(0x100f4c2c, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100f4c31, 0x5)   calld(0x100765d0, -0x7e666);          /* call 0x100765d0 */
    II(0x100f4c36, 0x5)   calld(0x100ffa70, 0xae35);            /* call 0x100ffa70 */
    II(0x100f4c3b, 0x5)   jmpd(0x100f4db1, 0x171);              /* jmp 0x100f4db1 */
l_0x100f4c40:
    II(0x100f4c40, 0x8)   cmp(memw_a32(ds, 0x101c3982), 0);     /* cmp word [0x101c3982], 0x0 */
    II(0x100f4c48, 0x6)   jzd(0x100f4db1, 0x163);               /* jz dword 0x100f4db1 */
    II(0x100f4c4e, 0x5)   mov(eax, 0x3e);                       /* mov eax, 0x3e */
    II(0x100f4c53, 0x5)   calld(0x10075fdc, -0x7ec7c);          /* call 0x10075fdc */
    II(0x100f4c58, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100f4c5b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f4c5f, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100f4c62, 0x6)   pushd(memd_a32(ds, eax + 0x101bd42c)); /* push dword [eax+0x101bd42c] */
    II(0x100f4c68, 0x5)   mov(eax, memd_a32(ds, 0x101c3980));   /* mov eax, [0x101c3980] */
    II(0x100f4c6d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f4c70, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f4c71, 0x5)   mov(eax, 0x101c3f00);                 /* mov eax, 0x101c3f00 */
    II(0x100f4c76, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f4c77, 0x5)   mov(eax, 0x101a252c);                 /* mov eax, 0x101a252c */ /* "%sdescr%i.%s" */
    II(0x100f4c7c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f4c7d, 0x3)   lea(eax, ebp - 0x68);                 /* lea eax, [ebp-0x68] */
    II(0x100f4c80, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f4c81, 0x5)   calld(sys_sprintf, 0x7127b);          /* call 0x10165f01 */
    II(0x100f4c86, 0x3)   add(esp, 0x14);                       /* add esp, 0x14 */
    II(0x100f4c89, 0x5)   mov(edx, 0x101a2539);                 /* mov edx, 0x101a2539 */ /* "rt" */
    II(0x100f4c8e, 0x3)   lea(eax, ebp - 0x68);                 /* lea eax, [ebp-0x68] */
    II(0x100f4c91, 0x5)   calld(my_fopen, -0x5877);             /* call 0x100ef41f */
    II(0x100f4c96, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
    II(0x100f4c99, 0x4)   cmp(memd_a32(ss, ebp - 0x6c), 0);     /* cmp dword [ebp-0x6c], 0x0 */
    II(0x100f4c9d, 0x6)   jzd(0x100f4db1, 0x10e);               /* jz dword 0x100f4db1 */
    II(0x100f4ca3, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x100f4ca8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f4caa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x100f4cad, 0x5)   calld(my_fseek, -0x585d);             /* call 0x100ef455 */
    II(0x100f4cb2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x100f4cb5, 0x5)   calld(sys_ftell, 0x7da8d);            /* call 0x10172747 */
    II(0x100f4cba, 0x3)   mov(memd_a32(ss, ebp - 0x74), eax);   /* mov [ebp-0x74], eax */
    II(0x100f4cbd, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f4cc1, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100f4cc4, 0x2)   jnzd(0x100f4cdc, 0x16);               /* jnz 0x100f4cdc */
    II(0x100f4cc6, 0x5)   mov(eax, memd_a32(ds, 0x101c3980));   /* mov eax, [0x101c3980] */
    II(0x100f4ccb, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f4cce, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100f4cd1, 0x6)   mov(eax, memd_a32(ds, eax + 0x101bd368)); /* mov eax, [eax+0x101bd368] */
    II(0x100f4cd7, 0x3)   mov(memd_a32(ss, ebp - 0x78), eax);   /* mov [ebp-0x78], eax */
    II(0x100f4cda, 0x2)   jmpd(0x100f4d0f, 0x33);               /* jmp 0x100f4d0f */
l_0x100f4cdc:
    II(0x100f4cdc, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f4ce0, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x100f4ce3, 0x2)   jnzd(0x100f4cfb, 0x16);               /* jnz 0x100f4cfb */
    II(0x100f4ce5, 0x5)   mov(eax, memd_a32(ds, 0x101c3980));   /* mov eax, [0x101c3980] */
    II(0x100f4cea, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f4ced, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100f4cf0, 0x6)   mov(eax, memd_a32(ds, eax + 0x101bd3a4)); /* mov eax, [eax+0x101bd3a4] */
    II(0x100f4cf6, 0x3)   mov(memd_a32(ss, ebp - 0x78), eax);   /* mov [ebp-0x78], eax */
    II(0x100f4cf9, 0x2)   jmpd(0x100f4d0f, 0x14);               /* jmp 0x100f4d0f */
l_0x100f4cfb:
    II(0x100f4cfb, 0x5)   mov(eax, memd_a32(ds, 0x101c3980));   /* mov eax, [0x101c3980] */
    II(0x100f4d00, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f4d03, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100f4d06, 0x6)   mov(eax, memd_a32(ds, eax + 0x101bd404)); /* mov eax, [eax+0x101bd404] */
    II(0x100f4d0c, 0x3)   mov(memd_a32(ss, ebp - 0x78), eax);   /* mov [ebp-0x78], eax */
l_0x100f4d0f:
    II(0x100f4d0f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x78));   /* mov eax, [ebp-0x78] */
    II(0x100f4d12, 0x5)   calld(sys_strlen, 0x7d1b0);           /* call 0x10171ec7 */
    II(0x100f4d17, 0x5)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x100f4d1c, 0x3)   mov(memd_a32(ss, ebp - 0x70), eax);   /* mov [ebp-0x70], eax */
    II(0x100f4d1f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x70)); /* movsx eax, word [ebp-0x70] */
    II(0x100f4d23, 0x3)   add(eax, memd_a32(ss, ebp - 0x74));   /* add eax, [ebp-0x74] */
    II(0x100f4d26, 0x3)   add(eax, 0x5);                        /* add eax, 0x5 */
    II(0x100f4d29, 0x5)   calld(sys_new_arr, 0x712e2);          /* call 0x10166010 */
    II(0x100f4d2e, 0x3)   mov(memd_a32(ss, ebp - 0x7c), eax);   /* mov [ebp-0x7c], eax */
    II(0x100f4d31, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x70)); /* movsx eax, word [ebp-0x70] */
    II(0x100f4d35, 0x3)   add(eax, memd_a32(ss, ebp - 0x74));   /* add eax, [ebp-0x74] */
    II(0x100f4d38, 0x3)   lea(ebx, eax + 0x5);                  /* lea ebx, [eax+0x5] */
    II(0x100f4d3b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f4d3d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x7c));   /* mov eax, [ebp-0x7c] */
    II(0x100f4d40, 0x5)   calld(sys_memset, 0x7109b);           /* call 0x10165de0 */
    II(0x100f4d45, 0x3)   mov(edx, memd_a32(ss, ebp - 0x78));   /* mov edx, [ebp-0x78] */
    II(0x100f4d48, 0x3)   mov(eax, memd_a32(ss, ebp - 0x7c));   /* mov eax, [ebp-0x7c] */
    II(0x100f4d4b, 0x5)   calld(sys_strcpy, 0x7117f);           /* call 0x10165ecf */
    II(0x100f4d50, 0x5)   mov(edx, 0x101a253c);                 /* mov edx, 0x101a253c */ /* "\n\n" */
    II(0x100f4d55, 0x3)   mov(eax, memd_a32(ss, ebp - 0x7c));   /* mov eax, [ebp-0x7c] */
    II(0x100f4d58, 0x5)   calld(sys_strcat, 0x711d4);           /* call 0x10165f31 */
    II(0x100f4d5d, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f4d5f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f4d61, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x100f4d64, 0x5)   calld(my_fseek, -0x5914);             /* call 0x100ef455 */
    II(0x100f4d69, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x6c));   /* mov ecx, [ebp-0x6c] */
    II(0x100f4d6c, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x74));   /* mov ebx, [ebp-0x74] */
    II(0x100f4d6f, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100f4d74, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x70)); /* movsx eax, word [ebp-0x70] */
    II(0x100f4d78, 0x3)   add(eax, memd_a32(ss, ebp - 0x7c));   /* add eax, [ebp-0x7c] */
    II(0x100f4d7b, 0x5)   calld(my_fread, -0x58f1);             /* call 0x100ef48f */
    II(0x100f4d80, 0x5)   calld(0x100caa00, -0x2a385);          /* call 0x100caa00 */
    II(0x100f4d85, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f4d8a, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f4d8b, 0x5)   calld(0x100caa20, -0x2a370);          /* call 0x100caa20 */
    II(0x100f4d90, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100f4d92, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100f4d97, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f4d99, 0x3)   mov(eax, memd_a32(ss, ebp - 0x7c));   /* mov eax, [ebp-0x7c] */
    II(0x100f4d9c, 0x5)   calld(0x10115d23, 0x20f82);           /* call 0x10115d23 */
    II(0x100f4da1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x7c));   /* mov eax, [ebp-0x7c] */
    II(0x100f4da4, 0x5)   calld(sys_delete, 0x711bb);           /* call 0x10165f64 */
    II(0x100f4da9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x100f4dac, 0x5)   calld(sys_fclose, 0x7d2b8);           /* call 0x10172069 */
l_0x100f4db1:
    II(0x100f4db1, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100f4db3, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100f4db4, 0x1)   popd(edi);                            /* pop edi */
    II(0x100f4db5, 0x1)   popd(esi);                            /* pop esi */
    II(0x100f4db6, 0x1)   popd(edx);                            /* pop edx */
    II(0x100f4db7, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100f4db8, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100f4db9, 0x1)   retd();                               /* ret */
FUNC_END

