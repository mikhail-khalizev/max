FUNC_BEGIN(0x100f8e48, 0x9c90409ab561bb7a, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0, 0xcf, 0x6, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0x1a, 0x75, 0x37, 0xba, 0xe4, 0x4, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0xdc, 0x4d, 0x4, 0, 0xe8, 0x7e, 0x1b, 0xfd, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x93, 0x1b, 0xfd, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0xba, 0x1, 0, 0, 0, 0xb8, 0xa, 0x27, 0x1a, 0x10, 0xe8, 0x83, 0xce, 0x1, 0, 0xe9, 0x99, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x50, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0x34, 0xba, 0xe4, 0x4, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x98, 0x4d, 0x4, 0, 0xe8, 0x3a, 0x1b, 0xfd, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x4f, 0x1b, 0xfd, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0xba, 0x1, 0, 0, 0, 0xb8, 0x2b, 0x27, 0x1a, 0x10, 0xe8, 0x3f, 0xce, 0x1, 0, 0xeb, 0x58, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0xa7, 0x1a, 0xf9, 0xff, 0xe8, 0xa, 0x1b, 0xfd, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x1f, 0x1b, 0xfd, 0xff, 0x31, 0xdb, 0x31, 0xd2, 0xbe, 0x5c, 0x27, 0x1a, 0x10, 0x89, 0xc1, 0x89, 0xf0, 0xe8, 0x10, 0xce, 0x1, 0, 0x31, 0xdb, 0xba, 0x11, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x31, 0xa1, 0x6, 0, 0xe8, 0x49, 0xc5, 0xfd, 0xff, 0xf, 0xbf, 0xc8, 0xbb, 0xed, 0x3, 0, 0, 0xba, 0xec, 0x3, 0, 0, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0xac, 0x4b, 0x4, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100f8e48, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100f8e4d, 0x5)   calld(sys_check_available_stack_size, 0x6cf00); /* call 0x10165d52 */
    II(0x100f8e52, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100f8e53, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100f8e54, 0x1)   pushd(esi);                           /* push esi */
    II(0x100f8e55, 0x1)   pushd(edi);                           /* push edi */
    II(0x100f8e56, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100f8e57, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100f8e59, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x100f8e5f, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100f8e62, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100f8e65, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f8e68, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1a);  /* cmp byte [eax+0x3d], 0x1a */
    II(0x100f8e6c, 0x2)   jnzd(0x100f8ea5, 0x37);               /* jnz 0x100f8ea5 */
    II(0x100f8e6e, 0x5)   mov(edx, 0x4e4);                      /* mov edx, 0x4e4 */
    II(0x100f8e73, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100f8e78, 0x5)   calld(0x1013dc59, 0x44ddc);           /* call 0x1013dc59 */
    II(0x100f8e7d, 0x5)   calld(0x100caa00, -0x2e482);          /* call 0x100caa00 */
    II(0x100f8e82, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f8e87, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f8e88, 0x5)   calld(0x100caa20, -0x2e46d);          /* call 0x100caa20 */
    II(0x100f8e8d, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100f8e8f, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f8e91, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100f8e96, 0x5)   mov(eax, 0x101a270a);                 /* mov eax, 0x101a270a */ /* "Unable to repair disabled units." */
    II(0x100f8e9b, 0x5)   calld(0x10115d23, 0x1ce83);           /* call 0x10115d23 */
    II(0x100f8ea0, 0x5)   jmpd(0x100f8f3e, 0x99);               /* jmp 0x100f8f3e */
l_0x100f8ea5:
    II(0x100f8ea5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f8ea8, 0x3)   mov(eax, memd_a32(ds, eax + 0x50));   /* mov eax, [eax+0x50] */
    II(0x100f8eab, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100f8eae, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100f8eb0, 0x2)   jnzd(0x100f8ee6, 0x34);               /* jnz 0x100f8ee6 */
    II(0x100f8eb2, 0x5)   mov(edx, 0x4e4);                      /* mov edx, 0x4e4 */
    II(0x100f8eb7, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100f8ebc, 0x5)   calld(0x1013dc59, 0x44d98);           /* call 0x1013dc59 */
    II(0x100f8ec1, 0x5)   calld(0x100caa00, -0x2e4c6);          /* call 0x100caa00 */
    II(0x100f8ec6, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f8ecb, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f8ecc, 0x5)   calld(0x100caa20, -0x2e4b1);          /* call 0x100caa20 */
    II(0x100f8ed1, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100f8ed3, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f8ed5, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100f8eda, 0x5)   mov(eax, 0x101a272b);                 /* mov eax, 0x101a272b */ /* "insufficient material in storage to repair unit." */
    II(0x100f8edf, 0x5)   calld(0x10115d23, 0x1ce3f);           /* call 0x10115d23 */
    II(0x100f8ee4, 0x2)   jmpd(0x100f8f3e, 0x58);               /* jmp 0x100f8f3e */
l_0x100f8ee6:
    II(0x100f8ee6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100f8ee9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f8eec, 0x5)   calld(0x1008a998, -0x6e559);          /* call 0x1008a998 */
    II(0x100f8ef1, 0x5)   calld(0x100caa00, -0x2e4f6);          /* call 0x100caa00 */
    II(0x100f8ef6, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f8efb, 0x1)   pushd(eax);                           /* push eax */
    II(0x100f8efc, 0x5)   calld(0x100caa20, -0x2e4e1);          /* call 0x100caa20 */
    II(0x100f8f01, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f8f03, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f8f05, 0x5)   mov(esi, 0x101a275c);                 /* mov esi, 0x101a275c */ /* "Unit repaired." */
    II(0x100f8f0a, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100f8f0c, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x100f8f0e, 0x5)   calld(0x10115d23, 0x1ce10);           /* call 0x10115d23 */
    II(0x100f8f13, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f8f15, 0x5)   mov(edx, 0x11);                       /* mov edx, 0x11 */
    II(0x100f8f1a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100f8f1d, 0x5)   calld(0x10163053, 0x6a131);           /* call 0x10163053 */
    II(0x100f8f22, 0x5)   calld(0x100d5470, -0x23ab7);          /* call 0x100d5470 */
    II(0x100f8f27, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100f8f2a, 0x5)   mov(ebx, 0x3ed);                      /* mov ebx, 0x3ed */
    II(0x100f8f2f, 0x5)   mov(edx, 0x3ec);                      /* mov edx, 0x3ec */
    II(0x100f8f34, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100f8f39, 0x5)   calld(0x1013daea, 0x44bac);           /* call 0x1013daea */
l_0x100f8f3e:
    II(0x100f8f3e, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100f8f40, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100f8f41, 0x1)   popd(edi);                            /* pop edi */
    II(0x100f8f42, 0x1)   popd(esi);                            /* pop esi */
    II(0x100f8f43, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100f8f44, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100f8f45, 0x1)   retd();                               /* ret */
FUNC_END

