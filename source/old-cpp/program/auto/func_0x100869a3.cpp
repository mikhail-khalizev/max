FUNC_BEGIN(0x100869a3, 0x4462473453d349d0, 0x20, ({0x68, 0x60, 0, 0, 0, 0xe8, 0xa5, 0xf3, 0xd, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x44, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x20, 0xe8, 0x3f, 0x33, 0, 0, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xf, 0x32, 0, 0, 0x8b, 0x45, 0xfc, 0x80, 0x48, 0x3a, 0x40, 0x8d, 0x55, 0xe0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0xe8, 0x4a, 0x17, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xd0, 0xc5, 0, 0, 0, 0xb8, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0x8c, 0x36, 0, 0, 0x89, 0x45, 0xf4, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0xe3, 0x1, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x52, 0x43, 0xb, 0, 0x84, 0xc0, 0x74, 0x16, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x9f, 0x30, 0, 0, 0xe8, 0x6, 0x35, 0, 0, 0xe8, 0xf9, 0x23, 0x3, 0, 0xeb, 0xd4, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0xd, 0, 0x1f, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x16, 0xe8, 0xbb, 0x32, 0, 0, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xf, 0x31, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0x95, 0x1, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x4, 0x43, 0xb, 0, 0x84, 0xc0, 0xf, 0x84, 0x28, 0x1, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x4f, 0x30, 0, 0, 0xe8, 0xee, 0x34, 0, 0, 0x89, 0x45, 0xdc, 0x83, 0x7d, 0xdc, 0, 0xf, 0x84, 0x9, 0x1, 0, 0, 0xc6, 0x45, 0xf8, 0, 0x8b, 0x45, 0xdc, 0xf6, 0x40, 0x12, 0x10, 0x75, 0xe, 0x8b, 0x45, 0xdc, 0x66, 0x83, 0x78, 0x8, 0x31, 0xf, 0x85, 0x84, 0, 0, 0, 0x8b, 0x45, 0xdc, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xf4, 0x39, 0xc2, 0x75, 0x6, 0xc6, 0x45, 0xd8, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xd8, 0, 0x8a, 0x45, 0xd8, 0x88, 0x45, 0xf8, 0x80, 0x7d, 0xf8, 0, 0x74, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0xb, 0xc1, 0xf8, 0x10, 0x3d, 0, 0x17, 0, 0, 0x7f, 0x2, 0xeb, 0x16, 0x8b, 0x45, 0xdc, 0x66, 0x83, 0x78, 0x8, 0x1e, 0x74, 0xa, 0x8b, 0x45, 0xdc, 0x66, 0x83, 0x78, 0x8, 0x28, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x27, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xf, 0xbf, 0x55, 0xf4, 0x69, 0xd2, 0x47, 0x2, 0, 0, 0x8b, 0x92, 0x50, 0xa5, 0x1c, 0x10, 0x3b, 0x90, 0x50, 0xa5, 0x1c, 0x10, 0x7f, 0x2, 0xeb, 0x9, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0xd, 0, 0x17, 0xeb, 0x3b, 0x8b, 0x45, 0xdc, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x4, 0x75, 0x6, 0xc6, 0x45, 0xf8, 0x1, 0xeb, 0x25, 0x8d, 0x5d, 0xe0, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xdc, 0xe8, 0x9b, 0xb, 0xff, 0xff, 0x84, 0xc0, 0x74, 0xd, 0xc6, 0x45, 0xf8, 0x1, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0xd, 0, 0x10, 0x80, 0x7d, 0xf8, 0, 0x74, 0x17, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xe8, 0xe8, 0x52, 0x2f, 0, 0, 0xe8, 0xb9, 0x33, 0, 0, 0xe8, 0xac, 0x22, 0x3, 0, 0xeb, 0x12, 0x8d, 0x45, 0xe8, 0xe8, 0x72, 0x2f, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0xb8, 0xfd, 0xff, 0xff, 0xe9, 0xbe, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x20, 0xe8, 0x60, 0x31, 0, 0, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xb4, 0x2f, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0x3a, 0, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xa9, 0x41, 0xb, 0, 0x84, 0xc0, 0x74, 0x4f, 0x8d, 0x45, 0xe8, 0xe8, 0xf8, 0x2e, 0, 0, 0xe8, 0x5f, 0x33, 0, 0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0xe8, 0x17, 0x22, 0x3, 0, 0x3b, 0x45, 0xfc, 0x74, 0xf, 0x8b, 0x55, 0xec, 0x8b, 0x45, 0xfc, 0xe8, 0x6a, 0xfc, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x2, 0xeb, 0x14, 0x8d, 0x45, 0xe8, 0xe8, 0xfe, 0x2e, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x44, 0xfd, 0xff, 0xff, 0xeb, 0xb, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xec, 0xe8, 0x17, 0x22, 0x3, 0, 0xeb, 0x9b, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0xc5, 0, 0, 0, 0xba, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0x62, 0x34, 0x3, 0, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0x64, 0x35, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0xae, 0xff, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x1d, 0x41, 0xb, 0, 0x84, 0xc0, 0xf, 0x84, 0x7d, 0x1, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0x94, 0x34, 0, 0, 0xe8, 0x7, 0x37, 0, 0, 0x89, 0x45, 0xdc, 0x83, 0x7d, 0xdc, 0, 0x74, 0x10, 0x8b, 0x45, 0xdc, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xf4, 0x39, 0xc2, 0x74, 0x2, 0xeb, 0x12, 0x8d, 0x45, 0xf0, 0xe8, 0x6c, 0x34, 0, 0, 0xe8, 0x6a, 0x21, 0x3, 0, 0x3b, 0x45, 0xfc, 0x75, 0x2, 0xeb, 0x16, 0x8d, 0x45, 0xf0, 0xe8, 0x8c, 0x34, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0xb4, 0xfb, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x5, 0xe9, 0x21, 0x1, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0x3d, 0x34, 0, 0, 0xe8, 0x3b, 0x21, 0x3, 0, 0x89, 0x45, 0xd4, 0x83, 0x7d, 0xd4, 0, 0xf, 0x85, 0x98, 0, 0, 0, 0xb8, 0x32, 0, 0, 0, 0xe8, 0x29, 0xf1, 0xd, 0, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xcc, 0x83, 0x7d, 0xcc, 0, 0x74, 0x29, 0x8b, 0x45, 0xfc, 0x8b, 0x48, 0xb, 0xc1, 0xf9, 0x10, 0x8d, 0x45, 0xf0, 0xe8, 0x35, 0x34, 0, 0, 0x89, 0xc3, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xd0, 0xe8, 0xd7, 0x3e, 0xff, 0xff, 0x89, 0x45, 0xc8, 0x8b, 0x45, 0xc8, 0x89, 0x45, 0xc4, 0xeb, 0x6, 0x8b, 0x45, 0xcc, 0x89, 0x45, 0xc4, 0x8b, 0x55, 0xc4, 0x8d, 0x45, 0xc0, 0xe8, 0x94, 0x31, 0, 0, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xf0, 0xe8, 0xcd, 0x33, 0, 0, 0xe8, 0, 0x21, 0x3, 0, 0x8d, 0x45, 0xc0, 0xe8, 0xa0, 0x30, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x20, 0xe8, 0x93, 0x2f, 0, 0, 0x8d, 0x45, 0xc0, 0xe8, 0x8b, 0x30, 0, 0, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xf7, 0xdf, 0x1, 0, 0x31, 0xd2, 0x8d, 0x45, 0xc0, 0xe8, 0x61, 0x22, 0, 0, 0xeb, 0x6f, 0x8b, 0x45, 0xd4, 0xe8, 0x8b, 0x2b, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x3b, 0x50, 0x3a, 0x75, 0x27, 0x8b, 0x45, 0xd4, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xbc, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xbc, 0xff, 0x52, 0x14, 0x98, 0x25, 0, 0xff, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0xb, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x74, 0x2, 0xeb, 0x34, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xd4, 0xe8, 0xcb, 0xc6, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x20, 0xe8, 0x3e, 0x39, 0xb, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x1f, 0xb4, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x84, 0x20, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x72, 0x22, 0, 0, 0xeb, 0x60, 0xe9, 0x69, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x20, 0xe8, 0x24, 0x2f, 0, 0, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x78, 0x2d, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0xfe, 0xfd, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x6d, 0x3f, 0xb, 0, 0x84, 0xc0, 0x74, 0x18, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0xb, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xe8, 0xe8, 0xb3, 0x2c, 0, 0, 0xe8, 0x76, 0x3e, 0, 0, 0xeb, 0xd2, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x22, 0x20, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x10, 0x22, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100869a3, 0x5)   pushd(0x60);                          /* push dword 0x60 */
    II(0x100869a8, 0x5)   calld(sys_check_available_stack_size, 0xdf3a5); /* call 0x10165d52 */
    II(0x100869ad, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100869ae, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100869af, 0x1)   pushd(edx);                           /* push edx */
    II(0x100869b0, 0x1)   pushd(esi);                           /* push esi */
    II(0x100869b1, 0x1)   pushd(edi);                           /* push edi */
    II(0x100869b2, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100869b3, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100869b5, 0x6)   sub(esp, 0x44);                       /* sub esp, 0x44 */
    II(0x100869bb, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100869be, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100869c1, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x100869c4, 0x5)   calld(0x10089d08, 0x333f);            /* call 0x10089d08 */
    II(0x100869c9, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x100869cc, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100869ce, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100869d0, 0x5)   calld(0x10089be4, 0x320f);            /* call 0x10089be4 */
    II(0x100869d5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100869d8, 0x4)   or_(memb_a32(ds, eax + 0x3a), 0x40);  /* or byte [eax+0x3a], 0x40 */
    II(0x100869dc, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x100869df, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100869e2, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100869e5, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100869e8, 0x5)   calld(0x10078137, -0xe8b6);           /* call 0x10078137 */
    II(0x100869ed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100869f0, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100869f3, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100869f6, 0x6)   imul(edx, eax, 0xc5);                 /* imul edx, eax, 0xc5 */
    II(0x100869fc, 0x5)   mov(eax, 0x101c31c4);                 /* mov eax, 0x101c31c4 */
    II(0x10086a01, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10086a03, 0x5)   calld(0x1008a094, 0x368c);            /* call 0x1008a094 */
    II(0x10086a08, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10086a0b, 0x2)   jmpd(0x10086a15, 0x8);                /* jmp 0x10086a15 */
l_0x10086a0d:
    II(0x10086a0d, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10086a10, 0x5)   calld(0x10076bf8, -0xfe1d);           /* call 0x10076bf8 */
l_0x10086a15:
    II(0x10086a15, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10086a17, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10086a1a, 0x5)   calld(0x1013ad71, 0xb4352);           /* call 0x1013ad71 */
    II(0x10086a1f, 0x2)   test(al, al);                         /* test al, al */
    II(0x10086a21, 0x2)   jzd(0x10086a39, 0x16);                /* jz 0x10086a39 */
    II(0x10086a23, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10086a25, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10086a28, 0x5)   calld(0x10089acc, 0x309f);            /* call 0x10089acc */
    II(0x10086a2d, 0x5)   calld(0x10089f38, 0x3506);            /* call 0x10089f38 */
    II(0x10086a32, 0x5)   calld(0x100b8e30, 0x323f9);           /* call 0x100b8e30 */
    II(0x10086a37, 0x2)   jmpd(0x10086a0d, -0x2c);              /* jmp 0x10086a0d */
l_0x10086a39:
    II(0x10086a39, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086a3c, 0x6)   mov(memw_a32(ds, eax + 0xd), 0x1f00); /* mov word [eax+0xd], 0x1f00 */
    II(0x10086a42, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086a45, 0x3)   add(eax, 0x16);                       /* add eax, 0x16 */
    II(0x10086a48, 0x5)   calld(0x10089d08, 0x32bb);            /* call 0x10089d08 */
    II(0x10086a4d, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x10086a50, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10086a52, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10086a54, 0x5)   calld(0x10089b68, 0x310f);            /* call 0x10089b68 */
    II(0x10086a59, 0x2)   jmpd(0x10086a63, 0x8);                /* jmp 0x10086a63 */
l_0x10086a5b:
    II(0x10086a5b, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10086a5e, 0x5)   calld(0x10076bf8, -0xfe6b);           /* call 0x10076bf8 */
l_0x10086a63:
    II(0x10086a63, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10086a65, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10086a68, 0x5)   calld(0x1013ad71, 0xb4304);           /* call 0x1013ad71 */
    II(0x10086a6d, 0x2)   test(al, al);                         /* test al, al */
    II(0x10086a6f, 0x6)   jzd(0x10086b9d, 0x128);               /* jz dword 0x10086b9d */
    II(0x10086a75, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10086a78, 0x5)   calld(0x10089acc, 0x304f);            /* call 0x10089acc */
    II(0x10086a7d, 0x5)   calld(0x10089f70, 0x34ee);            /* call 0x10089f70 */
    II(0x10086a82, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x10086a85, 0x4)   cmp(memd_a32(ss, ebp - 0x24), 0);     /* cmp dword [ebp-0x24], 0x0 */
    II(0x10086a89, 0x6)   jzd(0x10086b98, 0x109);               /* jz dword 0x10086b98 */
    II(0x10086a8f, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x10086a93, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10086a96, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x10086a9a, 0x2)   jnzd(0x10086aaa, 0xe);                /* jnz 0x10086aaa */
    II(0x10086a9c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10086a9f, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x31);   /* cmp word [eax+0x8], 0x31 */
    II(0x10086aa4, 0x6)   jnzd(0x10086b2e, 0x84);               /* jnz dword 0x10086b2e */
l_0x10086aaa:
    II(0x10086aaa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10086aad, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10086aaf, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10086ab2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10086ab6, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10086ab8, 0x2)   jnzd(0x10086ac0, 0x6);                /* jnz 0x10086ac0 */
    II(0x10086aba, 0x4)   mov(memb_a32(ss, ebp - 0x28), 0x1);   /* mov byte [ebp-0x28], 0x1 */
    II(0x10086abe, 0x2)   jmpd(0x10086ac4, 0x4);                /* jmp 0x10086ac4 */
l_0x10086ac0:
    II(0x10086ac0, 0x4)   mov(memb_a32(ss, ebp - 0x28), 0);     /* mov byte [ebp-0x28], 0x0 */
l_0x10086ac4:
    II(0x10086ac4, 0x3)   mov(al, memb_a32(ss, ebp - 0x28));    /* mov al, [ebp-0x28] */
    II(0x10086ac7, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
    II(0x10086aca, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x10086ace, 0x2)   jzd(0x10086ae0, 0x10);                /* jz 0x10086ae0 */
    II(0x10086ad0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086ad3, 0x3)   mov(eax, memd_a32(ds, eax + 0xb));    /* mov eax, [eax+0xb] */
    II(0x10086ad6, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10086ad9, 0x5)   cmp(eax, 0x1700);                     /* cmp eax, 0x1700 */
    II(0x10086ade, 0x2)   jgd(0x10086ae2, 0x2);                 /* jg 0x10086ae2 */
l_0x10086ae0:
    II(0x10086ae0, 0x2)   jmpd(0x10086af8, 0x16);               /* jmp 0x10086af8 */
l_0x10086ae2:
    II(0x10086ae2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10086ae5, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x1e);   /* cmp word [eax+0x8], 0x1e */
    II(0x10086aea, 0x2)   jzd(0x10086af6, 0xa);                 /* jz 0x10086af6 */
    II(0x10086aec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10086aef, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x28);   /* cmp word [eax+0x8], 0x28 */
    II(0x10086af4, 0x2)   jnzd(0x10086af8, 0x2);                /* jnz 0x10086af8 */
l_0x10086af6:
    II(0x10086af6, 0x2)   jmpd(0x10086afa, 0x2);                /* jmp 0x10086afa */
l_0x10086af8:
    II(0x10086af8, 0x2)   jmpd(0x10086b21, 0x27);               /* jmp 0x10086b21 */
l_0x10086afa:
    II(0x10086afa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086afd, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10086b00, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10086b03, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10086b09, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x10086b0d, 0x6)   imul(edx, edx, 0x247);                /* imul edx, edx, 0x247 */
    II(0x10086b13, 0x6)   mov(edx, memd_a32(ds, edx + 0x101ca550)); /* mov edx, [edx+0x101ca550] */
    II(0x10086b19, 0x6)   cmp(edx, memd_a32(ds, eax + 0x101ca550)); /* cmp edx, [eax+0x101ca550] */
    II(0x10086b1f, 0x2)   jgd(0x10086b23, 0x2);                 /* jg 0x10086b23 */
l_0x10086b21:
    II(0x10086b21, 0x2)   jmpd(0x10086b2c, 0x9);                /* jmp 0x10086b2c */
l_0x10086b23:
    II(0x10086b23, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086b26, 0x6)   mov(memw_a32(ds, eax + 0xd), 0x1700); /* mov word [eax+0xd], 0x1700 */
l_0x10086b2c:
    II(0x10086b2c, 0x2)   jmpd(0x10086b69, 0x3b);               /* jmp 0x10086b69 */
l_0x10086b2e:
    II(0x10086b2e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10086b31, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10086b34, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10086b39, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x10086b3c, 0x2)   jnzd(0x10086b44, 0x6);                /* jnz 0x10086b44 */
    II(0x10086b3e, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x10086b42, 0x2)   jmpd(0x10086b69, 0x25);               /* jmp 0x10086b69 */
l_0x10086b44:
    II(0x10086b44, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x10086b47, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086b4a, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x10086b4d, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10086b50, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10086b53, 0x5)   calld(0x100776f3, -0xf465);           /* call 0x100776f3 */
    II(0x10086b58, 0x2)   test(al, al);                         /* test al, al */
    II(0x10086b5a, 0x2)   jzd(0x10086b69, 0xd);                 /* jz 0x10086b69 */
    II(0x10086b5c, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x10086b60, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086b63, 0x6)   mov(memw_a32(ds, eax + 0xd), 0x1000); /* mov word [eax+0xd], 0x1000 */
l_0x10086b69:
    II(0x10086b69, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x10086b6d, 0x2)   jzd(0x10086b86, 0x17);                /* jz 0x10086b86 */
    II(0x10086b6f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10086b72, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10086b75, 0x5)   calld(0x10089acc, 0x2f52);            /* call 0x10089acc */
    II(0x10086b7a, 0x5)   calld(0x10089f38, 0x33b9);            /* call 0x10089f38 */
    II(0x10086b7f, 0x5)   calld(0x100b8e30, 0x322ac);           /* call 0x100b8e30 */
    II(0x10086b84, 0x2)   jmpd(0x10086b98, 0x12);               /* jmp 0x10086b98 */
l_0x10086b86:
    II(0x10086b86, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10086b89, 0x5)   calld(0x10089b00, 0x2f72);            /* call 0x10089b00 */
    II(0x10086b8e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10086b90, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086b93, 0x5)   calld(0x10086950, -0x248);            /* call 0x10086950 */
l_0x10086b98:
    II(0x10086b98, 0x5)   jmpd(0x10086a5b, -0x142);             /* jmp 0x10086a5b */
l_0x10086b9d:
    II(0x10086b9d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086ba0, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x10086ba3, 0x5)   calld(0x10089d08, 0x3160);            /* call 0x10089d08 */
    II(0x10086ba8, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x10086bab, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10086bad, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10086baf, 0x5)   calld(0x10089b68, 0x2fb4);            /* call 0x10089b68 */
    II(0x10086bb4, 0x2)   jmpd(0x10086bbe, 0x8);                /* jmp 0x10086bbe */
l_0x10086bb6:
    II(0x10086bb6, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10086bb9, 0x5)   calld(0x10076bf8, -0xffc6);           /* call 0x10076bf8 */
l_0x10086bbe:
    II(0x10086bbe, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10086bc0, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10086bc3, 0x5)   calld(0x1013ad71, 0xb41a9);           /* call 0x1013ad71 */
    II(0x10086bc8, 0x2)   test(al, al);                         /* test al, al */
    II(0x10086bca, 0x2)   jzd(0x10086c1b, 0x4f);                /* jz 0x10086c1b */
    II(0x10086bcc, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10086bcf, 0x5)   calld(0x10089acc, 0x2ef8);            /* call 0x10089acc */
    II(0x10086bd4, 0x5)   calld(0x10089f38, 0x335f);            /* call 0x10089f38 */
    II(0x10086bd9, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x10086bdc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10086bdf, 0x5)   calld(0x100b8dfb, 0x32217);           /* call 0x100b8dfb */
    II(0x10086be4, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x4));    /* cmp eax, [ebp-0x4] */
    II(0x10086be7, 0x2)   jzd(0x10086bf8, 0xf);                 /* jz 0x10086bf8 */
    II(0x10086be9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x10086bec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086bef, 0x5)   calld(0x1008685e, -0x396);            /* call 0x1008685e */
    II(0x10086bf4, 0x2)   test(al, al);                         /* test al, al */
    II(0x10086bf6, 0x2)   jzd(0x10086bfa, 0x2);                 /* jz 0x10086bfa */
l_0x10086bf8:
    II(0x10086bf8, 0x2)   jmpd(0x10086c0e, 0x14);               /* jmp 0x10086c0e */
l_0x10086bfa:
    II(0x10086bfa, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10086bfd, 0x5)   calld(0x10089b00, 0x2efe);            /* call 0x10089b00 */
    II(0x10086c02, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10086c04, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086c07, 0x5)   calld(0x10086950, -0x2bc);            /* call 0x10086950 */
    II(0x10086c0c, 0x2)   jmpd(0x10086c19, 0xb);                /* jmp 0x10086c19 */
l_0x10086c0e:
    II(0x10086c0e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10086c11, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10086c14, 0x5)   calld(0x100b8e30, 0x32217);           /* call 0x100b8e30 */
l_0x10086c19:
    II(0x10086c19, 0x2)   jmpd(0x10086bb6, -0x65);              /* jmp 0x10086bb6 */
l_0x10086c1b:
    II(0x10086c1b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086c1e, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10086c21, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10086c24, 0x6)   imul(eax, eax, 0xc5);                 /* imul eax, eax, 0xc5 */
    II(0x10086c2a, 0x5)   mov(edx, 0x101c31c4);                 /* mov edx, 0x101c31c4 */
    II(0x10086c2f, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10086c31, 0x5)   calld(0x100ba098, 0x33462);           /* call 0x100ba098 */
    II(0x10086c36, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10086c38, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10086c3b, 0x5)   calld(0x1008a1a4, 0x3564);            /* call 0x1008a1a4 */
    II(0x10086c40, 0x2)   jmpd(0x10086c4a, 0x8);                /* jmp 0x10086c4a */
l_0x10086c42:
    II(0x10086c42, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10086c45, 0x5)   calld(0x10076bf8, -0x10052);          /* call 0x10076bf8 */
l_0x10086c4a:
    II(0x10086c4a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10086c4c, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10086c4f, 0x5)   calld(0x1013ad71, 0xb411d);           /* call 0x1013ad71 */
    II(0x10086c54, 0x2)   test(al, al);                         /* test al, al */
    II(0x10086c56, 0x6)   jzd(0x10086dd9, 0x17d);               /* jz dword 0x10086dd9 */
    II(0x10086c5c, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10086c5f, 0x5)   calld(0x1008a0f8, 0x3494);            /* call 0x1008a0f8 */
    II(0x10086c64, 0x5)   calld(0x1008a370, 0x3707);            /* call 0x1008a370 */
    II(0x10086c69, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x10086c6c, 0x4)   cmp(memd_a32(ss, ebp - 0x24), 0);     /* cmp dword [ebp-0x24], 0x0 */
    II(0x10086c70, 0x2)   jzd(0x10086c82, 0x10);                /* jz 0x10086c82 */
    II(0x10086c72, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10086c75, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10086c77, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10086c7a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10086c7e, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10086c80, 0x2)   jzd(0x10086c84, 0x2);                 /* jz 0x10086c84 */
l_0x10086c82:
    II(0x10086c82, 0x2)   jmpd(0x10086c96, 0x12);               /* jmp 0x10086c96 */
l_0x10086c84:
    II(0x10086c84, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10086c87, 0x5)   calld(0x1008a0f8, 0x346c);            /* call 0x1008a0f8 */
    II(0x10086c8c, 0x5)   calld(0x100b8dfb, 0x3216a);           /* call 0x100b8dfb */
    II(0x10086c91, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x4));    /* cmp eax, [ebp-0x4] */
    II(0x10086c94, 0x2)   jnzd(0x10086c98, 0x2);                /* jnz 0x10086c98 */
l_0x10086c96:
    II(0x10086c96, 0x2)   jmpd(0x10086cae, 0x16);               /* jmp 0x10086cae */
l_0x10086c98:
    II(0x10086c98, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10086c9b, 0x5)   calld(0x1008a12c, 0x348c);            /* call 0x1008a12c */
    II(0x10086ca0, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10086ca2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086ca5, 0x5)   calld(0x1008685e, -0x44c);            /* call 0x1008685e */
    II(0x10086caa, 0x2)   test(al, al);                         /* test al, al */
    II(0x10086cac, 0x2)   jnzd(0x10086cb3, 0x5);                /* jnz 0x10086cb3 */
l_0x10086cae:
    II(0x10086cae, 0x5)   jmpd(0x10086dd4, 0x121);              /* jmp 0x10086dd4 */
l_0x10086cb3:
    II(0x10086cb3, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10086cb6, 0x5)   calld(0x1008a0f8, 0x343d);            /* call 0x1008a0f8 */
    II(0x10086cbb, 0x5)   calld(0x100b8dfb, 0x3213b);           /* call 0x100b8dfb */
    II(0x10086cc0, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x10086cc3, 0x4)   cmp(memd_a32(ss, ebp - 0x2c), 0);     /* cmp dword [ebp-0x2c], 0x0 */
    II(0x10086cc7, 0x6)   jnzd(0x10086d65, 0x98);               /* jnz dword 0x10086d65 */
    II(0x10086ccd, 0x5)   mov(eax, 0x32);                       /* mov eax, 0x32 */
    II(0x10086cd2, 0x5)   calld(sys_new, 0xdf129);              /* call 0x10165e00 */
    II(0x10086cd7, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
//    II(0x10086cda, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x10086cdd, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x10086ce0, 0x4)   cmp(memd_a32(ss, ebp - 0x34), 0);     /* cmp dword [ebp-0x34], 0x0 */
    II(0x10086ce4, 0x2)   jzd(0x10086d0f, 0x29);                /* jz 0x10086d0f */
    II(0x10086ce6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086ce9, 0x3)   mov(ecx, memd_a32(ds, eax + 0xb));    /* mov ecx, [eax+0xb] */
    II(0x10086cec, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x10086cef, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10086cf2, 0x5)   calld(0x1008a12c, 0x3435);            /* call 0x1008a12c */
    II(0x10086cf7, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10086cf9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10086cfc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x10086cff, 0x5)   calld(my_ctor_c1, -0xc129);           /* call 0x1007abdb */
    II(0x10086d04, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
//    II(0x10086d07, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x10086d0a, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x10086d0d, 0x2)   jmpd(0x10086d15, 0x6);                /* jmp 0x10086d15 */
l_0x10086d0f:
    II(0x10086d0f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x10086d12, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
l_0x10086d15:
    II(0x10086d15, 0x3)   mov(edx, memd_a32(ss, ebp - 0x3c));   /* mov edx, [ebp-0x3c] */
    II(0x10086d18, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x10086d1b, 0x5)   calld(0x10089eb4, 0x3194);            /* call 0x10089eb4 */
    II(0x10086d20, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10086d23, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10086d26, 0x5)   calld(0x1008a0f8, 0x33cd);            /* call 0x1008a0f8 */
    II(0x10086d2b, 0x5)   calld(0x100b8e30, 0x32100);           /* call 0x100b8e30 */
    II(0x10086d30, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x10086d33, 0x5)   calld(0x10089dd8, 0x30a0);            /* call 0x10089dd8 */
    II(0x10086d38, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10086d3a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086d3d, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x10086d40, 0x5)   calld(0x10089cd8, 0x2f93);            /* call 0x10089cd8 */
    II(0x10086d45, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x10086d48, 0x5)   calld(0x10089dd8, 0x308b);            /* call 0x10089dd8 */
    II(0x10086d4d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10086d4f, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x10086d54, 0x5)   calld(0x100a4d50, 0x1dff7);           /* call 0x100a4d50 */
    II(0x10086d59, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10086d5b, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x10086d5e, 0x5)   calld(0x10088fc4, 0x2261);            /* call 0x10088fc4 */
    II(0x10086d63, 0x2)   jmpd(0x10086dd4, 0x6f);               /* jmp 0x10086dd4 */
l_0x10086d65:
    II(0x10086d65, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x10086d68, 0x5)   calld(0x100898f8, 0x2b8b);            /* call 0x100898f8 */
    II(0x10086d6d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10086d6f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086d72, 0x3)   cmp(edx, memd_a32(ds, eax + 0x3a));   /* cmp edx, [eax+0x3a] */
    II(0x10086d75, 0x2)   jnzd(0x10086d9e, 0x27);               /* jnz 0x10086d9e */
    II(0x10086d77, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x10086d7a, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
//    II(0x10086d7d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x10086d80, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x10086d83, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x10086d86, 0x3)   calld_abs(memd_a32(ds, edx + 0x14));  /* call dword near [edx+0x14] */
    II(0x10086d89, 0x1)   cwde();                               /* cwde */
    II(0x10086d8a, 0x5)   and_(eax, 0xff00);                    /* and eax, 0xff00 */
    II(0x10086d8f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10086d91, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086d94, 0x3)   mov(eax, memd_a32(ds, eax + 0xb));    /* mov eax, [eax+0xb] */
    II(0x10086d97, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10086d9a, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x10086d9c, 0x2)   jzd(0x10086da0, 0x2);                 /* jz 0x10086da0 */
l_0x10086d9e:
    II(0x10086d9e, 0x2)   jmpd(0x10086dd4, 0x34);               /* jmp 0x10086dd4 */
l_0x10086da0:
    II(0x10086da0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10086da3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x10086da6, 0x5)   calld(0x10083476, -0x3935);           /* call 0x10083476 */
    II(0x10086dab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086dae, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x10086db1, 0x5)   calld(0x1013a6f4, 0xb393e);           /* call 0x1013a6f4 */
    II(0x10086db6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086db9, 0x5)   calld(0x100821dd, -0x4be1);           /* call 0x100821dd */
    II(0x10086dbe, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10086dc0, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10086dc3, 0x5)   calld(0x10088e4c, 0x2084);            /* call 0x10088e4c */
    II(0x10086dc8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10086dca, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10086dcd, 0x5)   calld(0x10089044, 0x2272);            /* call 0x10089044 */
    II(0x10086dd2, 0x2)   jmpd(0x10086e34, 0x60);               /* jmp 0x10086e34 */
l_0x10086dd4:
    II(0x10086dd4, 0x5)   jmpd(0x10086c42, -0x197);             /* jmp 0x10086c42 */
l_0x10086dd9:
    II(0x10086dd9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086ddc, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x10086ddf, 0x5)   calld(0x10089d08, 0x2f24);            /* call 0x10089d08 */
    II(0x10086de4, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x10086de7, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10086de9, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10086deb, 0x5)   calld(0x10089b68, 0x2d78);            /* call 0x10089b68 */
    II(0x10086df0, 0x2)   jmpd(0x10086dfa, 0x8);                /* jmp 0x10086dfa */
l_0x10086df2:
    II(0x10086df2, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10086df5, 0x5)   calld(0x10076bf8, -0x10202);          /* call 0x10076bf8 */
l_0x10086dfa:
    II(0x10086dfa, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10086dfc, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10086dff, 0x5)   calld(0x1013ad71, 0xb3f6d);           /* call 0x1013ad71 */
    II(0x10086e04, 0x2)   test(al, al);                         /* test al, al */
    II(0x10086e06, 0x2)   jzd(0x10086e20, 0x18);                /* jz 0x10086e20 */
    II(0x10086e08, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10086e0b, 0x3)   mov(edx, memd_a32(ds, eax + 0xb));    /* mov edx, [eax+0xb] */
    II(0x10086e0e, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10086e11, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10086e14, 0x5)   calld(0x10089acc, 0x2cb3);            /* call 0x10089acc */
    II(0x10086e19, 0x5)   calld(0x1008ac94, 0x3e76);            /* call 0x1008ac94 */
    II(0x10086e1e, 0x2)   jmpd(0x10086df2, -0x2e);              /* jmp 0x10086df2 */
l_0x10086e20:
    II(0x10086e20, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10086e22, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10086e25, 0x5)   calld(0x10088e4c, 0x2022);            /* call 0x10088e4c */
    II(0x10086e2a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10086e2c, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10086e2f, 0x5)   calld(0x10089044, 0x2210);            /* call 0x10089044 */
l_0x10086e34:
    II(0x10086e34, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10086e36, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10086e37, 0x1)   popd(edi);                            /* pop edi */
    II(0x10086e38, 0x1)   popd(esi);                            /* pop esi */
    II(0x10086e39, 0x1)   popd(edx);                            /* pop edx */
    II(0x10086e3a, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10086e3b, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10086e3c, 0x1)   retd();                               /* ret */
FUNC_END

