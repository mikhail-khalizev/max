FUNC_BEGIN(0x100f04d8, 0x965f39ef87b53022, 0x20, ({0x68, 0x48, 0, 0, 0, 0xe8, 0x70, 0x58, 0x7, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x34, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xf0, 0x89, 0x5d, 0xfc, 0x89, 0x4d, 0xf4, 0xb8, 0x70, 0, 0, 0, 0xe8, 0xdb, 0xaa, 0x7, 0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0xc7, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xec, 0xc7, 0x40, 0x48, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf4, 0x8b, 0x55, 0xec, 0x89, 0x42, 0x50, 0xf, 0xbf, 0x45, 0x10, 0x8b, 0x55, 0xec, 0x89, 0x42, 0x54, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x12, 0x8b, 0x45, 0xec, 0x89, 0x50, 0x48, 0xf, 0xbf, 0x55, 0x10, 0xf, 0xbf, 0x45, 0xfc, 0xf, 0xaf, 0xd0, 0xf, 0xbf, 0x45, 0xf4, 0x1, 0xc2, 0x8b, 0x45, 0xf0, 0x8b, 0x58, 0x16, 0x8b, 0x45, 0xec, 0x1, 0xd3, 0x89, 0x58, 0x4c, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xec, 0x66, 0x89, 0x42, 0x69, 0x8b, 0x45, 0xec, 0x66, 0xc7, 0x40, 0x67, 0, 0, 0x8a, 0x45, 0x14, 0x8b, 0x55, 0xec, 0x88, 0x42, 0x60, 0x8a, 0x45, 0x18, 0x8b, 0x55, 0xec, 0x88, 0x42, 0x6f, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0xf, 0xbf, 0x45, 0xe8, 0x83, 0xf8, 0x5, 0x73, 0x13, 0xf, 0xbf, 0x45, 0xe8, 0x6b, 0xc0, 0xc, 0x3, 0x45, 0xec, 0xc7, 0x40, 0x10, 0, 0, 0, 0, 0xeb, 0xde, 0xf, 0xbf, 0x45, 0xf8, 0xe8, 0x3a, 0x3c, 0x4, 0, 0x89, 0x45, 0xe4, 0x8b, 0x55, 0xec, 0x8b, 0x45, 0xe4, 0xe8, 0x7a, 0xfe, 0xff, 0xff, 0x84, 0xc0, 0xf, 0x85, 0x7e, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf4, 0x89, 0x45, 0xd4, 0xf, 0xbf, 0x45, 0x10, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xd4, 0x5, 0x80, 0, 0, 0, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xd8, 0x5, 0x80, 0, 0, 0, 0x89, 0x45, 0xe0, 0x6a, 0, 0xf, 0xbf, 0x4d, 0xfc, 0xbb, 0x80, 0, 0, 0, 0xba, 0x80, 0, 0, 0, 0xf, 0xbf, 0x75, 0xf4, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x16, 0x1, 0xc6, 0xf, 0xbf, 0x45, 0x10, 0x89, 0x45, 0xd0, 0xf, 0xbf, 0x45, 0xfc, 0xf, 0xaf, 0x45, 0xd0, 0x1, 0xf0, 0xe8, 0x5b, 0xa7, 0x7, 0, 0x8b, 0x45, 0xf0, 0x83, 0x78, 0x12, 0, 0x74, 0xe, 0x8d, 0x55, 0xd4, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x12, 0xe8, 0x74, 0x6e, 0x7, 0, 0x8b, 0x45, 0xec, 0xe8, 0x85, 0xaa, 0x7, 0, 0xc7, 0x45, 0xcc, 0, 0, 0, 0, 0xeb, 0x1e, 0x8b, 0x45, 0xec, 0x80, 0x78, 0x60, 0, 0x75, 0xf, 0x8b, 0x45, 0xec, 0xe8, 0x6b, 0xaa, 0x7, 0, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0xc, 0}))
    II(0x100f04d8, 0x5)   pushd(0x48);                          /* push dword 0x48 */
    II(0x100f04dd, 0x5)   calld(sys_check_available_stack_size, 0x75870); /* call 0x10165d52 */
    II(0x100f04e2, 0x1)   pushd(esi);                           /* push esi */
    II(0x100f04e3, 0x1)   pushd(edi);                           /* push edi */
    II(0x100f04e4, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100f04e5, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100f04e7, 0x6)   sub(esp, 0x34);                       /* sub esp, 0x34 */
    II(0x100f04ed, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100f04f0, 0x3)   mov(memd_a32(ss, ebp - 0x10), edx);   /* mov [ebp-0x10], edx */
    II(0x100f04f3, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x100f04f6, 0x3)   mov(memd_a32(ss, ebp - 0xc), ecx);    /* mov [ebp-0xc], ecx */
    II(0x100f04f9, 0x5)   mov(eax, 0x70);                       /* mov eax, 0x70 */
    II(0x100f04fe, 0x5)   calld(sys_malloc, 0x7aadb);           /* call 0x1016afde */
    II(0x100f0503, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100f0506, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100f0509, 0x6)   mov(memd_a32(ds, eax), 0);            /* mov dword [eax], 0x0 */
    II(0x100f050f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100f0512, 0x7)   mov(memd_a32(ds, eax + 0x48), 0);     /* mov dword [eax+0x48], 0x0 */
    II(0x100f0519, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100f051d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x100f0520, 0x3)   mov(memd_a32(ds, edx + 0x50), eax);   /* mov [edx+0x50], eax */
    II(0x100f0523, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x10)); /* movsx eax, word [ebp+0x10] */
    II(0x100f0527, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x100f052a, 0x3)   mov(memd_a32(ds, edx + 0x54), eax);   /* mov [edx+0x54], eax */
    II(0x100f052d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100f0530, 0x3)   mov(edx, memd_a32(ds, eax + 0x12));   /* mov edx, [eax+0x12] */
    II(0x100f0533, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100f0536, 0x3)   mov(memd_a32(ds, eax + 0x48), edx);   /* mov [eax+0x48], edx */
    II(0x100f0539, 0x4)   movsx(edx, memw_a32(ss, ebp + 0x10)); /* movsx edx, word [ebp+0x10] */
    II(0x100f053d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f0541, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100f0544, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100f0548, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100f054a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100f054d, 0x3)   mov(ebx, memd_a32(ds, eax + 0x16));   /* mov ebx, [eax+0x16] */
    II(0x100f0550, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100f0553, 0x2)   add(ebx, edx);                        /* add ebx, edx */
    II(0x100f0555, 0x3)   mov(memd_a32(ds, eax + 0x4c), ebx);   /* mov [eax+0x4c], ebx */
    II(0x100f0558, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f055b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x100f055e, 0x4)   mov(memw_a32(ds, edx + 0x69), ax);    /* mov [edx+0x69], ax */
    II(0x100f0562, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100f0565, 0x6)   mov(memw_a32(ds, eax + 0x67), 0);     /* mov word [eax+0x67], 0x0 */
    II(0x100f056b, 0x3)   mov(al, memb_a32(ss, ebp + 0x14));    /* mov al, [ebp+0x14] */
    II(0x100f056e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x100f0571, 0x3)   mov(memb_a32(ds, edx + 0x60), al);    /* mov [edx+0x60], al */
    II(0x100f0574, 0x3)   mov(al, memb_a32(ss, ebp + 0x18));    /* mov al, [ebp+0x18] */
    II(0x100f0577, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x100f057a, 0x3)   mov(memb_a32(ds, edx + 0x6f), al);    /* mov [edx+0x6f], al */
    II(0x100f057d, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100f0584, 0x2)   jmpd(0x100f058c, 0x6);                /* jmp 0x100f058c */
l_0x100f0586:
    II(0x100f0586, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100f0589, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
l_0x100f058c:
    II(0x100f058c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100f0590, 0x3)   cmp(eax, 0x5);                        /* cmp eax, 0x5 */
    II(0x100f0593, 0x2)   jaed(0x100f05a8, 0x13);               /* jae 0x100f05a8 */
    II(0x100f0595, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100f0599, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x100f059c, 0x3)   add(eax, memd_a32(ss, ebp - 0x14));   /* add eax, [ebp-0x14] */
    II(0x100f059f, 0x7)   mov(memd_a32(ds, eax + 0x10), 0);     /* mov dword [eax+0x10], 0x0 */
    II(0x100f05a6, 0x2)   jmpd(0x100f0586, -0x22);              /* jmp 0x100f0586 */
l_0x100f05a8:
    II(0x100f05a8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100f05ac, 0x5)   calld(my_get_res_data_by_id_malloc, 0x43c3a); /* call 0x101341eb */
    II(0x100f05b1, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100f05b4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
//    II(0x100f05b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100f05ba, 0x5)   calld(0x100f0439, -0x186);            /* call 0x100f0439 */
    II(0x100f05bf, 0x2)   test(al, al);                         /* test al, al */
    II(0x100f05c1, 0x6)   jnzd(0x100f0645, 0x7e);               /* jnz dword 0x100f0645 */
    II(0x100f05c7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100f05cb, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100f05ce, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x10)); /* movsx eax, word [ebp+0x10] */
    II(0x100f05d2, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100f05d5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100f05d8, 0x5)   add(eax, 0x80);                       /* add eax, 0x80 */
    II(0x100f05dd, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100f05e0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100f05e3, 0x5)   add(eax, 0x80);                       /* add eax, 0x80 */
    II(0x100f05e8, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100f05eb, 0x2)   pushd(0);                             /* push 0x0 */
    II(0x100f05ed, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x4));  /* movsx ecx, word [ebp-0x4] */
    II(0x100f05f1, 0x5)   mov(ebx, 0x80);                       /* mov ebx, 0x80 */
    II(0x100f05f6, 0x5)   mov(edx, 0x80);                       /* mov edx, 0x80 */
    II(0x100f05fb, 0x4)   movsx(esi, memw_a32(ss, ebp - 0xc));  /* movsx esi, word [ebp-0xc] */
    II(0x100f05ff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100f0602, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x100f0605, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x100f0607, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x10)); /* movsx eax, word [ebp+0x10] */
    II(0x100f060b, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100f060e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f0612, 0x4)   imul(eax, memd_a32(ss, ebp - 0x30));  /* imul eax, [ebp-0x30] */
    II(0x100f0616, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x100f0618, 0x5)   calld(/* sys */ 0x1016ad78, 0x7a75b); /* call 0x1016ad78 */
    II(0x100f061d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100f0620, 0x4)   cmp(memd_a32(ds, eax + 0x12), 0);     /* cmp dword [eax+0x12], 0x0 */
    II(0x100f0624, 0x2)   jzd(0x100f0634, 0xe);                 /* jz 0x100f0634 */
    II(0x100f0626, 0x3)   lea(edx, ebp - 0x2c);                 /* lea edx, [ebp-0x2c] */
    II(0x100f0629, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100f062c, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x100f062f, 0x5)   calld(sys_display_draw_1, 0x76e74);   /* call 0x101674a8 */
l_0x100f0634:
    II(0x100f0634, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100f0637, 0x5)   calld(sys_free, 0x7aa85);             /* call 0x1016b0c1 */
    II(0x100f063c, 0x7)   mov(memd_a32(ss, ebp - 0x34), 0);     /* mov dword [ebp-0x34], 0x0 */
    II(0x100f0643, 0x2)   jmpd(0x100f0663, 0x1e);               /* jmp 0x100f0663 */
l_0x100f0645:
    II(0x100f0645, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100f0648, 0x4)   cmp(memb_a32(ds, eax + 0x60), 0);     /* cmp byte [eax+0x60], 0x0 */
    II(0x100f064c, 0x2)   jnzd(0x100f065d, 0xf);                /* jnz 0x100f065d */
    II(0x100f064e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100f0651, 0x5)   calld(sys_free, 0x7aa6b);             /* call 0x1016b0c1 */
    II(0x100f0656, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
l_0x100f065d:
    II(0x100f065d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100f0660, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
l_0x100f0663:
    II(0x100f0663, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100f0666, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100f0668, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100f0669, 0x1)   popd(edi);                            /* pop edi */
    II(0x100f066a, 0x1)   popd(esi);                            /* pop esi */
    II(0x100f066b, 0x3)   retd(0xc);                            /* ret 0xc */
FUNC_END

