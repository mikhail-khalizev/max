FUNC_BEGIN(0x100ab50c, 0x92271f78833d7b4b, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x3c, 0xa8, 0xb, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0xd1, 0x71, 0xa, 0, 0x89, 0xc2, 0x8d, 0x45, 0xf8, 0xe8, 0x37, 0xf9, 0xfd, 0xff, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0x10, 0x75, 0xf, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0xf, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x5f, 0xd6, 0xfd, 0xff, 0xe9, 0x88, 0, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xf8, 0xe8, 0x8c, 0xb6, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0xfb, 0xf7, 0x8, 0, 0x84, 0xc0, 0x74, 0x66, 0x8d, 0x45, 0xf8, 0xe8, 0x42, 0xf8, 0xfd, 0xff, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xf4, 0xff, 0x52, 0x20, 0x3c, 0x17, 0x74, 0x1b, 0x8d, 0x45, 0xf8, 0xe8, 0x27, 0xf8, 0xfd, 0xff, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xf0, 0xff, 0x52, 0x20, 0x3c, 0x10, 0x75, 0x2e, 0x31, 0xdb, 0x8d, 0x45, 0xf8, 0xe8, 0x16, 0xcc, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x9e, 0x73, 0xa, 0, 0x8d, 0x45, 0xf8, 0xe8, 0xf8, 0xf7, 0xfd, 0xff, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x8b, 0x58, 0x2, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xec, 0xff, 0x53, 0x54, 0xeb, 0x84, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0xd2, 0xd5, 0xfd, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100ab50c, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x100ab511, 0x5)   calld(sys_check_available_stack_size, 0xba83c); /* call 0x10165d52 */
    II(0x100ab516, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100ab517, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ab518, 0x1)   pushd(edx);                           /* push edx */
    II(0x100ab519, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ab51a, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ab51b, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ab51c, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ab51e, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100ab524, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100ab527, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ab52a, 0x5)   calld(0x10152700, 0xa71d1);           /* call 0x10152700 */
    II(0x100ab52f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ab531, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100ab534, 0x5)   calld(0x1008ae70, -0x206c9);          /* call 0x1008ae70 */
    II(0x100ab539, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ab53c, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x100ab540, 0x2)   jnzd(0x100ab551, 0xf);                /* jnz 0x100ab551 */
    II(0x100ab542, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ab545, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x100ab548, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ab54d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ab54f, 0x2)   jgd(0x100ab553, 0x2);                 /* jg 0x100ab553 */
l_0x100ab551:
    II(0x100ab551, 0x2)   jmpd(0x100ab562, 0xf);                /* jmp 0x100ab562 */
l_0x100ab553:
    II(0x100ab553, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ab555, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100ab558, 0x5)   calld(0x10088bbc, -0x229a1);          /* call 0x10088bbc */
    II(0x100ab55d, 0x5)   jmpd(0x100ab5ea, 0x88);               /* jmp 0x100ab5ea */
l_0x100ab562:
    II(0x100ab562, 0x2)   jmpd(0x100ab56c, 0x8);                /* jmp 0x100ab56c */
l_0x100ab564:
    II(0x100ab564, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100ab567, 0x5)   calld(0x10076bf8, -0x34974);          /* call 0x10076bf8 */
l_0x100ab56c:
    II(0x100ab56c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ab56e, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100ab571, 0x5)   calld(0x1013ad71, 0x8f7fb);           /* call 0x1013ad71 */
    II(0x100ab576, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ab578, 0x2)   jzd(0x100ab5e0, 0x66);                /* jz 0x100ab5e0 */
    II(0x100ab57a, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100ab57d, 0x5)   calld(0x1008adc4, -0x207be);          /* call 0x1008adc4 */
    II(0x100ab582, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x100ab585, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ab588, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100ab58b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100ab58e, 0x3)   calld_abs(memd_a32(ds, edx + 0x20));  /* call dword near [edx+0x20] */
    II(0x100ab591, 0x2)   cmp(al, 0x17);                        /* cmp al, 0x17 */
    II(0x100ab593, 0x2)   jzd(0x100ab5b0, 0x1b);                /* jz 0x100ab5b0 */
    II(0x100ab595, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100ab598, 0x5)   calld(0x1008adc4, -0x207d9);          /* call 0x1008adc4 */
    II(0x100ab59d, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x100ab5a0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ab5a3, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100ab5a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100ab5a9, 0x3)   calld_abs(memd_a32(ds, edx + 0x20));  /* call dword near [edx+0x20] */
    II(0x100ab5ac, 0x2)   cmp(al, 0x10);                        /* cmp al, 0x10 */
    II(0x100ab5ae, 0x2)   jnzd(0x100ab5de, 0x2e);               /* jnz 0x100ab5de */
l_0x100ab5b0:
    II(0x100ab5b0, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ab5b2, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100ab5b5, 0x5)   calld(0x100b81d0, 0xcc16);            /* call 0x100b81d0 */
    II(0x100ab5ba, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ab5bc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ab5bf, 0x5)   calld(0x10152962, 0xa739e);           /* call 0x10152962 */
    II(0x100ab5c4, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100ab5c7, 0x5)   calld(0x1008adc4, -0x20808);          /* call 0x1008adc4 */
    II(0x100ab5cc, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100ab5cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100ab5d2, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x100ab5d5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
//    II(0x100ab5d8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100ab5db, 0x3)   calld_abs(memd_a32(ds, ebx + 0x54));  /* call dword near [ebx+0x54] */
l_0x100ab5de:
    II(0x100ab5de, 0x2)   jmpd(0x100ab564, -0x7c);              /* jmp 0x100ab564 */
l_0x100ab5e0:
    II(0x100ab5e0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ab5e2, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100ab5e5, 0x5)   calld(0x10088bbc, -0x22a2e);          /* call 0x10088bbc */
l_0x100ab5ea:
    II(0x100ab5ea, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ab5ec, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ab5ed, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ab5ee, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ab5ef, 0x1)   popd(edx);                            /* pop edx */
    II(0x100ab5f0, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ab5f1, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ab5f2, 0x1)   retd();                               /* ret */
FUNC_END

