FUNC_BEGIN(0x1014edfa, 0x8012488d588073c, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0x4e, 0x6f, 0x1, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xdc, 0xe8, 0xcd, 0x78, 0xf2, 0xff, 0x89, 0x45, 0xe0, 0x80, 0x65, 0xf4, 0xfe, 0xb8, 0xe1, 0, 0, 0, 0xe8, 0xcc, 0x6f, 0x1, 0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe8, 0x83, 0x7d, 0xe8, 0, 0x74, 0x16, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xec, 0xe8, 0x74, 0x9d, 0xff, 0xff, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xf0, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xf0, 0x8b, 0x55, 0xf0, 0x8d, 0x45, 0xdc, 0xe8, 0xc6, 0x77, 0xf2, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0, 0x77, 0xf2, 0xff, 0x83, 0xc0, 0x65, 0xe8, 0xb8, 0x7b, 0xf2, 0xff, 0x8d, 0x55, 0xdc, 0x8b, 0x45, 0xfc, 0xe8, 0xe1, 0x77, 0xf2, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x9b, 0x70, 0xf2, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x8f, 0x70, 0xf2, 0xff, 0x8b, 0x45, 0xfc, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1014edfa, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x1014edff, 0x5)   calld(sys_check_available_stack_size, 0x16f4e); /* call 0x10165d52 */
    II(0x1014ee04, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1014ee05, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1014ee06, 0x1)   pushd(esi);                           /* push esi */
    II(0x1014ee07, 0x1)   pushd(edi);                           /* push edi */
    II(0x1014ee08, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1014ee09, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1014ee0b, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x1014ee11, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1014ee14, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1014ee17, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x1014ee1b, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1014ee1e, 0x5)   calld(my_ctor_0x101b38f8, -0xd8733);  /* call 0x100766f0 */
    II(0x1014ee23, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1014ee26, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x1014ee2a, 0x5)   mov(eax, 0xe1);                       /* mov eax, 0xe1 */
    II(0x1014ee2f, 0x5)   calld(sys_new, 0x16fcc);              /* call 0x10165e00 */
    II(0x1014ee34, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x1014ee37, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1014ee3a, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1014ee3d, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0);     /* cmp dword [ebp-0x18], 0x0 */
    II(0x1014ee41, 0x2)   jzd(0x1014ee59, 0x16);                /* jz 0x1014ee59 */
    II(0x1014ee43, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014ee46, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1014ee49, 0x5)   calld(0x10148bc2, -0x628c);           /* call 0x10148bc2 */
    II(0x1014ee4e, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x1014ee51, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1014ee54, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1014ee57, 0x2)   jmpd(0x1014ee5f, 0x6);                /* jmp 0x1014ee5f */
l_0x1014ee59:
    II(0x1014ee59, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1014ee5c, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x1014ee5f:
    II(0x1014ee5f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1014ee62, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1014ee65, 0x5)   calld(0x10076630, -0xd883a);          /* call 0x10076630 */
    II(0x1014ee6a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014ee6c, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1014ee6f, 0x5)   calld(0x10076574, -0xd8900);          /* call 0x10076574 */
    II(0x1014ee74, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x1014ee77, 0x5)   calld(0x10076a34, -0xd8448);          /* call 0x10076a34 */
    II(0x1014ee7c, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x1014ee7f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014ee82, 0x5)   calld(0x10076668, -0xd881f);          /* call 0x10076668 */
    II(0x1014ee87, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014ee89, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1014ee8c, 0x5)   calld(0x10075f2c, -0xd8f65);          /* call 0x10075f2c */
    II(0x1014ee91, 0x2)   jmpd(0x1014ee9d, 0xa);                /* jmp 0x1014ee9d */
//  II(0x1014ee93, 0xa)   /* Недостижимый код. */
l_0x1014ee9d:
    II(0x1014ee9d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014eea0, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1014eea2, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1014eea3, 0x1)   popd(edi);                            /* pop edi */
    II(0x1014eea4, 0x1)   popd(esi);                            /* pop esi */
    II(0x1014eea5, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1014eea6, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1014eea7, 0x1)   retd();                               /* ret */
FUNC_END

