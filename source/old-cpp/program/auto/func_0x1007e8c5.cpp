FUNC_BEGIN(0x1007e8c5, 0x1de64b243420438d, 0x20, ({0x68, 0x18, 0x1, 0, 0, 0xe8, 0x83, 0x74, 0xe, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xfc, 0, 0, 0, 0x89, 0x45, 0xfc, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x4e, 0x7a, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xc4, 0xe8, 0xc4, 0x7b, 0xff, 0xff, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xc8, 0xe8, 0x58, 0xc0, 0, 0, 0x89, 0x45, 0xcc, 0x80, 0x65, 0xf8, 0xfe, 0xbb, 0xba, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x85, 0x8, 0xff, 0xff, 0xff, 0xe8, 0xc7, 0x74, 0xe, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0xc5, 0, 0, 0, 0xba, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0x60, 0xb7, 0, 0, 0x89, 0x45, 0xe8, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xdc, 0xff, 0x45, 0xdc, 0xf, 0xbf, 0x45, 0xdc, 0x83, 0xf8, 0x8, 0x7d, 0x19, 0x8b, 0x55, 0xfc, 0xf, 0xbf, 0x45, 0xdc, 0x6b, 0xc0, 0x16, 0x8b, 0x5d, 0xfc, 0x83, 0xc3, 0x21, 0x1, 0xd8, 0xe8, 0x80, 0xea, 0xff, 0xff, 0xeb, 0xd8, 0xb8, 0x1d, 0, 0, 0, 0xe8, 0x8e, 0x74, 0xe, 0, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xd4, 0x83, 0x7d, 0xd4, 0, 0x74, 0x1f, 0x8b, 0x5d, 0xfc, 0x83, 0xc3, 0x1d, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xd8, 0xe8, 0xda, 0x76, 0x2, 0, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xd0, 0x89, 0x85, 0x4, 0xff, 0xff, 0xff, 0xeb, 0x9, 0x8b, 0x45, 0xd4, 0x89, 0x85, 0x4, 0xff, 0xff, 0xff, 0x8b, 0x95, 0x4, 0xff, 0xff, 0xff, 0x8d, 0x45, 0xc8, 0xe8, 0xe1, 0xbe, 0, 0, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xc4, 0xe8, 0x29, 0x82, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0x98, 0xc3, 0xb, 0, 0x84, 0xc0, 0x74, 0x5f, 0x8d, 0x45, 0xc4, 0xe8, 0xbb, 0x79, 0xff, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0xe, 0x8d, 0x45, 0xc4, 0xe8, 0xa1, 0x79, 0xff, 0xff, 0xf6, 0x40, 0x12, 0x10, 0x75, 0x2, 0xeb, 0x33, 0x8d, 0x45, 0xc4, 0xe8, 0xc5, 0x79, 0xff, 0xff, 0xe8, 0x30, 0xf9, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x12, 0x8d, 0x45, 0xc4, 0xe8, 0x80, 0x79, 0xff, 0xff, 0xe8, 0x81, 0x1f, 0xd, 0, 0x1, 0x45, 0xf0, 0xeb, 0x10, 0x8d, 0x45, 0xc4, 0xe8, 0x6e, 0x79, 0xff, 0xff, 0xe8, 0x6f, 0x1f, 0xd, 0, 0x1, 0x45, 0xec, 0xeb, 0x8b, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xf2, 0x78, 0xff, 0xff, 0x8d, 0x5d, 0xc4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xea, 0x79, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xc4, 0xe8, 0x9c, 0x81, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0xb, 0xc3, 0xb, 0, 0x84, 0xc0, 0x74, 0x34, 0x8d, 0x45, 0xc4, 0xe8, 0x2e, 0x79, 0xff, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0x18, 0x8d, 0x45, 0xc4, 0xe8, 0x14, 0x79, 0xff, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x1, 0xc0, 0x66, 0xff, 0x84, 0x28, 0x8, 0xff, 0xff, 0xff, 0xeb, 0xb6, 0x8b, 0x85, 0x3e, 0xff, 0xff, 0xff, 0x66, 0xff, 0x85, 0x3e, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x3a, 0xff, 0xff, 0xff, 0x66, 0xff, 0x85, 0x3a, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x38, 0xff, 0xff, 0xff, 0x66, 0xff, 0x85, 0x38, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x36, 0xff, 0xff, 0xff, 0x66, 0xff, 0x85, 0x36, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x48, 0xff, 0xff, 0xff, 0x66, 0xff, 0x85, 0x48, 0xff, 0xff, 0xff, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xdc, 0xff, 0x45, 0xdc, 0xf, 0xbf, 0x45, 0xdc, 0x83, 0xf8, 0x8, 0x7d, 0x1c, 0x8d, 0x95, 0x8, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xdc, 0x6b, 0xd8, 0x16, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x21, 0x1, 0xd8, 0xe8, 0x2d, 0xeb, 0xff, 0xff, 0xeb, 0xd5, 0xf, 0xbf, 0x55, 0xec, 0xf, 0xbf, 0x45, 0xf0, 0x1, 0xd0, 0x85, 0xc0, 0xf, 0x8e, 0xeb, 0, 0, 0, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0x2, 0x78, 0xff, 0xff, 0x8d, 0x5d, 0xc4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xfa, 0x78, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xc4, 0xe8, 0xac, 0x80, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0x1b, 0xc2, 0xb, 0, 0x84, 0xc0, 0x74, 0x40, 0x8d, 0x45, 0xc4, 0xe8, 0x3e, 0x78, 0xff, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xe8, 0x39, 0xc2, 0x75, 0x17, 0x8d, 0x45, 0xc4, 0xe8, 0x29, 0x78, 0xff, 0xff, 0xe8, 0xc0, 0x76, 0xff, 0xff, 0x8b, 0x40, 0xc, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x10, 0x8d, 0x45, 0xc4, 0xe8, 0x10, 0x78, 0xff, 0xff, 0xe8, 0x11, 0x1e, 0xd, 0, 0x1, 0x45, 0xe0, 0xeb, 0xaa, 0x8d, 0x8d, 0x8, 0xff, 0xff, 0xff, 0x8d, 0x45, 0xc8, 0xe8, 0x90, 0xbc, 0, 0, 0x89, 0xc3, 0xf, 0xbf, 0x45, 0xe0, 0xf, 0xbf, 0x55, 0xec, 0xf, 0xaf, 0xd0, 0xf, 0xbf, 0x45, 0xec, 0xf, 0xbf, 0x75, 0xf0, 0x1, 0xc6, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfe, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x4d, 0xe8, 0xe7, 0xea, 0xff, 0xff, 0x8d, 0x8d, 0x8, 0xff, 0xff, 0xff, 0x8d, 0x45, 0xc8, 0xe8, 0x56, 0xbc, 0, 0, 0x89, 0xc3, 0xf, 0xbf, 0x45, 0xe0, 0xf, 0xbf, 0x55, 0xf0, 0xf, 0xaf, 0xd0, 0xf, 0xbf, 0x75, 0xec, 0xf, 0xbf, 0x45, 0xf0, 0x1, 0xc6, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfe, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x5, 0xbb, 0, 0, 0, 0xe8, 0xab, 0xea, 0xff, 0xff, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x2, 0x77, 0xff, 0xff, 0x8d, 0x5d, 0xc4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xfa, 0x77, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xc4, 0xe8, 0xac, 0x7f, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0x1b, 0xc1, 0xb, 0, 0x84, 0xc0, 0xf, 0x84, 0xa8, 0, 0, 0, 0x8d, 0x45, 0xc4, 0xe8, 0x3a, 0x77, 0xff, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xe8, 0x39, 0xc2, 0x75, 0x17, 0x8d, 0x45, 0xc4, 0xe8, 0x25, 0x77, 0xff, 0xff, 0xe8, 0xbc, 0x75, 0xff, 0xff, 0x8b, 0x40, 0xc, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7f, 0x5, 0xe9, 0x72, 0, 0, 0, 0x8d, 0x45, 0xc4, 0xe8, 0x9, 0x77, 0xff, 0xff, 0x66, 0x83, 0x78, 0x8, 0x42, 0x75, 0x12, 0x8d, 0x45, 0xc4, 0xe8, 0xfa, 0x76, 0xff, 0xff, 0xe8, 0xfb, 0x1c, 0xd, 0, 0x1, 0x45, 0xe4, 0xeb, 0x51, 0x8d, 0x45, 0xc4, 0xe8, 0xe8, 0x76, 0xff, 0xff, 0x66, 0x83, 0x78, 0x8, 0x47, 0x75, 0x12, 0x8d, 0x45, 0xc4, 0xe8, 0xd9, 0x76, 0xff, 0xff, 0xe8, 0xda, 0x1c, 0xd, 0, 0x1, 0x45, 0xf4, 0xeb, 0x30, 0x8d, 0x45, 0xc4, 0xe8, 0xc7, 0x76, 0xff, 0xff, 0xf6, 0x40, 0x12, 0x80, 0x74, 0x12, 0x8d, 0x45, 0xc4, 0xe8, 0xb9, 0x76, 0xff, 0xff, 0xe8, 0xba, 0x1c, 0xd, 0, 0x1, 0x45, 0xf0, 0xeb, 0x10, 0x8d, 0x45, 0xc4, 0xe8, 0xa7, 0x76, 0xff, 0xff, 0xe8, 0xa8, 0x1c, 0xd, 0, 0x1, 0x45, 0xec, 0xe9, 0x3e, 0xff, 0xff, 0xff, 0x8d, 0x8d, 0x8, 0xff, 0xff, 0xff, 0x8d, 0x45, 0xc8, 0xe8, 0x24, 0xbb, 0, 0, 0x89, 0xc3, 0xf, 0xbf, 0x55, 0xe4, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x63, 0xe8, 0x96, 0xe9, 0xff, 0xff, 0x8d, 0x8d, 0x8, 0xff, 0xff, 0xff, 0x8d, 0x45, 0xc8, 0xe8, 0x5, 0xbb, 0, 0, 0x89, 0xc3, 0xf, 0xbf, 0x55, 0xec, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x21, 0xe8, 0x6b, 0xe9, 0xff, 0xff, 0x8d, 0x8d, 0x8, 0xff, 0xff, 0xff, 0x8d, 0x45, 0xc8, 0xe8, 0xda, 0xba, 0, 0, 0x89, 0xc3, 0xf, 0xbf, 0x55, 0xec, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x37, 0xe8, 0x40, 0xe9, 0xff, 0xff, 0x8d, 0x8d, 0x8, 0xff, 0xff, 0xff, 0x8d, 0x45, 0xc8, 0xe8, 0xaf, 0xba, 0, 0, 0x89, 0xc3, 0xf, 0xbf, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x79, 0xe8, 0x21, 0xe9, 0xff, 0xff, 0x8d, 0x8d, 0x8, 0xff, 0xff, 0xff, 0x8d, 0x45, 0xc8, 0xe8, 0x90, 0xba, 0, 0, 0x89, 0xc3, 0xf, 0xbf, 0x55, 0xf0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x5, 0x8f, 0, 0, 0, 0xe8, 0xf4, 0xe8, 0xff, 0xff, 0x8d, 0x8d, 0x8, 0xff, 0xff, 0xff, 0x8d, 0x45, 0xc8, 0xe8, 0x63, 0xba, 0, 0, 0x89, 0xc3, 0xf, 0xbf, 0x55, 0xf0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x5, 0xa5, 0, 0, 0, 0xe8, 0xc7, 0xe8, 0xff, 0xff, 0x8d, 0x45, 0xc8, 0xe8, 0x3c, 0xba, 0, 0, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x48, 0x5f, 0x2, 0, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0xaa, 0x9e, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0x50, 0x71, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1007e8c5, 0x5)   pushd(0x118);                         /* push dword 0x118 */
    II(0x1007e8ca, 0x5)   calld(sys_check_available_stack_size, 0xe7483); /* call 0x10165d52 */
    II(0x1007e8cf, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1007e8d0, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1007e8d1, 0x1)   pushd(edx);                           /* push edx */
    II(0x1007e8d2, 0x1)   pushd(esi);                           /* push esi */
    II(0x1007e8d3, 0x1)   pushd(edi);                           /* push edi */
    II(0x1007e8d4, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1007e8d5, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1007e8d7, 0x6)   sub(esp, 0xfc);                       /* sub esp, 0xfc */
    II(0x1007e8dd, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1007e8e0, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x1007e8e5, 0x5)   calld(0x10076338, -0x85b2);           /* call 0x10076338 */
    II(0x1007e8ea, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007e8ec, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007e8ef, 0x5)   calld(0x100764b8, -0x843c);           /* call 0x100764b8 */
    II(0x1007e8f4, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x1007e8f8, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1007e8fb, 0x5)   calld(0x1008a958, 0xc058);            /* call 0x1008a958 */
    II(0x1007e900, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x1007e903, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x1007e907, 0x5)   mov(ebx, 0xba);                       /* mov ebx, 0xba */
    II(0x1007e90c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007e90e, 0x6)   lea(eax, ebp - 0xf8);                 /* lea eax, [ebp+0xffffff08] */
    II(0x1007e914, 0x5)   calld(sys_memset, 0xe74c7);           /* call 0x10165de0 */
    II(0x1007e919, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007e91c, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x1007e91f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007e922, 0x6)   imul(eax, eax, 0xc5);                 /* imul eax, eax, 0xc5 */
    II(0x1007e928, 0x5)   mov(edx, 0x101c31c4);                 /* mov edx, 0x101c31c4 */
    II(0x1007e92d, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1007e92f, 0x5)   calld(0x1008a094, 0xb760);            /* call 0x1008a094 */
    II(0x1007e934, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1007e937, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
    II(0x1007e93e, 0x2)   jmpd(0x1007e946, 0x6);                /* jmp 0x1007e946 */
l_0x1007e940:
    II(0x1007e940, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1007e943, 0x3)   inc(memd_a32(ss, ebp - 0x24));        /* inc dword [ebp-0x24] */
l_0x1007e946:
    II(0x1007e946, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x1007e94a, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x1007e94d, 0x2)   jged(0x1007e968, 0x19);               /* jge 0x1007e968 */
    II(0x1007e94f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1007e952, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x1007e956, 0x3)   imul(eax, eax, 0x16);                 /* imul eax, eax, 0x16 */
    II(0x1007e959, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x1007e95c, 0x3)   add(ebx, 0x21);                       /* add ebx, 0x21 */
    II(0x1007e95f, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x1007e961, 0x5)   calld(0x1007d3e6, -0x1580);           /* call 0x1007d3e6 */
    II(0x1007e966, 0x2)   jmpd(0x1007e940, -0x28);              /* jmp 0x1007e940 */
l_0x1007e968:
    II(0x1007e968, 0x5)   mov(eax, 0x1d);                       /* mov eax, 0x1d */
    II(0x1007e96d, 0x5)   calld(sys_new, 0xe748e);              /* call 0x10165e00 */
    II(0x1007e972, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
//    II(0x1007e975, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1007e978, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x1007e97b, 0x4)   cmp(memd_a32(ss, ebp - 0x2c), 0);     /* cmp dword [ebp-0x2c], 0x0 */
    II(0x1007e97f, 0x2)   jzd(0x1007e9a0, 0x1f);                /* jz 0x1007e9a0 */
    II(0x1007e981, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x1007e984, 0x3)   add(ebx, 0x1d);                       /* add ebx, 0x1d */
    II(0x1007e987, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1007e98a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1007e98d, 0x5)   calld(my_ctor_c12, 0x276da);          /* call 0x100a606c */
    II(0x1007e992, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
//    II(0x1007e995, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x1007e998, 0x6)   mov(memd_a32(ss, ebp - 0xfc), eax);   /* mov [ebp+0xffffff04], eax */
    II(0x1007e99e, 0x2)   jmpd(0x1007e9a9, 0x9);                /* jmp 0x1007e9a9 */
l_0x1007e9a0:
    II(0x1007e9a0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1007e9a3, 0x6)   mov(memd_a32(ss, ebp - 0xfc), eax);   /* mov [ebp+0xffffff04], eax */
l_0x1007e9a9:
    II(0x1007e9a9, 0x6)   mov(edx, memd_a32(ss, ebp - 0xfc));   /* mov edx, [ebp+0xffffff04] */
    II(0x1007e9af, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1007e9b2, 0x5)   calld(0x1008a898, 0xbee1);            /* call 0x1008a898 */
    II(0x1007e9b7, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x1007e9be, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x1007e9c5, 0x2)   jmpd(0x1007e9cf, 0x8);                /* jmp 0x1007e9cf */
l_0x1007e9c7:
    II(0x1007e9c7, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007e9ca, 0x5)   calld(0x10076bf8, -0x7dd7);           /* call 0x10076bf8 */
l_0x1007e9cf:
    II(0x1007e9cf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007e9d1, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007e9d4, 0x5)   calld(0x1013ad71, 0xbc398);           /* call 0x1013ad71 */
    II(0x1007e9d9, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007e9db, 0x2)   jzd(0x1007ea3c, 0x5f);                /* jz 0x1007ea3c */
    II(0x1007e9dd, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007e9e0, 0x5)   calld(0x100763a0, -0x8645);           /* call 0x100763a0 */
    II(0x1007e9e5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007e9e7, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x1007e9ea, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007e9ed, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x1007e9f0, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007e9f3, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1007e9f5, 0x2)   jnzd(0x1007ea05, 0xe);                /* jnz 0x1007ea05 */
    II(0x1007e9f7, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007e9fa, 0x5)   calld(0x100763a0, -0x865f);           /* call 0x100763a0 */
    II(0x1007e9ff, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x1007ea03, 0x2)   jnzd(0x1007ea07, 0x2);                /* jnz 0x1007ea07 */
l_0x1007ea05:
    II(0x1007ea05, 0x2)   jmpd(0x1007ea3a, 0x33);               /* jmp 0x1007ea3a */
l_0x1007ea07:
    II(0x1007ea07, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007ea0a, 0x5)   calld(0x100763d4, -0x863b);           /* call 0x100763d4 */
    II(0x1007ea0f, 0x5)   calld(0x1007e344, -0x6d0);            /* call 0x1007e344 */
    II(0x1007ea14, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007ea16, 0x2)   jzd(0x1007ea2a, 0x12);                /* jz 0x1007ea2a */
    II(0x1007ea18, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007ea1b, 0x5)   calld(0x100763a0, -0x8680);           /* call 0x100763a0 */
    II(0x1007ea20, 0x5)   calld(0x101509a6, 0xd1f81);           /* call 0x101509a6 */
    II(0x1007ea25, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
    II(0x1007ea28, 0x2)   jmpd(0x1007ea3a, 0x10);               /* jmp 0x1007ea3a */
l_0x1007ea2a:
    II(0x1007ea2a, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007ea2d, 0x5)   calld(0x100763a0, -0x8692);           /* call 0x100763a0 */
    II(0x1007ea32, 0x5)   calld(0x101509a6, 0xd1f6f);           /* call 0x101509a6 */
    II(0x1007ea37, 0x3)   add(memd_a32(ss, ebp - 0x14), eax);   /* add [ebp-0x14], eax */
l_0x1007ea3a:
    II(0x1007ea3a, 0x2)   jmpd(0x1007e9c7, -0x75);              /* jmp 0x1007e9c7 */
l_0x1007ea3c:
    II(0x1007ea3c, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x1007ea41, 0x5)   calld(0x10076338, -0x870e);           /* call 0x10076338 */
    II(0x1007ea46, 0x3)   lea(ebx, ebp - 0x3c);                 /* lea ebx, [ebp-0x3c] */
    II(0x1007ea49, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007ea4b, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1007ea4d, 0x5)   calld(0x1007643c, -0x8616);           /* call 0x1007643c */
    II(0x1007ea52, 0x2)   jmpd(0x1007ea5c, 0x8);                /* jmp 0x1007ea5c */
l_0x1007ea54:
    II(0x1007ea54, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007ea57, 0x5)   calld(0x10076bf8, -0x7e64);           /* call 0x10076bf8 */
l_0x1007ea5c:
    II(0x1007ea5c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007ea5e, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007ea61, 0x5)   calld(0x1013ad71, 0xbc30b);           /* call 0x1013ad71 */
    II(0x1007ea66, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007ea68, 0x2)   jzd(0x1007ea9e, 0x34);                /* jz 0x1007ea9e */
    II(0x1007ea6a, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007ea6d, 0x5)   calld(0x100763a0, -0x86d2);           /* call 0x100763a0 */
    II(0x1007ea72, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007ea74, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x1007ea77, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007ea7a, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x1007ea7d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007ea80, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1007ea82, 0x2)   jnzd(0x1007ea9c, 0x18);               /* jnz 0x1007ea9c */
    II(0x1007ea84, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007ea87, 0x5)   calld(0x100763a0, -0x86ec);           /* call 0x100763a0 */
    II(0x1007ea8c, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1007ea8f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007ea92, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1007ea94, 0x8)   inc(memw_a32(ds, eax + ebp - 0xf8));  /* inc word [eax+ebp+0xffffff08] */
l_0x1007ea9c:
    II(0x1007ea9c, 0x2)   jmpd(0x1007ea54, -0x4a);              /* jmp 0x1007ea54 */
l_0x1007ea9e:
    II(0x1007ea9e, 0x6)   mov(eax, memd_a32(ss, ebp - 0xc2));   /* mov eax, [ebp+0xffffff3e] */
    II(0x1007eaa4, 0x7)   inc(memw_a32(ss, ebp - 0xc2));        /* inc word [ebp+0xffffff3e] */
    II(0x1007eaab, 0x6)   mov(eax, memd_a32(ss, ebp - 0xc6));   /* mov eax, [ebp+0xffffff3a] */
    II(0x1007eab1, 0x7)   inc(memw_a32(ss, ebp - 0xc6));        /* inc word [ebp+0xffffff3a] */
    II(0x1007eab8, 0x6)   mov(eax, memd_a32(ss, ebp - 0xc8));   /* mov eax, [ebp+0xffffff38] */
    II(0x1007eabe, 0x7)   inc(memw_a32(ss, ebp - 0xc8));        /* inc word [ebp+0xffffff38] */
    II(0x1007eac5, 0x6)   mov(eax, memd_a32(ss, ebp - 0xca));   /* mov eax, [ebp+0xffffff36] */
    II(0x1007eacb, 0x7)   inc(memw_a32(ss, ebp - 0xca));        /* inc word [ebp+0xffffff36] */
    II(0x1007ead2, 0x6)   mov(eax, memd_a32(ss, ebp - 0xb8));   /* mov eax, [ebp+0xffffff48] */
    II(0x1007ead8, 0x7)   inc(memw_a32(ss, ebp - 0xb8));        /* inc word [ebp+0xffffff48] */
    II(0x1007eadf, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
    II(0x1007eae6, 0x2)   jmpd(0x1007eaee, 0x6);                /* jmp 0x1007eaee */
l_0x1007eae8:
    II(0x1007eae8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1007eaeb, 0x3)   inc(memd_a32(ss, ebp - 0x24));        /* inc dword [ebp-0x24] */
l_0x1007eaee:
    II(0x1007eaee, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x1007eaf2, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x1007eaf5, 0x2)   jged(0x1007eb13, 0x1c);               /* jge 0x1007eb13 */
    II(0x1007eaf7, 0x6)   lea(edx, ebp - 0xf8);                 /* lea edx, [ebp+0xffffff08] */
    II(0x1007eafd, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x1007eb01, 0x3)   imul(ebx, eax, 0x16);                 /* imul ebx, eax, 0x16 */
    II(0x1007eb04, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007eb07, 0x3)   add(eax, 0x21);                       /* add eax, 0x21 */
    II(0x1007eb0a, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x1007eb0c, 0x5)   calld(0x1007d63e, -0x14d3);           /* call 0x1007d63e */
    II(0x1007eb11, 0x2)   jmpd(0x1007eae8, -0x2b);              /* jmp 0x1007eae8 */
l_0x1007eb13:
    II(0x1007eb13, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1007eb17, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1007eb1b, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1007eb1d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007eb1f, 0x6)   jled(0x1007ec10, 0xeb);               /* jle dword 0x1007ec10 */
    II(0x1007eb25, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x1007eb2c, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x1007eb31, 0x5)   calld(0x10076338, -0x87fe);           /* call 0x10076338 */
    II(0x1007eb36, 0x3)   lea(ebx, ebp - 0x3c);                 /* lea ebx, [ebp-0x3c] */
    II(0x1007eb39, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007eb3b, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1007eb3d, 0x5)   calld(0x1007643c, -0x8706);           /* call 0x1007643c */
    II(0x1007eb42, 0x2)   jmpd(0x1007eb4c, 0x8);                /* jmp 0x1007eb4c */
l_0x1007eb44:
    II(0x1007eb44, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007eb47, 0x5)   calld(0x10076bf8, -0x7f54);           /* call 0x10076bf8 */
l_0x1007eb4c:
    II(0x1007eb4c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007eb4e, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007eb51, 0x5)   calld(0x1013ad71, 0xbc21b);           /* call 0x1013ad71 */
    II(0x1007eb56, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007eb58, 0x2)   jzd(0x1007eb9a, 0x40);                /* jz 0x1007eb9a */
    II(0x1007eb5a, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007eb5d, 0x5)   calld(0x100763a0, -0x87c2);           /* call 0x100763a0 */
    II(0x1007eb62, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007eb64, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x1007eb67, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1007eb6b, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1007eb6d, 0x2)   jnzd(0x1007eb86, 0x17);               /* jnz 0x1007eb86 */
    II(0x1007eb6f, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007eb72, 0x5)   calld(0x100763a0, -0x87d7);           /* call 0x100763a0 */
    II(0x1007eb77, 0x5)   calld(0x1007623c, -0x8940);           /* call 0x1007623c */
    II(0x1007eb7c, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x1007eb7f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007eb82, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007eb84, 0x2)   jgd(0x1007eb88, 0x2);                 /* jg 0x1007eb88 */
l_0x1007eb86:
    II(0x1007eb86, 0x2)   jmpd(0x1007eb98, 0x10);               /* jmp 0x1007eb98 */
l_0x1007eb88:
    II(0x1007eb88, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007eb8b, 0x5)   calld(0x100763a0, -0x87f0);           /* call 0x100763a0 */
    II(0x1007eb90, 0x5)   calld(0x101509a6, 0xd1e11);           /* call 0x101509a6 */
    II(0x1007eb95, 0x3)   add(memd_a32(ss, ebp - 0x20), eax);   /* add [ebp-0x20], eax */
l_0x1007eb98:
    II(0x1007eb98, 0x2)   jmpd(0x1007eb44, -0x56);              /* jmp 0x1007eb44 */
l_0x1007eb9a:
    II(0x1007eb9a, 0x6)   lea(ecx, ebp - 0xf8);                 /* lea ecx, [ebp+0xffffff08] */
    II(0x1007eba0, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1007eba3, 0x5)   calld(0x1008a838, 0xbc90);            /* call 0x1008a838 */
    II(0x1007eba8, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1007ebaa, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x1007ebae, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1007ebb2, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x1007ebb5, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1007ebb9, 0x4)   movsx(esi, memw_a32(ss, ebp - 0x10)); /* movsx esi, word [ebp-0x10] */
    II(0x1007ebbd, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x1007ebbf, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1007ebc1, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1007ebc4, 0x2)   idiv(esi);                            /* idiv esi */
    II(0x1007ebc6, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1007ebc9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007ebcc, 0x3)   add(eax, 0x4d);                       /* add eax, 0x4d */
    II(0x1007ebcf, 0x5)   calld(0x1007d6bb, -0x1519);           /* call 0x1007d6bb */
    II(0x1007ebd4, 0x6)   lea(ecx, ebp - 0xf8);                 /* lea ecx, [ebp+0xffffff08] */
    II(0x1007ebda, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1007ebdd, 0x5)   calld(0x1008a838, 0xbc56);            /* call 0x1008a838 */
    II(0x1007ebe2, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1007ebe4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x1007ebe8, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x1007ebec, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x1007ebef, 0x4)   movsx(esi, memw_a32(ss, ebp - 0x14)); /* movsx esi, word [ebp-0x14] */
    II(0x1007ebf3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1007ebf7, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x1007ebf9, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1007ebfb, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1007ebfe, 0x2)   idiv(esi);                            /* idiv esi */
    II(0x1007ec00, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1007ec03, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007ec06, 0x5)   add(eax, 0xbb);                       /* add eax, 0xbb */
    II(0x1007ec0b, 0x5)   calld(0x1007d6bb, -0x1555);           /* call 0x1007d6bb */
l_0x1007ec10:
    II(0x1007ec10, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x1007ec17, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x1007ec1e, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x1007ec25, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x1007ec2c, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x1007ec31, 0x5)   calld(0x10076338, -0x88fe);           /* call 0x10076338 */
    II(0x1007ec36, 0x3)   lea(ebx, ebp - 0x3c);                 /* lea ebx, [ebp-0x3c] */
    II(0x1007ec39, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007ec3b, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1007ec3d, 0x5)   calld(0x1007643c, -0x8806);           /* call 0x1007643c */
    II(0x1007ec42, 0x2)   jmpd(0x1007ec4c, 0x8);                /* jmp 0x1007ec4c */
l_0x1007ec44:
    II(0x1007ec44, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007ec47, 0x5)   calld(0x10076bf8, -0x8054);           /* call 0x10076bf8 */
l_0x1007ec4c:
    II(0x1007ec4c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007ec4e, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007ec51, 0x5)   calld(0x1013ad71, 0xbc11b);           /* call 0x1013ad71 */
    II(0x1007ec56, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007ec58, 0x6)   jzd(0x1007ed06, 0xa8);                /* jz dword 0x1007ed06 */
    II(0x1007ec5e, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007ec61, 0x5)   calld(0x100763a0, -0x88c6);           /* call 0x100763a0 */
    II(0x1007ec66, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007ec68, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x1007ec6b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1007ec6f, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1007ec71, 0x2)   jnzd(0x1007ec8a, 0x17);               /* jnz 0x1007ec8a */
    II(0x1007ec73, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007ec76, 0x5)   calld(0x100763a0, -0x88db);           /* call 0x100763a0 */
    II(0x1007ec7b, 0x5)   calld(0x1007623c, -0x8a44);           /* call 0x1007623c */
    II(0x1007ec80, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x1007ec83, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007ec86, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007ec88, 0x2)   jgd(0x1007ec8f, 0x5);                 /* jg 0x1007ec8f */
l_0x1007ec8a:
    II(0x1007ec8a, 0x5)   jmpd(0x1007ed01, 0x72);               /* jmp 0x1007ed01 */
l_0x1007ec8f:
    II(0x1007ec8f, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007ec92, 0x5)   calld(0x100763a0, -0x88f7);           /* call 0x100763a0 */
    II(0x1007ec97, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x1007ec9c, 0x2)   jnzd(0x1007ecb0, 0x12);               /* jnz 0x1007ecb0 */
    II(0x1007ec9e, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007eca1, 0x5)   calld(0x100763a0, -0x8906);           /* call 0x100763a0 */
    II(0x1007eca6, 0x5)   calld(0x101509a6, 0xd1cfb);           /* call 0x101509a6 */
    II(0x1007ecab, 0x3)   add(memd_a32(ss, ebp - 0x1c), eax);   /* add [ebp-0x1c], eax */
    II(0x1007ecae, 0x2)   jmpd(0x1007ed01, 0x51);               /* jmp 0x1007ed01 */
l_0x1007ecb0:
    II(0x1007ecb0, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007ecb3, 0x5)   calld(0x100763a0, -0x8918);           /* call 0x100763a0 */
    II(0x1007ecb8, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x47);   /* cmp word [eax+0x8], 0x47 */
    II(0x1007ecbd, 0x2)   jnzd(0x1007ecd1, 0x12);               /* jnz 0x1007ecd1 */
    II(0x1007ecbf, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007ecc2, 0x5)   calld(0x100763a0, -0x8927);           /* call 0x100763a0 */
    II(0x1007ecc7, 0x5)   calld(0x101509a6, 0xd1cda);           /* call 0x101509a6 */
    II(0x1007eccc, 0x3)   add(memd_a32(ss, ebp - 0xc), eax);    /* add [ebp-0xc], eax */
    II(0x1007eccf, 0x2)   jmpd(0x1007ed01, 0x30);               /* jmp 0x1007ed01 */
l_0x1007ecd1:
    II(0x1007ecd1, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007ecd4, 0x5)   calld(0x100763a0, -0x8939);           /* call 0x100763a0 */
    II(0x1007ecd9, 0x4)   test(memb_a32(ds, eax + 0x12), 0x80); /* test byte [eax+0x12], 0x80 */
    II(0x1007ecdd, 0x2)   jzd(0x1007ecf1, 0x12);                /* jz 0x1007ecf1 */
    II(0x1007ecdf, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007ece2, 0x5)   calld(0x100763a0, -0x8947);           /* call 0x100763a0 */
    II(0x1007ece7, 0x5)   calld(0x101509a6, 0xd1cba);           /* call 0x101509a6 */
    II(0x1007ecec, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
    II(0x1007ecef, 0x2)   jmpd(0x1007ed01, 0x10);               /* jmp 0x1007ed01 */
l_0x1007ecf1:
    II(0x1007ecf1, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007ecf4, 0x5)   calld(0x100763a0, -0x8959);           /* call 0x100763a0 */
    II(0x1007ecf9, 0x5)   calld(0x101509a6, 0xd1ca8);           /* call 0x101509a6 */
    II(0x1007ecfe, 0x3)   add(memd_a32(ss, ebp - 0x14), eax);   /* add [ebp-0x14], eax */
l_0x1007ed01:
    II(0x1007ed01, 0x5)   jmpd(0x1007ec44, -0xc2);              /* jmp 0x1007ec44 */
l_0x1007ed06:
    II(0x1007ed06, 0x6)   lea(ecx, ebp - 0xf8);                 /* lea ecx, [ebp+0xffffff08] */
    II(0x1007ed0c, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1007ed0f, 0x5)   calld(0x1008a838, 0xbb24);            /* call 0x1008a838 */
    II(0x1007ed14, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1007ed16, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x1007ed1a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007ed1d, 0x3)   add(eax, 0x63);                       /* add eax, 0x63 */
    II(0x1007ed20, 0x5)   calld(0x1007d6bb, -0x166a);           /* call 0x1007d6bb */
    II(0x1007ed25, 0x6)   lea(ecx, ebp - 0xf8);                 /* lea ecx, [ebp+0xffffff08] */
    II(0x1007ed2b, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1007ed2e, 0x5)   calld(0x1008a838, 0xbb05);            /* call 0x1008a838 */
    II(0x1007ed33, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1007ed35, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1007ed39, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1007ed3b, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1007ed3e, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1007ed40, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1007ed42, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1007ed45, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007ed48, 0x3)   add(eax, 0x21);                       /* add eax, 0x21 */
    II(0x1007ed4b, 0x5)   calld(0x1007d6bb, -0x1695);           /* call 0x1007d6bb */
    II(0x1007ed50, 0x6)   lea(ecx, ebp - 0xf8);                 /* lea ecx, [ebp+0xffffff08] */
    II(0x1007ed56, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1007ed59, 0x5)   calld(0x1008a838, 0xbada);            /* call 0x1008a838 */
    II(0x1007ed5e, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1007ed60, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1007ed64, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1007ed66, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1007ed69, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1007ed6b, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1007ed6d, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1007ed70, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007ed73, 0x3)   add(eax, 0x37);                       /* add eax, 0x37 */
    II(0x1007ed76, 0x5)   calld(0x1007d6bb, -0x16c0);           /* call 0x1007d6bb */
    II(0x1007ed7b, 0x6)   lea(ecx, ebp - 0xf8);                 /* lea ecx, [ebp+0xffffff08] */
    II(0x1007ed81, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1007ed84, 0x5)   calld(0x1008a838, 0xbaaf);            /* call 0x1008a838 */
    II(0x1007ed89, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1007ed8b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1007ed8f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007ed92, 0x3)   add(eax, 0x79);                       /* add eax, 0x79 */
    II(0x1007ed95, 0x5)   calld(0x1007d6bb, -0x16df);           /* call 0x1007d6bb */
    II(0x1007ed9a, 0x6)   lea(ecx, ebp - 0xf8);                 /* lea ecx, [ebp+0xffffff08] */
    II(0x1007eda0, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1007eda3, 0x5)   calld(0x1008a838, 0xba90);            /* call 0x1008a838 */
    II(0x1007eda8, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1007edaa, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x1007edae, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1007edb0, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1007edb3, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1007edb5, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1007edb7, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1007edba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007edbd, 0x5)   add(eax, 0x8f);                       /* add eax, 0x8f */
    II(0x1007edc2, 0x5)   calld(0x1007d6bb, -0x170c);           /* call 0x1007d6bb */
    II(0x1007edc7, 0x6)   lea(ecx, ebp - 0xf8);                 /* lea ecx, [ebp+0xffffff08] */
    II(0x1007edcd, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1007edd0, 0x5)   calld(0x1008a838, 0xba63);            /* call 0x1008a838 */
    II(0x1007edd5, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1007edd7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x1007eddb, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1007eddd, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1007ede0, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1007ede2, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1007ede4, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1007ede7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007edea, 0x5)   add(eax, 0xa5);                       /* add eax, 0xa5 */
    II(0x1007edef, 0x5)   calld(0x1007d6bb, -0x1739);           /* call 0x1007d6bb */
    II(0x1007edf4, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1007edf7, 0x5)   calld(0x1008a838, 0xba3c);            /* call 0x1008a838 */
    II(0x1007edfc, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007edfe, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x1007ee03, 0x5)   calld(0x100a4d50, 0x25f48);           /* call 0x100a4d50 */
    II(0x1007ee08, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007ee0a, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1007ee0d, 0x5)   calld(0x10088cbc, 0x9eaa);            /* call 0x10088cbc */
    II(0x1007ee12, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007ee14, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007ee17, 0x5)   calld(0x10075f6c, -0x8eb0);           /* call 0x10075f6c */
    II(0x1007ee1c, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1007ee1e, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1007ee1f, 0x1)   popd(edi);                            /* pop edi */
    II(0x1007ee20, 0x1)   popd(esi);                            /* pop esi */
    II(0x1007ee21, 0x1)   popd(edx);                            /* pop edx */
    II(0x1007ee22, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1007ee23, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1007ee24, 0x1)   retd();                               /* ret */
FUNC_END

