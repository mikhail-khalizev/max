FUNC_BEGIN(0x10154063, 0x5c5857cb7dd04e24, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0xe5, 0x1c, 0x1, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xfe, 0x40, 0x6b, 0x8b, 0x45, 0xfc, 0x80, 0x60, 0x6b, 0xf, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x12, 0x10, 0x75, 0x71, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x6b, 0x25, 0xff, 0, 0, 0, 0xd1, 0xf8, 0x89, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0x66, 0xf, 0xbe, 0x80, 0x14, 0xd9, 0x1b, 0x10, 0x89, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xf8, 0x66, 0xf, 0xbe, 0x80, 0x1c, 0xd9, 0x1b, 0x10, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xfc, 0xe8, 0xde, 0x5e, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x6b, 0x1, 0x74, 0x12, 0xf, 0xbf, 0x5d, 0xf0, 0xf, 0xbf, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0xe8, 0x4c, 0x5b, 0xff, 0xff, 0xeb, 0x18, 0x8b, 0x45, 0xf0, 0xf7, 0xd8, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf4, 0xf7, 0xd8, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0xe8, 0x32, 0x5b, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xa3, 0x5e, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10154063, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x10154068, 0x5)   calld(sys_check_available_stack_size, 0x11ce5); /* call 0x10165d52 */
    II(0x1015406d, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1015406e, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1015406f, 0x1)   pushd(edx);                           /* push edx */
    II(0x10154070, 0x1)   pushd(esi);                           /* push esi */
    II(0x10154071, 0x1)   pushd(edi);                           /* push edi */
    II(0x10154072, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10154073, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10154075, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x1015407b, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1015407e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154081, 0x3)   inc(memb_a32(ds, eax + 0x6b));        /* inc byte [eax+0x6b] */
    II(0x10154084, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154087, 0x4)   and_(memb_a32(ds, eax + 0x6b), 0xf);  /* and byte [eax+0x6b], 0xf */
    II(0x1015408b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015408e, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x10154092, 0x2)   jnzd(0x10154105, 0x71);               /* jnz 0x10154105 */
    II(0x10154094, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154097, 0x3)   mov(al, memb_a32(ds, eax + 0x6b));    /* mov al, [eax+0x6b] */
    II(0x1015409a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015409f, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x101540a1, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x101540a4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101540a8, 0x8)   movsx(ax, memb_a32(ds, eax + 0x101bd914)); /* movsx ax, byte [eax+0x101bd914] */
    II(0x101540b0, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x101540b3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101540b7, 0x8)   movsx(ax, memb_a32(ds, eax + 0x101bd91c)); /* movsx ax, byte [eax+0x101bd91c] */
    II(0x101540bf, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x101540c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101540c5, 0x5)   calld(0x10149fa8, -0xa122);           /* call 0x10149fa8 */
    II(0x101540ca, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101540cd, 0x4)   test(memb_a32(ds, eax + 0x6b), 0x1);  /* test byte [eax+0x6b], 0x1 */
    II(0x101540d1, 0x2)   jzd(0x101540e5, 0x12);                /* jz 0x101540e5 */
    II(0x101540d3, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x10)); /* movsx ebx, word [ebp-0x10] */
    II(0x101540d7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x101540db, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101540de, 0x5)   calld(0x10149c2f, -0xa4b4);           /* call 0x10149c2f */
    II(0x101540e3, 0x2)   jmpd(0x101540fd, 0x18);               /* jmp 0x101540fd */
l_0x101540e5:
    II(0x101540e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101540e8, 0x2)   neg(eax);                             /* neg eax */
    II(0x101540ea, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x101540ed, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101540f0, 0x2)   neg(eax);                             /* neg eax */
    II(0x101540f2, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x101540f5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101540f8, 0x5)   calld(0x10149c2f, -0xa4ce);           /* call 0x10149c2f */
l_0x101540fd:
    II(0x101540fd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10154100, 0x5)   calld(0x10149fa8, -0xa15d);           /* call 0x10149fa8 */
l_0x10154105:
    II(0x10154105, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10154107, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10154108, 0x1)   popd(edi);                            /* pop edi */
    II(0x10154109, 0x1)   popd(esi);                            /* pop esi */
    II(0x1015410a, 0x1)   popd(edx);                            /* pop edx */
    II(0x1015410b, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1015410c, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1015410d, 0x1)   retd();                               /* ret */
FUNC_END

