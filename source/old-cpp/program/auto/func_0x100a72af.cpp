FUNC_BEGIN(0x100a72af, 0x1dc46d3d7f68c0e8, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0x99, 0xea, 0xb, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xf4, 0xe8, 0x89, 0x3d, 0xfe, 0xff, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x13, 0x8b, 0x45, 0xfc, 0xe8, 0xb3, 0xfa, 0xfc, 0xff, 0x84, 0xc0, 0x74, 0x48, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x3a, 0xf3, 0xfc, 0xff, 0x8b, 0x45, 0xf8, 0xe8, 0xfa, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x6, 0x3a, 0x9, 0, 0x84, 0xc0, 0x74, 0x11, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0xf5, 0x39, 0x9, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0xd, 0x8b, 0x55, 0xf8, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xf8, 0xea, 0xff, 0xff, 0xeb, 0x48, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x1b, 0x8b, 0x45, 0xfc, 0xe8, 0x59, 0xfa, 0xfc, 0xff, 0x84, 0xc0, 0x74, 0x1c, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0xe0, 0xf2, 0xfc, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x1b, 0xe8, 0xd3, 0xf2, 0xfc, 0xff, 0xeb, 0x1a, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x17, 0x8b, 0x45, 0xfc, 0xe8, 0x2b, 0xfa, 0xfc, 0xff, 0x84, 0xc0, 0x74, 0x8, 0x8b, 0x45, 0xf8, 0xe8, 0x7f, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xf9, 0x17, 0xfe, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100a72af, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100a72b4, 0x5)   calld(sys_check_available_stack_size, 0xbea99); /* call 0x10165d52 */
    II(0x100a72b9, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a72ba, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a72bb, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a72bc, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a72bd, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a72be, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a72c0, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x100a72c6, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a72c9, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100a72cc, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100a72cf, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a72d2, 0x5)   calld(0x1008b060, -0x1c277);          /* call 0x1008b060 */
    II(0x100a72d7, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100a72da, 0x3)   add(edx, 0x13);                       /* add edx, 0x13 */
    II(0x100a72dd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a72e0, 0x5)   calld(0x10076d98, -0x3054d);          /* call 0x10076d98 */
    II(0x100a72e5, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a72e7, 0x2)   jzd(0x100a7331, 0x48);                /* jz 0x100a7331 */
    II(0x100a72e9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a72eb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a72ee, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100a72f1, 0x5)   calld(0x10076630, -0x30cc6);          /* call 0x10076630 */
    II(0x100a72f6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a72f9, 0x5)   calld(0x100a71f8, -0x106);            /* call 0x100a71f8 */
    II(0x100a72fe, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a7300, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a7303, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100a7306, 0x5)   calld(0x1013ad11, 0x93a06);           /* call 0x1013ad11 */
    II(0x100a730b, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a730d, 0x2)   jzd(0x100a7320, 0x11);                /* jz 0x100a7320 */
    II(0x100a730f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a7311, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a7314, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100a7317, 0x5)   calld(0x1013ad11, 0x939f5);           /* call 0x1013ad11 */
    II(0x100a731c, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a731e, 0x2)   jnzd(0x100a7322, 0x2);                /* jnz 0x100a7322 */
l_0x100a7320:
    II(0x100a7320, 0x2)   jmpd(0x100a732f, 0xd);                /* jmp 0x100a732f */
l_0x100a7322:
    II(0x100a7322, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100a7325, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100a732a, 0x5)   calld(0x100a5e27, -0x1508);           /* call 0x100a5e27 */
l_0x100a732f:
    II(0x100a732f, 0x2)   jmpd(0x100a7379, 0x48);               /* jmp 0x100a7379 */
l_0x100a7331:
    II(0x100a7331, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100a7334, 0x3)   add(edx, 0x1b);                       /* add edx, 0x1b */
    II(0x100a7337, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a733a, 0x5)   calld(0x10076d98, -0x305a7);          /* call 0x10076d98 */
    II(0x100a733f, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a7341, 0x2)   jzd(0x100a735f, 0x1c);                /* jz 0x100a735f */
    II(0x100a7343, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a7345, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a7348, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100a734b, 0x5)   calld(0x10076630, -0x30d20);          /* call 0x10076630 */
    II(0x100a7350, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a7352, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a7355, 0x3)   add(eax, 0x1b);                       /* add eax, 0x1b */
    II(0x100a7358, 0x5)   calld(0x10076630, -0x30d2d);          /* call 0x10076630 */
    II(0x100a735d, 0x2)   jmpd(0x100a7379, 0x1a);               /* jmp 0x100a7379 */
l_0x100a735f:
    II(0x100a735f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100a7362, 0x3)   add(edx, 0x17);                       /* add edx, 0x17 */
    II(0x100a7365, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a7368, 0x5)   calld(0x10076d98, -0x305d5);          /* call 0x10076d98 */
    II(0x100a736d, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a736f, 0x2)   jzd(0x100a7379, 0x8);                 /* jz 0x100a7379 */
    II(0x100a7371, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a7374, 0x5)   calld(0x100a71f8, -0x181);            /* call 0x100a71f8 */
l_0x100a7379:
    II(0x100a7379, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a737b, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a737e, 0x5)   calld(0x10088b7c, -0x1e807);          /* call 0x10088b7c */
    II(0x100a7383, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a7385, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a7386, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a7387, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a7388, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a7389, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a738a, 0x1)   retd();                               /* ret */
FUNC_END

