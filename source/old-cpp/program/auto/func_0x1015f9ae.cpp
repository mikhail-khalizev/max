FUNC_BEGIN(0x1015f9ae, 0xf440f7170b291158, 0x20, ({0x68, 0x54, 0, 0, 0, 0xe8, 0x9a, 0x63, 0, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x30, 0, 0, 0, 0x89, 0x45, 0xfc, 0x31, 0xc0, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x6e, 0xb7, 0xf2, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x3a, 0x67, 0xf1, 0xff, 0x8d, 0x5d, 0xf4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xbe, 0x6c, 0xf1, 0xff, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x15, 0xb3, 0xfd, 0xff, 0x84, 0xc0, 0x74, 0x9, 0xc6, 0x45, 0xf8, 0x1, 0xe9, 0xe8, 0, 0, 0, 0x8d, 0x45, 0xf4, 0xe8, 0x63, 0x6b, 0xf1, 0xff, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x63, 0x8d, 0x55, 0xe4, 0x8b, 0x45, 0xfc, 0xe8, 0xa, 0x2b, 0xff, 0xff, 0x8d, 0x45, 0xf4, 0xe8, 0x44, 0x6b, 0xf1, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8d, 0x45, 0xf4, 0xe8, 0x36, 0x6b, 0xf1, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xe0, 0xe8, 0x60, 0x70, 0xf1, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0x78, 0x88, 0xfa, 0xff, 0x84, 0xc0, 0x75, 0x6, 0xc6, 0x45, 0xdc, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xdc, 0, 0x8a, 0x45, 0xdc, 0x88, 0x45, 0xf8, 0x31, 0xc0, 0x8a, 0x45, 0xf8, 0x85, 0xc0, 0x75, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0x51, 0xf8, 0xff, 0xff, 0xe9, 0x71, 0, 0, 0, 0x8d, 0x45, 0xf4, 0xe8, 0xec, 0x6a, 0xf1, 0xff, 0x80, 0x78, 0x3d, 0x2, 0x75, 0xe, 0x8d, 0x45, 0xf4, 0xe8, 0xde, 0x6a, 0xf1, 0xff, 0x80, 0x78, 0x3e, 0x1, 0x75, 0x2, 0xeb, 0x6, 0xc6, 0x45, 0xf8, 0, 0xeb, 0x4d, 0x8d, 0x55, 0xe4, 0x8b, 0x45, 0xfc, 0xe8, 0x83, 0x2a, 0xff, 0xff, 0x8d, 0x45, 0xf4, 0xe8, 0xbd, 0x6a, 0xf1, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8d, 0x45, 0xf4, 0xe8, 0xaf, 0x6a, 0xf1, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xd4, 0xe8, 0xd9, 0x6f, 0xf1, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xe4, 0xe8, 0xf1, 0x87, 0xfa, 0xff, 0x84, 0xc0, 0x75, 0x6, 0xc6, 0x45, 0xd8, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xd8, 0, 0x8a, 0x45, 0xd8, 0x88, 0x45, 0xf8, 0x80, 0x7d, 0xf8, 0, 0xf, 0x84, 0x3b, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0xc, 0xf, 0x84, 0xbd, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x15, 0x74, 0x6, 0xc6, 0x45, 0xd0, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xd0, 0, 0x31, 0xc0, 0x8a, 0x45, 0xd0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x1a, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0xe8, 0x51, 0x48, 0xf1, 0xff, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x12, 0x10, 0x74, 0x79, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x1a, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1a, 0x40, 0x98, 0xe8, 0x21, 0x48, 0xf1, 0xff, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1c, 0x40, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0xe8, 0xf8, 0x47, 0xf1, 0xff, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1c, 0x40, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1a, 0x40, 0x98, 0xe8, 0xcf, 0x47, 0xf1, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xbd, 0xf4, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x2d, 0x4, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0xe8, 0xb9, 0xad, 0xf2, 0xff, 0xba, 0x20, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x1e, 0x33, 0, 0, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x3f, 0x1c, 0xf1, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x6e, 0xb1, 0xfd, 0xff, 0x84, 0xc0, 0x74, 0x26, 0x8d, 0x45, 0xf4, 0xe8, 0x65, 0x69, 0xf1, 0xff, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x74, 0x2, 0xeb, 0x7, 0xc6, 0x5, 0x1b, 0x39, 0x1c, 0x10, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xec, 0x62, 0xf1, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1015f9ae, 0x5)   pushd(0x54);                          /* push dword 0x54 */
    II(0x1015f9b3, 0x5)   calld(sys_check_available_stack_size, 0x639a); /* call 0x10165d52 */
    II(0x1015f9b8, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1015f9b9, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1015f9ba, 0x1)   pushd(edx);                           /* push edx */
    II(0x1015f9bb, 0x1)   pushd(esi);                           /* push esi */
    II(0x1015f9bc, 0x1)   pushd(edi);                           /* push edi */
    II(0x1015f9bd, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1015f9be, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1015f9c0, 0x6)   sub(esp, 0x30);                       /* sub esp, 0x30 */
    II(0x1015f9c6, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1015f9c9, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015f9cb, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015f9cc, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1015f9ce, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1015f9d0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015f9d2, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1015f9d5, 0x5)   calld(0x1008b148, -0xd4892);          /* call 0x1008b148 */
    II(0x1015f9da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015f9dd, 0x5)   calld(0x1007611c, -0xe98c6);          /* call 0x1007611c */
    II(0x1015f9e2, 0x3)   lea(ebx, ebp - 0xc);                  /* lea ebx, [ebp-0xc] */
    II(0x1015f9e5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015f9e7, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1015f9e9, 0x5)   calld(0x100766ac, -0xe9342);          /* call 0x100766ac */
    II(0x1015f9ee, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x1015f9f2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015f9f4, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1015f9f7, 0x5)   calld(0x1013ad11, -0x24ceb);          /* call 0x1013ad11 */
    II(0x1015f9fc, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015f9fe, 0x2)   jzd(0x1015fa09, 0x9);                 /* jz 0x1015fa09 */
    II(0x1015fa00, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x1015fa04, 0x5)   jmpd(0x1015faf1, 0xe8);               /* jmp 0x1015faf1 */
l_0x1015fa09:
    II(0x1015fa09, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1015fa0c, 0x5)   calld(0x10076574, -0xe949d);          /* call 0x10076574 */
    II(0x1015fa11, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x1015fa14, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015fa19, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1015fa1b, 0x2)   jnzd(0x1015fa80, 0x63);               /* jnz 0x1015fa80 */
    II(0x1015fa1d, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x1015fa20, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fa23, 0x5)   calld(0x10152532, -0xd4f6);           /* call 0x10152532 */
    II(0x1015fa28, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1015fa2b, 0x5)   calld(0x10076574, -0xe94bc);          /* call 0x10076574 */
    II(0x1015fa30, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x1015fa33, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1015fa36, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1015fa39, 0x5)   calld(0x10076574, -0xe94ca);          /* call 0x10076574 */
    II(0x1015fa3e, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x1015fa41, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1015fa44, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1015fa47, 0x5)   calld(0x10076aac, -0xe8fa0);          /* call 0x10076aac */
    II(0x1015fa4c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015fa4e, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1015fa51, 0x5)   calld(0x101082ce, -0x57788);          /* call 0x101082ce */
    II(0x1015fa56, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015fa58, 0x2)   jnzd(0x1015fa60, 0x6);                /* jnz 0x1015fa60 */
    II(0x1015fa5a, 0x4)   mov(memb_a32(ss, ebp - 0x24), 0x1);   /* mov byte [ebp-0x24], 0x1 */
    II(0x1015fa5e, 0x2)   jmpd(0x1015fa64, 0x4);                /* jmp 0x1015fa64 */
l_0x1015fa60:
    II(0x1015fa60, 0x4)   mov(memb_a32(ss, ebp - 0x24), 0);     /* mov byte [ebp-0x24], 0x0 */
l_0x1015fa64:
    II(0x1015fa64, 0x3)   mov(al, memb_a32(ss, ebp - 0x24));    /* mov al, [ebp-0x24] */
    II(0x1015fa67, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
    II(0x1015fa6a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015fa6c, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x1015fa6f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1015fa71, 0x2)   jnzd(0x1015fa7b, 0x8);                /* jnz 0x1015fa7b */
    II(0x1015fa73, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fa76, 0x5)   calld(0x1015f2cc, -0x7af);            /* call 0x1015f2cc */
l_0x1015fa7b:
    II(0x1015fa7b, 0x5)   jmpd(0x1015faf1, 0x71);               /* jmp 0x1015faf1 */
l_0x1015fa80:
    II(0x1015fa80, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1015fa83, 0x5)   calld(0x10076574, -0xe9514);          /* call 0x10076574 */
    II(0x1015fa88, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x2);   /* cmp byte [eax+0x3d], 0x2 */
    II(0x1015fa8c, 0x2)   jnzd(0x1015fa9c, 0xe);                /* jnz 0x1015fa9c */
    II(0x1015fa8e, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1015fa91, 0x5)   calld(0x10076574, -0xe9522);          /* call 0x10076574 */
    II(0x1015fa96, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1);   /* cmp byte [eax+0x3e], 0x1 */
    II(0x1015fa9a, 0x2)   jnzd(0x1015fa9e, 0x2);                /* jnz 0x1015fa9e */
l_0x1015fa9c:
    II(0x1015fa9c, 0x2)   jmpd(0x1015faa4, 0x6);                /* jmp 0x1015faa4 */
l_0x1015fa9e:
    II(0x1015fa9e, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x1015faa2, 0x2)   jmpd(0x1015faf1, 0x4d);               /* jmp 0x1015faf1 */
l_0x1015faa4:
    II(0x1015faa4, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x1015faa7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015faaa, 0x5)   calld(0x10152532, -0xd57d);           /* call 0x10152532 */
    II(0x1015faaf, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1015fab2, 0x5)   calld(0x10076574, -0xe9543);          /* call 0x10076574 */
    II(0x1015fab7, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x1015faba, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1015fabd, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1015fac0, 0x5)   calld(0x10076574, -0xe9551);          /* call 0x10076574 */
    II(0x1015fac5, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x1015fac8, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1015facb, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x1015face, 0x5)   calld(0x10076aac, -0xe9027);          /* call 0x10076aac */
    II(0x1015fad3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015fad5, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1015fad8, 0x5)   calld(0x101082ce, -0x5780f);          /* call 0x101082ce */
    II(0x1015fadd, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015fadf, 0x2)   jnzd(0x1015fae7, 0x6);                /* jnz 0x1015fae7 */
    II(0x1015fae1, 0x4)   mov(memb_a32(ss, ebp - 0x28), 0x1);   /* mov byte [ebp-0x28], 0x1 */
    II(0x1015fae5, 0x2)   jmpd(0x1015faeb, 0x4);                /* jmp 0x1015faeb */
l_0x1015fae7:
    II(0x1015fae7, 0x4)   mov(memb_a32(ss, ebp - 0x28), 0);     /* mov byte [ebp-0x28], 0x0 */
l_0x1015faeb:
    II(0x1015faeb, 0x3)   mov(al, memb_a32(ss, ebp - 0x28));    /* mov al, [ebp-0x28] */
    II(0x1015faee, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
l_0x1015faf1:
    II(0x1015faf1, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x1015faf5, 0x6)   jzd(0x1015fc36, 0x13b);               /* jz dword 0x1015fc36 */
    II(0x1015fafb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fafe, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0xc);    /* cmp word [eax+0x8], 0xc */
    II(0x1015fb03, 0x6)   jzd(0x1015fbc6, 0xbd);                /* jz dword 0x1015fbc6 */
    II(0x1015fb09, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fb0c, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x15);   /* cmp word [eax+0x8], 0x15 */
    II(0x1015fb11, 0x2)   jzd(0x1015fb19, 0x6);                 /* jz 0x1015fb19 */
    II(0x1015fb13, 0x4)   mov(memb_a32(ss, ebp - 0x30), 0x1);   /* mov byte [ebp-0x30], 0x1 */
    II(0x1015fb17, 0x2)   jmpd(0x1015fb1d, 0x4);                /* jmp 0x1015fb1d */
l_0x1015fb19:
    II(0x1015fb19, 0x4)   mov(memb_a32(ss, ebp - 0x30), 0);     /* mov byte [ebp-0x30], 0x0 */
l_0x1015fb1d:
    II(0x1015fb1d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015fb1f, 0x3)   mov(al, memb_a32(ss, ebp - 0x30));    /* mov al, [ebp-0x30] */
    II(0x1015fb22, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015fb23, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1015fb28, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015fb29, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1015fb2b, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1015fb2d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fb30, 0x3)   mov(edx, memd_a32(ds, eax + 0x1a));   /* mov edx, [eax+0x1a] */
    II(0x1015fb33, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1015fb36, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fb39, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x1015fb3c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015fb3f, 0x5)   calld(0x10074395, -0xeb7af);          /* call 0x10074395 */
    II(0x1015fb44, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fb47, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x1015fb4b, 0x2)   jzd(0x1015fbc6, 0x79);                /* jz 0x1015fbc6 */
    II(0x1015fb4d, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1015fb52, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015fb53, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1015fb58, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015fb59, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1015fb5b, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1015fb5d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fb60, 0x3)   mov(edx, memd_a32(ds, eax + 0x1a));   /* mov edx, [eax+0x1a] */
    II(0x1015fb63, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1015fb66, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fb69, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x1015fb6d, 0x1)   inc(eax);                             /* inc eax */
    II(0x1015fb6e, 0x1)   cwde();                               /* cwde */
    II(0x1015fb6f, 0x5)   calld(0x10074395, -0xeb7df);          /* call 0x10074395 */
    II(0x1015fb74, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1015fb79, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015fb7a, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1015fb7f, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015fb80, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1015fb82, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1015fb84, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fb87, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x1015fb8b, 0x1)   inc(eax);                             /* inc eax */
    II(0x1015fb8c, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015fb8f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fb92, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x1015fb95, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015fb98, 0x5)   calld(0x10074395, -0xeb808);          /* call 0x10074395 */
    II(0x1015fb9d, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1015fba2, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015fba3, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1015fba8, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015fba9, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1015fbab, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1015fbad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fbb0, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x1015fbb4, 0x1)   inc(eax);                             /* inc eax */
    II(0x1015fbb5, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1015fbb8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fbbb, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x1015fbbf, 0x1)   inc(eax);                             /* inc eax */
    II(0x1015fbc0, 0x1)   cwde();                               /* cwde */
    II(0x1015fbc1, 0x5)   calld(0x10074395, -0xeb831);          /* call 0x10074395 */
l_0x1015fbc6:
    II(0x1015fbc6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fbc9, 0x5)   calld(0x1014f08b, -0x10b43);          /* call 0x1014f08b */
    II(0x1015fbce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fbd1, 0x4)   mov(memb_a32(ds, eax + 0x2d), 0x4);   /* mov byte [eax+0x2d], 0x4 */
    II(0x1015fbd5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015fbd7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fbda, 0x5)   calld(0x1008a998, -0xd5247);          /* call 0x1008a998 */
    II(0x1015fbdf, 0x5)   mov(edx, 0x20);                       /* mov edx, 0x20 */
    II(0x1015fbe4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fbe7, 0x5)   calld(0x10162f0a, 0x331e);            /* call 0x10162f0a */
    II(0x1015fbec, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1015fbf1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015fbf4, 0x5)   calld(0x10071838, -0xee3c1);          /* call 0x10071838 */
    II(0x1015fbf9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015fbfb, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1015fbfe, 0x5)   calld(0x1013ad71, -0x24e92);          /* call 0x1013ad71 */
    II(0x1015fc03, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015fc05, 0x2)   jzd(0x1015fc2d, 0x26);                /* jz 0x1015fc2d */
    II(0x1015fc07, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1015fc0a, 0x5)   calld(0x10076574, -0xe969b);          /* call 0x10076574 */
    II(0x1015fc0f, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1015fc12, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015fc17, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1015fc1d, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x1015fc23, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015fc28, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x1015fc2b, 0x2)   jzd(0x1015fc2f, 0x2);                 /* jz 0x1015fc2f */
l_0x1015fc2d:
    II(0x1015fc2d, 0x2)   jmpd(0x1015fc36, 0x7);                /* jmp 0x1015fc36 */
l_0x1015fc2f:
    II(0x1015fc2f, 0x7)   mov(memb_a32(ds, 0x101c391b), 0x1);   /* mov byte [0x101c391b], 0x1 */
l_0x1015fc36:
    II(0x1015fc36, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015fc38, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1015fc3b, 0x5)   calld(0x10075f2c, -0xe9d14);          /* call 0x10075f2c */
    II(0x1015fc40, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1015fc42, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1015fc43, 0x1)   popd(edi);                            /* pop edi */
    II(0x1015fc44, 0x1)   popd(esi);                            /* pop esi */
    II(0x1015fc45, 0x1)   popd(edx);                            /* pop edx */
    II(0x1015fc46, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1015fc47, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1015fc48, 0x1)   retd();                               /* ret */
FUNC_END

