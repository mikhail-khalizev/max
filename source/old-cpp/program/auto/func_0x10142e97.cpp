FUNC_BEGIN(0x10142e97, 0xa8d8cde8c08b71e, 0x20, ({0x68, 0x64, 0, 0, 0, 0xe8, 0xb1, 0x2e, 0x2, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x30, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x8b, 0, 0x8b, 0x50, 0x16, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0xa, 0x1, 0xd3, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0xf, 0xaf, 0x50, 0xe, 0x1, 0xd3, 0x89, 0x5d, 0xe4, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x12, 0x8b, 0x55, 0xfc, 0x66, 0x2b, 0x42, 0xa, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x16, 0x8b, 0x55, 0xfc, 0x66, 0x2b, 0x42, 0xe, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xe4, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x4, 0xf, 0xbf, 0, 0x50, 0xf, 0xbf, 0x45, 0xec, 0x50, 0xf, 0xbf, 0x45, 0xe8, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0xe, 0x83, 0xea, 0x46, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x4, 0xf, 0xbf, 0, 0xf, 0xaf, 0xc2, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0x4, 0x83, 0xc2, 0x8, 0x1, 0xd0, 0x50, 0xe8, 0x7b, 0x7c, 0x2, 0, 0x83, 0xc4, 0x18, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1a, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0x21, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0x78, 0x20, 0, 0x74, 0x8, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xf8, 0xeb, 0x7, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x65, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x45, 0xe8, 0xf, 0xaf, 0xd0, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xf4, 0x8b, 0x55, 0xfc, 0x83, 0x7a, 0x20, 0, 0x74, 0x32, 0x8b, 0x55, 0xfc, 0x8b, 0x5a, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xfc, 0x8b, 0x42, 0x1c, 0xc1, 0xf8, 0x10, 0x29, 0xc3, 0x89, 0xd8, 0xf, 0xbf, 0x55, 0xe8, 0xf, 0xaf, 0xd0, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xf8, 0xeb, 0x7, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x26, 0xc1, 0xf8, 0x10, 0x50, 0xf, 0xbf, 0x4d, 0xf4, 0xf, 0xbf, 0x5d, 0xec, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xe4, 0xe8, 0x66, 0xfd, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x28, 0xc1, 0xf8, 0x10, 0x50, 0xf, 0xbf, 0x4d, 0xf8, 0xf, 0xbf, 0x5d, 0xec, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x45, 0xe8, 0x8b, 0x75, 0xe4, 0x1, 0xc6, 0xf, 0xbf, 0x45, 0xf8, 0x29, 0xc6, 0x89, 0xf0, 0xe8, 0x6, 0xfe, 0xff, 0xff, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x17, 0x72, 0x2, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x24, 0xff, 0x15, 0xf4, 0xdd, 0x1b, 0x10, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x45, 0xe8, 0x7e, 0x6, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xf0, 0xf, 0xbf, 0x55, 0xe8, 0xf, 0xbf, 0x45, 0xf0, 0x29, 0xc2, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x3, 0x50, 0xa, 0x83, 0xea, 0x2, 0x89, 0x55, 0xd4, 0xff, 0x15, 0xf0, 0xdd, 0x1b, 0x10, 0xf, 0xbf, 0x55, 0xec, 0x29, 0xc2, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0xe, 0x1, 0xd0, 0x89, 0x45, 0xd8, 0xf, 0xbf, 0x45, 0xf0, 0x3, 0x45, 0xd4, 0x83, 0xc0, 0x4, 0x89, 0x45, 0xdc, 0xff, 0x15, 0xf0, 0xdd, 0x1b, 0x10, 0x8b, 0x55, 0xd8, 0x1, 0xc2, 0x89, 0x55, 0xe0, 0x8b, 0x45, 0xfc, 0xff, 0x70, 0x2c, 0xff, 0x15, 0xf0, 0xdd, 0x1b, 0x10, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xf0, 0x5, 0x4, 0, 0, 0, 0xf, 0xbf, 0xd8, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x75, 0xfc, 0x8b, 0x76, 0x6, 0xc1, 0xfe, 0x10, 0xf, 0xaf, 0x75, 0xd8, 0x8b, 0x45, 0xfc, 0x8b, 0, 0x8b, 0x40, 0x16, 0x3, 0x45, 0xd4, 0x1, 0xf0, 0xe8, 0x70, 0x76, 0xfa, 0xff, 0x68, 0xff, 0, 0x1, 0, 0x8b, 0x4d, 0xfc, 0x8b, 0x49, 0x6, 0xc1, 0xf9, 0x10, 0xf, 0xbf, 0x5d, 0xe8, 0x8b, 0x75, 0xfc, 0x8b, 0x76, 0x24, 0xff, 0x15, 0xf0, 0xdd, 0x1b, 0x10, 0xf, 0xbf, 0x55, 0xec, 0x29, 0xc2, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0xe, 0x1, 0xc2, 0x89, 0x55, 0xd0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x8b, 0x55, 0xd0, 0xf, 0xaf, 0xd0, 0x89, 0x55, 0xd0, 0xf, 0xbf, 0x55, 0xe8, 0xf, 0xbf, 0x45, 0xf0, 0x29, 0xc2, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x8b, 0x55, 0xfc, 0x8b, 0x12, 0x8b, 0x52, 0x16, 0x1, 0xd0, 0x8b, 0x55, 0xfc, 0x3, 0x42, 0xa, 0x3, 0x45, 0xd0, 0x89, 0xf2, 0xff, 0x15, 0xec, 0xdd, 0x1b, 0x10, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0xa, 0x8b, 0x45, 0xfc, 0x8b, 0, 0x8b, 0x40, 0x12, 0xe8, 0x2a, 0x43, 0x2, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10142e97, 0x5)   pushd(0x64);                          /* push dword 0x64 */
    II(0x10142e9c, 0x5)   calld(sys_check_available_stack_size, 0x22eb1); /* call 0x10165d52 */
    II(0x10142ea1, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10142ea2, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10142ea3, 0x1)   pushd(edx);                           /* push edx */
    II(0x10142ea4, 0x1)   pushd(esi);                           /* push esi */
    II(0x10142ea5, 0x1)   pushd(edi);                           /* push edi */
    II(0x10142ea6, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10142ea7, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10142ea9, 0x6)   sub(esp, 0x30);                       /* sub esp, 0x30 */
    II(0x10142eaf, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x10142eb2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10142eb5, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10142eb7, 0x3)   mov(edx, memd_a32(ds, eax + 0x16));   /* mov edx, [eax+0x16] */
    II(0x10142eba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10142ebd, 0x3)   mov(ebx, memd_a32(ds, eax + 0xa));    /* mov ebx, [eax+0xa] */
    II(0x10142ec0, 0x2)   add(ebx, edx);                        /* add ebx, edx */
    II(0x10142ec2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10142ec5, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x10142ec8, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10142ecb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10142ece, 0x4)   imul(edx, memd_a32(ds, eax + 0xe));   /* imul edx, [eax+0xe] */
    II(0x10142ed2, 0x2)   add(ebx, edx);                        /* add ebx, edx */
    II(0x10142ed4, 0x3)   mov(memd_a32(ss, ebp - 0x1c), ebx);   /* mov [ebp-0x1c], ebx */
    II(0x10142ed7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10142eda, 0x4)   mov(ax, memw_a32(ds, eax + 0x12));    /* mov ax, [eax+0x12] */
    II(0x10142ede, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10142ee1, 0x4)   sub(ax, memw_a32(ds, edx + 0xa));     /* sub ax, [edx+0xa] */
    II(0x10142ee5, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10142ee8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10142eeb, 0x4)   mov(ax, memw_a32(ds, eax + 0x16));    /* mov ax, [eax+0x16] */
    II(0x10142eef, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10142ef2, 0x4)   sub(ax, memw_a32(ds, edx + 0xe));     /* sub ax, [edx+0xe] */
    II(0x10142ef6, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10142ef9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10142efc, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10142eff, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10142f02, 0x1)   pushd(eax);                           /* push eax */
    II(0x10142f03, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10142f06, 0x1)   pushd(eax);                           /* push eax */
    II(0x10142f07, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10142f0a, 0x3)   mov(eax, memd_a32(ds, eax + 0x4));    /* mov eax, [eax+0x4] */
    II(0x10142f0d, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x10142f10, 0x1)   pushd(eax);                           /* push eax */
    II(0x10142f11, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10142f15, 0x1)   pushd(eax);                           /* push eax */
    II(0x10142f16, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x10142f1a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10142f1b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10142f1e, 0x3)   mov(edx, memd_a32(ds, eax + 0xe));    /* mov edx, [eax+0xe] */
    II(0x10142f21, 0x3)   sub(edx, 0x46);                       /* sub edx, 0x46 */
    II(0x10142f24, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10142f27, 0x3)   mov(eax, memd_a32(ds, eax + 0x4));    /* mov eax, [eax+0x4] */
    II(0x10142f2a, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x10142f2d, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x10142f30, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10142f33, 0x3)   mov(edx, memd_a32(ds, edx + 0x4));    /* mov edx, [edx+0x4] */
    II(0x10142f36, 0x3)   add(edx, 0x8);                        /* add edx, 0x8 */
    II(0x10142f39, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10142f3b, 0x1)   pushd(eax);                           /* push eax */
    II(0x10142f3c, 0x5)   calld(/* sys */ 0x1016abbc, 0x27c7b); /* call 0x1016abbc */
    II(0x10142f41, 0x3)   add(esp, 0x18);                       /* add esp, 0x18 */
    II(0x10142f44, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10142f47, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x10142f4a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10142f4d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10142f4f, 0x2)   jnzd(0x10142f72, 0x21);               /* jnz 0x10142f72 */
    II(0x10142f51, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x10142f58, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10142f5b, 0x4)   cmp(memd_a32(ds, eax + 0x20), 0);     /* cmp dword [eax+0x20], 0x0 */
    II(0x10142f5f, 0x2)   jzd(0x10142f69, 0x8);                 /* jz 0x10142f69 */
    II(0x10142f61, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10142f64, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10142f67, 0x2)   jmpd(0x10142f70, 0x7);                /* jmp 0x10142f70 */
l_0x10142f69:
    II(0x10142f69, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
l_0x10142f70:
    II(0x10142f70, 0x2)   jmpd(0x10142fd7, 0x65);               /* jmp 0x10142fd7 */
l_0x10142f72:
    II(0x10142f72, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10142f75, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x10142f78, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10142f7b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x10142f7f, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x10142f82, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10142f85, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x10142f88, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10142f8b, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10142f8d, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10142f90, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10142f92, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10142f95, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10142f98, 0x4)   cmp(memd_a32(ds, edx + 0x20), 0);     /* cmp dword [edx+0x20], 0x0 */
    II(0x10142f9c, 0x2)   jzd(0x10142fd0, 0x32);                /* jz 0x10142fd0 */
    II(0x10142f9e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10142fa1, 0x3)   mov(ebx, memd_a32(ds, edx + 0x1a));   /* mov ebx, [edx+0x1a] */
    II(0x10142fa4, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10142fa7, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10142faa, 0x3)   mov(eax, memd_a32(ds, edx + 0x1c));   /* mov eax, [edx+0x1c] */
    II(0x10142fad, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10142fb0, 0x2)   sub(ebx, eax);                        /* sub ebx, eax */
    II(0x10142fb2, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10142fb4, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x10142fb8, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x10142fbb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10142fbe, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x10142fc1, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10142fc4, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10142fc6, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10142fc9, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10142fcb, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10142fce, 0x2)   jmpd(0x10142fd7, 0x7);                /* jmp 0x10142fd7 */
l_0x10142fd0:
    II(0x10142fd0, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
l_0x10142fd7:
    II(0x10142fd7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10142fda, 0x3)   mov(eax, memd_a32(ds, eax + 0x26));   /* mov eax, [eax+0x26] */
    II(0x10142fdd, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10142fe0, 0x1)   pushd(eax);                           /* push eax */
    II(0x10142fe1, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0xc));  /* movsx ecx, word [ebp-0xc] */
    II(0x10142fe5, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x14)); /* movsx ebx, word [ebp-0x14] */
    II(0x10142fe9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10142fec, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x10142fef, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10142ff2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10142ff5, 0x5)   calld(0x10142d60, -0x29a);            /* call 0x10142d60 */
    II(0x10142ffa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10142ffd, 0x3)   mov(eax, memd_a32(ds, eax + 0x28));   /* mov eax, [eax+0x28] */
    II(0x10143000, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10143003, 0x1)   pushd(eax);                           /* push eax */
    II(0x10143004, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x8));  /* movsx ecx, word [ebp-0x8] */
    II(0x10143008, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x14)); /* movsx ebx, word [ebp-0x14] */
    II(0x1014300c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014300f, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x10143012, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10143015, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x10143019, 0x3)   mov(esi, memd_a32(ss, ebp - 0x1c));   /* mov esi, [ebp-0x1c] */
    II(0x1014301c, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x1014301e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10143022, 0x2)   sub(esi, eax);                        /* sub esi, eax */
    II(0x10143024, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x10143026, 0x5)   calld(0x10142e31, -0x1fa);            /* call 0x10142e31 */
    II(0x1014302b, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10143030, 0x5)   calld(/* sys */ 0x1016a24c, 0x27217); /* call 0x1016a24c */
    II(0x10143035, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10143038, 0x3)   mov(eax, memd_a32(ds, eax + 0x24));   /* mov eax, [eax+0x24] */
    II(0x1014303b, 0x6)   calld_abs(memd_a32(ds, 0x101bddf4));  /* call dword near [0x101bddf4] */
    II(0x10143041, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x10143044, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10143047, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x18));    /* cmp ax, [ebp-0x18] */
    II(0x1014304b, 0x2)   jled(0x10143053, 0x6);                /* jle 0x10143053 */
    II(0x1014304d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10143050, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x10143053:
    II(0x10143053, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x10143057, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1014305b, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x1014305d, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1014305f, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10143062, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x10143064, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x10143066, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10143068, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014306b, 0x3)   add(edx, memd_a32(ds, eax + 0xa));    /* add edx, [eax+0xa] */
    II(0x1014306e, 0x3)   sub(edx, 0x2);                        /* sub edx, 0x2 */
    II(0x10143071, 0x3)   mov(memd_a32(ss, ebp - 0x2c), edx);   /* mov [ebp-0x2c], edx */
    II(0x10143074, 0x6)   calld_abs(memd_a32(ds, 0x101bddf0));  /* call dword near [0x101bddf0] */
    II(0x1014307a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1014307e, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x10143080, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10143082, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10143085, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x10143087, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x10143089, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014308b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014308e, 0x3)   mov(eax, memd_a32(ds, eax + 0xe));    /* mov eax, [eax+0xe] */
    II(0x10143091, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10143093, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x10143096, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1014309a, 0x3)   add(eax, memd_a32(ss, ebp - 0x2c));   /* add eax, [ebp-0x2c] */
    II(0x1014309d, 0x3)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x101430a0, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x101430a3, 0x6)   calld_abs(memd_a32(ds, 0x101bddf0));  /* call dword near [0x101bddf0] */
    II(0x101430a9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x28));   /* mov edx, [ebp-0x28] */
    II(0x101430ac, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x101430ae, 0x3)   mov(memd_a32(ss, ebp - 0x20), edx);   /* mov [ebp-0x20], edx */
    II(0x101430b1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101430b4, 0x3)   pushd(memd_a32(ds, eax + 0x2c));      /* push dword [eax+0x2c] */
    II(0x101430b7, 0x6)   calld_abs(memd_a32(ds, 0x101bddf0));  /* call dword near [0x101bddf0] */
    II(0x101430bd, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x101430c0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101430c3, 0x5)   add(eax, 0x4);                        /* add eax, 0x4 */
    II(0x101430c8, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x101430cb, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x101430ce, 0x3)   mov(edx, memd_a32(ds, edx + 0x6));    /* mov edx, [edx+0x6] */
    II(0x101430d1, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101430d4, 0x3)   mov(esi, memd_a32(ss, ebp - 0x4));    /* mov esi, [ebp-0x4] */
    II(0x101430d7, 0x3)   mov(esi, memd_a32(ds, esi + 0x6));    /* mov esi, [esi+0x6] */
    II(0x101430da, 0x3)   sar(esi, 0x10);                       /* sar esi, 0x10 */
    II(0x101430dd, 0x4)   imul(esi, memd_a32(ss, ebp - 0x28));  /* imul esi, [ebp-0x28] */
    II(0x101430e1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101430e4, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x101430e6, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x101430e9, 0x3)   add(eax, memd_a32(ss, ebp - 0x2c));   /* add eax, [ebp-0x2c] */
    II(0x101430ec, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x101430ee, 0x5)   calld(0x100ea763, -0x58990);          /* call 0x100ea763 */
    II(0x101430f3, 0x5)   pushd(0x100ff);                       /* push dword 0x100ff */
    II(0x101430f8, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x4));    /* mov ecx, [ebp-0x4] */
    II(0x101430fb, 0x3)   mov(ecx, memd_a32(ds, ecx + 0x6));    /* mov ecx, [ecx+0x6] */
    II(0x101430fe, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x10143101, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x18)); /* movsx ebx, word [ebp-0x18] */
    II(0x10143105, 0x3)   mov(esi, memd_a32(ss, ebp - 0x4));    /* mov esi, [ebp-0x4] */
    II(0x10143108, 0x3)   mov(esi, memd_a32(ds, esi + 0x24));   /* mov esi, [esi+0x24] */
    II(0x1014310b, 0x6)   calld_abs(memd_a32(ds, 0x101bddf0));  /* call dword near [0x101bddf0] */
    II(0x10143111, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10143115, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x10143117, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10143119, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1014311c, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1014311e, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x10143120, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10143123, 0x3)   mov(edx, memd_a32(ds, edx + 0xe));    /* mov edx, [edx+0xe] */
    II(0x10143126, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10143128, 0x3)   mov(memd_a32(ss, ebp - 0x30), edx);   /* mov [ebp-0x30], edx */
    II(0x1014312b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014312e, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10143131, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10143134, 0x3)   mov(edx, memd_a32(ss, ebp - 0x30));   /* mov edx, [ebp-0x30] */
    II(0x10143137, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x1014313a, 0x3)   mov(memd_a32(ss, ebp - 0x30), edx);   /* mov [ebp-0x30], edx */
    II(0x1014313d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x10143141, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10143145, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x10143147, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10143149, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1014314c, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1014314e, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x10143150, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10143153, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x10143155, 0x3)   mov(edx, memd_a32(ds, edx + 0x16));   /* mov edx, [edx+0x16] */
    II(0x10143158, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1014315a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1014315d, 0x3)   add(eax, memd_a32(ds, edx + 0xa));    /* add eax, [edx+0xa] */
    II(0x10143160, 0x3)   add(eax, memd_a32(ss, ebp - 0x30));   /* add eax, [ebp-0x30] */
    II(0x10143163, 0x2)   mov(edx, esi);                        /* mov edx, esi */
    II(0x10143165, 0x6)   calld_abs(memd_a32(ds, 0x101bddec));  /* call dword near [0x101bddec] */
    II(0x1014316b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1014316e, 0x3)   add(edx, 0xa);                        /* add edx, 0xa */
    II(0x10143171, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10143174, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10143176, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x10143179, 0x5)   calld(sys_display_draw_1, 0x2432a);   /* call 0x101674a8 */
    II(0x1014317e, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10143180, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10143181, 0x1)   popd(edi);                            /* pop edi */
    II(0x10143182, 0x1)   popd(esi);                            /* pop esi */
    II(0x10143183, 0x1)   popd(edx);                            /* pop edx */
    II(0x10143184, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10143185, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10143186, 0x1)   retd();                               /* ret */
FUNC_END

