FUNC_BEGIN(0x10145df2, 0x68225cc0a825f4f5, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0x56, 0xff, 0x1, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x8b, 0x5d, 0xf8, 0x8d, 0x55, 0xe4, 0x8b, 0x45, 0xf4, 0xe8, 0xeb, 0x4, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xe8, 0x4e, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x10, 0xc6, 0x45, 0xf0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x81, 0xa5, 0xf9, 0xff, 0xeb, 0x65, 0xb9, 0x12, 0xd0, 0x1a, 0x10, 0x8d, 0x45, 0xe4, 0xe8, 0x16, 0xa9, 0xf9, 0xff, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x8b, 0x58, 0x2, 0x8d, 0x55, 0xe8, 0x8b, 0x45, 0xec, 0xff, 0x53, 0xc, 0xe8, 0x67, 0x39, 0xf4, 0xff, 0x89, 0xca, 0xe8, 0xc8, 0x2, 0x2, 0, 0x85, 0xc0, 0x75, 0x6, 0xc6, 0x45, 0xe0, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xe0, 0, 0x8a, 0x45, 0xe0, 0x8b, 0x55, 0xfc, 0x88, 0x2, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xa2, 0xbc, 0xff, 0xff, 0xc6, 0x45, 0xf0, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x26, 0xa5, 0xf9, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x1a, 0xa5, 0xf9, 0xff, 0x8a, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x10145df2, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x10145df7, 0x5)   calld(sys_check_available_stack_size, 0x1ff56); /* call 0x10165d52 */
    II(0x10145dfc, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10145dfd, 0x1)   pushd(esi);                           /* push esi */
    II(0x10145dfe, 0x1)   pushd(edi);                           /* push edi */
    II(0x10145dff, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10145e00, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10145e02, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x10145e08, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10145e0b, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x10145e0e, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x10145e11, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x10145e14, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x10145e17, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10145e1a, 0x5)   calld(0x1014630a, 0x4eb);             /* call 0x1014630a */
    II(0x10145e1f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10145e21, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10145e24, 0x5)   calld(0x1013ad11, -0xb118);           /* call 0x1013ad11 */
    II(0x10145e29, 0x2)   test(al, al);                         /* test al, al */
    II(0x10145e2b, 0x2)   jzd(0x10145e3d, 0x10);                /* jz 0x10145e3d */
    II(0x10145e2d, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x10145e31, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10145e33, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10145e36, 0x5)   calld(0x100e03bc, -0x65a7f);          /* call 0x100e03bc */
    II(0x10145e3b, 0x2)   jmpd(0x10145ea2, 0x65);               /* jmp 0x10145ea2 */
l_0x10145e3d:
    II(0x10145e3d, 0x5)   mov(ecx, 0x101ad012);                 /* mov ecx, 0x101ad012 */ /* "TRUE" */
    II(0x10145e42, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10145e45, 0x5)   calld(0x100e0760, -0x656ea);          /* call 0x100e0760 */
    II(0x10145e4a, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x10145e4d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10145e50, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x10145e53, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x10145e56, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10145e59, 0x3)   calld_abs(memd_a32(ds, ebx + 0xc));   /* call dword near [ebx+0xc] */
    II(0x10145e5c, 0x5)   calld(my_strobj_c_str_v2, -0xbc699);  /* call 0x100897c8 */
    II(0x10145e61, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x10145e63, 0x5)   calld(sys_strcasecmp, 0x202c8);       /* call 0x10166130 */
    II(0x10145e68, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10145e6a, 0x2)   jnzd(0x10145e72, 0x6);                /* jnz 0x10145e72 */
    II(0x10145e6c, 0x4)   mov(memb_a32(ss, ebp - 0x20), 0x1);   /* mov byte [ebp-0x20], 0x1 */
    II(0x10145e70, 0x2)   jmpd(0x10145e76, 0x4);                /* jmp 0x10145e76 */
l_0x10145e72:
    II(0x10145e72, 0x4)   mov(memb_a32(ss, ebp - 0x20), 0);     /* mov byte [ebp-0x20], 0x0 */
l_0x10145e76:
    II(0x10145e76, 0x3)   mov(al, memb_a32(ss, ebp - 0x20));    /* mov al, [ebp-0x20] */
    II(0x10145e79, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10145e7c, 0x2)   mov(memb_a32(ds, edx), al);           /* mov [edx], al */
    II(0x10145e7e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10145e80, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10145e83, 0x5)   calld(my_string_dtor, -0x435e);       /* call 0x10141b2a */
    II(0x10145e88, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x10145e8c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10145e8e, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10145e91, 0x5)   calld(0x100e03bc, -0x65ada);          /* call 0x100e03bc */
    II(0x10145e96, 0x2)   jmpd(0x10145ea2, 0xa);                /* jmp 0x10145ea2 */
//  II(0x10145e98, 0xa)   /* Недостижимый код. */
l_0x10145ea2:
    II(0x10145ea2, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x10145ea5, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10145ea7, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10145ea8, 0x1)   popd(edi);                            /* pop edi */
    II(0x10145ea9, 0x1)   popd(esi);                            /* pop esi */
    II(0x10145eaa, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10145eab, 0x1)   retd();                               /* ret */
FUNC_END

