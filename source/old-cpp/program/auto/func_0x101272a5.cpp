FUNC_BEGIN(0x101272a5, 0x83a5ff766740ac70, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xa3, 0xea, 0x3, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x8a, 0x40, 0x11, 0xa2, 0xda, 0x37, 0x1c, 0x10, 0xba, 0x1, 0, 0, 0, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x8b, 0x80, 0x3d, 0x87, 0x1b, 0x10, 0xc1, 0xf8, 0x18, 0xe8, 0x18, 0x38, 0xfa, 0xff, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xc6, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x1, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x8d, 0x98, 0x1a, 0x2, 0, 0, 0xba, 0x32, 0, 0, 0, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0xf3, 0xee, 0xfd, 0xff, 0xbb, 0x6, 0, 0, 0, 0xe8, 0x3b, 0x4, 0xfe, 0xff, 0x31, 0xd2, 0x8a, 0x15, 0xda, 0x37, 0x1c, 0x10, 0x6b, 0xd2, 0x6, 0xb9, 0x90, 0x40, 0x1c, 0x10, 0x1, 0xd1, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0x14, 0xeb, 0x3, 0, 0xb8, 0x33, 0, 0, 0, 0xe8, 0x9b, 0xec, 0xf4, 0xff, 0x88, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x55, 0xfc, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x4, 0x6b, 0xf, 0xbe, 0xc0, 0xe8, 0xa4, 0x37, 0xfa, 0xff, 0x31, 0xd2, 0x8a, 0x15, 0xda, 0x37, 0x1c, 0x10, 0x69, 0xd2, 0x47, 0x2, 0, 0, 0x8a, 0x45, 0xfc, 0x88, 0x82, 0xef, 0xa4, 0x1c, 0x10, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xc6, 0x45, 0xfc, 0x4, 0xfe, 0x4d, 0xfc, 0x80, 0x7d, 0xfc, 0xff, 0xf, 0x84, 0xee, 0, 0, 0, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x1, 0xc0, 0x89, 0xc2, 0xa1, 0xcc, 0x59, 0x1c, 0x10, 0x1, 0xd0, 0x8b, 0x80, 0xda, 0x4, 0, 0, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x4, 0xf, 0x8e, 0x7c, 0, 0, 0, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x6b, 0xc0, 0x1e, 0x8b, 0x1d, 0xcc, 0x59, 0x1c, 0x10, 0x81, 0xc3, 0x38, 0x3, 0, 0, 0x1, 0xc3, 0x8a, 0x45, 0xfc, 0x4, 0x63, 0xf, 0xbe, 0xd0, 0xb8, 0xc8, 0x39, 0x1c, 0x10, 0xe8, 0x34, 0xee, 0xfd, 0xff, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x1, 0xc0, 0x8b, 0x15, 0xcc, 0x59, 0x1c, 0x10, 0x1, 0xd0, 0x8b, 0x15, 0xcc, 0x59, 0x1c, 0x10, 0x66, 0x8b, 0x80, 0xdc, 0x4, 0, 0, 0x66, 0x3b, 0x42, 0x14, 0x74, 0x30, 0xba, 0x3, 0, 0, 0, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x8b, 0x80, 0x3d, 0x87, 0x1b, 0x10, 0xc1, 0xf8, 0x18, 0xe8, 0xf1, 0x36, 0xfa, 0xff, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xc6, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x3, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0xeb, 0x27, 0x31, 0xd2, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x8b, 0x80, 0x3d, 0x87, 0x1b, 0x10, 0xc1, 0xf8, 0x18, 0xe8, 0xc2, 0x36, 0xfa, 0xff, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xc6, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0xc6, 0x80, 0xb0, 0x40, 0x1c, 0x10, 0, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0xc6, 0x80, 0xb4, 0x40, 0x1c, 0x10, 0, 0x31, 0xc0, 0x8a, 0x45, 0xfc, 0xc6, 0x80, 0xb8, 0x40, 0x1c, 0x10, 0, 0xe9, 0x5, 0xff, 0xff, 0xff, 0x8a, 0x45, 0xf4, 0xa2, 0xb8, 0x59, 0x1c, 0x10, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x101272a5, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x101272aa, 0x5)   calld(sys_check_available_stack_size, 0x3eaa3); /* call 0x10165d52 */
    II(0x101272af, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101272b0, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101272b1, 0x1)   pushd(edx);                           /* push edx */
    II(0x101272b2, 0x1)   pushd(esi);                           /* push esi */
    II(0x101272b3, 0x1)   pushd(edi);                           /* push edi */
    II(0x101272b4, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101272b5, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101272b7, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x101272bd, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x101272c2, 0x3)   mov(al, memb_a32(ds, eax + 0x11));    /* mov al, [eax+0x11] */
    II(0x101272c5, 0x5)   mov(memb_a32(ds, 0x101c37da), al);    /* mov [0x101c37da], al */
    II(0x101272ca, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x101272cf, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101272d1, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x101272d6, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b873d)); /* mov eax, [eax+0x101b873d] */
    II(0x101272dc, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x101272df, 0x5)   calld(0x100caafc, -0x5c7e8);          /* call 0x100caafc */
    II(0x101272e4, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101272e6, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x101272eb, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x101272f1, 0x7)   mov(memb_a32(ds, eax + 0x101ca490), 0x1); /* mov byte [eax+0x101ca490], 0x1 */
    II(0x101272f8, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x101272fd, 0x6)   lea(ebx, eax + 0x21a);                /* lea ebx, [eax+0x21a] */
    II(0x10127303, 0x5)   mov(edx, 0x32);                       /* mov edx, 0x32 */
    II(0x10127308, 0x5)   mov(eax, 0x101c39c8);                 /* mov eax, 0x101c39c8 */
    II(0x1012730d, 0x5)   calld(0x10106205, -0x2110d);          /* call 0x10106205 */
    II(0x10127312, 0x5)   mov(ebx, 0x6);                        /* mov ebx, 0x6 */
    II(0x10127317, 0x5)   calld(0x10107757, -0x1fbc5);          /* call 0x10107757 */
    II(0x1012731c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012731e, 0x6)   mov(dl, memb_a32(ds, 0x101c37da));    /* mov dl, [0x101c37da] */
    II(0x10127324, 0x3)   imul(edx, edx, 0x6);                  /* imul edx, edx, 0x6 */
    II(0x10127327, 0x5)   mov(ecx, 0x101c4090);                 /* mov ecx, 0x101c4090 */
    II(0x1012732c, 0x2)   add(ecx, edx);                        /* add ecx, edx */
    II(0x1012732e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10127330, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x10127332, 0x5)   calld(sys_memcpy, 0x3eb14);           /* call 0x10165e4b */
    II(0x10127337, 0x5)   mov(eax, 0x33);                       /* mov eax, 0x33 */
    II(0x1012733c, 0x5)   calld(0x10075fdc, -0xb1365);          /* call 0x10075fdc */
    II(0x10127341, 0x3)   mov(memb_a32(ss, ebp - 0x4), al);     /* mov [ebp-0x4], al */
    II(0x10127344, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10127346, 0x3)   mov(dl, memb_a32(ss, ebp - 0x4));     /* mov dl, [ebp-0x4] */
    II(0x10127349, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x1012734e, 0x2)   add(al, 0x6b);                        /* add al, 0x6b */
    II(0x10127350, 0x3)   movsx(eax, al);                       /* movsx eax, al */
    II(0x10127353, 0x5)   calld(0x100caafc, -0x5c85c);          /* call 0x100caafc */
    II(0x10127358, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012735a, 0x6)   mov(dl, memb_a32(ds, 0x101c37da));    /* mov dl, [0x101c37da] */
    II(0x10127360, 0x6)   imul(edx, edx, 0x247);                /* imul edx, edx, 0x247 */
    II(0x10127366, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10127369, 0x6)   mov(memb_a32(ds, edx + 0x101ca4ef), al); /* mov [edx+0x101ca4ef], al */
    II(0x1012736f, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x10127376, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0x4);    /* mov byte [ebp-0x4], 0x4 */
l_0x1012737a:
    II(0x1012737a, 0x3)   dec(memb_a32(ss, ebp - 0x4));         /* dec byte [ebp-0x4] */
    II(0x1012737d, 0x4)   cmp(memb_a32(ss, ebp - 0x4), -0x1 /* 0xff */); /* cmp byte [ebp-0x4], 0xff */
    II(0x10127381, 0x6)   jzd(0x10127475, 0xee);                /* jz dword 0x10127475 */
    II(0x10127387, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10127389, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x1012738c, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1012738e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10127390, 0x5)   mov(eax, memd_a32(ds, 0x101c59cc));   /* mov eax, [0x101c59cc] */
    II(0x10127395, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10127397, 0x6)   mov(eax, memd_a32(ds, eax + 0x4da));  /* mov eax, [eax+0x4da] */
    II(0x1012739d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101273a0, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x101273a3, 0x6)   jled(0x10127425, 0x7c);               /* jle dword 0x10127425 */
    II(0x101273a9, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101273ab, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x101273ae, 0x3)   imul(eax, eax, 0x1e);                 /* imul eax, eax, 0x1e */
    II(0x101273b1, 0x6)   mov(ebx, memd_a32(ds, 0x101c59cc));   /* mov ebx, [0x101c59cc] */
    II(0x101273b7, 0x6)   add(ebx, 0x338);                      /* add ebx, 0x338 */
    II(0x101273bd, 0x2)   add(ebx, eax);                        /* add ebx, eax */
    II(0x101273bf, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x101273c2, 0x2)   add(al, 0x63);                        /* add al, 0x63 */
    II(0x101273c4, 0x3)   movsx(edx, al);                       /* movsx edx, al */
    II(0x101273c7, 0x5)   mov(eax, 0x101c39c8);                 /* mov eax, 0x101c39c8 */
    II(0x101273cc, 0x5)   calld(0x10106205, -0x211cc);          /* call 0x10106205 */
    II(0x101273d1, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101273d3, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x101273d6, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x101273d8, 0x6)   mov(edx, memd_a32(ds, 0x101c59cc));   /* mov edx, [0x101c59cc] */
    II(0x101273de, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x101273e0, 0x6)   mov(edx, memd_a32(ds, 0x101c59cc));   /* mov edx, [0x101c59cc] */
    II(0x101273e6, 0x7)   mov(ax, memw_a32(ds, eax + 0x4dc));   /* mov ax, [eax+0x4dc] */
    II(0x101273ed, 0x4)   cmp(ax, memw_a32(ds, edx + 0x14));    /* cmp ax, [edx+0x14] */
    II(0x101273f1, 0x2)   jzd(0x10127423, 0x30);                /* jz 0x10127423 */
    II(0x101273f3, 0x5)   mov(edx, 0x3);                        /* mov edx, 0x3 */
    II(0x101273f8, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101273fa, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x101273fd, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b873d)); /* mov eax, [eax+0x101b873d] */
    II(0x10127403, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x10127406, 0x5)   calld(0x100caafc, -0x5c90f);          /* call 0x100caafc */
    II(0x1012740b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012740d, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10127410, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10127416, 0x7)   mov(memb_a32(ds, eax + 0x101ca490), 0x3); /* mov byte [eax+0x101ca490], 0x3 */
    II(0x1012741d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10127420, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x10127423:
    II(0x10127423, 0x2)   jmpd(0x1012744c, 0x27);               /* jmp 0x1012744c */
l_0x10127425:
    II(0x10127425, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10127427, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10127429, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x1012742c, 0x6)   mov(eax, memd_a32(ds, eax + 0x101b873d)); /* mov eax, [eax+0x101b873d] */
    II(0x10127432, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x10127435, 0x5)   calld(0x100caafc, -0x5c93e);          /* call 0x100caafc */
    II(0x1012743a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012743c, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x1012743f, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10127445, 0x7)   mov(memb_a32(ds, eax + 0x101ca490), 0); /* mov byte [eax+0x101ca490], 0x0 */
l_0x1012744c:
    II(0x1012744c, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012744e, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10127451, 0x7)   mov(memb_a32(ds, eax + 0x101c40b0), 0); /* mov byte [eax+0x101c40b0], 0x0 */
    II(0x10127458, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012745a, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x1012745d, 0x7)   mov(memb_a32(ds, eax + 0x101c40b4), 0); /* mov byte [eax+0x101c40b4], 0x0 */
    II(0x10127464, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10127466, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x10127469, 0x7)   mov(memb_a32(ds, eax + 0x101c40b8), 0); /* mov byte [eax+0x101c40b8], 0x0 */
    II(0x10127470, 0x5)   jmpd(0x1012737a, -0xfb);              /* jmp 0x1012737a */
l_0x10127475:
    II(0x10127475, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x10127478, 0x5)   mov(memb_a32(ds, 0x101c59b8), al);    /* mov [0x101c59b8], al */
    II(0x1012747d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10127480, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
//    II(0x10127483, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10127486, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10127488, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10127489, 0x1)   popd(edi);                            /* pop edi */
    II(0x1012748a, 0x1)   popd(esi);                            /* pop esi */
    II(0x1012748b, 0x1)   popd(edx);                            /* pop edx */
    II(0x1012748c, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1012748d, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1012748e, 0x1)   retd();                               /* ret */
FUNC_END

