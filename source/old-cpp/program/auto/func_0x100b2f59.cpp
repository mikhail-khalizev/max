FUNC_BEGIN(0x100b2f59, 0x8a344a155411ff0f, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0xef, 0x2d, 0xb, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x15, 0x8b, 0x45, 0xfc, 0xe8, 0x14, 0x3e, 0xfc, 0xff, 0x84, 0xc0, 0x74, 0x65, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x19, 0xe8, 0xb1, 0x4c, 0, 0, 0x8d, 0x5d, 0xf4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x89, 0x4b, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xf4, 0xe8, 0x4f, 0x3c, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xbe, 0x7d, 0x8, 0, 0x84, 0xc0, 0x74, 0x14, 0x8d, 0x45, 0xf4, 0xe8, 0x89, 0x4a, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0x4b, 0xe8, 0xff, 0xff, 0xeb, 0xd6, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x19, 0xe8, 0x1e, 0x77, 0x8, 0, 0x8b, 0x55, 0xf8, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x44, 0x2e, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x63, 0x46, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100b2f59, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100b2f5e, 0x5)   calld(sys_check_available_stack_size, 0xb2def); /* call 0x10165d52 */
    II(0x100b2f63, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100b2f64, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100b2f65, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b2f66, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b2f67, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b2f68, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b2f6a, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x100b2f70, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100b2f73, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100b2f76, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100b2f79, 0x3)   add(edx, 0x15);                       /* add edx, 0x15 */
    II(0x100b2f7c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b2f7f, 0x5)   calld(0x10076d98, -0x3c1ec);          /* call 0x10076d98 */
    II(0x100b2f84, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b2f86, 0x2)   jzd(0x100b2fed, 0x65);                /* jz 0x100b2fed */
    II(0x100b2f88, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2f8b, 0x3)   add(eax, 0x19);                       /* add eax, 0x19 */
    II(0x100b2f8e, 0x5)   calld(0x100b7c44, 0x4cb1);            /* call 0x100b7c44 */
    II(0x100b2f93, 0x3)   lea(ebx, ebp - 0xc);                  /* lea ebx, [ebp-0xc] */
    II(0x100b2f96, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b2f98, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100b2f9a, 0x5)   calld(0x100b7b28, 0x4b89);            /* call 0x100b7b28 */
    II(0x100b2f9f, 0x2)   jmpd(0x100b2fa9, 0x8);                /* jmp 0x100b2fa9 */
l_0x100b2fa1:
    II(0x100b2fa1, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b2fa4, 0x5)   calld(0x10076bf8, -0x3c3b1);          /* call 0x10076bf8 */
l_0x100b2fa9:
    II(0x100b2fa9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b2fab, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b2fae, 0x5)   calld(0x1013ad71, 0x87dbe);           /* call 0x1013ad71 */
    II(0x100b2fb3, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b2fb5, 0x2)   jzd(0x100b2fcb, 0x14);                /* jz 0x100b2fcb */
    II(0x100b2fb7, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b2fba, 0x5)   calld(0x100b7a48, 0x4a89);            /* call 0x100b7a48 */
    II(0x100b2fbf, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b2fc1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2fc4, 0x5)   calld(0x100b1814, -0x17b5);           /* call 0x100b1814 */
    II(0x100b2fc9, 0x2)   jmpd(0x100b2fa1, -0x2a);              /* jmp 0x100b2fa1 */
l_0x100b2fcb:
    II(0x100b2fcb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2fce, 0x3)   add(eax, 0x19);                       /* add eax, 0x19 */
    II(0x100b2fd1, 0x5)   calld(0x1013a6f4, 0x8771e);           /* call 0x1013a6f4 */
    II(0x100b2fd6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100b2fd9, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100b2fde, 0x5)   calld(0x100a5e27, -0xd1bc);           /* call 0x100a5e27 */
    II(0x100b2fe3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b2fe5, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b2fe8, 0x5)   calld(0x100b7650, 0x4663);            /* call 0x100b7650 */
l_0x100b2fed:
    II(0x100b2fed, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100b2fef, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100b2ff0, 0x1)   popd(edi);                            /* pop edi */
    II(0x100b2ff1, 0x1)   popd(esi);                            /* pop esi */
    II(0x100b2ff2, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100b2ff3, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100b2ff4, 0x1)   retd();                               /* ret */
FUNC_END

