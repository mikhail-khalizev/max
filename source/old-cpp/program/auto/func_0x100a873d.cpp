FUNC_BEGIN(0x100a873d, 0x60fb16bb41e0a51, 0x20, ({0x68, 0x4c, 0, 0, 0, 0xe8, 0xb, 0xd6, 0xb, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x2c, 0, 0, 0, 0x89, 0x45, 0xfc, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0xd, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf9, 0x10, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0xd2, 0x29, 0xfe, 0xff, 0x8d, 0x45, 0xf4, 0xe8, 0x72, 0xe3, 0xfc, 0xff, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x13, 0x2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0xf0, 0x2c, 0xfe, 0xff, 0x98, 0x85, 0xc0, 0x7e, 0x9, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x13, 0x2, 0x74, 0x2, 0xeb, 0x13, 0xe8, 0x4f, 0xfb, 0x9, 0, 0x2b, 0x5, 0x74, 0x39, 0x1c, 0x10, 0x3b, 0x5, 0x84, 0xdd, 0x1b, 0x10, 0x72, 0x5, 0xe9, 0xc6, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0x3b, 0x1f, 0, 0, 0x8d, 0x5d, 0xdc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x43, 0x1d, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0x36, 0x53, 0x2, 0, 0x8d, 0x55, 0xdc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x3e, 0xe8, 0x78, 0x22, 0, 0, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0x8, 0x7d, 0x9, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x13, 0x2, 0x74, 0x2, 0xeb, 0x6a, 0x8d, 0x55, 0xdc, 0x8d, 0x45, 0xf4, 0xe8, 0x2a, 0x3, 0xfe, 0xff, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0xba, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0xf4, 0xe8, 0x74, 0x29, 0xfe, 0xff, 0x8d, 0x55, 0xf4, 0x8d, 0x45, 0xe4, 0xe8, 0x93, 0xfa, 0x5, 0, 0x84, 0xc0, 0x74, 0x1b, 0x8d, 0x55, 0xf4, 0x8d, 0x45, 0xd8, 0xe8, 0x1a, 0xd6, 0xfc, 0xff, 0x8b, 0x5d, 0xfc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x24, 0xf6, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x18, 0x8d, 0x55, 0xf4, 0x8d, 0x45, 0xd4, 0xe8, 0xfd, 0xd5, 0xfc, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xdc, 0x8b, 0x45, 0xfc, 0xe8, 0xc0, 0xf6, 0xff, 0xff, 0xe9, 0x7c, 0xff, 0xff, 0xff, 0xe9, 0x7, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x1e, 0xe8, 0xf7, 0x2b, 0xfe, 0xff, 0x98, 0x85, 0xc0, 0x75, 0x1b, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x3e, 0xe8, 0xfb, 0x42, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x13, 0x2, 0x75, 0x7, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x13, 0, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x13, 0x2, 0x75, 0x11, 0xe8, 0xd1, 0x29, 0, 0, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x3c, 0xa0, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100a873d, 0x5)   pushd(0x4c);                          /* push dword 0x4c */
    II(0x100a8742, 0x5)   calld(sys_check_available_stack_size, 0xbd60b); /* call 0x10165d52 */
    II(0x100a8747, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a8748, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a8749, 0x1)   pushd(edx);                           /* push edx */
    II(0x100a874a, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a874b, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a874c, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a874d, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a874f, 0x6)   sub(esp, 0x2c);                       /* sub esp, 0x2c */
    II(0x100a8755, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100a8758, 0x5)   mov(eax, memd_a32(ds, 0x101c8172));   /* mov eax, [0x101c8172] */
    II(0x100a875d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100a8760, 0x1)   pushd(eax);                           /* push eax */
    II(0x100a8761, 0x6)   mov(ecx, memd_a32(ds, 0x101c8170));   /* mov ecx, [0x101c8170] */
    II(0x100a8767, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100a876a, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100a876c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a876e, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100a8771, 0x5)   calld(0x1008b148, -0x1d62e);          /* call 0x1008b148 */
    II(0x100a8776, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a8779, 0x5)   calld(my_ctor_0x101b4184, -0x31c8e);  /* call 0x10076af0 */
    II(0x100a877e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a8781, 0x4)   mov(memb_a32(ds, eax + 0x13), 0x2);   /* mov byte [eax+0x13], 0x2 */
l_0x100a8785:
    II(0x100a8785, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a8788, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100a878b, 0x5)   calld(my_3_get_count, -0x1d310);      /* call 0x1008b480 */
    II(0x100a8790, 0x1)   cwde();                               /* cwde */
    II(0x100a8791, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a8793, 0x2)   jled(0x100a879e, 0x9);                /* jle 0x100a879e */
    II(0x100a8795, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a8798, 0x4)   cmp(memb_a32(ds, eax + 0x13), 0x2);   /* cmp byte [eax+0x13], 0x2 */
    II(0x100a879c, 0x2)   jzd(0x100a87a0, 0x2);                 /* jz 0x100a87a0 */
l_0x100a879e:
    II(0x100a879e, 0x2)   jmpd(0x100a87b3, 0x13);               /* jmp 0x100a87b3 */
l_0x100a87a0:
    II(0x100a87a0, 0x5)   calld(0x101482f4, 0x9fb4f);           /* call 0x101482f4 */
    II(0x100a87a5, 0x6)   sub(eax, memd_a32(ds, 0x101c3974));   /* sub eax, [0x101c3974] */
    II(0x100a87ab, 0x6)   cmp(eax, memd_a32(ds, 0x101bdd84));   /* cmp eax, [0x101bdd84] */
    II(0x100a87b1, 0x2)   jbd(0x100a87b8, 0x5);                 /* jb 0x100a87b8 */
l_0x100a87b3:
    II(0x100a87b3, 0x5)   jmpd(0x100a887e, 0xc6);               /* jmp 0x100a887e */
l_0x100a87b8:
    II(0x100a87b8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a87ba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a87bd, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100a87c0, 0x5)   calld(0x100aa700, 0x1f3b);            /* call 0x100aa700 */
    II(0x100a87c5, 0x3)   lea(ebx, ebp - 0x24);                 /* lea ebx, [ebp-0x24] */
    II(0x100a87c8, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a87ca, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100a87cc, 0x5)   calld(0x100aa514, 0x1d43);            /* call 0x100aa514 */
    II(0x100a87d1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a87d3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a87d6, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100a87d9, 0x5)   calld(0x100cdb14, 0x25336);           /* call 0x100cdb14 */
    II(0x100a87de, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x100a87e1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a87e4, 0x3)   add(eax, 0x3e);                       /* add eax, 0x3e */
    II(0x100a87e7, 0x5)   calld(0x100aaa64, 0x2278);            /* call 0x100aaa64 */
    II(0x100a87ec, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x100a87f3, 0x2)   jmpd(0x100a87fb, 0x6);                /* jmp 0x100a87fb */
l_0x100a87f5:
    II(0x100a87f5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a87f8, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x100a87fb:
    II(0x100a87fb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100a87ff, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x100a8802, 0x2)   jged(0x100a880d, 0x9);                /* jge 0x100a880d */
    II(0x100a8804, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a8807, 0x4)   cmp(memb_a32(ds, eax + 0x13), 0x2);   /* cmp byte [eax+0x13], 0x2 */
    II(0x100a880b, 0x2)   jzd(0x100a880f, 0x2);                 /* jz 0x100a880f */
l_0x100a880d:
    II(0x100a880d, 0x2)   jmpd(0x100a8879, 0x6a);               /* jmp 0x100a8879 */
l_0x100a880f:
    II(0x100a880f, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x100a8812, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a8815, 0x5)   calld(0x10088b44, -0x1fcd6);          /* call 0x10088b44 */
    II(0x100a881a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100a881e, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100a8821, 0x5)   mov(edx, 0x101c5348);                 /* mov edx, 0x101c5348 */
    II(0x100a8826, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100a8828, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100a882b, 0x5)   calld(0x1008b1a4, -0x1d68c);          /* call 0x1008b1a4 */
    II(0x100a8830, 0x3)   lea(edx, ebp - 0xc);                  /* lea edx, [ebp-0xc] */
    II(0x100a8833, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100a8836, 0x5)   calld(0x101082ce, 0x5fa93);           /* call 0x101082ce */
    II(0x100a883b, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a883d, 0x2)   jzd(0x100a885a, 0x1b);                /* jz 0x100a885a */
    II(0x100a883f, 0x3)   lea(edx, ebp - 0xc);                  /* lea edx, [ebp-0xc] */
    II(0x100a8842, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100a8845, 0x5)   calld(0x10075e64, -0x329e6);          /* call 0x10075e64 */
    II(0x100a884a, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100a884d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a884f, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100a8851, 0x5)   calld(0x100a7e7a, -0x9dc);            /* call 0x100a7e7a */
    II(0x100a8856, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a8858, 0x2)   jnzd(0x100a885c, 0x2);                /* jnz 0x100a885c */
l_0x100a885a:
    II(0x100a885a, 0x2)   jmpd(0x100a8874, 0x18);               /* jmp 0x100a8874 */
l_0x100a885c:
    II(0x100a885c, 0x3)   lea(edx, ebp - 0xc);                  /* lea edx, [ebp-0xc] */
    II(0x100a885f, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100a8862, 0x5)   calld(0x10075e64, -0x32a03);          /* call 0x10075e64 */
    II(0x100a8867, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100a8869, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x100a886c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a886f, 0x5)   calld(0x100a7f34, -0x940);            /* call 0x100a7f34 */
l_0x100a8874:
    II(0x100a8874, 0x5)   jmpd(0x100a87f5, -0x84);              /* jmp 0x100a87f5 */
l_0x100a8879:
    II(0x100a8879, 0x5)   jmpd(0x100a8785, -0xf9);              /* jmp 0x100a8785 */
l_0x100a887e:
    II(0x100a887e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a8881, 0x3)   add(eax, 0x1e);                       /* add eax, 0x1e */
    II(0x100a8884, 0x5)   calld(my_3_get_count, -0x1d409);      /* call 0x1008b480 */
    II(0x100a8889, 0x1)   cwde();                               /* cwde */
    II(0x100a888a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100a888c, 0x2)   jnzd(0x100a88a9, 0x1b);               /* jnz 0x100a88a9 */
    II(0x100a888e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a8891, 0x3)   add(eax, 0x3e);                       /* add eax, 0x3e */
    II(0x100a8894, 0x5)   calld(0x1009cb94, -0xbd05);           /* call 0x1009cb94 */
    II(0x100a8899, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a889c, 0x4)   cmp(memb_a32(ds, eax + 0x13), 0x2);   /* cmp byte [eax+0x13], 0x2 */
    II(0x100a88a0, 0x2)   jnzd(0x100a88a9, 0x7);                /* jnz 0x100a88a9 */
    II(0x100a88a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a88a5, 0x4)   mov(memb_a32(ds, eax + 0x13), 0);     /* mov byte [eax+0x13], 0x0 */
l_0x100a88a9:
    II(0x100a88a9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a88ac, 0x4)   cmp(memb_a32(ds, eax + 0x13), 0x2);   /* cmp byte [eax+0x13], 0x2 */
    II(0x100a88b0, 0x2)   jnzd(0x100a88c3, 0x11);               /* jnz 0x100a88c3 */
    II(0x100a88b2, 0x5)   calld(0x100ab288, 0x29d1);            /* call 0x100ab288 */
    II(0x100a88b7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a88b9, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100a88bb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100a88be, 0x5)   calld(0x100a28ff, -0x5fc4);           /* call 0x100a28ff */
l_0x100a88c3:
    II(0x100a88c3, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a88c5, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a88c6, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a88c7, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a88c8, 0x1)   popd(edx);                            /* pop edx */
    II(0x100a88c9, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a88ca, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a88cb, 0x1)   retd();                               /* ret */
FUNC_END

