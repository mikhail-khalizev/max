FUNC_BEGIN(0x10075a79, 0x462173cc3467a25f, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0xcf, 0x2, 0xf, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xfc, 0x83, 0x7d, 0xfc, 0, 0x75, 0xc, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xe9, 0x60, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x26, 0x7, 0, 0, 0x89, 0x45, 0xf0, 0x83, 0x7d, 0xf0, 0, 0x75, 0xc, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xe9, 0x43, 0x1, 0, 0, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0x2d, 0xa, 0, 0, 0x89, 0x45, 0xf4, 0x80, 0x65, 0xf8, 0xfe, 0x8b, 0x45, 0xf0, 0xe8, 0x5a, 0x8, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0x54, 0x9, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0x6, 0x11, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x75, 0x52, 0xc, 0, 0x84, 0xc0, 0xf, 0x84, 0x8d, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x94, 0x8, 0, 0, 0x80, 0x78, 0x3e, 0x2a, 0x75, 0x16, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x84, 0x8, 0, 0, 0x83, 0xc0, 0x65, 0xe8, 0xed, 0x51, 0xc, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x62, 0x8d, 0x45, 0xe8, 0xe8, 0x6e, 0x8, 0, 0, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x41, 0x8d, 0x45, 0xe8, 0xe8, 0x5a, 0x8, 0, 0, 0xf6, 0x40, 0x12, 0x40, 0x74, 0xe, 0x8d, 0x45, 0xe8, 0xe8, 0x4c, 0x8, 0, 0, 0x80, 0x78, 0x3d, 0x1e, 0x75, 0x2, 0xeb, 0xd, 0x8d, 0x45, 0xe8, 0xe8, 0x70, 0x8, 0, 0, 0xe8, 0xdc, 0xfb, 0xff, 0xff, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xf2, 0x3, 0, 0, 0xe9, 0x87, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x19, 0x8, 0, 0, 0xe8, 0x31, 0x5b, 0xd, 0, 0xe9, 0x59, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf0, 0xe8, 0x9f, 0x7, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0x99, 0x8, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0x4b, 0x10, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xba, 0x51, 0xc, 0, 0x84, 0xc0, 0x74, 0x2e, 0x8d, 0x45, 0xe8, 0xe8, 0x45, 0x8, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3e, 0x2a, 0x75, 0x18, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x7, 0x83, 0x3d, 0x24, 0x56, 0x1c, 0x10, 0, 0x74, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0x2, 0x2d, 0xb, 0, 0xeb, 0xbc, 0xc7, 0x45, 0xec, 0x1, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x72, 0x3, 0, 0, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x66, 0x3, 0, 0, 0x8b, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10075a79, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x10075a7e, 0x5)   calld(sys_check_available_stack_size, 0xf02cf); /* call 0x10165d52 */
    II(0x10075a83, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10075a84, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10075a85, 0x1)   pushd(edx);                           /* push edx */
    II(0x10075a86, 0x1)   pushd(esi);                           /* push esi */
    II(0x10075a87, 0x1)   pushd(edi);                           /* push edi */
    II(0x10075a88, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10075a89, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10075a8b, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x10075a91, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10075a94, 0x4)   cmp(memd_a32(ss, ebp - 0x4), 0);      /* cmp dword [ebp-0x4], 0x0 */
    II(0x10075a98, 0x2)   jnzd(0x10075aa6, 0xc);                /* jnz 0x10075aa6 */
    II(0x10075a9a, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x10075aa1, 0x5)   jmpd(0x10075c06, 0x160);              /* jmp 0x10075c06 */
l_0x10075aa6:
    II(0x10075aa6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10075aa9, 0x5)   calld(0x100761d4, 0x726);             /* call 0x100761d4 */
    II(0x10075aae, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10075ab1, 0x4)   cmp(memd_a32(ss, ebp - 0x10), 0);     /* cmp dword [ebp-0x10], 0x0 */
    II(0x10075ab5, 0x2)   jnzd(0x10075ac3, 0xc);                /* jnz 0x10075ac3 */
    II(0x10075ab7, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x10075abe, 0x5)   jmpd(0x10075c06, 0x143);              /* jmp 0x10075c06 */
l_0x10075ac3:
    II(0x10075ac3, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x10075ac7, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10075aca, 0x5)   calld(0x100764fc, 0xa2d);             /* call 0x100764fc */
    II(0x10075acf, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10075ad2, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x10075ad6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10075ad9, 0x5)   calld(0x10076338, 0x85a);             /* call 0x10076338 */
    II(0x10075ade, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10075ae0, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10075ae3, 0x5)   calld(0x1007643c, 0x954);             /* call 0x1007643c */
    II(0x10075ae8, 0x2)   jmpd(0x10075af2, 0x8);                /* jmp 0x10075af2 */
l_0x10075aea:
    II(0x10075aea, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10075aed, 0x5)   calld(0x10076bf8, 0x1106);            /* call 0x10076bf8 */
l_0x10075af2:
    II(0x10075af2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10075af4, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10075af7, 0x5)   calld(0x1013ad71, 0xc5275);           /* call 0x1013ad71 */
    II(0x10075afc, 0x2)   test(al, al);                         /* test al, al */
    II(0x10075afe, 0x6)   jzd(0x10075b91, 0x8d);                /* jz dword 0x10075b91 */
    II(0x10075b04, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10075b07, 0x5)   calld(0x100763a0, 0x894);             /* call 0x100763a0 */
    II(0x10075b0c, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x2a);  /* cmp byte [eax+0x3e], 0x2a */
    II(0x10075b10, 0x2)   jnzd(0x10075b28, 0x16);               /* jnz 0x10075b28 */
    II(0x10075b12, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10075b14, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10075b17, 0x5)   calld(0x100763a0, 0x884);             /* call 0x100763a0 */
    II(0x10075b1c, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x10075b1f, 0x5)   calld(0x1013ad11, 0xc51ed);           /* call 0x1013ad11 */
    II(0x10075b24, 0x2)   test(al, al);                         /* test al, al */
    II(0x10075b26, 0x2)   jnzd(0x10075b2a, 0x2);                /* jnz 0x10075b2a */
l_0x10075b28:
    II(0x10075b28, 0x2)   jmpd(0x10075b8c, 0x62);               /* jmp 0x10075b8c */
l_0x10075b2a:
    II(0x10075b2a, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10075b2d, 0x5)   calld(0x100763a0, 0x86e);             /* call 0x100763a0 */
    II(0x10075b32, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x10075b35, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10075b3a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10075b3c, 0x2)   jzd(0x10075b7f, 0x41);                /* jz 0x10075b7f */
    II(0x10075b3e, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10075b41, 0x5)   calld(0x100763a0, 0x85a);             /* call 0x100763a0 */
    II(0x10075b46, 0x4)   test(memb_a32(ds, eax + 0x12), 0x40); /* test byte [eax+0x12], 0x40 */
    II(0x10075b4a, 0x2)   jzd(0x10075b5a, 0xe);                 /* jz 0x10075b5a */
    II(0x10075b4c, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10075b4f, 0x5)   calld(0x100763a0, 0x84c);             /* call 0x100763a0 */
    II(0x10075b54, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1e);  /* cmp byte [eax+0x3d], 0x1e */
    II(0x10075b58, 0x2)   jnzd(0x10075b5c, 0x2);                /* jnz 0x10075b5c */
l_0x10075b5a:
    II(0x10075b5a, 0x2)   jmpd(0x10075b69, 0xd);                /* jmp 0x10075b69 */
l_0x10075b5c:
    II(0x10075b5c, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10075b5f, 0x5)   calld(0x100763d4, 0x870);             /* call 0x100763d4 */
    II(0x10075b64, 0x5)   calld(0x10075745, -0x424);            /* call 0x10075745 */
l_0x10075b69:
    II(0x10075b69, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x10075b70, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10075b72, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10075b75, 0x5)   calld(0x10075f6c, 0x3f2);             /* call 0x10075f6c */
    II(0x10075b7a, 0x5)   jmpd(0x10075c06, 0x87);               /* jmp 0x10075c06 */
l_0x10075b7f:
    II(0x10075b7f, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10075b82, 0x5)   calld(0x100763a0, 0x819);             /* call 0x100763a0 */
    II(0x10075b87, 0x5)   calld(0x1014b6bd, 0xd5b31);           /* call 0x1014b6bd */
l_0x10075b8c:
    II(0x10075b8c, 0x5)   jmpd(0x10075aea, -0xa7);              /* jmp 0x10075aea */
l_0x10075b91:
    II(0x10075b91, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10075b94, 0x5)   calld(0x10076338, 0x79f);             /* call 0x10076338 */
    II(0x10075b99, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10075b9b, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10075b9e, 0x5)   calld(0x1007643c, 0x899);             /* call 0x1007643c */
    II(0x10075ba3, 0x2)   jmpd(0x10075bad, 0x8);                /* jmp 0x10075bad */
l_0x10075ba5:
    II(0x10075ba5, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10075ba8, 0x5)   calld(0x10076bf8, 0x104b);            /* call 0x10076bf8 */
l_0x10075bad:
    II(0x10075bad, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10075baf, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10075bb2, 0x5)   calld(0x1013ad71, 0xc51ba);           /* call 0x1013ad71 */
    II(0x10075bb7, 0x2)   test(al, al);                         /* test al, al */
    II(0x10075bb9, 0x2)   jzd(0x10075be9, 0x2e);                /* jz 0x10075be9 */
    II(0x10075bbb, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10075bbe, 0x5)   calld(0x10076408, 0x845);             /* call 0x10076408 */
    II(0x10075bc3, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x10075bc6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10075bc9, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x2a);  /* cmp byte [eax+0x3e], 0x2a */
    II(0x10075bcd, 0x2)   jnzd(0x10075be7, 0x18);               /* jnz 0x10075be7 */
    II(0x10075bcf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10075bd2, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x7);   /* mov byte [eax+0x3e], 0x7 */
    II(0x10075bd6, 0x7)   cmp(memd_a32(ds, 0x101c5624), 0);     /* cmp dword [0x101c5624], 0x0 */
    II(0x10075bdd, 0x2)   jzd(0x10075be7, 0x8);                 /* jz 0x10075be7 */
    II(0x10075bdf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10075be2, 0x5)   calld(0x101288e9, 0xb2d02);           /* call 0x101288e9 */
l_0x10075be7:
    II(0x10075be7, 0x2)   jmpd(0x10075ba5, -0x44);              /* jmp 0x10075ba5 */
l_0x10075be9:
    II(0x10075be9, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x1);   /* mov dword [ebp-0x14], 0x1 */
    II(0x10075bf0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10075bf2, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10075bf5, 0x5)   calld(0x10075f6c, 0x372);             /* call 0x10075f6c */
    II(0x10075bfa, 0x2)   jmpd(0x10075c06, 0xa);                /* jmp 0x10075c06 */
//  II(0x10075bfc, 0xa)   /* Недостижимый код. */
l_0x10075c06:
    II(0x10075c06, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10075c09, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10075c0b, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10075c0c, 0x1)   popd(edi);                            /* pop edi */
    II(0x10075c0d, 0x1)   popd(esi);                            /* pop esi */
    II(0x10075c0e, 0x1)   popd(edx);                            /* pop edx */
    II(0x10075c0f, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10075c10, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10075c11, 0x1)   retd();                               /* ret */
FUNC_END

