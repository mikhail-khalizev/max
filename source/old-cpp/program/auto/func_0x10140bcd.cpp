FUNC_BEGIN(0x10140bcd, 0xd33ca380d3e9c36, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x7b, 0x51, 0x2, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x74, 0x9b, 0xf4, 0xff, 0x8d, 0x5d, 0xf4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x70, 0xa2, 0xf4, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x1c, 0xe8, 0x1a, 0xa7, 0xff, 0xff, 0xe8, 0x40, 0xa, 0, 0, 0xf, 0xbf, 0xd8, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x1c, 0xe8, 0x44, 0x9, 0, 0, 0x83, 0x7d, 0xfc, 0, 0x75, 0xe, 0x8b, 0x45, 0xf8, 0x66, 0xc7, 0x40, 0x28, 0, 0, 0xe9, 0x89, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x1c, 0xa1, 0xf4, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0x1a, 0xa4, 0xf4, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x21, 0xa1, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x35, 0xbb, 0x1, 0, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0x53, 0xa3, 0xf4, 0xff, 0x8b, 0x4d, 0xf8, 0x83, 0xc1, 0x1c, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0xf4, 0x8, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0xb0, 0xa2, 0xf4, 0xff, 0xe8, 0xdb, 0xa0, 0xf4, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0x5d, 0xa3, 0xf4, 0xff, 0xeb, 0xbd, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x1c, 0xe8, 0x44, 0xa8, 0xf6, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x50, 0x28, 0xe8, 0xae, 0x9, 0, 0, 0xf, 0xbf, 0xd8, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x1c, 0xe8, 0xb1, 0x8, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xbf, 0x7e, 0xf4, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf4, 0xe8, 0x31, 0x5f, 0xf3, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xa0, 0xa0, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x4b, 0x8d, 0x45, 0xf4, 0xe8, 0xe7, 0xa0, 0xf4, 0xff, 0xe8, 0xae, 0xa0, 0xf4, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x66, 0x3b, 0x50, 0x1a, 0x75, 0x12, 0x8d, 0x45, 0xf4, 0xe8, 0xcf, 0xa0, 0xf4, 0xff, 0xe8, 0x5e, 0xa0, 0xf4, 0xff, 0x3b, 0x45, 0xfc, 0x74, 0x2, 0xeb, 0x1d, 0xe8, 0x4a, 0x9, 0, 0, 0xf, 0xbf, 0xd8, 0x8d, 0x45, 0xf4, 0xe8, 0xe7, 0xa0, 0xf4, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x1c, 0xe8, 0x46, 0x8, 0, 0, 0xeb, 0x9f, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x26, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0xdb, 0xfd, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x81, 0x7e, 0xf4, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10140bcd, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x10140bd2, 0x5)   calld(sys_check_available_stack_size, 0x2517b); /* call 0x10165d52 */
    II(0x10140bd7, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10140bd8, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10140bd9, 0x1)   pushd(esi);                           /* push esi */
    II(0x10140bda, 0x1)   pushd(edi);                           /* push edi */
    II(0x10140bdb, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10140bdc, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10140bde, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x10140be4, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10140be7, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x10140bea, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x10140bef, 0x5)   calld(0x1008a768, -0xb648c);          /* call 0x1008a768 */
    II(0x10140bf4, 0x3)   lea(ebx, ebp - 0xc);                  /* lea ebx, [ebp-0xc] */
    II(0x10140bf7, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10140bf9, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10140bfb, 0x5)   calld(0x1008ae70, -0xb5d90);          /* call 0x1008ae70 */
    II(0x10140c00, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10140c03, 0x3)   add(eax, 0x1c);                       /* add eax, 0x1c */
    II(0x10140c06, 0x5)   calld(0x1013b325, -0x58e6);           /* call 0x1013b325 */
    II(0x10140c0b, 0x5)   calld(0x10141650, 0xa40);             /* call 0x10141650 */
    II(0x10140c10, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10140c13, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10140c15, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10140c18, 0x3)   add(eax, 0x1c);                       /* add eax, 0x1c */
    II(0x10140c1b, 0x5)   calld(0x10141564, 0x944);             /* call 0x10141564 */
    II(0x10140c20, 0x4)   cmp(memd_a32(ss, ebp - 0x4), 0);      /* cmp dword [ebp-0x4], 0x0 */
    II(0x10140c24, 0x2)   jnzd(0x10140c34, 0xe);                /* jnz 0x10140c34 */
    II(0x10140c26, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10140c29, 0x6)   mov(memw_a32(ds, eax + 0x28), 0);     /* mov word [eax+0x28], 0x0 */
    II(0x10140c2f, 0x5)   jmpd(0x10140cbd, 0x89);               /* jmp 0x10140cbd */
l_0x10140c34:
    II(0x10140c34, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10140c37, 0x5)   calld(0x1008ad58, -0xb5ee4);          /* call 0x1008ad58 */
    II(0x10140c3c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10140c3e, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10140c41, 0x5)   calld(0x1008b060, -0xb5be6);          /* call 0x1008b060 */
l_0x10140c46:
    II(0x10140c46, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10140c48, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10140c4b, 0x5)   calld(0x1013ad71, -0x5edf);           /* call 0x1013ad71 */
    II(0x10140c50, 0x2)   test(al, al);                         /* test al, al */
    II(0x10140c52, 0x2)   jzd(0x10140c89, 0x35);                /* jz 0x10140c89 */
    II(0x10140c54, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x10140c59, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10140c5c, 0x5)   calld(0x1008afb4, -0xb5cad);          /* call 0x1008afb4 */
    II(0x10140c61, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x8));    /* mov ecx, [ebp-0x8] */
    II(0x10140c64, 0x3)   add(ecx, 0x1c);                       /* add ecx, 0x1c */
    II(0x10140c67, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10140c69, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x10140c6b, 0x5)   calld(0x10141564, 0x8f4);             /* call 0x10141564 */
    II(0x10140c70, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10140c73, 0x5)   calld(0x1008af28, -0xb5d50);          /* call 0x1008af28 */
    II(0x10140c78, 0x5)   calld(0x1008ad58, -0xb5f25);          /* call 0x1008ad58 */
    II(0x10140c7d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10140c7f, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10140c82, 0x5)   calld(0x1008afe4, -0xb5ca3);          /* call 0x1008afe4 */
    II(0x10140c87, 0x2)   jmpd(0x10140c46, -0x43);              /* jmp 0x10140c46 */
l_0x10140c89:
    II(0x10140c89, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10140c8c, 0x3)   add(eax, 0x1c);                       /* add eax, 0x1c */
    II(0x10140c8f, 0x5)   calld(my_1_get_count, -0x957bc);      /* call 0x100ab4d8 */
    II(0x10140c94, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10140c96, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10140c99, 0x4)   mov(memw_a32(ds, eax + 0x28), dx);    /* mov [eax+0x28], dx */
    II(0x10140c9d, 0x5)   calld(0x10141650, 0x9ae);             /* call 0x10141650 */
    II(0x10140ca2, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10140ca5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10140ca8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10140cab, 0x3)   add(eax, 0x1c);                       /* add eax, 0x1c */
    II(0x10140cae, 0x5)   calld(0x10141564, 0x8b1);             /* call 0x10141564 */
    II(0x10140cb3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10140cb5, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10140cb8, 0x5)   calld(0x10088b7c, -0xb8141);          /* call 0x10088b7c */
l_0x10140cbd:
    II(0x10140cbd, 0x2)   jmpd(0x10140cc7, 0x8);                /* jmp 0x10140cc7 */
l_0x10140cbf:
    II(0x10140cbf, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10140cc2, 0x5)   calld(0x10076bf8, -0xca0cf);          /* call 0x10076bf8 */
l_0x10140cc7:
    II(0x10140cc7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10140cc9, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10140ccc, 0x5)   calld(0x1013ad71, -0x5f60);           /* call 0x1013ad71 */
    II(0x10140cd1, 0x2)   test(al, al);                         /* test al, al */
    II(0x10140cd3, 0x2)   jzd(0x10140d20, 0x4b);                /* jz 0x10140d20 */
    II(0x10140cd5, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10140cd8, 0x5)   calld(0x1008adc4, -0xb5f19);          /* call 0x1008adc4 */
    II(0x10140cdd, 0x5)   calld(0x1008ad90, -0xb5f52);          /* call 0x1008ad90 */
    II(0x10140ce2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10140ce4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10140ce7, 0x4)   cmp(dx, memw_a32(ds, eax + 0x1a));    /* cmp dx, [eax+0x1a] */
    II(0x10140ceb, 0x2)   jnzd(0x10140cff, 0x12);               /* jnz 0x10140cff */
    II(0x10140ced, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10140cf0, 0x5)   calld(0x1008adc4, -0xb5f31);          /* call 0x1008adc4 */
    II(0x10140cf5, 0x5)   calld(0x1008ad58, -0xb5fa2);          /* call 0x1008ad58 */
    II(0x10140cfa, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x4));    /* cmp eax, [ebp-0x4] */
    II(0x10140cfd, 0x2)   jzd(0x10140d01, 0x2);                 /* jz 0x10140d01 */
l_0x10140cff:
    II(0x10140cff, 0x2)   jmpd(0x10140d1e, 0x1d);               /* jmp 0x10140d1e */
l_0x10140d01:
    II(0x10140d01, 0x5)   calld(0x10141650, 0x94a);             /* call 0x10141650 */
    II(0x10140d06, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10140d09, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10140d0c, 0x5)   calld(0x1008adf8, -0xb5f19);          /* call 0x1008adf8 */
    II(0x10140d11, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10140d13, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10140d16, 0x3)   add(eax, 0x1c);                       /* add eax, 0x1c */
    II(0x10140d19, 0x5)   calld(0x10141564, 0x846);             /* call 0x10141564 */
l_0x10140d1e:
    II(0x10140d1e, 0x2)   jmpd(0x10140cbf, -0x61);              /* jmp 0x10140cbf */
l_0x10140d20:
    II(0x10140d20, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10140d23, 0x3)   mov(edx, memd_a32(ds, eax + 0x26));   /* mov edx, [eax+0x26] */
    II(0x10140d26, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10140d29, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10140d2c, 0x5)   calld(0x10140b0c, -0x225);            /* call 0x10140b0c */
    II(0x10140d31, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10140d33, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10140d36, 0x5)   calld(0x10088bbc, -0xb817f);          /* call 0x10088bbc */
    II(0x10140d3b, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10140d3d, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10140d3e, 0x1)   popd(edi);                            /* pop edi */
    II(0x10140d3f, 0x1)   popd(esi);                            /* pop esi */
    II(0x10140d40, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10140d41, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10140d42, 0x1)   retd();                               /* ret */
FUNC_END

