FUNC_BEGIN(0x10080b6d, 0x8a617a0d2a59c488, 0x20, ({0x68, 0x50, 0, 0, 0, 0xe8, 0xdb, 0x51, 0xe, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x34, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1b, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0x6, 0xc6, 0x45, 0xf4, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf4, 0, 0x8a, 0x45, 0xf4, 0x88, 0x45, 0xec, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1d, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0x6, 0xc6, 0x45, 0xf0, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf0, 0, 0x8a, 0x45, 0xf0, 0x88, 0x45, 0xf8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x6b, 0x57, 0xff, 0xff, 0x8d, 0x5d, 0xe4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xdf, 0x58, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe4, 0xe8, 0x15, 0x60, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x84, 0xa1, 0xb, 0, 0x84, 0xc0, 0x74, 0x1b, 0x8d, 0x45, 0xe4, 0xe8, 0xa7, 0x57, 0xff, 0xff, 0x66, 0x83, 0x78, 0x8, 0x38, 0x75, 0x6, 0xc6, 0x45, 0xec, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xf8, 0x1, 0xeb, 0xcf, 0x80, 0x7d, 0xec, 0, 0x74, 0xa, 0x80, 0x7d, 0xf8, 0, 0xf, 0x85, 0xa9, 0, 0, 0, 0xb8, 0x1d, 0, 0, 0, 0xe8, 0xda, 0x51, 0xe, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xdc, 0x83, 0x7d, 0xdc, 0, 0x74, 0x23, 0x8d, 0x55, 0xd8, 0x8b, 0x45, 0xfc, 0xe8, 0xfd, 0x20, 0x2, 0, 0x89, 0xc3, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xe0, 0xe8, 0x1f, 0x54, 0x2, 0, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xd4, 0x89, 0x45, 0xd0, 0xeb, 0x6, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xd0, 0x8b, 0x55, 0xd0, 0x8d, 0x45, 0xcc, 0xe8, 0xab, 0x9c, 0, 0, 0x80, 0x7d, 0xec, 0, 0x75, 0x19, 0xba, 0x38, 0, 0, 0, 0x8d, 0x45, 0xcc, 0xe8, 0x60, 0x9b, 0, 0, 0xe8, 0x3b, 0x57, 0x2, 0, 0x8b, 0x45, 0xfc, 0x66, 0xff, 0x40, 0x1d, 0x80, 0x7d, 0xf8, 0, 0x75, 0x19, 0xba, 0x4a, 0, 0, 0, 0x8d, 0x45, 0xcc, 0xe8, 0x41, 0x9b, 0, 0, 0xe8, 0x1c, 0x57, 0x2, 0, 0x8b, 0x45, 0xfc, 0x66, 0xff, 0x40, 0x1f, 0x8d, 0x45, 0xcc, 0xe8, 0x89, 0x9b, 0, 0, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x95, 0x40, 0x2, 0, 0x31, 0xd2, 0x8d, 0x45, 0xcc, 0xe8, 0xf7, 0x7f, 0, 0, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xe8, 0xff, 0x52, 0x3c, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x8b, 0x52, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10080b6d, 0x5)   pushd(0x50);                          /* push dword 0x50 */
    II(0x10080b72, 0x5)   calld(sys_check_available_stack_size, 0xe51db); /* call 0x10165d52 */
    II(0x10080b77, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10080b78, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10080b79, 0x1)   pushd(edx);                           /* push edx */
    II(0x10080b7a, 0x1)   pushd(esi);                           /* push esi */
    II(0x10080b7b, 0x1)   pushd(edi);                           /* push edi */
    II(0x10080b7c, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10080b7d, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10080b7f, 0x6)   sub(esp, 0x34);                       /* sub esp, 0x34 */
    II(0x10080b85, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x10080b88, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10080b8b, 0x3)   mov(eax, memd_a32(ds, eax + 0x1b));   /* mov eax, [eax+0x1b] */
    II(0x10080b8e, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10080b91, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10080b93, 0x2)   jled(0x10080b9b, 0x6);                /* jle 0x10080b9b */
    II(0x10080b95, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x10080b99, 0x2)   jmpd(0x10080b9f, 0x4);                /* jmp 0x10080b9f */
l_0x10080b9b:
    II(0x10080b9b, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
l_0x10080b9f:
    II(0x10080b9f, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x10080ba2, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x10080ba5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10080ba8, 0x3)   mov(eax, memd_a32(ds, eax + 0x1d));   /* mov eax, [eax+0x1d] */
    II(0x10080bab, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10080bae, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10080bb0, 0x2)   jled(0x10080bb8, 0x6);                /* jle 0x10080bb8 */
    II(0x10080bb2, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x10080bb6, 0x2)   jmpd(0x10080bbc, 0x4);                /* jmp 0x10080bbc */
l_0x10080bb8:
    II(0x10080bb8, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
l_0x10080bbc:
    II(0x10080bbc, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x10080bbf, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
    II(0x10080bc2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10080bc5, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x10080bc8, 0x5)   calld(0x10076338, -0xa895);           /* call 0x10076338 */
    II(0x10080bcd, 0x3)   lea(ebx, ebp - 0x1c);                 /* lea ebx, [ebp-0x1c] */
    II(0x10080bd0, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10080bd2, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10080bd4, 0x5)   calld(0x100764b8, -0xa721);           /* call 0x100764b8 */
    II(0x10080bd9, 0x2)   jmpd(0x10080be3, 0x8);                /* jmp 0x10080be3 */
l_0x10080bdb:
    II(0x10080bdb, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10080bde, 0x5)   calld(0x10076bf8, -0x9feb);           /* call 0x10076bf8 */
l_0x10080be3:
    II(0x10080be3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10080be5, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10080be8, 0x5)   calld(0x1013ad71, 0xba184);           /* call 0x1013ad71 */
    II(0x10080bed, 0x2)   test(al, al);                         /* test al, al */
    II(0x10080bef, 0x2)   jzd(0x10080c0c, 0x1b);                /* jz 0x10080c0c */
    II(0x10080bf1, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10080bf4, 0x5)   calld(0x100763a0, -0xa859);           /* call 0x100763a0 */
    II(0x10080bf9, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x38);   /* cmp word [eax+0x8], 0x38 */
    II(0x10080bfe, 0x2)   jnzd(0x10080c06, 0x6);                /* jnz 0x10080c06 */
    II(0x10080c00, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
    II(0x10080c04, 0x2)   jmpd(0x10080c0a, 0x4);                /* jmp 0x10080c0a */
l_0x10080c06:
    II(0x10080c06, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
l_0x10080c0a:
    II(0x10080c0a, 0x2)   jmpd(0x10080bdb, -0x31);              /* jmp 0x10080bdb */
l_0x10080c0c:
    II(0x10080c0c, 0x4)   cmp(memb_a32(ss, ebp - 0x14), 0);     /* cmp byte [ebp-0x14], 0x0 */
    II(0x10080c10, 0x2)   jzd(0x10080c1c, 0xa);                 /* jz 0x10080c1c */
    II(0x10080c12, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x10080c16, 0x6)   jnzd(0x10080cc5, 0xa9);               /* jnz dword 0x10080cc5 */
l_0x10080c1c:
    II(0x10080c1c, 0x5)   mov(eax, 0x1d);                       /* mov eax, 0x1d */
    II(0x10080c21, 0x5)   calld(sys_new, 0xe51da);              /* call 0x10165e00 */
    II(0x10080c26, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x10080c29, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10080c2c, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x10080c2f, 0x4)   cmp(memd_a32(ss, ebp - 0x24), 0);     /* cmp dword [ebp-0x24], 0x0 */
    II(0x10080c33, 0x2)   jzd(0x10080c58, 0x23);                /* jz 0x10080c58 */
    II(0x10080c35, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x10080c38, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10080c3b, 0x5)   calld(0x100a2d3d, 0x220fd);           /* call 0x100a2d3d */
    II(0x10080c40, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10080c42, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10080c45, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10080c48, 0x5)   calld(my_ctor_c12, 0x2541f);          /* call 0x100a606c */
    II(0x10080c4d, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
//    II(0x10080c50, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x10080c53, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x10080c56, 0x2)   jmpd(0x10080c5e, 0x6);                /* jmp 0x10080c5e */
l_0x10080c58:
    II(0x10080c58, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10080c5b, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
l_0x10080c5e:
    II(0x10080c5e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x30));   /* mov edx, [ebp-0x30] */
    II(0x10080c61, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10080c64, 0x5)   calld(0x1008a914, 0x9cab);            /* call 0x1008a914 */
    II(0x10080c69, 0x4)   cmp(memb_a32(ss, ebp - 0x14), 0);     /* cmp byte [ebp-0x14], 0x0 */
    II(0x10080c6d, 0x2)   jnzd(0x10080c88, 0x19);               /* jnz 0x10080c88 */
    II(0x10080c6f, 0x5)   mov(edx, 0x38);                       /* mov edx, 0x38 */
    II(0x10080c74, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10080c77, 0x5)   calld(0x1008a7dc, 0x9b60);            /* call 0x1008a7dc */
    II(0x10080c7c, 0x5)   calld(0x100a63bc, 0x2573b);           /* call 0x100a63bc */
    II(0x10080c81, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10080c84, 0x4)   inc(memw_a32(ds, eax + 0x1d));        /* inc word [eax+0x1d] */
l_0x10080c88:
    II(0x10080c88, 0x4)   cmp(memb_a32(ss, ebp - 0x8), 0);      /* cmp byte [ebp-0x8], 0x0 */
    II(0x10080c8c, 0x2)   jnzd(0x10080ca7, 0x19);               /* jnz 0x10080ca7 */
    II(0x10080c8e, 0x5)   mov(edx, 0x4a);                       /* mov edx, 0x4a */
    II(0x10080c93, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10080c96, 0x5)   calld(0x1008a7dc, 0x9b41);            /* call 0x1008a7dc */
    II(0x10080c9b, 0x5)   calld(0x100a63bc, 0x2571c);           /* call 0x100a63bc */
    II(0x10080ca0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10080ca3, 0x4)   inc(memw_a32(ds, eax + 0x1f));        /* inc word [eax+0x1f] */
l_0x10080ca7:
    II(0x10080ca7, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10080caa, 0x5)   calld(0x1008a838, 0x9b89);            /* call 0x1008a838 */
    II(0x10080caf, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10080cb1, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x10080cb6, 0x5)   calld(0x100a4d50, 0x24095);           /* call 0x100a4d50 */
    II(0x10080cbb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10080cbd, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10080cc0, 0x5)   calld(0x10088cbc, 0x7ff7);            /* call 0x10088cbc */
l_0x10080cc5:
    II(0x10080cc5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10080cc8, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x10080ccb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10080cce, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x10080cd1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10080cd4, 0x3)   calld_abs(memd_a32(ds, edx + 0x3c));  /* call dword near [edx+0x3c] */
    II(0x10080cd7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10080cd9, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x10080cdc, 0x5)   calld(0x10075f6c, -0xad75);           /* call 0x10075f6c */
    II(0x10080ce1, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10080ce3, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10080ce4, 0x1)   popd(edi);                            /* pop edi */
    II(0x10080ce5, 0x1)   popd(esi);                            /* pop esi */
    II(0x10080ce6, 0x1)   popd(edx);                            /* pop edx */
    II(0x10080ce7, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10080ce8, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10080ce9, 0x1)   retd();                               /* ret */
FUNC_END

