FUNC_BEGIN(0x1009eaae, 0x9b569d435b5d3849, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0x9a, 0x72, 0xc, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x3, 0x45, 0xf8, 0x80, 0x78, 0x23, 0, 0x75, 0x9, 0xc6, 0x45, 0xf4, 0, 0xe9, 0xba, 0, 0, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x17, 0xe8, 0x40, 0x78, 0xfd, 0xff, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xb4, 0x79, 0xfd, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0xea, 0x80, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x59, 0xc2, 0x9, 0, 0x84, 0xc0, 0x74, 0x1d, 0x8d, 0x45, 0xec, 0xe8, 0x7c, 0x78, 0xfd, 0xff, 0x66, 0x8b, 0x50, 0x8, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x50, 0x8, 0x75, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xeb, 0xcd, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x32, 0x74, 0xa, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x44, 0x75, 0x25, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x3, 0x7d, 0x6, 0xc6, 0x45, 0xe8, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xe8, 0, 0x8a, 0x45, 0xe8, 0x88, 0x45, 0xf4, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xfc, 0x73, 0xfd, 0xff, 0xeb, 0x2e, 0xf, 0xbf, 0x45, 0xf0, 0x85, 0xc0, 0x75, 0x6, 0xc6, 0x45, 0xe4, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xe4, 0, 0x8a, 0x45, 0xe4, 0x88, 0x45, 0xf4, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xd8, 0x73, 0xfd, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xcc, 0x73, 0xfd, 0xff, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1009eaae, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x1009eab3, 0x5)   calld(sys_check_available_stack_size, 0xc729a); /* call 0x10165d52 */
    II(0x1009eab8, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1009eab9, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1009eaba, 0x1)   pushd(esi);                           /* push esi */
    II(0x1009eabb, 0x1)   pushd(edi);                           /* push edi */
    II(0x1009eabc, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1009eabd, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1009eabf, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x1009eac5, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1009eac8, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1009eacb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009eace, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1009ead1, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1009ead4, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1009ead7, 0x4)   cmp(memb_a32(ds, eax + 0x23), 0);     /* cmp byte [eax+0x23], 0x0 */
    II(0x1009eadb, 0x2)   jnzd(0x1009eae6, 0x9);                /* jnz 0x1009eae6 */
    II(0x1009eadd, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x1009eae1, 0x5)   jmpd(0x1009eba0, 0xba);               /* jmp 0x1009eba0 */
l_0x1009eae6:
    II(0x1009eae6, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x1009eaed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1009eaf0, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x1009eaf3, 0x5)   calld(0x10076338, -0x287c0);          /* call 0x10076338 */
    II(0x1009eaf8, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x1009eafb, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009eafd, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1009eaff, 0x5)   calld(0x100764b8, -0x2864c);          /* call 0x100764b8 */
    II(0x1009eb04, 0x2)   jmpd(0x1009eb0e, 0x8);                /* jmp 0x1009eb0e */
l_0x1009eb06:
    II(0x1009eb06, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1009eb09, 0x5)   calld(0x10076bf8, -0x27f16);          /* call 0x10076bf8 */
l_0x1009eb0e:
    II(0x1009eb0e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009eb10, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1009eb13, 0x5)   calld(0x1013ad71, 0x9c259);           /* call 0x1013ad71 */
    II(0x1009eb18, 0x2)   test(al, al);                         /* test al, al */
    II(0x1009eb1a, 0x2)   jzd(0x1009eb39, 0x1d);                /* jz 0x1009eb39 */
    II(0x1009eb1c, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1009eb1f, 0x5)   calld(0x100763a0, -0x28784);          /* call 0x100763a0 */
    II(0x1009eb24, 0x4)   mov(dx, memw_a32(ds, eax + 0x8));     /* mov dx, [eax+0x8] */
    II(0x1009eb28, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009eb2b, 0x4)   cmp(dx, memw_a32(ds, eax + 0x8));     /* cmp dx, [eax+0x8] */
    II(0x1009eb2f, 0x2)   jnzd(0x1009eb37, 0x6);                /* jnz 0x1009eb37 */
    II(0x1009eb31, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1009eb34, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x1009eb37:
    II(0x1009eb37, 0x2)   jmpd(0x1009eb06, -0x33);              /* jmp 0x1009eb06 */
l_0x1009eb39:
    II(0x1009eb39, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009eb3c, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x32);   /* cmp word [eax+0x8], 0x32 */
    II(0x1009eb41, 0x2)   jzd(0x1009eb4d, 0xa);                 /* jz 0x1009eb4d */
    II(0x1009eb43, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1009eb46, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x44);   /* cmp word [eax+0x8], 0x44 */
    II(0x1009eb4b, 0x2)   jnzd(0x1009eb72, 0x25);               /* jnz 0x1009eb72 */
l_0x1009eb4d:
    II(0x1009eb4d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1009eb51, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x1009eb54, 0x2)   jged(0x1009eb5c, 0x6);                /* jge 0x1009eb5c */
    II(0x1009eb56, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0x1);   /* mov byte [ebp-0x18], 0x1 */
    II(0x1009eb5a, 0x2)   jmpd(0x1009eb60, 0x4);                /* jmp 0x1009eb60 */
l_0x1009eb5c:
    II(0x1009eb5c, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0);     /* mov byte [ebp-0x18], 0x0 */
l_0x1009eb60:
    II(0x1009eb60, 0x3)   mov(al, memb_a32(ss, ebp - 0x18));    /* mov al, [ebp-0x18] */
    II(0x1009eb63, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x1009eb66, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009eb68, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1009eb6b, 0x5)   calld(0x10075f6c, -0x28c04);          /* call 0x10075f6c */
    II(0x1009eb70, 0x2)   jmpd(0x1009eba0, 0x2e);               /* jmp 0x1009eba0 */
l_0x1009eb72:
    II(0x1009eb72, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1009eb76, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1009eb78, 0x2)   jnzd(0x1009eb80, 0x6);                /* jnz 0x1009eb80 */
    II(0x1009eb7a, 0x4)   mov(memb_a32(ss, ebp - 0x1c), 0x1);   /* mov byte [ebp-0x1c], 0x1 */
    II(0x1009eb7e, 0x2)   jmpd(0x1009eb84, 0x4);                /* jmp 0x1009eb84 */
l_0x1009eb80:
    II(0x1009eb80, 0x4)   mov(memb_a32(ss, ebp - 0x1c), 0);     /* mov byte [ebp-0x1c], 0x0 */
l_0x1009eb84:
    II(0x1009eb84, 0x3)   mov(al, memb_a32(ss, ebp - 0x1c));    /* mov al, [ebp-0x1c] */
    II(0x1009eb87, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x1009eb8a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009eb8c, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1009eb8f, 0x5)   calld(0x10075f6c, -0x28c28);          /* call 0x10075f6c */
    II(0x1009eb94, 0x2)   jmpd(0x1009eba0, 0xa);                /* jmp 0x1009eba0 */
//  II(0x1009eb96, 0xa)   /* Недостижимый код. */
l_0x1009eba0:
    II(0x1009eba0, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x1009eba3, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1009eba5, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1009eba6, 0x1)   popd(edi);                            /* pop edi */
    II(0x1009eba7, 0x1)   popd(esi);                            /* pop esi */
    II(0x1009eba8, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1009eba9, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1009ebaa, 0x1)   retd();                               /* ret */
FUNC_END

