FUNC_BEGIN(0x100ec9f2, 0x4604bf9feb2b3ebe, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0x56, 0x93, 0x7, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xf0, 0xe8, 0xe1, 0x9a, 0xf8, 0xff, 0x89, 0x45, 0xec, 0x80, 0x65, 0xf4, 0xfe, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x33, 0xf6, 0x80, 0xc1, 0x81, 0x1c, 0x10, 0x2, 0x74, 0x18, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0xf5, 0x98, 0xf8, 0xff, 0x8d, 0x5d, 0xf0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xed, 0x99, 0xf8, 0xff, 0xeb, 0x16, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xdd, 0x98, 0xf8, 0xff, 0x8d, 0x5d, 0xf0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xd5, 0x99, 0xf8, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0x87, 0xa1, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xf6, 0xe2, 0x4, 0, 0x84, 0xc0, 0x74, 0x52, 0x8d, 0x45, 0xf0, 0xe8, 0x19, 0x99, 0xf8, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xf8, 0x39, 0xc2, 0x75, 0xe, 0x8d, 0x45, 0xf0, 0xe8, 0x4, 0x99, 0xf8, 0xff, 0x80, 0x78, 0x3d, 0x4, 0x74, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf0, 0xe8, 0xf4, 0x98, 0xf8, 0xff, 0x80, 0x78, 0x45, 0, 0x75, 0x2, 0xeb, 0x13, 0x8d, 0x45, 0xf0, 0xe8, 0xe4, 0x98, 0xf8, 0xff, 0xe8, 0xdd, 0x3f, 0x6, 0, 0x66, 0x3b, 0x45, 0xfc, 0x74, 0x2, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0xeb, 0x98, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xe4, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x8b, 0x94, 0xf8, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x7f, 0x94, 0xf8, 0xff, 0x8b, 0x45, 0xe4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100ec9f2, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x100ec9f7, 0x5)   calld(sys_check_available_stack_size, 0x79356); /* call 0x10165d52 */
    II(0x100ec9fc, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100ec9fd, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ec9fe, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ec9ff, 0x1)   pushd(edi);                           /* push edi */
    II(0x100eca00, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100eca01, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100eca03, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x100eca09, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100eca0c, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100eca0f, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100eca13, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100eca16, 0x5)   calld(0x100764fc, -0x7651f);          /* call 0x100764fc */
    II(0x100eca1b, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100eca1e, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x100eca22, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100eca29, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100eca2d, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100eca30, 0x7)   test(memb_a32(ds, eax + 0x101c81c1), 0x2); /* test byte [eax+0x101c81c1], 0x2 */
    II(0x100eca37, 0x2)   jzd(0x100eca51, 0x18);                /* jz 0x100eca51 */
    II(0x100eca39, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100eca3e, 0x5)   calld(0x10076338, -0x7670b);          /* call 0x10076338 */
    II(0x100eca43, 0x3)   lea(ebx, ebp - 0x10);                 /* lea ebx, [ebp-0x10] */
    II(0x100eca46, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100eca48, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100eca4a, 0x5)   calld(0x1007643c, -0x76613);          /* call 0x1007643c */
    II(0x100eca4f, 0x2)   jmpd(0x100eca67, 0x16);               /* jmp 0x100eca67 */
l_0x100eca51:
    II(0x100eca51, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100eca56, 0x5)   calld(0x10076338, -0x76723);          /* call 0x10076338 */
    II(0x100eca5b, 0x3)   lea(ebx, ebp - 0x10);                 /* lea ebx, [ebp-0x10] */
    II(0x100eca5e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100eca60, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100eca62, 0x5)   calld(0x1007643c, -0x7662b);          /* call 0x1007643c */
l_0x100eca67:
    II(0x100eca67, 0x2)   jmpd(0x100eca71, 0x8);                /* jmp 0x100eca71 */
l_0x100eca69:
    II(0x100eca69, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100eca6c, 0x5)   calld(0x10076bf8, -0x75e79);          /* call 0x10076bf8 */
l_0x100eca71:
    II(0x100eca71, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100eca73, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100eca76, 0x5)   calld(0x1013ad71, 0x4e2f6);           /* call 0x1013ad71 */
    II(0x100eca7b, 0x2)   test(al, al);                         /* test al, al */
    II(0x100eca7d, 0x2)   jzd(0x100ecad1, 0x52);                /* jz 0x100ecad1 */
    II(0x100eca7f, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100eca82, 0x5)   calld(0x100763a0, -0x766e7);          /* call 0x100763a0 */
    II(0x100eca87, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100eca89, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100eca8c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100eca90, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100eca92, 0x2)   jnzd(0x100ecaa2, 0xe);                /* jnz 0x100ecaa2 */
    II(0x100eca94, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100eca97, 0x5)   calld(0x100763a0, -0x766fc);          /* call 0x100763a0 */
    II(0x100eca9c, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x4);   /* cmp byte [eax+0x3d], 0x4 */
    II(0x100ecaa0, 0x2)   jzd(0x100ecaa4, 0x2);                 /* jz 0x100ecaa4 */
l_0x100ecaa2:
    II(0x100ecaa2, 0x2)   jmpd(0x100ecab2, 0xe);                /* jmp 0x100ecab2 */
l_0x100ecaa4:
    II(0x100ecaa4, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ecaa7, 0x5)   calld(0x100763a0, -0x7670c);          /* call 0x100763a0 */
    II(0x100ecaac, 0x4)   cmp(memb_a32(ds, eax + 0x45), 0);     /* cmp byte [eax+0x45], 0x0 */
    II(0x100ecab0, 0x2)   jnzd(0x100ecab4, 0x2);                /* jnz 0x100ecab4 */
l_0x100ecab2:
    II(0x100ecab2, 0x2)   jmpd(0x100ecac7, 0x13);               /* jmp 0x100ecac7 */
l_0x100ecab4:
    II(0x100ecab4, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ecab7, 0x5)   calld(0x100763a0, -0x7671c);          /* call 0x100763a0 */
    II(0x100ecabc, 0x5)   calld(0x10150a9e, 0x63fdd);           /* call 0x10150a9e */
    II(0x100ecac1, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4));     /* cmp ax, [ebp-0x4] */
    II(0x100ecac5, 0x2)   jzd(0x100ecac9, 0x2);                 /* jz 0x100ecac9 */
l_0x100ecac7:
    II(0x100ecac7, 0x2)   jmpd(0x100ecacf, 0x6);                /* jmp 0x100ecacf */
l_0x100ecac9:
    II(0x100ecac9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100ecacc, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
l_0x100ecacf:
    II(0x100ecacf, 0x2)   jmpd(0x100eca69, -0x68);              /* jmp 0x100eca69 */
l_0x100ecad1:
    II(0x100ecad1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100ecad4, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100ecad7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ecad9, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100ecadc, 0x5)   calld(0x10075f6c, -0x76b75);          /* call 0x10075f6c */
    II(0x100ecae1, 0x2)   jmpd(0x100ecaed, 0xa);                /* jmp 0x100ecaed */
//  II(0x100ecae3, 0xa)   /* Недостижимый код. */
l_0x100ecaed:
    II(0x100ecaed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100ecaf0, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ecaf2, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ecaf3, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ecaf4, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ecaf5, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ecaf6, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ecaf7, 0x1)   retd();                               /* ret */
FUNC_END

