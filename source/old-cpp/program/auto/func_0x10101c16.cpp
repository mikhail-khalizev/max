FUNC_BEGIN(0x10101c16, 0x10605c074df71950, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x32, 0x41, 0x6, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x8b, 0x45, 0xf8, 0x66, 0xff, 0x8, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x40, 0x2, 0x2, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xeb, 0x4, 0x83, 0x45, 0xec, 0x2, 0xf, 0xbf, 0x45, 0xec, 0x83, 0xf8, 0x8, 0xf, 0x8d, 0x7f, 0, 0, 0, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x2, 0x7d, 0x4c, 0xf, 0xbf, 0x55, 0xec, 0xc1, 0xe2, 0x2, 0xb8, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0x19, 0x95, 0xf8, 0xff, 0xb8, 0x2, 0, 0, 0, 0x50, 0x8b, 0x45, 0xf8, 0x8b, 0x8, 0xc1, 0xf9, 0x10, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x18, 0xf, 0xbf, 0x55, 0xfc, 0xb8, 0x2, 0, 0, 0, 0xe8, 0xc, 0xe6, 0xf6, 0xff, 0x66, 0x85, 0xc0, 0x74, 0xd, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0xe8, 0xa7, 0x41, 0xf7, 0xff, 0xeb, 0x2f, 0xeb, 0xa5, 0xf, 0xbf, 0x45, 0xec, 0xc1, 0xe0, 0x2, 0xba, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0xcd, 0x94, 0xf8, 0xff, 0xe9, 0x70, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x66, 0xff, 0x48, 0x2, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf4, 0xe8, 0x76, 0x41, 0xf7, 0xff, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x10101c16, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x10101c1b, 0x5)   calld(sys_check_available_stack_size, 0x64132); /* call 0x10165d52 */
    II(0x10101c20, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10101c21, 0x1)   pushd(esi);                           /* push esi */
    II(0x10101c22, 0x1)   pushd(edi);                           /* push edi */
    II(0x10101c23, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10101c24, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10101c26, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x10101c2c, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10101c2f, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x10101c32, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x10101c35, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10101c38, 0x3)   dec(memw_a32(ds, eax));               /* dec word [eax] */
    II(0x10101c3b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10101c3e, 0x5)   add(memw_a32(ds, eax + 0x2), 0x2);    /* add word [eax+0x2], 0x2 */
    II(0x10101c43, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x10101c4a, 0x2)   jmpd(0x10101c50, 0x4);                /* jmp 0x10101c50 */
l_0x10101c4c:
    II(0x10101c4c, 0x4)   add(memd_a32(ss, ebp - 0x14), 0x2);   /* add dword [ebp-0x14], 0x2 */
l_0x10101c50:
    II(0x10101c50, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10101c54, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x10101c57, 0x6)   jged(0x10101cdc, 0x7f);               /* jge dword 0x10101cdc */
    II(0x10101c5d, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x10101c64, 0x2)   jmpd(0x10101c6c, 0x6);                /* jmp 0x10101c6c */
l_0x10101c66:
    II(0x10101c66, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10101c69, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x10101c6c:
    II(0x10101c6c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10101c70, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x10101c73, 0x2)   jged(0x10101cc1, 0x4c);               /* jge 0x10101cc1 */
    II(0x10101c75, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10101c79, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x10101c7c, 0x5)   mov(eax, 0x101c5348);                 /* mov eax, 0x101c5348 */
    II(0x10101c81, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10101c83, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10101c86, 0x5)   calld(0x1008b1a4, -0x76ae7);          /* call 0x1008b1a4 */
    II(0x10101c8b, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x10101c90, 0x1)   pushd(eax);                           /* push eax */
    II(0x10101c91, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10101c94, 0x2)   mov(ecx, memd_a32(ds, eax));          /* mov ecx, [eax] */
    II(0x10101c96, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x10101c99, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10101c9c, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x10101c9f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x10101ca3, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x10101ca8, 0x5)   calld(0x100702b9, -0x919f4);          /* call 0x100702b9 */
    II(0x10101cad, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x10101cb0, 0x2)   jzd(0x10101cbf, 0xd);                 /* jz 0x10101cbf */
    II(0x10101cb2, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10101cb5, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10101cb8, 0x5)   calld(0x10075e64, -0x8be59);          /* call 0x10075e64 */
    II(0x10101cbd, 0x2)   jmpd(0x10101cee, 0x2f);               /* jmp 0x10101cee */
l_0x10101cbf:
    II(0x10101cbf, 0x2)   jmpd(0x10101c66, -0x5b);              /* jmp 0x10101c66 */
l_0x10101cc1:
    II(0x10101cc1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10101cc5, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10101cc8, 0x5)   mov(edx, 0x101c5348);                 /* mov edx, 0x101c5348 */
    II(0x10101ccd, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10101ccf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10101cd2, 0x5)   calld(0x1008b1a4, -0x76b33);          /* call 0x1008b1a4 */
    II(0x10101cd7, 0x5)   jmpd(0x10101c4c, -0x90);              /* jmp 0x10101c4c */
l_0x10101cdc:
    II(0x10101cdc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10101cdf, 0x4)   dec(memw_a32(ds, eax + 0x2));         /* dec word [eax+0x2] */
    II(0x10101ce3, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10101ce6, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10101ce9, 0x5)   calld(0x10075e64, -0x8be8a);          /* call 0x10075e64 */
l_0x10101cee:
    II(0x10101cee, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10101cf1, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10101cf3, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10101cf4, 0x1)   popd(edi);                            /* pop edi */
    II(0x10101cf5, 0x1)   popd(esi);                            /* pop esi */
    II(0x10101cf6, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10101cf7, 0x1)   retd();                               /* ret */
FUNC_END

