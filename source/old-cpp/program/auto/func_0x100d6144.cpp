FUNC_BEGIN(0x100d6144, 0x25125ff3e20b4460, 0x20, ({0x68, 0x90, 0, 0, 0, 0xe8, 0x4, 0xfc, 0x8, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x80, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xfc, 0x89, 0x5d, 0xf4, 0x89, 0x4d, 0xf8, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0x18, 0xf, 0xbf, 0x55, 0x18, 0xf, 0xaf, 0xc2, 0x89, 0x45, 0xe4, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0x8b, 0x55, 0xe4, 0x1, 0xd2, 0xf, 0xbf, 0x45, 0x18, 0xf, 0xaf, 0xd0, 0x89, 0x55, 0xdc, 0xf, 0xbf, 0x45, 0x18, 0x8b, 0x5d, 0xe4, 0xf, 0xaf, 0xd8, 0x8b, 0x45, 0xe4, 0x8b, 0x55, 0xe4, 0xc1, 0xfa, 0x1f, 0xc1, 0xe2, 0x2, 0x1b, 0xc2, 0xc1, 0xf8, 0x2, 0x29, 0xd8, 0x89, 0x45, 0xd8, 0xf, 0xbf, 0x45, 0x18, 0x69, 0xc0, 0x5, 0xb5, 0, 0, 0xc1, 0xf8, 0x10, 0x89, 0x45, 0xd4, 0xf, 0xbf, 0x55, 0x10, 0xf, 0xbf, 0x45, 0x18, 0x1, 0xd0, 0x85, 0xc0, 0x7c, 0x12, 0xf, 0xbf, 0x55, 0x10, 0xf, 0xbf, 0x45, 0x18, 0x29, 0xc2, 0xf, 0xbf, 0x45, 0xf4, 0x39, 0xc2, 0x7c, 0x2, 0xeb, 0xe, 0xf, 0xbf, 0x55, 0x14, 0xf, 0xbf, 0x45, 0x18, 0x1, 0xd0, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0x12, 0xf, 0xbf, 0x55, 0x14, 0xf, 0xbf, 0x45, 0x18, 0x29, 0xc2, 0xf, 0xbf, 0x45, 0xf8, 0x39, 0xc2, 0x7c, 0x2, 0xeb, 0x8, 0xf, 0xbf, 0x45, 0x18, 0x85, 0xc0, 0x7f, 0x5, 0xe9, 0x92, 0x4, 0, 0, 0xf, 0xbf, 0x45, 0x10, 0x2b, 0x45, 0xd4, 0x85, 0xc0, 0x7d, 0x11, 0xf, 0xbf, 0x45, 0x10, 0x8b, 0x55, 0xd4, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xf4, 0x39, 0xc2, 0x7d, 0x2, 0xeb, 0xb, 0xf, 0xbf, 0x45, 0x14, 0x2b, 0x45, 0xd4, 0x85, 0xc0, 0x7c, 0x2, 0xeb, 0x11, 0xf, 0xbf, 0x45, 0x14, 0x8b, 0x55, 0xd4, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xf8, 0x39, 0xc2, 0x7d, 0x2, 0xeb, 0x5, 0xe9, 0x4f, 0x4, 0, 0, 0xf, 0xbf, 0x45, 0x18, 0xe8, 0x78, 0x4d, 0x9, 0, 0x89, 0x45, 0xd0, 0x83, 0x7d, 0xd0, 0, 0xf, 0x84, 0x39, 0x4, 0, 0, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xe0, 0x3b, 0x45, 0xdc, 0x7d, 0x47, 0x8b, 0x45, 0xe0, 0x3, 0x45, 0xe4, 0x1, 0x45, 0xd8, 0x83, 0x7d, 0xd8, 0, 0x7c, 0x1f, 0x8b, 0x45, 0xe4, 0x1, 0xc0, 0x29, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x29, 0x45, 0xd8, 0x8b, 0x45, 0xcc, 0xff, 0x45, 0xcc, 0xc6, 0, 0x1, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0xeb, 0x9, 0x8b, 0x45, 0xcc, 0xff, 0x45, 0xcc, 0xc6, 0, 0, 0x8b, 0x45, 0xe4, 0x1, 0xc0, 0x1, 0x45, 0xe0, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0xeb, 0xb1, 0xc7, 0x45, 0xc8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xc8, 0xff, 0x45, 0xc8, 0xf, 0xbf, 0x45, 0xc8, 0x83, 0xf8, 0x8, 0xf, 0x8d, 0xc0, 0x3, 0, 0, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xc4, 0xc6, 0x45, 0xc0, 0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xc8, 0x89, 0x45, 0xb8, 0xe9, 0x25, 0x2, 0, 0, 0x8b, 0x45, 0x10, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0x14, 0x2b, 0x45, 0x18, 0x89, 0x45, 0xb0, 0x8b, 0x45, 0xb4, 0x89, 0x45, 0xac, 0x8b, 0x45, 0xb0, 0x89, 0x45, 0xa8, 0x8b, 0x45, 0xac, 0x3, 0x45, 0xec, 0x89, 0x45, 0xa4, 0x8b, 0x45, 0xa8, 0x3, 0x45, 0xe8, 0x89, 0x45, 0xa0, 0xc7, 0x45, 0x9c, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0x98, 0xe9, 0x3, 0x2, 0, 0, 0x8b, 0x45, 0x10, 0x3, 0x45, 0x18, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0x14, 0x89, 0x45, 0xb0, 0x8b, 0x45, 0xb4, 0x89, 0x45, 0xa4, 0x8b, 0x45, 0xb0, 0x89, 0x45, 0xa0, 0x8b, 0x45, 0xa4, 0x2b, 0x45, 0xe8, 0x89, 0x45, 0xac, 0x8b, 0x45, 0xa0, 0x2b, 0x45, 0xec, 0x89, 0x45, 0xa8, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0x9c, 0xf7, 0x5d, 0x9c, 0xc7, 0x45, 0x98, 0xff, 0xff, 0xff, 0xff, 0xe9, 0xc1, 0x1, 0, 0, 0x8b, 0x45, 0x10, 0x3, 0x45, 0x18, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0x14, 0x89, 0x45, 0xb0, 0x8b, 0x45, 0xb4, 0x89, 0x45, 0xa4, 0x8b, 0x45, 0xb0, 0x89, 0x45, 0xa8, 0x8b, 0x45, 0xa4, 0x2b, 0x45, 0xe8, 0x89, 0x45, 0xac, 0x8b, 0x45, 0xa8, 0x3, 0x45, 0xec, 0x89, 0x45, 0xa0, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0x9c, 0xc7, 0x45, 0x98, 0xff, 0xff, 0xff, 0xff, 0xe9, 0x82, 0x1, 0, 0, 0x8b, 0x45, 0x10, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0x14, 0x3, 0x45, 0x18, 0x89, 0x45, 0xb0, 0x8b, 0x45, 0xb4, 0x89, 0x45, 0xac, 0x8b, 0x45, 0xb0, 0x89, 0x45, 0xa0, 0x8b, 0x45, 0xac, 0x3, 0x45, 0xec, 0x89, 0x45, 0xa4, 0x8b, 0x45, 0xa0, 0x2b, 0x45, 0xe8, 0x89, 0x45, 0xa8, 0xc7, 0x45, 0x9c, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0x98, 0xf7, 0x5d, 0x98, 0xe9, 0x40, 0x1, 0, 0, 0x8b, 0x45, 0x10, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0x14, 0x3, 0x45, 0x18, 0x89, 0x45, 0xb0, 0x8b, 0x45, 0xb4, 0x89, 0x45, 0xa4, 0x8b, 0x45, 0xb0, 0x89, 0x45, 0xa0, 0x8b, 0x45, 0xa4, 0x2b, 0x45, 0xec, 0x89, 0x45, 0xac, 0x8b, 0x45, 0xa0, 0x2b, 0x45, 0xe8, 0x89, 0x45, 0xa8, 0xc7, 0x45, 0x9c, 0xff, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0x98, 0xf7, 0x5d, 0x98, 0xe9, 0xfe, 0, 0, 0, 0x8b, 0x45, 0x10, 0x2b, 0x45, 0x18, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0x14, 0x89, 0x45, 0xb0, 0x8b, 0x45, 0xb4, 0x89, 0x45, 0xac, 0x8b, 0x45, 0xb0, 0x89, 0x45, 0xa8, 0x8b, 0x45, 0xac, 0x3, 0x45, 0xe8, 0x89, 0x45, 0xa4, 0x8b, 0x45, 0xa8, 0x3, 0x45, 0xec, 0x89, 0x45, 0xa0, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0x9c, 0xc7, 0x45, 0x98, 0x1, 0, 0, 0, 0xe9, 0xbf, 0, 0, 0, 0x8b, 0x45, 0x10, 0x2b, 0x45, 0x18, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0x14, 0x89, 0x45, 0xb0, 0x8b, 0x45, 0xb4, 0x89, 0x45, 0xac, 0x8b, 0x45, 0xb0, 0x89, 0x45, 0xa0, 0x8b, 0x45, 0xac, 0x3, 0x45, 0xe8, 0x89, 0x45, 0xa4, 0x8b, 0x45, 0xa0, 0x2b, 0x45, 0xec, 0x89, 0x45, 0xa8, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0x9c, 0xf7, 0x5d, 0x9c, 0xc7, 0x45, 0x98, 0x1, 0, 0, 0, 0xe9, 0x7d, 0, 0, 0, 0x8b, 0x45, 0x10, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0x14, 0x2b, 0x45, 0x18, 0x89, 0x45, 0xb0, 0x8b, 0x45, 0xb4, 0x89, 0x45, 0xa4, 0x8b, 0x45, 0xb0, 0x89, 0x45, 0xa8, 0x8b, 0x45, 0xa4, 0x2b, 0x45, 0xec, 0x89, 0x45, 0xac, 0x8b, 0x45, 0xa8, 0x3, 0x45, 0xe8, 0x89, 0x45, 0xa0, 0xc7, 0x45, 0x9c, 0xff, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0x98, 0xeb, 0x41, 0xeb, 0x3f, 0x8b, 0xc0, 0xff, 0x62, 0xd, 0x10, 0x3e, 0x63, 0xd, 0x10, 0x80, 0x63, 0xd, 0x10, 0xbf, 0x63, 0xd, 0x10, 0x1, 0x64, 0xd, 0x10, 0x43, 0x64, 0xd, 0x10, 0x82, 0x64, 0xd, 0x10, 0xc4, 0x64, 0xd, 0x10, 0x8b, 0x45, 0xb8, 0x89, 0x45, 0x94, 0x66, 0x83, 0x7d, 0x94, 0x7, 0x77, 0xcf, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0x94, 0xc1, 0xe0, 0x2, 0x2e, 0xff, 0xa0, 0x4, 0x65, 0xd, 0x10, 0xf, 0xbf, 0x45, 0xa4, 0x85, 0xc0, 0x7c, 0x9, 0x8b, 0x45, 0xac, 0x66, 0x3b, 0x45, 0xf4, 0x7c, 0x2, 0xeb, 0x8, 0xf, 0xbf, 0x45, 0xa0, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0x9, 0x8b, 0x45, 0xa8, 0x66, 0x3b, 0x45, 0xf8, 0x7c, 0x5, 0xe9, 0x33, 0x1, 0, 0, 0xf, 0xbf, 0x45, 0xac, 0x85, 0xc0, 0x7c, 0x9, 0x8b, 0x45, 0xa4, 0x66, 0x3b, 0x45, 0xf4, 0x7c, 0x2, 0xeb, 0x8, 0xf, 0xbf, 0x45, 0xa8, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0x9, 0x8b, 0x45, 0xa0, 0x66, 0x3b, 0x45, 0xf8, 0x7c, 0x4d, 0x8b, 0x45, 0xc8, 0xc1, 0xe0, 0x2, 0x89, 0x45, 0x90, 0xf, 0xbf, 0x45, 0x90, 0x1, 0xc0, 0x66, 0x8b, 0x80, 0x6c, 0x7e, 0x1b, 0x10, 0x89, 0x45, 0x8c, 0xf, 0xbf, 0x45, 0x90, 0x1, 0xc0, 0x66, 0x8b, 0x80, 0x6e, 0x7e, 0x1b, 0x10, 0x89, 0x45, 0x88, 0xf, 0xbf, 0x45, 0x90, 0x1, 0xc0, 0x66, 0x8b, 0x80, 0x70, 0x7e, 0x1b, 0x10, 0x89, 0x45, 0x84, 0xf, 0xbf, 0x45, 0x90, 0x1, 0xc0, 0x66, 0x8b, 0x80, 0x72, 0x7e, 0x1b, 0x10, 0x89, 0x45, 0x80, 0xc6, 0x45, 0xc0, 0x1, 0xf, 0xbf, 0x55, 0xb0, 0xf, 0xbf, 0x45, 0xfc, 0xf, 0xaf, 0xd0, 0xf, 0xbf, 0x45, 0xb4, 0x1, 0xd0, 0x1, 0x45, 0xbc, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xcc, 0xff, 0x4d, 0xc4, 0x66, 0x83, 0x7d, 0xc4, 0xff, 0xf, 0x84, 0x98, 0, 0, 0, 0x80, 0x7d, 0xc0, 0, 0x75, 0x29, 0x8a, 0x45, 0x1c, 0x8b, 0x55, 0xbc, 0x88, 0x2, 0xf, 0xbf, 0x45, 0x9c, 0x1, 0x45, 0xbc, 0x8b, 0x45, 0xcc, 0xff, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x80, 0x38, 0, 0x74, 0x7, 0xf, 0xbf, 0x45, 0x98, 0x1, 0x45, 0xbc, 0xe9, 0x64, 0, 0, 0, 0xf, 0xbf, 0x45, 0xb4, 0x85, 0xc0, 0x7c, 0x9, 0x8b, 0x45, 0xb4, 0x66, 0x3b, 0x45, 0xf4, 0x7c, 0x2, 0xeb, 0x8, 0xf, 0xbf, 0x45, 0xb0, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0x9, 0x8b, 0x45, 0xb0, 0x66, 0x3b, 0x45, 0xf8, 0x7c, 0x2, 0xeb, 0x8, 0x8a, 0x45, 0x1c, 0x8b, 0x55, 0xbc, 0x88, 0x2, 0xf, 0xbf, 0x45, 0x9c, 0x1, 0x45, 0xbc, 0x8b, 0x45, 0x8c, 0x1, 0x45, 0xb4, 0x8b, 0x45, 0x88, 0x1, 0x45, 0xb0, 0x8b, 0x45, 0xcc, 0xff, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x80, 0x38, 0, 0x74, 0x13, 0xf, 0xbf, 0x45, 0x98, 0x1, 0x45, 0xbc, 0x8b, 0x45, 0x84, 0x1, 0x45, 0xb4, 0x8b, 0x45, 0x80, 0x1, 0x45, 0xb0, 0xe9, 0x5a, 0xff, 0xff, 0xff, 0xe9, 0x2d, 0xfc, 0xff, 0xff, 0x8b, 0x45, 0xd0, 0xe8, 0x15, 0x4a, 0x9, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x10, 0}))
    II(0x100d6144, 0x5)   pushd(0x90);                          /* push dword 0x90 */
    II(0x100d6149, 0x5)   calld(sys_check_available_stack_size, 0x8fc04); /* call 0x10165d52 */
    II(0x100d614e, 0x1)   pushd(esi);                           /* push esi */
    II(0x100d614f, 0x1)   pushd(edi);                           /* push edi */
    II(0x100d6150, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100d6151, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100d6153, 0x6)   sub(esp, 0x80);                       /* sub esp, 0x80 */
    II(0x100d6159, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100d615c, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100d615f, 0x3)   mov(memd_a32(ss, ebp - 0xc), ebx);    /* mov [ebp-0xc], ebx */
    II(0x100d6162, 0x3)   mov(memd_a32(ss, ebp - 0x8), ecx);    /* mov [ebp-0x8], ecx */
    II(0x100d6165, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x100d616c, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100d6173, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x18)); /* movsx eax, word [ebp+0x18] */
    II(0x100d6177, 0x4)   movsx(edx, memw_a32(ss, ebp + 0x18)); /* movsx edx, word [ebp+0x18] */
    II(0x100d617b, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100d617e, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100d6181, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x100d6188, 0x3)   mov(edx, memd_a32(ss, ebp - 0x1c));   /* mov edx, [ebp-0x1c] */
    II(0x100d618b, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x100d618d, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x18)); /* movsx eax, word [ebp+0x18] */
    II(0x100d6191, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100d6194, 0x3)   mov(memd_a32(ss, ebp - 0x24), edx);   /* mov [ebp-0x24], edx */
    II(0x100d6197, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x18)); /* movsx eax, word [ebp+0x18] */
    II(0x100d619b, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x1c));   /* mov ebx, [ebp-0x1c] */
    II(0x100d619e, 0x3)   imul(ebx, eax);                       /* imul ebx, eax */
    II(0x100d61a1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100d61a4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x1c));   /* mov edx, [ebp-0x1c] */
    II(0x100d61a7, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100d61aa, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100d61ad, 0x2)   sbb(eax, edx);                        /* sbb eax, edx */
    II(0x100d61af, 0x3)   sar(eax, 0x2);                        /* sar eax, 0x2 */
    II(0x100d61b2, 0x2)   sub(eax, ebx);                        /* sub eax, ebx */
    II(0x100d61b4, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100d61b7, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x18)); /* movsx eax, word [ebp+0x18] */
    II(0x100d61bb, 0x6)   imul(eax, eax, 0xb505);               /* imul eax, eax, 0xb505 */
    II(0x100d61c1, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d61c4, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100d61c7, 0x4)   movsx(edx, memw_a32(ss, ebp + 0x10)); /* movsx edx, word [ebp+0x10] */
    II(0x100d61cb, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x18)); /* movsx eax, word [ebp+0x18] */
    II(0x100d61cf, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100d61d1, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d61d3, 0x2)   jld(0x100d61e7, 0x12);                /* jl 0x100d61e7 */
    II(0x100d61d5, 0x4)   movsx(edx, memw_a32(ss, ebp + 0x10)); /* movsx edx, word [ebp+0x10] */
    II(0x100d61d9, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x18)); /* movsx eax, word [ebp+0x18] */
    II(0x100d61dd, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x100d61df, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100d61e3, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100d61e5, 0x2)   jld(0x100d61e9, 0x2);                 /* jl 0x100d61e9 */
l_0x100d61e7:
    II(0x100d61e7, 0x2)   jmpd(0x100d61f7, 0xe);                /* jmp 0x100d61f7 */
l_0x100d61e9:
    II(0x100d61e9, 0x4)   movsx(edx, memw_a32(ss, ebp + 0x14)); /* movsx edx, word [ebp+0x14] */
    II(0x100d61ed, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x18)); /* movsx eax, word [ebp+0x18] */
    II(0x100d61f1, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100d61f3, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d61f5, 0x2)   jged(0x100d61f9, 0x2);                /* jge 0x100d61f9 */
l_0x100d61f7:
    II(0x100d61f7, 0x2)   jmpd(0x100d620b, 0x12);               /* jmp 0x100d620b */
l_0x100d61f9:
    II(0x100d61f9, 0x4)   movsx(edx, memw_a32(ss, ebp + 0x14)); /* movsx edx, word [ebp+0x14] */
    II(0x100d61fd, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x18)); /* movsx eax, word [ebp+0x18] */
    II(0x100d6201, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x100d6203, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100d6207, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100d6209, 0x2)   jld(0x100d620d, 0x2);                 /* jl 0x100d620d */
l_0x100d620b:
    II(0x100d620b, 0x2)   jmpd(0x100d6215, 0x8);                /* jmp 0x100d6215 */
l_0x100d620d:
    II(0x100d620d, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x18)); /* movsx eax, word [ebp+0x18] */
    II(0x100d6211, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d6213, 0x2)   jgd(0x100d621a, 0x5);                 /* jg 0x100d621a */
l_0x100d6215:
    II(0x100d6215, 0x5)   jmpd(0x100d66ac, 0x492);              /* jmp 0x100d66ac */
l_0x100d621a:
    II(0x100d621a, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x10)); /* movsx eax, word [ebp+0x10] */
    II(0x100d621e, 0x3)   sub(eax, memd_a32(ss, ebp - 0x2c));   /* sub eax, [ebp-0x2c] */
    II(0x100d6221, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d6223, 0x2)   jged(0x100d6236, 0x11);               /* jge 0x100d6236 */
    II(0x100d6225, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x10)); /* movsx eax, word [ebp+0x10] */
    II(0x100d6229, 0x3)   mov(edx, memd_a32(ss, ebp - 0x2c));   /* mov edx, [ebp-0x2c] */
    II(0x100d622c, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100d622e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100d6232, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100d6234, 0x2)   jged(0x100d6238, 0x2);                /* jge 0x100d6238 */
l_0x100d6236:
    II(0x100d6236, 0x2)   jmpd(0x100d6243, 0xb);                /* jmp 0x100d6243 */
l_0x100d6238:
    II(0x100d6238, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x14)); /* movsx eax, word [ebp+0x14] */
    II(0x100d623c, 0x3)   sub(eax, memd_a32(ss, ebp - 0x2c));   /* sub eax, [ebp-0x2c] */
    II(0x100d623f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d6241, 0x2)   jld(0x100d6245, 0x2);                 /* jl 0x100d6245 */
l_0x100d6243:
    II(0x100d6243, 0x2)   jmpd(0x100d6256, 0x11);               /* jmp 0x100d6256 */
l_0x100d6245:
    II(0x100d6245, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x14)); /* movsx eax, word [ebp+0x14] */
    II(0x100d6249, 0x3)   mov(edx, memd_a32(ss, ebp - 0x2c));   /* mov edx, [ebp-0x2c] */
    II(0x100d624c, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100d624e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100d6252, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100d6254, 0x2)   jged(0x100d6258, 0x2);                /* jge 0x100d6258 */
l_0x100d6256:
    II(0x100d6256, 0x2)   jmpd(0x100d625d, 0x5);                /* jmp 0x100d625d */
l_0x100d6258:
    II(0x100d6258, 0x5)   jmpd(0x100d66ac, 0x44f);              /* jmp 0x100d66ac */
l_0x100d625d:
    II(0x100d625d, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x18)); /* movsx eax, word [ebp+0x18] */
    II(0x100d6261, 0x5)   calld(sys_malloc, 0x94d78);           /* call 0x1016afde */
    II(0x100d6266, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100d6269, 0x4)   cmp(memd_a32(ss, ebp - 0x30), 0);     /* cmp dword [ebp-0x30], 0x0 */
    II(0x100d626d, 0x6)   jzd(0x100d66ac, 0x439);               /* jz dword 0x100d66ac */
    II(0x100d6273, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100d6276, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
l_0x100d6279:
    II(0x100d6279, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100d627c, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x24));   /* cmp eax, [ebp-0x24] */
    II(0x100d627f, 0x2)   jged(0x100d62c8, 0x47);               /* jge 0x100d62c8 */
    II(0x100d6281, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100d6284, 0x3)   add(eax, memd_a32(ss, ebp - 0x1c));   /* add eax, [ebp-0x1c] */
    II(0x100d6287, 0x3)   add(memd_a32(ss, ebp - 0x28), eax);   /* add [ebp-0x28], eax */
    II(0x100d628a, 0x4)   cmp(memd_a32(ss, ebp - 0x28), 0);     /* cmp dword [ebp-0x28], 0x0 */
    II(0x100d628e, 0x2)   jld(0x100d62af, 0x1f);                /* jl 0x100d62af */
    II(0x100d6290, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100d6293, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100d6295, 0x3)   sub(memd_a32(ss, ebp - 0x24), eax);   /* sub [ebp-0x24], eax */
    II(0x100d6298, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100d629b, 0x3)   sub(memd_a32(ss, ebp - 0x28), eax);   /* sub [ebp-0x28], eax */
    II(0x100d629e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100d62a1, 0x3)   inc(memd_a32(ss, ebp - 0x34));        /* inc dword [ebp-0x34] */
    II(0x100d62a4, 0x3)   mov(memb_a32(ds, eax), 0x1);          /* mov byte [eax], 0x1 */
    II(0x100d62a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100d62aa, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
    II(0x100d62ad, 0x2)   jmpd(0x100d62b8, 0x9);                /* jmp 0x100d62b8 */
l_0x100d62af:
    II(0x100d62af, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100d62b2, 0x3)   inc(memd_a32(ss, ebp - 0x34));        /* inc dword [ebp-0x34] */
    II(0x100d62b5, 0x3)   mov(memb_a32(ds, eax), 0);            /* mov byte [eax], 0x0 */
l_0x100d62b8:
    II(0x100d62b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100d62bb, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100d62bd, 0x3)   add(memd_a32(ss, ebp - 0x20), eax);   /* add [ebp-0x20], eax */
    II(0x100d62c0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100d62c3, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
    II(0x100d62c6, 0x2)   jmpd(0x100d6279, -0x4f);              /* jmp 0x100d6279 */
l_0x100d62c8:
    II(0x100d62c8, 0x7)   mov(memd_a32(ss, ebp - 0x38), 0);     /* mov dword [ebp-0x38], 0x0 */
    II(0x100d62cf, 0x2)   jmpd(0x100d62d7, 0x6);                /* jmp 0x100d62d7 */
l_0x100d62d1:
    II(0x100d62d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100d62d4, 0x3)   inc(memd_a32(ss, ebp - 0x38));        /* inc dword [ebp-0x38] */
l_0x100d62d7:
    II(0x100d62d7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x38)); /* movsx eax, word [ebp-0x38] */
    II(0x100d62db, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x100d62de, 0x6)   jged(0x100d66a4, 0x3c0);              /* jge dword 0x100d66a4 */
    II(0x100d62e4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100d62e7, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x100d62ea, 0x4)   mov(memb_a32(ss, ebp - 0x40), 0);     /* mov byte [ebp-0x40], 0x0 */
    II(0x100d62ee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d62f1, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x100d62f4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100d62f7, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x100d62fa, 0x5)   jmpd(0x100d6524, 0x225);              /* jmp 0x100d6524 */
l_0x100d62ff:
    II(0x100d62ff, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x100d6302, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x100d6305, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x100d6308, 0x3)   sub(eax, memd_a32(ss, ebp + 0x18));   /* sub eax, [ebp+0x18] */
    II(0x100d630b, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x100d630e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100d6311, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x100d6314, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x100d6317, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
    II(0x100d631a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x100d631d, 0x3)   add(eax, memd_a32(ss, ebp - 0x14));   /* add eax, [ebp-0x14] */
    II(0x100d6320, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x100d6323, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x100d6326, 0x3)   add(eax, memd_a32(ss, ebp - 0x18));   /* add eax, [ebp-0x18] */
    II(0x100d6329, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
    II(0x100d632c, 0x7)   mov(memd_a32(ss, ebp - 0x64), 0x1);   /* mov dword [ebp-0x64], 0x1 */
    II(0x100d6333, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d6336, 0x3)   mov(memd_a32(ss, ebp - 0x68), eax);   /* mov [ebp-0x68], eax */
    II(0x100d6339, 0x5)   jmpd(0x100d6541, 0x203);              /* jmp 0x100d6541 */
l_0x100d633e:
    II(0x100d633e, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x100d6341, 0x3)   add(eax, memd_a32(ss, ebp + 0x18));   /* add eax, [ebp+0x18] */
    II(0x100d6344, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x100d6347, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x100d634a, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x100d634d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100d6350, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x100d6353, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x100d6356, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
    II(0x100d6359, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x100d635c, 0x3)   sub(eax, memd_a32(ss, ebp - 0x18));   /* sub eax, [ebp-0x18] */
    II(0x100d635f, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x100d6362, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x100d6365, 0x3)   sub(eax, memd_a32(ss, ebp - 0x14));   /* sub eax, [ebp-0x14] */
    II(0x100d6368, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
    II(0x100d636b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d636e, 0x3)   mov(memd_a32(ss, ebp - 0x64), eax);   /* mov [ebp-0x64], eax */
    II(0x100d6371, 0x3)   neg(memd_a32(ss, ebp - 0x64));        /* neg dword [ebp-0x64] */
    II(0x100d6374, 0x7)   mov(memd_a32(ss, ebp - 0x68), 0xffffffff); /* mov dword [ebp-0x68], 0xffffffff */
    II(0x100d637b, 0x5)   jmpd(0x100d6541, 0x1c1);              /* jmp 0x100d6541 */
l_0x100d6380:
    II(0x100d6380, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x100d6383, 0x3)   add(eax, memd_a32(ss, ebp + 0x18));   /* add eax, [ebp+0x18] */
    II(0x100d6386, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x100d6389, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x100d638c, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x100d638f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100d6392, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x100d6395, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x100d6398, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
    II(0x100d639b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x100d639e, 0x3)   sub(eax, memd_a32(ss, ebp - 0x18));   /* sub eax, [ebp-0x18] */
    II(0x100d63a1, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x100d63a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x100d63a7, 0x3)   add(eax, memd_a32(ss, ebp - 0x14));   /* add eax, [ebp-0x14] */
    II(0x100d63aa, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
    II(0x100d63ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d63b0, 0x3)   mov(memd_a32(ss, ebp - 0x64), eax);   /* mov [ebp-0x64], eax */
    II(0x100d63b3, 0x7)   mov(memd_a32(ss, ebp - 0x68), 0xffffffff); /* mov dword [ebp-0x68], 0xffffffff */
    II(0x100d63ba, 0x5)   jmpd(0x100d6541, 0x182);              /* jmp 0x100d6541 */
l_0x100d63bf:
    II(0x100d63bf, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x100d63c2, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x100d63c5, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x100d63c8, 0x3)   add(eax, memd_a32(ss, ebp + 0x18));   /* add eax, [ebp+0x18] */
    II(0x100d63cb, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x100d63ce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100d63d1, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x100d63d4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x100d63d7, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
    II(0x100d63da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x100d63dd, 0x3)   add(eax, memd_a32(ss, ebp - 0x14));   /* add eax, [ebp-0x14] */
    II(0x100d63e0, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x100d63e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x100d63e6, 0x3)   sub(eax, memd_a32(ss, ebp - 0x18));   /* sub eax, [ebp-0x18] */
    II(0x100d63e9, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
    II(0x100d63ec, 0x7)   mov(memd_a32(ss, ebp - 0x64), 0x1);   /* mov dword [ebp-0x64], 0x1 */
    II(0x100d63f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d63f6, 0x3)   mov(memd_a32(ss, ebp - 0x68), eax);   /* mov [ebp-0x68], eax */
    II(0x100d63f9, 0x3)   neg(memd_a32(ss, ebp - 0x68));        /* neg dword [ebp-0x68] */
    II(0x100d63fc, 0x5)   jmpd(0x100d6541, 0x140);              /* jmp 0x100d6541 */
l_0x100d6401:
    II(0x100d6401, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x100d6404, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x100d6407, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x100d640a, 0x3)   add(eax, memd_a32(ss, ebp + 0x18));   /* add eax, [ebp+0x18] */
    II(0x100d640d, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x100d6410, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100d6413, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x100d6416, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x100d6419, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
    II(0x100d641c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x100d641f, 0x3)   sub(eax, memd_a32(ss, ebp - 0x14));   /* sub eax, [ebp-0x14] */
    II(0x100d6422, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x100d6425, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x100d6428, 0x3)   sub(eax, memd_a32(ss, ebp - 0x18));   /* sub eax, [ebp-0x18] */
    II(0x100d642b, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
    II(0x100d642e, 0x7)   mov(memd_a32(ss, ebp - 0x64), 0xffffffff); /* mov dword [ebp-0x64], 0xffffffff */
    II(0x100d6435, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d6438, 0x3)   mov(memd_a32(ss, ebp - 0x68), eax);   /* mov [ebp-0x68], eax */
    II(0x100d643b, 0x3)   neg(memd_a32(ss, ebp - 0x68));        /* neg dword [ebp-0x68] */
    II(0x100d643e, 0x5)   jmpd(0x100d6541, 0xfe);               /* jmp 0x100d6541 */
l_0x100d6443:
    II(0x100d6443, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x100d6446, 0x3)   sub(eax, memd_a32(ss, ebp + 0x18));   /* sub eax, [ebp+0x18] */
    II(0x100d6449, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x100d644c, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x100d644f, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x100d6452, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100d6455, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x100d6458, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x100d645b, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
    II(0x100d645e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x100d6461, 0x3)   add(eax, memd_a32(ss, ebp - 0x18));   /* add eax, [ebp-0x18] */
    II(0x100d6464, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x100d6467, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x100d646a, 0x3)   add(eax, memd_a32(ss, ebp - 0x14));   /* add eax, [ebp-0x14] */
    II(0x100d646d, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
    II(0x100d6470, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d6473, 0x3)   mov(memd_a32(ss, ebp - 0x64), eax);   /* mov [ebp-0x64], eax */
    II(0x100d6476, 0x7)   mov(memd_a32(ss, ebp - 0x68), 0x1);   /* mov dword [ebp-0x68], 0x1 */
    II(0x100d647d, 0x5)   jmpd(0x100d6541, 0xbf);               /* jmp 0x100d6541 */
l_0x100d6482:
    II(0x100d6482, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x100d6485, 0x3)   sub(eax, memd_a32(ss, ebp + 0x18));   /* sub eax, [ebp+0x18] */
    II(0x100d6488, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x100d648b, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x100d648e, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x100d6491, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100d6494, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x100d6497, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x100d649a, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
    II(0x100d649d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x100d64a0, 0x3)   add(eax, memd_a32(ss, ebp - 0x18));   /* add eax, [ebp-0x18] */
    II(0x100d64a3, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x100d64a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x100d64a9, 0x3)   sub(eax, memd_a32(ss, ebp - 0x14));   /* sub eax, [ebp-0x14] */
    II(0x100d64ac, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
    II(0x100d64af, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d64b2, 0x3)   mov(memd_a32(ss, ebp - 0x64), eax);   /* mov [ebp-0x64], eax */
    II(0x100d64b5, 0x3)   neg(memd_a32(ss, ebp - 0x64));        /* neg dword [ebp-0x64] */
    II(0x100d64b8, 0x7)   mov(memd_a32(ss, ebp - 0x68), 0x1);   /* mov dword [ebp-0x68], 0x1 */
    II(0x100d64bf, 0x5)   jmpd(0x100d6541, 0x7d);               /* jmp 0x100d6541 */
l_0x100d64c4:
    II(0x100d64c4, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x100d64c7, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x100d64ca, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x100d64cd, 0x3)   sub(eax, memd_a32(ss, ebp + 0x18));   /* sub eax, [ebp+0x18] */
    II(0x100d64d0, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x100d64d3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100d64d6, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x100d64d9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x100d64dc, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
    II(0x100d64df, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x100d64e2, 0x3)   sub(eax, memd_a32(ss, ebp - 0x14));   /* sub eax, [ebp-0x14] */
    II(0x100d64e5, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x100d64e8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x100d64eb, 0x3)   add(eax, memd_a32(ss, ebp - 0x18));   /* add eax, [ebp-0x18] */
    II(0x100d64ee, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
    II(0x100d64f1, 0x7)   mov(memd_a32(ss, ebp - 0x64), 0xffffffff); /* mov dword [ebp-0x64], 0xffffffff */
    II(0x100d64f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100d64fb, 0x3)   mov(memd_a32(ss, ebp - 0x68), eax);   /* mov [ebp-0x68], eax */
    II(0x100d64fe, 0x2)   jmpd(0x100d6541, 0x41);               /* jmp 0x100d6541 */
l_0x100d6500:
    II(0x100d6500, 0x2)   jmpd(0x100d6541, 0x3f);               /* jmp 0x100d6541 */
//    II(0x100d6502, 0x2)   /* Выравнивание. */
//    II(0x100d6504, 0x20)  /* Служебная область с абсолютными адресами переходов. {0x100d62ff, 0x100d633e, 0x100d6380, 0x100d63bf, 0x100d6401, 0x100d6443, 0x100d6482, 0x100d64c4}. */
l_0x100d6524:
    II(0x100d6524, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100d6527, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
    II(0x100d652a, 0x5)   cmp(memw_a32(ss, ebp - 0x6c), 0x7);   /* cmp word [ebp-0x6c], 0x7 */
    II(0x100d652f, 0x2)   jad(0x100d6500, -0x31);               /* ja 0x100d6500 */
    II(0x100d6531, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100d6533, 0x4)   mov(ax, memw_a32(ss, ebp - 0x6c));    /* mov ax, [ebp-0x6c] */
    II(0x100d6537, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100d653a, 0x7)   jmpd_abs_switch(memd_a32(cs, eax + 0x100d6504), (0x100d62ff)(0x100d633e)(0x100d6380)(0x100d63bf)(0x100d6401)(0x100d6443)(0x100d6482)(0x100d64c4)); /* jmp dword near [cs:eax+0x100d6504] */
l_0x100d6541:
    II(0x100d6541, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x5c)); /* movsx eax, word [ebp-0x5c] */
    II(0x100d6545, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d6547, 0x2)   jld(0x100d6552, 0x9);                 /* jl 0x100d6552 */
    II(0x100d6549, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x100d654c, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x100d6550, 0x2)   jld(0x100d6554, 0x2);                 /* jl 0x100d6554 */
l_0x100d6552:
    II(0x100d6552, 0x2)   jmpd(0x100d655c, 0x8);                /* jmp 0x100d655c */
l_0x100d6554:
    II(0x100d6554, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x60)); /* movsx eax, word [ebp-0x60] */
    II(0x100d6558, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d655a, 0x2)   jged(0x100d655e, 0x2);                /* jge 0x100d655e */
l_0x100d655c:
    II(0x100d655c, 0x2)   jmpd(0x100d6567, 0x9);                /* jmp 0x100d6567 */
l_0x100d655e:
    II(0x100d655e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x100d6561, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x100d6565, 0x2)   jld(0x100d656c, 0x5);                 /* jl 0x100d656c */
l_0x100d6567:
    II(0x100d6567, 0x5)   jmpd(0x100d669f, 0x133);              /* jmp 0x100d669f */
l_0x100d656c:
    II(0x100d656c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x54)); /* movsx eax, word [ebp-0x54] */
    II(0x100d6570, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d6572, 0x2)   jld(0x100d657d, 0x9);                 /* jl 0x100d657d */
    II(0x100d6574, 0x3)   mov(eax, memd_a32(ss, ebp - 0x5c));   /* mov eax, [ebp-0x5c] */
    II(0x100d6577, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x100d657b, 0x2)   jld(0x100d657f, 0x2);                 /* jl 0x100d657f */
l_0x100d657d:
    II(0x100d657d, 0x2)   jmpd(0x100d6587, 0x8);                /* jmp 0x100d6587 */
l_0x100d657f:
    II(0x100d657f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x58)); /* movsx eax, word [ebp-0x58] */
    II(0x100d6583, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d6585, 0x2)   jged(0x100d6589, 0x2);                /* jge 0x100d6589 */
l_0x100d6587:
    II(0x100d6587, 0x2)   jmpd(0x100d6592, 0x9);                /* jmp 0x100d6592 */
l_0x100d6589:
    II(0x100d6589, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x100d658c, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x100d6590, 0x2)   jld(0x100d65df, 0x4d);                /* jl 0x100d65df */
l_0x100d6592:
    II(0x100d6592, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100d6595, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100d6598, 0x3)   mov(memd_a32(ss, ebp - 0x70), eax);   /* mov [ebp-0x70], eax */
    II(0x100d659b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x70)); /* movsx eax, word [ebp-0x70] */
    II(0x100d659f, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100d65a1, 0x7)   mov(ax, memw_a32(ds, eax + 0x101b7e6c)); /* mov ax, [eax+0x101b7e6c] */
    II(0x100d65a8, 0x3)   mov(memd_a32(ss, ebp - 0x74), eax);   /* mov [ebp-0x74], eax */
    II(0x100d65ab, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x70)); /* movsx eax, word [ebp-0x70] */
    II(0x100d65af, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100d65b1, 0x7)   mov(ax, memw_a32(ds, eax + 0x101b7e6e)); /* mov ax, [eax+0x101b7e6e] */
    II(0x100d65b8, 0x3)   mov(memd_a32(ss, ebp - 0x78), eax);   /* mov [ebp-0x78], eax */
    II(0x100d65bb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x70)); /* movsx eax, word [ebp-0x70] */
    II(0x100d65bf, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100d65c1, 0x7)   mov(ax, memw_a32(ds, eax + 0x101b7e70)); /* mov ax, [eax+0x101b7e70] */
    II(0x100d65c8, 0x3)   mov(memd_a32(ss, ebp - 0x7c), eax);   /* mov [ebp-0x7c], eax */
    II(0x100d65cb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x70)); /* movsx eax, word [ebp-0x70] */
    II(0x100d65cf, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100d65d1, 0x7)   mov(ax, memw_a32(ds, eax + 0x101b7e72)); /* mov ax, [eax+0x101b7e72] */
    II(0x100d65d8, 0x3)   mov(memd_a32(ss, ebp - 0x80), eax);   /* mov [ebp-0x80], eax */
    II(0x100d65db, 0x4)   mov(memb_a32(ss, ebp - 0x40), 0x1);   /* mov byte [ebp-0x40], 0x1 */
l_0x100d65df:
    II(0x100d65df, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x50)); /* movsx edx, word [ebp-0x50] */
    II(0x100d65e3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100d65e7, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100d65ea, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4c)); /* movsx eax, word [ebp-0x4c] */
    II(0x100d65ee, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100d65f0, 0x3)   add(memd_a32(ss, ebp - 0x44), eax);   /* add [ebp-0x44], eax */
    II(0x100d65f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100d65f6, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
l_0x100d65f9:
    II(0x100d65f9, 0x3)   dec(memd_a32(ss, ebp - 0x3c));        /* dec dword [ebp-0x3c] */
    II(0x100d65fc, 0x5)   cmp(memw_a32(ss, ebp - 0x3c), -0x1 /* 0xff */); /* cmp word [ebp-0x3c], 0xff */
    II(0x100d6601, 0x6)   jzd(0x100d669f, 0x98);                /* jz dword 0x100d669f */
    II(0x100d6607, 0x4)   cmp(memb_a32(ss, ebp - 0x40), 0);     /* cmp byte [ebp-0x40], 0x0 */
    II(0x100d660b, 0x2)   jnzd(0x100d6636, 0x29);               /* jnz 0x100d6636 */
    II(0x100d660d, 0x3)   mov(al, memb_a32(ss, ebp + 0x1c));    /* mov al, [ebp+0x1c] */
    II(0x100d6610, 0x3)   mov(edx, memd_a32(ss, ebp - 0x44));   /* mov edx, [ebp-0x44] */
    II(0x100d6613, 0x2)   mov(memb_a32(ds, edx), al);           /* mov [edx], al */
    II(0x100d6615, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x64)); /* movsx eax, word [ebp-0x64] */
    II(0x100d6619, 0x3)   add(memd_a32(ss, ebp - 0x44), eax);   /* add [ebp-0x44], eax */
    II(0x100d661c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100d661f, 0x3)   inc(memd_a32(ss, ebp - 0x34));        /* inc dword [ebp-0x34] */
    II(0x100d6622, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100d6625, 0x3)   cmp(memb_a32(ds, eax), 0);            /* cmp byte [eax], 0x0 */
    II(0x100d6628, 0x2)   jzd(0x100d6631, 0x7);                 /* jz 0x100d6631 */
    II(0x100d662a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x68)); /* movsx eax, word [ebp-0x68] */
    II(0x100d662e, 0x3)   add(memd_a32(ss, ebp - 0x44), eax);   /* add [ebp-0x44], eax */
l_0x100d6631:
    II(0x100d6631, 0x5)   jmpd(0x100d669a, 0x64);               /* jmp 0x100d669a */
l_0x100d6636:
    II(0x100d6636, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4c)); /* movsx eax, word [ebp-0x4c] */
    II(0x100d663a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d663c, 0x2)   jld(0x100d6647, 0x9);                 /* jl 0x100d6647 */
    II(0x100d663e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100d6641, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x100d6645, 0x2)   jld(0x100d6649, 0x2);                 /* jl 0x100d6649 */
l_0x100d6647:
    II(0x100d6647, 0x2)   jmpd(0x100d6651, 0x8);                /* jmp 0x100d6651 */
l_0x100d6649:
    II(0x100d6649, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x50)); /* movsx eax, word [ebp-0x50] */
    II(0x100d664d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d664f, 0x2)   jged(0x100d6653, 0x2);                /* jge 0x100d6653 */
l_0x100d6651:
    II(0x100d6651, 0x2)   jmpd(0x100d665c, 0x9);                /* jmp 0x100d665c */
l_0x100d6653:
    II(0x100d6653, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x100d6656, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x100d665a, 0x2)   jld(0x100d665e, 0x2);                 /* jl 0x100d665e */
l_0x100d665c:
    II(0x100d665c, 0x2)   jmpd(0x100d6666, 0x8);                /* jmp 0x100d6666 */
l_0x100d665e:
    II(0x100d665e, 0x3)   mov(al, memb_a32(ss, ebp + 0x1c));    /* mov al, [ebp+0x1c] */
    II(0x100d6661, 0x3)   mov(edx, memd_a32(ss, ebp - 0x44));   /* mov edx, [ebp-0x44] */
    II(0x100d6664, 0x2)   mov(memb_a32(ds, edx), al);           /* mov [edx], al */
l_0x100d6666:
    II(0x100d6666, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x64)); /* movsx eax, word [ebp-0x64] */
    II(0x100d666a, 0x3)   add(memd_a32(ss, ebp - 0x44), eax);   /* add [ebp-0x44], eax */
    II(0x100d666d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x74));   /* mov eax, [ebp-0x74] */
    II(0x100d6670, 0x3)   add(memd_a32(ss, ebp - 0x4c), eax);   /* add [ebp-0x4c], eax */
    II(0x100d6673, 0x3)   mov(eax, memd_a32(ss, ebp - 0x78));   /* mov eax, [ebp-0x78] */
    II(0x100d6676, 0x3)   add(memd_a32(ss, ebp - 0x50), eax);   /* add [ebp-0x50], eax */
    II(0x100d6679, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100d667c, 0x3)   inc(memd_a32(ss, ebp - 0x34));        /* inc dword [ebp-0x34] */
    II(0x100d667f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100d6682, 0x3)   cmp(memb_a32(ds, eax), 0);            /* cmp byte [eax], 0x0 */
    II(0x100d6685, 0x2)   jzd(0x100d669a, 0x13);                /* jz 0x100d669a */
    II(0x100d6687, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x68)); /* movsx eax, word [ebp-0x68] */
    II(0x100d668b, 0x3)   add(memd_a32(ss, ebp - 0x44), eax);   /* add [ebp-0x44], eax */
    II(0x100d668e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x7c));   /* mov eax, [ebp-0x7c] */
    II(0x100d6691, 0x3)   add(memd_a32(ss, ebp - 0x4c), eax);   /* add [ebp-0x4c], eax */
    II(0x100d6694, 0x3)   mov(eax, memd_a32(ss, ebp - 0x80));   /* mov eax, [ebp-0x80] */
    II(0x100d6697, 0x3)   add(memd_a32(ss, ebp - 0x50), eax);   /* add [ebp-0x50], eax */
l_0x100d669a:
    II(0x100d669a, 0x5)   jmpd(0x100d65f9, -0xa6);              /* jmp 0x100d65f9 */
l_0x100d669f:
    II(0x100d669f, 0x5)   jmpd(0x100d62d1, -0x3d3);             /* jmp 0x100d62d1 */
l_0x100d66a4:
    II(0x100d66a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100d66a7, 0x5)   calld(sys_free, 0x94a15);             /* call 0x1016b0c1 */
l_0x100d66ac:
    II(0x100d66ac, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100d66ae, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100d66af, 0x1)   popd(edi);                            /* pop edi */
    II(0x100d66b0, 0x1)   popd(esi);                            /* pop esi */
    II(0x100d66b1, 0x3)   retd(0x10);                           /* ret 0x10 */
FUNC_END

