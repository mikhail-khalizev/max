FUNC_BEGIN(0x1010b523, 0xd1e4c51156318cd5, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x25, 0xa8, 0x5, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf8, 0x88, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xb8, 0x41, 0x3, 0, 0, 0, 0xf, 0x84, 0xab, 0, 0, 0, 0x80, 0x7d, 0xfc, 0, 0x74, 0x2f, 0x8b, 0x45, 0xf8, 0x8b, 0x90, 0x63, 0x3, 0, 0, 0x83, 0xea, 0x2e, 0xb8, 0x4a, 0, 0, 0, 0xe8, 0x90, 0xf5, 0xfb, 0xff, 0x8b, 0x45, 0xf8, 0x5, 0x45, 0x3, 0, 0, 0xe8, 0x55, 0xdb, 0x6, 0, 0x89, 0xc2, 0xb8, 0x4b, 0, 0, 0, 0xe8, 0x77, 0xf5, 0xfb, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x41, 0x3, 0, 0, 0xe8, 0x93, 0xfc, 0xfd, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xb8, 0x41, 0x3, 0, 0, 0, 0x74, 0x3a, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0x41, 0x3, 0, 0, 0x89, 0x45, 0xf4, 0x83, 0x7d, 0xf4, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xf4, 0xe8, 0x1c, 0xfb, 0xfd, 0xff, 0xe8, 0xa4, 0xa9, 0x5, 0, 0x89, 0x45, 0xf0, 0xeb, 0x7, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xc7, 0x80, 0x41, 0x3, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xc7, 0x80, 0x63, 0x3, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0xaf, 0xf0, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0, 0x8b, 0x40, 0x12, 0xe8, 0x89, 0xbe, 0x5, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1010b523, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x1010b528, 0x5)   calld(sys_check_available_stack_size, 0x5a825); /* call 0x10165d52 */
    II(0x1010b52d, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1010b52e, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1010b52f, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010b530, 0x1)   pushd(edi);                           /* push edi */
    II(0x1010b531, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1010b532, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1010b534, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x1010b53a, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1010b53d, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x1010b540, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1010b543, 0x7)   cmp(memd_a32(ds, eax + 0x341), 0);    /* cmp dword [eax+0x341], 0x0 */
    II(0x1010b54a, 0x6)   jzd(0x1010b5fb, 0xab);                /* jz dword 0x1010b5fb */
    II(0x1010b550, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x1010b554, 0x2)   jzd(0x1010b585, 0x2f);                /* jz 0x1010b585 */
    II(0x1010b556, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1010b559, 0x6)   mov(edx, memd_a32(ds, eax + 0x363));  /* mov edx, [eax+0x363] */
    II(0x1010b55f, 0x3)   sub(edx, 0x2e);                       /* sub edx, 0x2e */
    II(0x1010b562, 0x5)   mov(eax, 0x4a);                       /* mov eax, 0x4a */
    II(0x1010b567, 0x5)   calld(0x100caafc, -0x40a70);          /* call 0x100caafc */
    II(0x1010b56c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1010b56f, 0x5)   add(eax, 0x345);                      /* add eax, 0x345 */
    II(0x1010b574, 0x5)   calld(/* sys */ 0x101790ce, 0x6db55); /* call 0x101790ce */
    II(0x1010b579, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1010b57b, 0x5)   mov(eax, 0x4b);                       /* mov eax, 0x4b */
    II(0x1010b580, 0x5)   calld(0x100caafc, -0x40a89);          /* call 0x100caafc */
l_0x1010b585:
    II(0x1010b585, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1010b588, 0x6)   mov(eax, memd_a32(ds, eax + 0x341));  /* mov eax, [eax+0x341] */
    II(0x1010b58e, 0x5)   calld(0x100eb226, -0x2036d);          /* call 0x100eb226 */
    II(0x1010b593, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1010b596, 0x7)   cmp(memd_a32(ds, eax + 0x341), 0);    /* cmp dword [eax+0x341], 0x0 */
    II(0x1010b59d, 0x2)   jzd(0x1010b5d9, 0x3a);                /* jz 0x1010b5d9 */
    II(0x1010b59f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1010b5a2, 0x6)   mov(eax, memd_a32(ds, eax + 0x341));  /* mov eax, [eax+0x341] */
    II(0x1010b5a8, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1010b5ab, 0x4)   cmp(memd_a32(ss, ebp - 0xc), 0);      /* cmp dword [ebp-0xc], 0x0 */
    II(0x1010b5af, 0x2)   jzd(0x1010b5c5, 0x14);                /* jz 0x1010b5c5 */
    II(0x1010b5b1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1010b5b3, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010b5b6, 0x5)   calld(my_dtor_d6, -0x204e4);          /* call 0x100eb0d7 */
    II(0x1010b5bb, 0x5)   calld(sys_delete, 0x5a9a4);           /* call 0x10165f64 */
    II(0x1010b5c0, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1010b5c3, 0x2)   jmpd(0x1010b5cc, 0x7);                /* jmp 0x1010b5cc */
l_0x1010b5c5:
    II(0x1010b5c5, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
l_0x1010b5cc:
    II(0x1010b5cc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1010b5cf, 0xa)   mov(memd_a32(ds, eax + 0x341), 0);    /* mov dword [eax+0x341], 0x0 */
l_0x1010b5d9:
    II(0x1010b5d9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1010b5dc, 0xa)   mov(memd_a32(ds, eax + 0x363), 0);    /* mov dword [eax+0x363], 0x0 */
    II(0x1010b5e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1010b5e9, 0x5)   calld(0x1010a69d, -0xf51);            /* call 0x1010a69d */
    II(0x1010b5ee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1010b5f1, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010b5f3, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x1010b5f6, 0x5)   calld(sys_display_draw_0, 0x5be89);   /* call 0x10167484 */
l_0x1010b5fb:
    II(0x1010b5fb, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010b5fd, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010b5fe, 0x1)   popd(edi);                            /* pop edi */
    II(0x1010b5ff, 0x1)   popd(esi);                            /* pop esi */
    II(0x1010b600, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1010b601, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1010b602, 0x1)   retd();                               /* ret */
FUNC_END

