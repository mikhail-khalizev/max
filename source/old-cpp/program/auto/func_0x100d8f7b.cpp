FUNC_BEGIN(0x100d8f7b, 0xf5c110d48c3107d0, 0x20, ({0x68, 0x44, 0, 0, 0, 0xe8, 0xcd, 0xcd, 0x8, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x30, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf4, 0xe8, 0x32, 0xd8, 0xff, 0xff, 0x89, 0x45, 0xf4, 0x8d, 0x45, 0xf4, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf8, 0x8b, 0x55, 0xf4, 0x66, 0x89, 0x42, 0x4b, 0xbb, 0xd0, 0x38, 0x1b, 0x10, 0xba, 0x5d, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x5b, 0xe8, 0xa2, 0xcf, 0x8, 0, 0x83, 0xe8, 0x5b, 0x89, 0x45, 0xf4, 0x8d, 0x45, 0xf4, 0x89, 0x45, 0xe8, 0xbb, 0xd0, 0x38, 0x1b, 0x10, 0xba, 0x5d, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x5, 0xcf, 0x1, 0, 0, 0xe8, 0x7f, 0xcf, 0x8, 0, 0x2d, 0xcf, 0x1, 0, 0, 0x89, 0x45, 0xf4, 0x8d, 0x45, 0xf4, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xf4, 0xc7, 0x40, 0x13, 0x50, 0x5f, 0x1b, 0x10, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0xa, 0x7d, 0x16, 0xf, 0xbf, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf4, 0xc7, 0x80, 0x75, 0x3, 0, 0, 0, 0, 0, 0, 0xeb, 0xdb, 0x8b, 0x45, 0xf4, 0x66, 0xc7, 0x40, 0x51, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x80, 0x9f, 0x3, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x80, 0xa3, 0x3, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x80, 0xa7, 0x3, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x80, 0xab, 0x3, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x80, 0x49, 0x3, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x80, 0x4d, 0x3, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x80, 0x51, 0x3, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x80, 0x55, 0x3, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x80, 0x59, 0x3, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x80, 0x5d, 0x3, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x80, 0x61, 0x3, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x80, 0x65, 0x3, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x80, 0x69, 0x3, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x80, 0x6d, 0x3, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x80, 0x71, 0x3, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xc7, 0x80, 0x45, 0x3, 0, 0, 0, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x66, 0xc7, 0x40, 0x4d, 0, 0, 0x8b, 0x45, 0xf4, 0x66, 0xc7, 0x40, 0x4f, 0, 0, 0x8b, 0x45, 0xf4, 0x66, 0xc7, 0x40, 0x59, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0xc6, 0x80, 0x9e, 0x3, 0, 0, 0, 0x8b, 0x45, 0xf4, 0x66, 0xc7, 0x40, 0x55, 0x70, 0x2, 0x8b, 0x45, 0xf4, 0x66, 0xc7, 0x40, 0x57, 0x71, 0x2, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf0, 0xff, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x83, 0xf8, 0x5d, 0xf, 0x8d, 0x99, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf0, 0xf, 0xbf, 0x5d, 0xf8, 0x69, 0xdb, 0x47, 0x2, 0, 0, 0xb8, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0xaf, 0x6b, 0, 0, 0x89, 0xc2, 0xf, 0xbf, 0x5d, 0xf0, 0xc1, 0xe3, 0x2, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x5b, 0x1, 0xd8, 0xe8, 0xe9, 0x25, 0xff, 0xff, 0xb8, 0x24, 0, 0, 0, 0xe8, 0x63, 0xcc, 0x8, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xdc, 0x83, 0x7d, 0xdc, 0, 0x74, 0x2b, 0xf, 0xbf, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0x8b, 0x5d, 0xf4, 0x83, 0xc3, 0x5b, 0x1, 0xd8, 0xe8, 0x30, 0x25, 0xff, 0xff, 0x8b, 0x5d, 0xe0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x2c, 0x11, 0xff, 0xff, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xd4, 0xeb, 0x6, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xd4, 0x8b, 0x55, 0xd4, 0xf, 0xbf, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0x8b, 0x5d, 0xf4, 0x81, 0xc3, 0xcf, 0x1, 0, 0, 0x1, 0xd8, 0xe8, 0x85, 0x25, 0xff, 0xff, 0xe9, 0x54, 0xff, 0xff, 0xff, 0x8b, 0x75, 0xf4, 0xc6, 0x86, 0x43, 0x3, 0, 0, 0, 0x8b, 0x75, 0xf4, 0xc6, 0x86, 0x9d, 0x3, 0, 0, 0, 0x8b, 0x75, 0xf4, 0xc6, 0x86, 0x44, 0x3, 0, 0, 0, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x70, 0x7b, 0x4, 0, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf4, 0xe8, 0xae, 0xd8, 0xff, 0xff, 0x8b, 0x55, 0xf4, 0x83, 0xc2, 0x17, 0x8b, 0x45, 0xf4, 0xe8, 0xd2, 0xd7, 0xff, 0xff, 0xb9, 0x6, 0, 0, 0, 0x8b, 0x7d, 0xf4, 0x8d, 0x7f, 0x31, 0x8b, 0x75, 0xf4, 0x8d, 0x76, 0x17, 0xf3, 0xa5, 0x66, 0xa5, 0xe8, 0xba, 0x69, 0x2, 0, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xd0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100d8f7b, 0x5)   pushd(0x44);                          /* push dword 0x44 */
    II(0x100d8f80, 0x5)   calld(sys_check_available_stack_size, 0x8cdcd); /* call 0x10165d52 */
    II(0x100d8f85, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100d8f86, 0x1)   pushd(esi);                           /* push esi */
    II(0x100d8f87, 0x1)   pushd(edi);                           /* push edi */
    II(0x100d8f88, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100d8f89, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100d8f8b, 0x6)   sub(esp, 0x30);                       /* sub esp, 0x30 */
    II(0x100d8f91, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100d8f94, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x100d8f97, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x100d8f9a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100d8f9e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d8fa1, 0x5)   calld(0x100d67d8, -0x27ce);           /* call 0x100d67d8 */
    II(0x100d8fa6, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100d8fa9, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100d8fac, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100d8faf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d8fb2, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100d8fb5, 0x4)   mov(memw_a32(ds, edx + 0x4b), ax);    /* mov [edx+0x4b], ax */
    II(0x100d8fb9, 0x5)   mov(ebx, 0x101b38d0);                 /* mov ebx, 0x101b38d0 */
    II(0x100d8fbe, 0x5)   mov(edx, 0x5d);                       /* mov edx, 0x5d */
    II(0x100d8fc3, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d8fc6, 0x3)   add(eax, 0x5b);                       /* add eax, 0x5b */
    II(0x100d8fc9, 0x5)   calld(sys_call_ctor_arr_v2, 0x8cfa2); /* call 0x10165f70 */
    II(0x100d8fce, 0x3)   sub(eax, 0x5b);                       /* sub eax, 0x5b */
    II(0x100d8fd1, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100d8fd4, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100d8fd7, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100d8fda, 0x5)   mov(ebx, 0x101b38d0);                 /* mov ebx, 0x101b38d0 */
    II(0x100d8fdf, 0x5)   mov(edx, 0x5d);                       /* mov edx, 0x5d */
    II(0x100d8fe4, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d8fe7, 0x5)   add(eax, 0x1cf);                      /* add eax, 0x1cf */
    II(0x100d8fec, 0x5)   calld(sys_call_ctor_arr_v2, 0x8cf7f); /* call 0x10165f70 */
    II(0x100d8ff1, 0x5)   sub(eax, 0x1cf);                      /* sub eax, 0x1cf */
    II(0x100d8ff6, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100d8ff9, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100d8ffc, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100d8fff, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d9002, 0x7)   mov(memd_a32(ds, eax + 0x13), 0x101b5f50); /* mov dword [eax+0x13], 0x101b5f50 */
    II(0x100d9009, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100d9010, 0x2)   jmpd(0x100d9018, 0x6);                /* jmp 0x100d9018 */
l_0x100d9012:
    II(0x100d9012, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d9015, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100d9018:
    II(0x100d9018, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100d901c, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x100d901f, 0x2)   jged(0x100d9037, 0x16);               /* jge 0x100d9037 */
    II(0x100d9021, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100d9025, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100d9028, 0x3)   add(eax, memd_a32(ss, ebp - 0xc));    /* add eax, [ebp-0xc] */
    II(0x100d902b, 0xa)   mov(memd_a32(ds, eax + 0x375), 0);    /* mov dword [eax+0x375], 0x0 */
    II(0x100d9035, 0x2)   jmpd(0x100d9012, -0x25);              /* jmp 0x100d9012 */
l_0x100d9037:
    II(0x100d9037, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d903a, 0x6)   mov(memw_a32(ds, eax + 0x51), 0);     /* mov word [eax+0x51], 0x0 */
    II(0x100d9040, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d9043, 0xa)   mov(memd_a32(ds, eax + 0x39f), 0);    /* mov dword [eax+0x39f], 0x0 */
    II(0x100d904d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d9050, 0xa)   mov(memd_a32(ds, eax + 0x3a3), 0);    /* mov dword [eax+0x3a3], 0x0 */
    II(0x100d905a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d905d, 0xa)   mov(memd_a32(ds, eax + 0x3a7), 0);    /* mov dword [eax+0x3a7], 0x0 */
    II(0x100d9067, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d906a, 0xa)   mov(memd_a32(ds, eax + 0x3ab), 0);    /* mov dword [eax+0x3ab], 0x0 */
    II(0x100d9074, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d9077, 0xa)   mov(memd_a32(ds, eax + 0x349), 0);    /* mov dword [eax+0x349], 0x0 */
    II(0x100d9081, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d9084, 0xa)   mov(memd_a32(ds, eax + 0x34d), 0);    /* mov dword [eax+0x34d], 0x0 */
    II(0x100d908e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d9091, 0xa)   mov(memd_a32(ds, eax + 0x351), 0);    /* mov dword [eax+0x351], 0x0 */
    II(0x100d909b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d909e, 0xa)   mov(memd_a32(ds, eax + 0x355), 0);    /* mov dword [eax+0x355], 0x0 */
    II(0x100d90a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d90ab, 0xa)   mov(memd_a32(ds, eax + 0x359), 0);    /* mov dword [eax+0x359], 0x0 */
    II(0x100d90b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d90b8, 0xa)   mov(memd_a32(ds, eax + 0x35d), 0);    /* mov dword [eax+0x35d], 0x0 */
    II(0x100d90c2, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d90c5, 0xa)   mov(memd_a32(ds, eax + 0x361), 0);    /* mov dword [eax+0x361], 0x0 */
    II(0x100d90cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d90d2, 0xa)   mov(memd_a32(ds, eax + 0x365), 0);    /* mov dword [eax+0x365], 0x0 */
    II(0x100d90dc, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d90df, 0xa)   mov(memd_a32(ds, eax + 0x369), 0);    /* mov dword [eax+0x369], 0x0 */
    II(0x100d90e9, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d90ec, 0xa)   mov(memd_a32(ds, eax + 0x36d), 0);    /* mov dword [eax+0x36d], 0x0 */
    II(0x100d90f6, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d90f9, 0xa)   mov(memd_a32(ds, eax + 0x371), 0);    /* mov dword [eax+0x371], 0x0 */
    II(0x100d9103, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d9106, 0xa)   mov(memd_a32(ds, eax + 0x345), 0);    /* mov dword [eax+0x345], 0x0 */
    II(0x100d9110, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d9113, 0x6)   mov(memw_a32(ds, eax + 0x4d), 0);     /* mov word [eax+0x4d], 0x0 */
    II(0x100d9119, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d911c, 0x6)   mov(memw_a32(ds, eax + 0x4f), 0);     /* mov word [eax+0x4f], 0x0 */
    II(0x100d9122, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d9125, 0x6)   mov(memw_a32(ds, eax + 0x59), 0xffff); /* mov word [eax+0x59], 0xffff */
    II(0x100d912b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d912e, 0x7)   mov(memb_a32(ds, eax + 0x39e), 0);    /* mov byte [eax+0x39e], 0x0 */
    II(0x100d9135, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d9138, 0x6)   mov(memw_a32(ds, eax + 0x55), 0x270); /* mov word [eax+0x55], 0x270 */
    II(0x100d913e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d9141, 0x6)   mov(memw_a32(ds, eax + 0x57), 0x271); /* mov word [eax+0x57], 0x271 */
    II(0x100d9147, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100d914e, 0x2)   jmpd(0x100d9156, 0x6);                /* jmp 0x100d9156 */
l_0x100d9150:
    II(0x100d9150, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100d9153, 0x3)   inc(memd_a32(ss, ebp - 0x10));        /* inc dword [ebp-0x10] */
l_0x100d9156:
    II(0x100d9156, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100d915a, 0x3)   cmp(eax, 0x5d);                       /* cmp eax, 0x5d */
    II(0x100d915d, 0x6)   jged(0x100d91fc, 0x99);               /* jge dword 0x100d91fc */
    II(0x100d9163, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x100d9167, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x100d916b, 0x6)   imul(ebx, ebx, 0x247);                /* imul ebx, ebx, 0x247 */
    II(0x100d9171, 0x5)   mov(eax, 0x101ca468);                 /* mov eax, 0x101ca468 */
    II(0x100d9176, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100d9178, 0x5)   calld(0x100dfd2c, 0x6baf);            /* call 0x100dfd2c */
    II(0x100d917d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100d917f, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x10)); /* movsx ebx, word [ebp-0x10] */
    II(0x100d9183, 0x3)   shl(ebx, 0x2);                        /* shl ebx, 0x2 */
    II(0x100d9186, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d9189, 0x3)   add(eax, 0x5b);                       /* add eax, 0x5b */
    II(0x100d918c, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100d918e, 0x5)   calld(0x100cb77c, -0xda17);           /* call 0x100cb77c */
    II(0x100d9193, 0x5)   mov(eax, 0x24);                       /* mov eax, 0x24 */
    II(0x100d9198, 0x5)   calld(sys_new, 0x8cc63);              /* call 0x10165e00 */
    II(0x100d919d, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x100d91a0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100d91a3, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100d91a6, 0x4)   cmp(memd_a32(ss, ebp - 0x24), 0);     /* cmp dword [ebp-0x24], 0x0 */
    II(0x100d91aa, 0x2)   jzd(0x100d91d7, 0x2b);                /* jz 0x100d91d7 */
    II(0x100d91ac, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100d91b0, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100d91b3, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x100d91b6, 0x3)   add(ebx, 0x5b);                       /* add ebx, 0x5b */
    II(0x100d91b9, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100d91bb, 0x5)   calld(0x100cb6f0, -0xdad0);           /* call 0x100cb6f0 */
    II(0x100d91c0, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x20));   /* mov ebx, [ebp-0x20] */
    II(0x100d91c3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100d91c5, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100d91c7, 0x5)   calld(0x100ca2f8, -0xeed4);           /* call 0x100ca2f8 */
    II(0x100d91cc, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
//    II(0x100d91cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100d91d2, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100d91d5, 0x2)   jmpd(0x100d91dd, 0x6);                /* jmp 0x100d91dd */
l_0x100d91d7:
    II(0x100d91d7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100d91da, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
l_0x100d91dd:
    II(0x100d91dd, 0x3)   mov(edx, memd_a32(ss, ebp - 0x2c));   /* mov edx, [ebp-0x2c] */
    II(0x100d91e0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100d91e4, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100d91e7, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x100d91ea, 0x6)   add(ebx, 0x1cf);                      /* add ebx, 0x1cf */
    II(0x100d91f0, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100d91f2, 0x5)   calld(0x100cb77c, -0xda7b);           /* call 0x100cb77c */
    II(0x100d91f7, 0x5)   jmpd(0x100d9150, -0xac);              /* jmp 0x100d9150 */
l_0x100d91fc:
    II(0x100d91fc, 0x3)   mov(esi, memd_a32(ss, ebp - 0xc));    /* mov esi, [ebp-0xc] */
    II(0x100d91ff, 0x7)   mov(memb_a32(ds, esi + 0x343), 0);    /* mov byte [esi+0x343], 0x0 */
    II(0x100d9206, 0x3)   mov(esi, memd_a32(ss, ebp - 0xc));    /* mov esi, [ebp-0xc] */
    II(0x100d9209, 0x7)   mov(memb_a32(ds, esi + 0x39d), 0);    /* mov byte [esi+0x39d], 0x0 */
    II(0x100d9210, 0x3)   mov(esi, memd_a32(ss, ebp - 0xc));    /* mov esi, [ebp-0xc] */
    II(0x100d9213, 0x7)   mov(memb_a32(ds, esi + 0x344), 0);    /* mov byte [esi+0x344], 0x0 */
    II(0x100d921a, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100d921f, 0x5)   calld(0x10120d94, 0x47b70);           /* call 0x10120d94 */
    II(0x100d9224, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100d9229, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d922c, 0x5)   calld(0x100d6adf, -0x2752);           /* call 0x100d6adf */
    II(0x100d9231, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100d9234, 0x3)   add(edx, 0x17);                       /* add edx, 0x17 */
    II(0x100d9237, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d923a, 0x5)   calld(0x100d6a11, -0x282e);           /* call 0x100d6a11 */
    II(0x100d923f, 0x5)   mov(ecx, 0x6);                        /* mov ecx, 0x6 */
    II(0x100d9244, 0x3)   mov(edi, memd_a32(ss, ebp - 0xc));    /* mov edi, [ebp-0xc] */
    II(0x100d9247, 0x3)   lea(edi, edi + 0x31);                 /* lea edi, [edi+0x31] */
    II(0x100d924a, 0x3)   mov(esi, memd_a32(ss, ebp - 0xc));    /* mov esi, [ebp-0xc] */
    II(0x100d924d, 0x3)   lea(esi, esi + 0x17);                 /* lea esi, [esi+0x17] */
    II(0x100d9250, 0x2)   rep_a32 movsd_a32();                  /* rep movsd */
    II(0x100d9252, 0x2)   movsw_a32();                          /* movsw */
    II(0x100d9254, 0x5)   calld(0x100ffc13, 0x269ba);           /* call 0x100ffc13 */
    II(0x100d9259, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100d925c, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
//    II(0x100d925f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100d9262, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100d9264, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100d9265, 0x1)   popd(edi);                            /* pop edi */
    II(0x100d9266, 0x1)   popd(esi);                            /* pop esi */
    II(0x100d9267, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100d9268, 0x1)   retd();                               /* ret */
FUNC_END

