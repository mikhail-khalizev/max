FUNC_BEGIN(0x10103f75, 0xe3cf614025a13206, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0xd3, 0x1d, 0x6, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x83, 0x7d, 0xfc, 0, 0x75, 0x19, 0xb9, 0xa9, 0x1, 0, 0, 0xbb, 0x6f, 0x32, 0x1a, 0x10, 0xba, 0x78, 0x32, 0x1a, 0x10, 0xb8, 0xac, 0x32, 0x1a, 0x10, 0xe8, 0x23, 0xc8, 0xfe, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x9b, 0x21, 0xf7, 0xff, 0x31, 0xd2, 0x66, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0xf, 0xbf, 0x18, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0x5d, 0xf4, 0x6b, 0xdb, 0xa, 0x8b, 0x55, 0xf8, 0x8b, 0x52, 0x2, 0x1, 0xd3, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xcb, 0x6a, 0xf8, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10103f75, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x10103f7a, 0x5)   calld(sys_check_available_stack_size, 0x61dd3); /* call 0x10165d52 */
    II(0x10103f7f, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10103f80, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10103f81, 0x1)   pushd(esi);                           /* push esi */
    II(0x10103f82, 0x1)   pushd(edi);                           /* push edi */
    II(0x10103f83, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10103f84, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10103f86, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x10103f8c, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10103f8f, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x10103f92, 0x4)   cmp(memd_a32(ss, ebp - 0x4), 0);      /* cmp dword [ebp-0x4], 0x0 */
    II(0x10103f96, 0x2)   jnzd(0x10103fb1, 0x19);               /* jnz 0x10103fb1 */
    II(0x10103f98, 0x5)   mov(ecx, 0x1a9);                      /* mov ecx, 0x1a9 */
    II(0x10103f9d, 0x5)   mov(ebx, 0x101a326f);                 /* mov ebx, 0x101a326f */ /* "hash.cpp" */
    II(0x10103fa2, 0x5)   mov(edx, 0x101a3278);                 /* mov edx, 0x101a3278 */ /* "Attempted to remove NULL unit from unit hash table." */
    II(0x10103fa7, 0x5)   mov(eax, 0x101a32ac);                 /* mov eax, 0x101a32ac */ /* "unit != 0" */
    II(0x10103fac, 0x5)   calld(0x100f07d4, -0x137dd);          /* call 0x100f07d4 */
l_0x10103fb1:
    II(0x10103fb1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10103fb4, 0x5)   calld(0x10076154, -0x8de65);          /* call 0x10076154 */
    II(0x10103fb9, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10103fbb, 0x3)   mov(dx, ax);                          /* mov dx, ax */
    II(0x10103fbe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10103fc1, 0x3)   movsx(ebx, memw_a32(ds, eax));        /* movsx ebx, word [eax] */
    II(0x10103fc4, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10103fc6, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10103fc9, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10103fcb, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10103fce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10103fd1, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0xc));  /* movsx ebx, word [ebp-0xc] */
    II(0x10103fd5, 0x3)   imul(ebx, ebx, 0xa);                  /* imul ebx, ebx, 0xa */
    II(0x10103fd8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10103fdb, 0x3)   mov(edx, memd_a32(ds, edx + 0x2));    /* mov edx, [edx+0x2] */
    II(0x10103fde, 0x2)   add(ebx, edx);                        /* add ebx, edx */
    II(0x10103fe0, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10103fe2, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10103fe4, 0x5)   calld(0x1008aab4, -0x79535);          /* call 0x1008aab4 */
    II(0x10103fe9, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10103feb, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10103fec, 0x1)   popd(edi);                            /* pop edi */
    II(0x10103fed, 0x1)   popd(esi);                            /* pop esi */
    II(0x10103fee, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10103fef, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10103ff0, 0x1)   retd();                               /* ret */
FUNC_END

