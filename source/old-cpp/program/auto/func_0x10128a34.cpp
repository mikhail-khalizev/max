FUNC_BEGIN(0x10128a34, 0x4fb677fa1f239324, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x14, 0xd3, 0x3, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xc7, 0x45, 0xf4, 0x21, 0x5c, 0x1c, 0x10, 0xf, 0xbf, 0x55, 0xfc, 0xf, 0xbf, 0x5d, 0xf8, 0x69, 0xdb, 0x47, 0x2, 0, 0, 0xb8, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0xba, 0x72, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0x84, 0xdd, 0xf4, 0xff, 0xc6, 0x5, 0x1c, 0x5c, 0x1c, 0x10, 0xa, 0x8b, 0x45, 0xf8, 0x66, 0xa3, 0x1d, 0x5c, 0x1c, 0x10, 0x66, 0xc7, 0x5, 0x1f, 0x5c, 0x1c, 0x10, 0x1c, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x55, 0xf4, 0x66, 0x89, 0x2, 0x8d, 0x45, 0xf0, 0xe8, 0x8a, 0xdc, 0xf4, 0xff, 0x66, 0x8b, 0x50, 0x8, 0x8b, 0x45, 0xf4, 0x66, 0x89, 0x50, 0x2, 0x8d, 0x45, 0xf0, 0xe8, 0x77, 0xdc, 0xf4, 0xff, 0x66, 0x8b, 0x50, 0xa, 0x8b, 0x45, 0xf4, 0x66, 0x89, 0x50, 0x4, 0x8d, 0x45, 0xf0, 0xe8, 0x64, 0xdc, 0xf4, 0xff, 0x66, 0x8b, 0x50, 0xc, 0x8b, 0x45, 0xf4, 0x66, 0x89, 0x50, 0x6, 0x8d, 0x45, 0xf0, 0xe8, 0x51, 0xdc, 0xf4, 0xff, 0x66, 0x8b, 0x50, 0xe, 0x8b, 0x45, 0xf4, 0x66, 0x89, 0x50, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0x3e, 0xdc, 0xf4, 0xff, 0x66, 0x8b, 0x50, 0x10, 0x8b, 0x45, 0xf4, 0x66, 0x89, 0x50, 0xa, 0x8d, 0x45, 0xf0, 0xe8, 0x2b, 0xdc, 0xf4, 0xff, 0x66, 0x8b, 0x50, 0x12, 0x8b, 0x45, 0xf4, 0x66, 0x89, 0x50, 0xc, 0x8d, 0x45, 0xf0, 0xe8, 0x18, 0xdc, 0xf4, 0xff, 0x66, 0x8b, 0x50, 0x14, 0x8b, 0x45, 0xf4, 0x66, 0x89, 0x50, 0xe, 0x8d, 0x45, 0xf0, 0xe8, 0x5, 0xdc, 0xf4, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x16, 0x8b, 0x45, 0xf4, 0x66, 0x89, 0x50, 0x10, 0x8d, 0x45, 0xf0, 0xe8, 0xf1, 0xdb, 0xf4, 0xff, 0x66, 0x8b, 0x50, 0x17, 0x8b, 0x45, 0xf4, 0x66, 0x89, 0x50, 0x12, 0x8d, 0x45, 0xf0, 0xe8, 0xde, 0xdb, 0xf4, 0xff, 0x66, 0x8b, 0x50, 0x19, 0x8b, 0x45, 0xf4, 0x66, 0x89, 0x50, 0x14, 0x8d, 0x45, 0xf0, 0xe8, 0xcb, 0xdb, 0xf4, 0xff, 0x66, 0x8b, 0x50, 0x1b, 0x8b, 0x45, 0xf4, 0x66, 0x89, 0x50, 0x16, 0x8d, 0x45, 0xf0, 0xe8, 0xb8, 0xdb, 0xf4, 0xff, 0x66, 0x8b, 0x50, 0x1d, 0x8b, 0x45, 0xf4, 0x66, 0x89, 0x50, 0x18, 0x8d, 0x45, 0xf0, 0xe8, 0xa5, 0xdb, 0xf4, 0xff, 0x66, 0x8b, 0x50, 0x1f, 0x8b, 0x45, 0xf4, 0x66, 0x89, 0x50, 0x1a, 0xb8, 0x4, 0, 0, 0, 0xe8, 0x49, 0xd0, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x42, 0xd3, 0xf4, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10128a34, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x10128a39, 0x5)   calld(sys_check_available_stack_size, 0x3d314); /* call 0x10165d52 */
    II(0x10128a3e, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10128a3f, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10128a40, 0x1)   pushd(esi);                           /* push esi */
    II(0x10128a41, 0x1)   pushd(edi);                           /* push edi */
    II(0x10128a42, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10128a43, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10128a45, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x10128a4b, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10128a4e, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x10128a51, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x101c5c21); /* mov dword [ebp-0xc], 0x101c5c21 */
    II(0x10128a58, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x10128a5c, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x10128a60, 0x6)   imul(ebx, ebx, 0x247);                /* imul ebx, ebx, 0x247 */
    II(0x10128a66, 0x5)   mov(eax, 0x101ca468);                 /* mov eax, 0x101ca468 */
    II(0x10128a6b, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10128a6d, 0x5)   calld(0x100dfd2c, -0x48d46);          /* call 0x100dfd2c */
    II(0x10128a72, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10128a74, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10128a77, 0x5)   calld(0x10076800, -0xb227c);          /* call 0x10076800 */
    II(0x10128a7c, 0x7)   mov(memb_a32(ds, 0x101c5c1c), 0xa);   /* mov byte [0x101c5c1c], 0xa */
    II(0x10128a83, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10128a86, 0x6)   mov(memw_a32(ds, 0x101c5c1d), ax);    /* mov [0x101c5c1d], ax */
    II(0x10128a8c, 0x9)   mov(memw_a32(ds, 0x101c5c1f), 0x1c);  /* mov word [0x101c5c1f], 0x1c */
    II(0x10128a95, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10128a98, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10128a9b, 0x3)   mov(memw_a32(ds, edx), ax);           /* mov [edx], ax */
    II(0x10128a9e, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10128aa1, 0x5)   calld(0x10076730, -0xb2376);          /* call 0x10076730 */
    II(0x10128aa6, 0x4)   mov(dx, memw_a32(ds, eax + 0x8));     /* mov dx, [eax+0x8] */
    II(0x10128aaa, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10128aad, 0x4)   mov(memw_a32(ds, eax + 0x2), dx);     /* mov [eax+0x2], dx */
    II(0x10128ab1, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10128ab4, 0x5)   calld(0x10076730, -0xb2389);          /* call 0x10076730 */
    II(0x10128ab9, 0x4)   mov(dx, memw_a32(ds, eax + 0xa));     /* mov dx, [eax+0xa] */
    II(0x10128abd, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10128ac0, 0x4)   mov(memw_a32(ds, eax + 0x4), dx);     /* mov [eax+0x4], dx */
    II(0x10128ac4, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10128ac7, 0x5)   calld(0x10076730, -0xb239c);          /* call 0x10076730 */
    II(0x10128acc, 0x4)   mov(dx, memw_a32(ds, eax + 0xc));     /* mov dx, [eax+0xc] */
    II(0x10128ad0, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10128ad3, 0x4)   mov(memw_a32(ds, eax + 0x6), dx);     /* mov [eax+0x6], dx */
    II(0x10128ad7, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10128ada, 0x5)   calld(0x10076730, -0xb23af);          /* call 0x10076730 */
    II(0x10128adf, 0x4)   mov(dx, memw_a32(ds, eax + 0xe));     /* mov dx, [eax+0xe] */
    II(0x10128ae3, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10128ae6, 0x4)   mov(memw_a32(ds, eax + 0x8), dx);     /* mov [eax+0x8], dx */
    II(0x10128aea, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10128aed, 0x5)   calld(0x10076730, -0xb23c2);          /* call 0x10076730 */
    II(0x10128af2, 0x4)   mov(dx, memw_a32(ds, eax + 0x10));    /* mov dx, [eax+0x10] */
    II(0x10128af6, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10128af9, 0x4)   mov(memw_a32(ds, eax + 0xa), dx);     /* mov [eax+0xa], dx */
    II(0x10128afd, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10128b00, 0x5)   calld(0x10076730, -0xb23d5);          /* call 0x10076730 */
    II(0x10128b05, 0x4)   mov(dx, memw_a32(ds, eax + 0x12));    /* mov dx, [eax+0x12] */
    II(0x10128b09, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10128b0c, 0x4)   mov(memw_a32(ds, eax + 0xc), dx);     /* mov [eax+0xc], dx */
    II(0x10128b10, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10128b13, 0x5)   calld(0x10076730, -0xb23e8);          /* call 0x10076730 */
    II(0x10128b18, 0x4)   mov(dx, memw_a32(ds, eax + 0x14));    /* mov dx, [eax+0x14] */
    II(0x10128b1c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10128b1f, 0x4)   mov(memw_a32(ds, eax + 0xe), dx);     /* mov [eax+0xe], dx */
    II(0x10128b23, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10128b26, 0x5)   calld(0x10076730, -0xb23fb);          /* call 0x10076730 */
    II(0x10128b2b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10128b2d, 0x3)   mov(dl, memb_a32(ds, eax + 0x16));    /* mov dl, [eax+0x16] */
    II(0x10128b30, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10128b33, 0x4)   mov(memw_a32(ds, eax + 0x10), dx);    /* mov [eax+0x10], dx */
    II(0x10128b37, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10128b3a, 0x5)   calld(0x10076730, -0xb240f);          /* call 0x10076730 */
    II(0x10128b3f, 0x4)   mov(dx, memw_a32(ds, eax + 0x17));    /* mov dx, [eax+0x17] */
    II(0x10128b43, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10128b46, 0x4)   mov(memw_a32(ds, eax + 0x12), dx);    /* mov [eax+0x12], dx */
    II(0x10128b4a, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10128b4d, 0x5)   calld(0x10076730, -0xb2422);          /* call 0x10076730 */
    II(0x10128b52, 0x4)   mov(dx, memw_a32(ds, eax + 0x19));    /* mov dx, [eax+0x19] */
    II(0x10128b56, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10128b59, 0x4)   mov(memw_a32(ds, eax + 0x14), dx);    /* mov [eax+0x14], dx */
    II(0x10128b5d, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10128b60, 0x5)   calld(0x10076730, -0xb2435);          /* call 0x10076730 */
    II(0x10128b65, 0x4)   mov(dx, memw_a32(ds, eax + 0x1b));    /* mov dx, [eax+0x1b] */
    II(0x10128b69, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10128b6c, 0x4)   mov(memw_a32(ds, eax + 0x16), dx);    /* mov [eax+0x16], dx */
    II(0x10128b70, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10128b73, 0x5)   calld(0x10076730, -0xb2448);          /* call 0x10076730 */
    II(0x10128b78, 0x4)   mov(dx, memw_a32(ds, eax + 0x1d));    /* mov dx, [eax+0x1d] */
    II(0x10128b7c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10128b7f, 0x4)   mov(memw_a32(ds, eax + 0x18), dx);    /* mov [eax+0x18], dx */
    II(0x10128b83, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10128b86, 0x5)   calld(0x10076730, -0xb245b);          /* call 0x10076730 */
    II(0x10128b8b, 0x4)   mov(dx, memw_a32(ds, eax + 0x1f));    /* mov dx, [eax+0x1f] */
    II(0x10128b8f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10128b92, 0x4)   mov(memw_a32(ds, eax + 0x1a), dx);    /* mov [eax+0x1a], dx */
    II(0x10128b96, 0x5)   mov(eax, 0x4);                        /* mov eax, 0x4 */
    II(0x10128b9b, 0x5)   calld(0x10125be9, -0x2fb7);           /* call 0x10125be9 */
    II(0x10128ba0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10128ba2, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x10128ba5, 0x5)   calld(0x10075eec, -0xb2cbe);          /* call 0x10075eec */
    II(0x10128baa, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10128bac, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10128bad, 0x1)   popd(edi);                            /* pop edi */
    II(0x10128bae, 0x1)   popd(esi);                            /* pop esi */
    II(0x10128baf, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10128bb0, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10128bb1, 0x1)   retd();                               /* ret */
FUNC_END

