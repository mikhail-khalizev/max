FUNC_BEGIN(0x1014f2a2, 0x87042041c21ca1d3, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0xa6, 0x6a, 0x1, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0xf, 0xbf, 0x55, 0xfc, 0x39, 0xc2, 0xf, 0x84, 0x54, 0x1, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0x3, 0x45, 0xf8, 0x80, 0xb8, 0xab, 0, 0, 0, 0, 0x75, 0x39, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x42, 0x74, 0xa, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x47, 0x75, 0x2, 0xeb, 0xa, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x41, 0x75, 0x2, 0xeb, 0x5, 0xe9, 0x1d, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x31, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x8, 0xf, 0x8c, 0xb, 0x1, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0x3, 0x45, 0xf8, 0xc6, 0x80, 0xab, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x42, 0x74, 0xa, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x47, 0x75, 0x2, 0xeb, 0xe, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x41, 0xf, 0x85, 0xd1, 0, 0, 0, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x4, 0x7d, 0x44, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf4, 0x39, 0xc2, 0x74, 0x19, 0xf, 0xbf, 0x45, 0xf4, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x10, 0xf, 0xbf, 0x45, 0xf4, 0x3, 0x45, 0xf8, 0x80, 0xb8, 0xab, 0, 0, 0, 0, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x2, 0xeb, 0xad, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x4, 0xf, 0x85, 0x68, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x79, 0x4f, 0x1, 0, 0x84, 0xc0, 0x74, 0x27, 0x8b, 0x45, 0xf8, 0x66, 0xc7, 0x40, 0x33, 0, 0, 0x8b, 0x45, 0xf8, 0x31, 0xd2, 0x8a, 0x50, 0x29, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x33, 0x1, 0xd0, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0xe8, 0x1c, 0xa7, 0xff, 0xff, 0xeb, 0x35, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x42, 0x75, 0x9, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x3d, 0, 0x74, 0x2, 0xeb, 0x20, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x31, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0x13, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x29, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0xe8, 0xe5, 0xa6, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0xe8, 0x7e, 0xab, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1014f2a2, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x1014f2a7, 0x5)   calld(sys_check_available_stack_size, 0x16aa6); /* call 0x10165d52 */
    II(0x1014f2ac, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1014f2ad, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1014f2ae, 0x1)   pushd(esi);                           /* push esi */
    II(0x1014f2af, 0x1)   pushd(edi);                           /* push edi */
    II(0x1014f2b0, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1014f2b1, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1014f2b3, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x1014f2b9, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1014f2bc, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x1014f2bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014f2c2, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1014f2c5, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1014f2ca, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1014f2ce, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1014f2d0, 0x6)   jzd(0x1014f42a, 0x154);               /* jz dword 0x1014f42a */
    II(0x1014f2d6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1014f2da, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1014f2dd, 0x7)   cmp(memb_a32(ds, eax + 0xab), 0);     /* cmp byte [eax+0xab], 0x0 */
    II(0x1014f2e4, 0x2)   jnzd(0x1014f31f, 0x39);               /* jnz 0x1014f31f */
    II(0x1014f2e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014f2e9, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x1014f2ee, 0x2)   jzd(0x1014f2fa, 0xa);                 /* jz 0x1014f2fa */
    II(0x1014f2f0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014f2f3, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x47);   /* cmp word [eax+0x8], 0x47 */
    II(0x1014f2f8, 0x2)   jnzd(0x1014f2fc, 0x2);                /* jnz 0x1014f2fc */
l_0x1014f2fa:
    II(0x1014f2fa, 0x2)   jmpd(0x1014f306, 0xa);                /* jmp 0x1014f306 */
l_0x1014f2fc:
    II(0x1014f2fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014f2ff, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x41);   /* cmp word [eax+0x8], 0x41 */
    II(0x1014f304, 0x2)   jnzd(0x1014f308, 0x2);                /* jnz 0x1014f308 */
l_0x1014f306:
    II(0x1014f306, 0x2)   jmpd(0x1014f30d, 0x5);                /* jmp 0x1014f30d */
l_0x1014f308:
    II(0x1014f308, 0x5)   jmpd(0x1014f42a, 0x11d);              /* jmp 0x1014f42a */
l_0x1014f30d:
    II(0x1014f30d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014f310, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x1014f313, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1014f316, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x1014f319, 0x6)   jld(0x1014f42a, 0x10b);               /* jl dword 0x1014f42a */
l_0x1014f31f:
    II(0x1014f31f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1014f323, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1014f326, 0x7)   mov(memb_a32(ds, eax + 0xab), 0);     /* mov byte [eax+0xab], 0x0 */
    II(0x1014f32d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014f330, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x1014f335, 0x2)   jzd(0x1014f341, 0xa);                 /* jz 0x1014f341 */
    II(0x1014f337, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014f33a, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x47);   /* cmp word [eax+0x8], 0x47 */
    II(0x1014f33f, 0x2)   jnzd(0x1014f343, 0x2);                /* jnz 0x1014f343 */
l_0x1014f341:
    II(0x1014f341, 0x2)   jmpd(0x1014f351, 0xe);                /* jmp 0x1014f351 */
l_0x1014f343:
    II(0x1014f343, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014f346, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x41);   /* cmp word [eax+0x8], 0x41 */
    II(0x1014f34b, 0x6)   jnzd(0x1014f422, 0xd1);               /* jnz dword 0x1014f422 */
l_0x1014f351:
    II(0x1014f351, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x1014f358, 0x2)   jmpd(0x1014f360, 0x6);                /* jmp 0x1014f360 */
l_0x1014f35a:
    II(0x1014f35a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014f35d, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x1014f360:
    II(0x1014f360, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1014f364, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x1014f367, 0x2)   jged(0x1014f3ad, 0x44);               /* jge 0x1014f3ad */
    II(0x1014f369, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014f36c, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1014f36f, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1014f374, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1014f378, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1014f37a, 0x2)   jzd(0x1014f395, 0x19);                /* jz 0x1014f395 */
    II(0x1014f37c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1014f380, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1014f386, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x1014f38c, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1014f391, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1014f393, 0x2)   jnzd(0x1014f397, 0x2);                /* jnz 0x1014f397 */
l_0x1014f395:
    II(0x1014f395, 0x2)   jmpd(0x1014f3a7, 0x10);               /* jmp 0x1014f3a7 */
l_0x1014f397:
    II(0x1014f397, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1014f39b, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1014f39e, 0x7)   cmp(memb_a32(ds, eax + 0xab), 0);     /* cmp byte [eax+0xab], 0x0 */
    II(0x1014f3a5, 0x2)   jnzd(0x1014f3a9, 0x2);                /* jnz 0x1014f3a9 */
l_0x1014f3a7:
    II(0x1014f3a7, 0x2)   jmpd(0x1014f3ab, 0x2);                /* jmp 0x1014f3ab */
l_0x1014f3a9:
    II(0x1014f3a9, 0x2)   jmpd(0x1014f3ad, 0x2);                /* jmp 0x1014f3ad */
l_0x1014f3ab:
    II(0x1014f3ab, 0x2)   jmpd(0x1014f35a, -0x53);              /* jmp 0x1014f35a */
l_0x1014f3ad:
    II(0x1014f3ad, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1014f3b1, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x1014f3b4, 0x6)   jnzd(0x1014f422, 0x68);               /* jnz dword 0x1014f422 */
    II(0x1014f3ba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014f3bd, 0x5)   calld(0x1016433b, 0x14f79);           /* call 0x1016433b */
    II(0x1014f3c2, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014f3c4, 0x2)   jzd(0x1014f3ed, 0x27);                /* jz 0x1014f3ed */
    II(0x1014f3c6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014f3c9, 0x6)   mov(memw_a32(ds, eax + 0x33), 0);     /* mov word [eax+0x33], 0x0 */
    II(0x1014f3cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014f3d2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014f3d4, 0x3)   mov(dl, memb_a32(ds, eax + 0x29));    /* mov dl, [eax+0x29] */
    II(0x1014f3d7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014f3da, 0x4)   mov(ax, memw_a32(ds, eax + 0x33));    /* mov ax, [eax+0x33] */
    II(0x1014f3de, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1014f3e0, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1014f3e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014f3e6, 0x5)   calld(0x10149b07, -0x58e4);           /* call 0x10149b07 */
    II(0x1014f3eb, 0x2)   jmpd(0x1014f422, 0x35);               /* jmp 0x1014f422 */
l_0x1014f3ed:
    II(0x1014f3ed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014f3f0, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x1014f3f5, 0x2)   jnzd(0x1014f400, 0x9);                /* jnz 0x1014f400 */
    II(0x1014f3f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014f3fa, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0);     /* cmp byte [eax+0x3d], 0x0 */
    II(0x1014f3fe, 0x2)   jzd(0x1014f402, 0x2);                 /* jz 0x1014f402 */
l_0x1014f400:
    II(0x1014f400, 0x2)   jmpd(0x1014f422, 0x20);               /* jmp 0x1014f422 */
l_0x1014f402:
    II(0x1014f402, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014f405, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x1014f408, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1014f40b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1014f40d, 0x2)   jnzd(0x1014f422, 0x13);               /* jnz 0x1014f422 */
    II(0x1014f40f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014f412, 0x3)   mov(al, memb_a32(ds, eax + 0x29));    /* mov al, [eax+0x29] */
    II(0x1014f415, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1014f417, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1014f41a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014f41d, 0x5)   calld(0x10149b07, -0x591b);           /* call 0x10149b07 */
l_0x1014f422:
    II(0x1014f422, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014f425, 0x5)   calld(0x10149fa8, -0x5482);           /* call 0x10149fa8 */
l_0x1014f42a:
    II(0x1014f42a, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1014f42c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1014f42d, 0x1)   popd(edi);                            /* pop edi */
    II(0x1014f42e, 0x1)   popd(esi);                            /* pop esi */
    II(0x1014f42f, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1014f430, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1014f431, 0x1)   retd();                               /* ret */
FUNC_END

