FUNC_BEGIN(0x100b598b, 0x22311694148db8b6, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0xbd, 0x3, 0xb, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x86, 0x9, 0xfc, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf4, 0xe8, 0xfc, 0xa, 0xfc, 0xff, 0x8d, 0x45, 0xf0, 0xe8, 0x2c, 0x11, 0xfc, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf4, 0xe8, 0x2a, 0x12, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x99, 0x53, 0x8, 0, 0x84, 0xc0, 0xf, 0x84, 0xcc, 0, 0, 0, 0x8d, 0x45, 0xf4, 0xe8, 0xb8, 0x9, 0xfc, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0xf, 0x85, 0xa9, 0, 0, 0, 0x8d, 0x55, 0xe0, 0x8d, 0x45, 0xf4, 0xe8, 0x97, 0x9, 0xfc, 0xff, 0xe8, 0x24, 0xcb, 0x9, 0, 0x31, 0xd2, 0x8b, 0x45, 0xe0, 0x83, 0xe8, 0x2, 0xe8, 0x61, 0x14, 0xfc, 0xff, 0x89, 0x45, 0xe0, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xe8, 0x83, 0xc0, 0x2, 0xe8, 0x52, 0x3d, 0xfd, 0xff, 0x89, 0x45, 0xe8, 0x31, 0xd2, 0x8b, 0x45, 0xe4, 0x83, 0xe8, 0x2, 0xe8, 0x3a, 0x14, 0xfc, 0xff, 0x89, 0x45, 0xe4, 0x8b, 0x15, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xec, 0x83, 0xc0, 0x2, 0xe8, 0x2b, 0x3d, 0xfd, 0xff, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xe0, 0x66, 0x89, 0x45, 0xf0, 0xeb, 0x7, 0x8b, 0x45, 0xf0, 0x66, 0xff, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x3b, 0x45, 0xe8, 0x7d, 0x32, 0x8b, 0x45, 0xe4, 0x66, 0x89, 0x45, 0xf2, 0xeb, 0x7, 0x8b, 0x45, 0xf2, 0x66, 0xff, 0x45, 0xf2, 0xf, 0xbf, 0x45, 0xf2, 0x3b, 0x45, 0xec, 0x7d, 0x17, 0xf, 0xbf, 0x45, 0xf0, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0xf, 0xbf, 0x55, 0xf2, 0x8b, 0, 0x1, 0xd0, 0xc6, 0, 0x1, 0xeb, 0xd9, 0xeb, 0xbe, 0xe9, 0x1a, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xb6, 0x4, 0xfc, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100b598b, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x100b5990, 0x5)   calld(sys_check_available_stack_size, 0xb03bd); /* call 0x10165d52 */
    II(0x100b5995, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100b5996, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100b5997, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b5998, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b5999, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b599a, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b599c, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x100b59a2, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100b59a5, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100b59a8, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100b59ad, 0x5)   calld(0x10076338, -0x3f67a);          /* call 0x10076338 */
    II(0x100b59b2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b59b4, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b59b7, 0x5)   calld(0x100764b8, -0x3f504);          /* call 0x100764b8 */
    II(0x100b59bc, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100b59bf, 0x5)   calld(my_ctor_0x101b4184, -0x3eed4);  /* call 0x10076af0 */
    II(0x100b59c4, 0x2)   jmpd(0x100b59ce, 0x8);                /* jmp 0x100b59ce */
l_0x100b59c6:
    II(0x100b59c6, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b59c9, 0x5)   calld(0x10076bf8, -0x3edd6);          /* call 0x10076bf8 */
l_0x100b59ce:
    II(0x100b59ce, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b59d0, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b59d3, 0x5)   calld(0x1013ad71, 0x85399);           /* call 0x1013ad71 */
    II(0x100b59d8, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b59da, 0x6)   jzd(0x100b5aac, 0xcc);                /* jz dword 0x100b5aac */
    II(0x100b59e0, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b59e3, 0x5)   calld(0x100763a0, -0x3f648);          /* call 0x100763a0 */
    II(0x100b59e8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b59ea, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100b59ed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b59f0, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100b59f3, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b59f6, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100b59f8, 0x6)   jnzd(0x100b5aa7, 0xa9);               /* jnz dword 0x100b5aa7 */
    II(0x100b59fe, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x100b5a01, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b5a04, 0x5)   calld(0x100763a0, -0x3f669);          /* call 0x100763a0 */
    II(0x100b5a09, 0x5)   calld(0x10152532, 0x9cb24);           /* call 0x10152532 */
    II(0x100b5a0e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b5a10, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100b5a13, 0x3)   sub(eax, 0x2);                        /* sub eax, 0x2 */
    II(0x100b5a16, 0x5)   calld(0x10076e7c, -0x3eb9f);          /* call 0x10076e7c */
    II(0x100b5a1b, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100b5a1e, 0x6)   mov(edx, memd_a32(ds, 0x101c8170));   /* mov edx, [0x101c8170] */
    II(0x100b5a24, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100b5a27, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100b5a2a, 0x3)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x100b5a2d, 0x5)   calld(my_min, -0x2c2ae);              /* call 0x10089784 */
    II(0x100b5a32, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100b5a35, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b5a37, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100b5a3a, 0x3)   sub(eax, 0x2);                        /* sub eax, 0x2 */
    II(0x100b5a3d, 0x5)   calld(0x10076e7c, -0x3ebc6);          /* call 0x10076e7c */
    II(0x100b5a42, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100b5a45, 0x6)   mov(edx, memd_a32(ds, 0x101c8172));   /* mov edx, [0x101c8172] */
    II(0x100b5a4b, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100b5a4e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100b5a51, 0x3)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x100b5a54, 0x5)   calld(my_min, -0x2c2d5);              /* call 0x10089784 */
    II(0x100b5a59, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100b5a5c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100b5a5f, 0x4)   mov(memw_a32(ss, ebp - 0x10), ax);    /* mov [ebp-0x10], ax */
    II(0x100b5a63, 0x2)   jmpd(0x100b5a6c, 0x7);                /* jmp 0x100b5a6c */
l_0x100b5a65:
    II(0x100b5a65, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b5a68, 0x4)   inc(memw_a32(ss, ebp - 0x10));        /* inc word [ebp-0x10] */
l_0x100b5a6c:
    II(0x100b5a6c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100b5a70, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x18));   /* cmp eax, [ebp-0x18] */
    II(0x100b5a73, 0x2)   jged(0x100b5aa7, 0x32);               /* jge 0x100b5aa7 */
    II(0x100b5a75, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100b5a78, 0x4)   mov(memw_a32(ss, ebp - 0xe), ax);     /* mov [ebp-0xe], ax */
    II(0x100b5a7c, 0x2)   jmpd(0x100b5a85, 0x7);                /* jmp 0x100b5a85 */
l_0x100b5a7e:
    II(0x100b5a7e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xe));    /* mov eax, [ebp-0xe] */
    II(0x100b5a81, 0x4)   inc(memw_a32(ss, ebp - 0xe));         /* inc word [ebp-0xe] */
l_0x100b5a85:
    II(0x100b5a85, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xe));  /* movsx eax, word [ebp-0xe] */
    II(0x100b5a89, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x14));   /* cmp eax, [ebp-0x14] */
    II(0x100b5a8c, 0x2)   jged(0x100b5aa5, 0x17);               /* jge 0x100b5aa5 */
    II(0x100b5a8e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100b5a92, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100b5a95, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x100b5a98, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xe));  /* movsx edx, word [ebp-0xe] */
    II(0x100b5a9c, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100b5a9e, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100b5aa0, 0x3)   mov(memb_a32(ds, eax), 0x1);          /* mov byte [eax], 0x1 */
    II(0x100b5aa3, 0x2)   jmpd(0x100b5a7e, -0x27);              /* jmp 0x100b5a7e */
l_0x100b5aa5:
    II(0x100b5aa5, 0x2)   jmpd(0x100b5a65, -0x42);              /* jmp 0x100b5a65 */
l_0x100b5aa7:
    II(0x100b5aa7, 0x5)   jmpd(0x100b59c6, -0xe6);              /* jmp 0x100b59c6 */
l_0x100b5aac:
    II(0x100b5aac, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b5aae, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100b5ab1, 0x5)   calld(0x10075f6c, -0x3fb4a);          /* call 0x10075f6c */
    II(0x100b5ab6, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100b5ab8, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100b5ab9, 0x1)   popd(edi);                            /* pop edi */
    II(0x100b5aba, 0x1)   popd(esi);                            /* pop esi */
    II(0x100b5abb, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100b5abc, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100b5abd, 0x1)   retd();                               /* ret */
FUNC_END

