FUNC_BEGIN(0x10090e54, 0xeb501aabfc2ec717, 0x20, ({0x68, 0x4c, 0, 0, 0, 0xe8, 0xf4, 0x4e, 0xd, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x30, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x17, 0xe8, 0xb8, 0x54, 0xfe, 0xff, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x2c, 0x56, 0xfe, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0x62, 0x5d, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xd1, 0x9e, 0xa, 0, 0x84, 0xc0, 0xf, 0x84, 0x11, 0x1, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0xf0, 0x54, 0xfe, 0xff, 0x66, 0x83, 0x78, 0x8, 0x21, 0x74, 0xf, 0x8d, 0x45, 0xec, 0xe8, 0xe1, 0x54, 0xfe, 0xff, 0x66, 0x83, 0x78, 0x8, 0x27, 0x75, 0x5, 0xe9, 0xe9, 0, 0, 0, 0x8d, 0x55, 0xdc, 0x8d, 0x45, 0xec, 0xe8, 0xca, 0x54, 0xfe, 0xff, 0xe8, 0x57, 0x16, 0xc, 0, 0xf, 0xbf, 0x55, 0xe0, 0xf, 0xbf, 0x45, 0xdc, 0xe8, 0x15, 0x2e, 0xfe, 0xff, 0x25, 0xff, 0xff, 0, 0, 0x83, 0xf8, 0x2, 0x75, 0x64, 0xb8, 0x1, 0, 0, 0, 0x50, 0xf, 0xbf, 0x45, 0xe8, 0x50, 0x8b, 0x45, 0xe4, 0x5, 0xa, 0, 0, 0, 0x98, 0x50, 0xf, 0xbf, 0x4d, 0xe0, 0x8b, 0x45, 0xdc, 0x83, 0xe8, 0xa, 0x2b, 0x45, 0xfc, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0xe8, 0x87, 0xfb, 0xff, 0xff, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8b, 0x45, 0xe8, 0x5, 0xa, 0, 0, 0, 0x98, 0x50, 0xf, 0xbf, 0x45, 0xe4, 0x50, 0x8b, 0x45, 0xe0, 0x83, 0xe8, 0xa, 0x2b, 0x45, 0xfc, 0x40, 0xf, 0xbf, 0xc8, 0xf, 0xbf, 0x5d, 0xdc, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0xe8, 0x56, 0xfb, 0xff, 0xff, 0xeb, 0x5e, 0xb8, 0x1, 0, 0, 0, 0x50, 0xf, 0xbf, 0x45, 0xe8, 0x50, 0x8b, 0x45, 0xe4, 0x3, 0x45, 0xf8, 0x98, 0x50, 0xf, 0xbf, 0x4d, 0xe0, 0x8b, 0x45, 0xdc, 0x2b, 0x45, 0xf8, 0x2b, 0x45, 0xfc, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0xe8, 0x25, 0xfb, 0xff, 0xff, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8b, 0x45, 0xe8, 0x3, 0x45, 0xf8, 0x98, 0x50, 0xf, 0xbf, 0x45, 0xe4, 0x50, 0x8b, 0x45, 0xe0, 0x2b, 0x45, 0xf8, 0x2b, 0x45, 0xfc, 0x40, 0xf, 0xbf, 0xc8, 0xf, 0xbf, 0x5d, 0xdc, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0xe8, 0xf6, 0xfa, 0xff, 0xff, 0xe9, 0xd5, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x17, 0xe8, 0x74, 0x53, 0xfe, 0xff, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x6c, 0x54, 0xfe, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0x1e, 0x5c, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x8d, 0x9d, 0xa, 0, 0x84, 0xc0, 0xf, 0x84, 0x7f, 0, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0xac, 0x53, 0xfe, 0xff, 0x66, 0x83, 0x78, 0x8, 0xc, 0x74, 0xf, 0x8d, 0x45, 0xec, 0xe8, 0x9d, 0x53, 0xfe, 0xff, 0x66, 0x83, 0x78, 0x8, 0x27, 0x75, 0x2, 0xeb, 0xf, 0x8d, 0x45, 0xec, 0xe8, 0x8c, 0x53, 0xfe, 0xff, 0x66, 0x83, 0x78, 0x8, 0x21, 0x75, 0x2, 0xeb, 0x49, 0x8d, 0x55, 0xdc, 0x8d, 0x45, 0xec, 0xe8, 0x78, 0x53, 0xfe, 0xff, 0xe8, 0x5, 0x15, 0xc, 0, 0xb8, 0x4, 0, 0, 0, 0x50, 0x8b, 0x45, 0xe8, 0x5, 0x2, 0, 0, 0, 0x98, 0x50, 0x8b, 0x45, 0xe4, 0x5, 0x2, 0, 0, 0, 0x98, 0x50, 0x8b, 0x45, 0xe0, 0x2b, 0x45, 0xfc, 0x48, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xdc, 0x2b, 0x45, 0xfc, 0x48, 0xf, 0xbf, 0xd8, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0xe8, 0x44, 0xfa, 0xff, 0xff, 0xe9, 0x67, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x17, 0xe8, 0xc2, 0x52, 0xfe, 0xff, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xba, 0x53, 0xfe, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0x6c, 0x5b, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xdb, 0x9c, 0xa, 0, 0x84, 0xc0, 0xf, 0x84, 0x9e, 0, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0xfa, 0x52, 0xfe, 0xff, 0x66, 0x83, 0x78, 0x8, 0xc, 0x74, 0xf, 0x8d, 0x45, 0xec, 0xe8, 0xeb, 0x52, 0xfe, 0xff, 0x66, 0x83, 0x78, 0x8, 0x27, 0x75, 0x2, 0xeb, 0xf, 0x8d, 0x45, 0xec, 0xe8, 0xda, 0x52, 0xfe, 0xff, 0x66, 0x83, 0x78, 0x8, 0x21, 0x75, 0x2, 0xeb, 0x68, 0x8d, 0x55, 0xdc, 0x8d, 0x45, 0xec, 0xe8, 0xc6, 0x52, 0xfe, 0xff, 0xe8, 0x53, 0x14, 0xc, 0, 0x31, 0xc0, 0x50, 0xf, 0xbf, 0x45, 0xe8, 0x50, 0x8b, 0x45, 0xe4, 0x40, 0x98, 0x50, 0x8b, 0x45, 0xe0, 0x2b, 0x45, 0xfc, 0x40, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xdc, 0x2b, 0x45, 0xfc, 0xf, 0xbf, 0xd8, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0xe8, 0x9f, 0xf9, 0xff, 0xff, 0x31, 0xc0, 0x50, 0x8b, 0x45, 0xe8, 0x40, 0x98, 0x50, 0xf, 0xbf, 0x45, 0xe4, 0x50, 0x8b, 0x45, 0xe0, 0x2b, 0x45, 0xfc, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xdc, 0x2b, 0x45, 0xfc, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0xe8, 0x73, 0xf9, 0xff, 0xff, 0xe9, 0x48, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x21, 0xe8, 0x81, 0xb5, 0, 0, 0x8d, 0x5d, 0xd8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x89, 0xb4, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xd8, 0xe8, 0x9b, 0x5a, 0xfe, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0xa, 0x9c, 0xa, 0, 0x84, 0xc0, 0xf, 0x84, 0xbc, 0, 0, 0, 0x8d, 0x45, 0xd8, 0xe8, 0x81, 0xb3, 0, 0, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xd4, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xd4, 0xff, 0x52, 0x70, 0x84, 0xc0, 0x74, 0x13, 0x8d, 0x45, 0xd8, 0xe8, 0x66, 0xb3, 0, 0, 0xe8, 0x2d, 0xb3, 0, 0, 0x66, 0x3d, 0x21, 0, 0x75, 0x2, 0xeb, 0x13, 0x8d, 0x45, 0xd8, 0xe8, 0x51, 0xb3, 0, 0, 0xe8, 0x18, 0xb3, 0, 0, 0x66, 0x3d, 0x27, 0, 0x75, 0x2, 0xeb, 0x72, 0x8d, 0x45, 0xd8, 0xe8, 0x3c, 0xb3, 0, 0, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xd0, 0x8b, 0x58, 0x2, 0x8d, 0x55, 0xdc, 0x8b, 0x45, 0xd0, 0xff, 0x53, 0x1c, 0x31, 0xc0, 0x50, 0xf, 0xbf, 0x45, 0xe8, 0x50, 0x8b, 0x45, 0xe4, 0x40, 0x98, 0x50, 0x8b, 0x45, 0xe0, 0x2b, 0x45, 0xfc, 0x40, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xdc, 0x2b, 0x45, 0xfc, 0xf, 0xbf, 0xd8, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0xe8, 0xb0, 0xf8, 0xff, 0xff, 0x31, 0xc0, 0x50, 0x8b, 0x45, 0xe8, 0x40, 0x98, 0x50, 0xf, 0xbf, 0x45, 0xe4, 0x50, 0x8b, 0x45, 0xe0, 0x2b, 0x45, 0xfc, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xdc, 0x2b, 0x45, 0xfc, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xf0, 0xe8, 0x84, 0xf8, 0xff, 0xff, 0xe9, 0x2a, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x37, 0xa8, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x2d, 0x4d, 0xfe, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x10090e54, 0x5)   pushd(0x4c);                          /* push dword 0x4c */
    II(0x10090e59, 0x5)   calld(sys_check_available_stack_size, 0xd4ef4); /* call 0x10165d52 */
    II(0x10090e5e, 0x1)   pushd(esi);                           /* push esi */
    II(0x10090e5f, 0x1)   pushd(edi);                           /* push edi */
    II(0x10090e60, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10090e61, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10090e63, 0x6)   sub(esp, 0x30);                       /* sub esp, 0x30 */
    II(0x10090e69, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10090e6c, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10090e6f, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x10090e72, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
//    II(0x10090e75, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10090e78, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x10090e7b, 0x5)   calld(0x10076338, -0x1ab48);          /* call 0x10076338 */
    II(0x10090e80, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x10090e83, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10090e85, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10090e87, 0x5)   calld(0x100764b8, -0x1a9d4);          /* call 0x100764b8 */
    II(0x10090e8c, 0x2)   jmpd(0x10090e96, 0x8);                /* jmp 0x10090e96 */
l_0x10090e8e:
    II(0x10090e8e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10090e91, 0x5)   calld(0x10076bf8, -0x1a29e);          /* call 0x10076bf8 */
l_0x10090e96:
    II(0x10090e96, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10090e98, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10090e9b, 0x5)   calld(0x1013ad71, 0xa9ed1);           /* call 0x1013ad71 */
    II(0x10090ea0, 0x2)   test(al, al);                         /* test al, al */
    II(0x10090ea2, 0x6)   jzd(0x10090fb9, 0x111);               /* jz dword 0x10090fb9 */
    II(0x10090ea8, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10090eab, 0x5)   calld(0x100763a0, -0x1ab10);          /* call 0x100763a0 */
    II(0x10090eb0, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x21);   /* cmp word [eax+0x8], 0x21 */
    II(0x10090eb5, 0x2)   jzd(0x10090ec6, 0xf);                 /* jz 0x10090ec6 */
    II(0x10090eb7, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10090eba, 0x5)   calld(0x100763a0, -0x1ab1f);          /* call 0x100763a0 */
    II(0x10090ebf, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x27);   /* cmp word [eax+0x8], 0x27 */
    II(0x10090ec4, 0x2)   jnzd(0x10090ecb, 0x5);                /* jnz 0x10090ecb */
l_0x10090ec6:
    II(0x10090ec6, 0x5)   jmpd(0x10090fb4, 0xe9);               /* jmp 0x10090fb4 */
l_0x10090ecb:
    II(0x10090ecb, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x10090ece, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10090ed1, 0x5)   calld(0x100763a0, -0x1ab36);          /* call 0x100763a0 */
    II(0x10090ed6, 0x5)   calld(0x10152532, 0xc1657);           /* call 0x10152532 */
    II(0x10090edb, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x10090edf, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x10090ee3, 0x5)   calld(0x10073cfd, -0x1d1eb);          /* call 0x10073cfd */
    II(0x10090ee8, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x10090eed, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x10090ef0, 0x2)   jnzd(0x10090f56, 0x64);               /* jnz 0x10090f56 */
    II(0x10090ef2, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10090ef7, 0x1)   pushd(eax);                           /* push eax */
    II(0x10090ef8, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x10090efc, 0x1)   pushd(eax);                           /* push eax */
    II(0x10090efd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10090f00, 0x5)   add(eax, 0xa);                        /* add eax, 0xa */
    II(0x10090f05, 0x1)   cwde();                               /* cwde */
    II(0x10090f06, 0x1)   pushd(eax);                           /* push eax */
    II(0x10090f07, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x20)); /* movsx ecx, word [ebp-0x20] */
    II(0x10090f0b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10090f0e, 0x3)   sub(eax, 0xa);                        /* sub eax, 0xa */
    II(0x10090f11, 0x3)   sub(eax, memd_a32(ss, ebp - 0x4));    /* sub eax, [ebp-0x4] */
    II(0x10090f14, 0x1)   inc(eax);                             /* inc eax */
    II(0x10090f15, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10090f18, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10090f1b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10090f1e, 0x5)   calld(0x10090aaa, -0x479);            /* call 0x10090aaa */
    II(0x10090f23, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10090f28, 0x1)   pushd(eax);                           /* push eax */
    II(0x10090f29, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10090f2c, 0x5)   add(eax, 0xa);                        /* add eax, 0xa */
    II(0x10090f31, 0x1)   cwde();                               /* cwde */
    II(0x10090f32, 0x1)   pushd(eax);                           /* push eax */
    II(0x10090f33, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10090f37, 0x1)   pushd(eax);                           /* push eax */
    II(0x10090f38, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10090f3b, 0x3)   sub(eax, 0xa);                        /* sub eax, 0xa */
    II(0x10090f3e, 0x3)   sub(eax, memd_a32(ss, ebp - 0x4));    /* sub eax, [ebp-0x4] */
    II(0x10090f41, 0x1)   inc(eax);                             /* inc eax */
    II(0x10090f42, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x10090f45, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x24)); /* movsx ebx, word [ebp-0x24] */
    II(0x10090f49, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10090f4c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10090f4f, 0x5)   calld(0x10090aaa, -0x4aa);            /* call 0x10090aaa */
    II(0x10090f54, 0x2)   jmpd(0x10090fb4, 0x5e);               /* jmp 0x10090fb4 */
l_0x10090f56:
    II(0x10090f56, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10090f5b, 0x1)   pushd(eax);                           /* push eax */
    II(0x10090f5c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x10090f60, 0x1)   pushd(eax);                           /* push eax */
    II(0x10090f61, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10090f64, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10090f67, 0x1)   cwde();                               /* cwde */
    II(0x10090f68, 0x1)   pushd(eax);                           /* push eax */
    II(0x10090f69, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x20)); /* movsx ecx, word [ebp-0x20] */
    II(0x10090f6d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10090f70, 0x3)   sub(eax, memd_a32(ss, ebp - 0x8));    /* sub eax, [ebp-0x8] */
    II(0x10090f73, 0x3)   sub(eax, memd_a32(ss, ebp - 0x4));    /* sub eax, [ebp-0x4] */
    II(0x10090f76, 0x1)   inc(eax);                             /* inc eax */
    II(0x10090f77, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10090f7a, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10090f7d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10090f80, 0x5)   calld(0x10090aaa, -0x4db);            /* call 0x10090aaa */
    II(0x10090f85, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10090f8a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10090f8b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10090f8e, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10090f91, 0x1)   cwde();                               /* cwde */
    II(0x10090f92, 0x1)   pushd(eax);                           /* push eax */
    II(0x10090f93, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10090f97, 0x1)   pushd(eax);                           /* push eax */
    II(0x10090f98, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10090f9b, 0x3)   sub(eax, memd_a32(ss, ebp - 0x8));    /* sub eax, [ebp-0x8] */
    II(0x10090f9e, 0x3)   sub(eax, memd_a32(ss, ebp - 0x4));    /* sub eax, [ebp-0x4] */
    II(0x10090fa1, 0x1)   inc(eax);                             /* inc eax */
    II(0x10090fa2, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x10090fa5, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x24)); /* movsx ebx, word [ebp-0x24] */
    II(0x10090fa9, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10090fac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10090faf, 0x5)   calld(0x10090aaa, -0x50a);            /* call 0x10090aaa */
l_0x10090fb4:
    II(0x10090fb4, 0x5)   jmpd(0x10090e8e, -0x12b);             /* jmp 0x10090e8e */
l_0x10090fb9:
    II(0x10090fb9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10090fbc, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x10090fbf, 0x5)   calld(0x10076338, -0x1ac8c);          /* call 0x10076338 */
    II(0x10090fc4, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x10090fc7, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10090fc9, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10090fcb, 0x5)   calld(0x1007643c, -0x1ab94);          /* call 0x1007643c */
    II(0x10090fd0, 0x2)   jmpd(0x10090fda, 0x8);                /* jmp 0x10090fda */
l_0x10090fd2:
    II(0x10090fd2, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10090fd5, 0x5)   calld(0x10076bf8, -0x1a3e2);          /* call 0x10076bf8 */
l_0x10090fda:
    II(0x10090fda, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10090fdc, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10090fdf, 0x5)   calld(0x1013ad71, 0xa9d8d);           /* call 0x1013ad71 */
    II(0x10090fe4, 0x2)   test(al, al);                         /* test al, al */
    II(0x10090fe6, 0x6)   jzd(0x1009106b, 0x7f);                /* jz dword 0x1009106b */
    II(0x10090fec, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10090fef, 0x5)   calld(0x100763a0, -0x1ac54);          /* call 0x100763a0 */
    II(0x10090ff4, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0xc);    /* cmp word [eax+0x8], 0xc */
    II(0x10090ff9, 0x2)   jzd(0x1009100a, 0xf);                 /* jz 0x1009100a */
    II(0x10090ffb, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10090ffe, 0x5)   calld(0x100763a0, -0x1ac63);          /* call 0x100763a0 */
    II(0x10091003, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x27);   /* cmp word [eax+0x8], 0x27 */
    II(0x10091008, 0x2)   jnzd(0x1009100c, 0x2);                /* jnz 0x1009100c */
l_0x1009100a:
    II(0x1009100a, 0x2)   jmpd(0x1009101b, 0xf);                /* jmp 0x1009101b */
l_0x1009100c:
    II(0x1009100c, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1009100f, 0x5)   calld(0x100763a0, -0x1ac74);          /* call 0x100763a0 */
    II(0x10091014, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x21);   /* cmp word [eax+0x8], 0x21 */
    II(0x10091019, 0x2)   jnzd(0x1009101d, 0x2);                /* jnz 0x1009101d */
l_0x1009101b:
    II(0x1009101b, 0x2)   jmpd(0x10091066, 0x49);               /* jmp 0x10091066 */
l_0x1009101d:
    II(0x1009101d, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x10091020, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10091023, 0x5)   calld(0x100763a0, -0x1ac88);          /* call 0x100763a0 */
    II(0x10091028, 0x5)   calld(0x10152532, 0xc1505);           /* call 0x10152532 */
    II(0x1009102d, 0x5)   mov(eax, 0x4);                        /* mov eax, 0x4 */
    II(0x10091032, 0x1)   pushd(eax);                           /* push eax */
    II(0x10091033, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10091036, 0x5)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x1009103b, 0x1)   cwde();                               /* cwde */
    II(0x1009103c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1009103d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10091040, 0x5)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x10091045, 0x1)   cwde();                               /* cwde */
    II(0x10091046, 0x1)   pushd(eax);                           /* push eax */
    II(0x10091047, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1009104a, 0x3)   sub(eax, memd_a32(ss, ebp - 0x4));    /* sub eax, [ebp-0x4] */
    II(0x1009104d, 0x1)   dec(eax);                             /* dec eax */
    II(0x1009104e, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x10091051, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10091054, 0x3)   sub(eax, memd_a32(ss, ebp - 0x4));    /* sub eax, [ebp-0x4] */
    II(0x10091057, 0x1)   dec(eax);                             /* dec eax */
    II(0x10091058, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1009105b, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1009105e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10091061, 0x5)   calld(0x10090aaa, -0x5bc);            /* call 0x10090aaa */
l_0x10091066:
    II(0x10091066, 0x5)   jmpd(0x10090fd2, -0x99);              /* jmp 0x10090fd2 */
l_0x1009106b:
    II(0x1009106b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1009106e, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x10091071, 0x5)   calld(0x10076338, -0x1ad3e);          /* call 0x10076338 */
    II(0x10091076, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x10091079, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009107b, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1009107d, 0x5)   calld(0x1007643c, -0x1ac46);          /* call 0x1007643c */
    II(0x10091082, 0x2)   jmpd(0x1009108c, 0x8);                /* jmp 0x1009108c */
l_0x10091084:
    II(0x10091084, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10091087, 0x5)   calld(0x10076bf8, -0x1a494);          /* call 0x10076bf8 */
l_0x1009108c:
    II(0x1009108c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009108e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10091091, 0x5)   calld(0x1013ad71, 0xa9cdb);           /* call 0x1013ad71 */
    II(0x10091096, 0x2)   test(al, al);                         /* test al, al */
    II(0x10091098, 0x6)   jzd(0x1009113c, 0x9e);                /* jz dword 0x1009113c */
    II(0x1009109e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100910a1, 0x5)   calld(0x100763a0, -0x1ad06);          /* call 0x100763a0 */
    II(0x100910a6, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0xc);    /* cmp word [eax+0x8], 0xc */
    II(0x100910ab, 0x2)   jzd(0x100910bc, 0xf);                 /* jz 0x100910bc */
    II(0x100910ad, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100910b0, 0x5)   calld(0x100763a0, -0x1ad15);          /* call 0x100763a0 */
    II(0x100910b5, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x27);   /* cmp word [eax+0x8], 0x27 */
    II(0x100910ba, 0x2)   jnzd(0x100910be, 0x2);                /* jnz 0x100910be */
l_0x100910bc:
    II(0x100910bc, 0x2)   jmpd(0x100910cd, 0xf);                /* jmp 0x100910cd */
l_0x100910be:
    II(0x100910be, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100910c1, 0x5)   calld(0x100763a0, -0x1ad26);          /* call 0x100763a0 */
    II(0x100910c6, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x21);   /* cmp word [eax+0x8], 0x21 */
    II(0x100910cb, 0x2)   jnzd(0x100910cf, 0x2);                /* jnz 0x100910cf */
l_0x100910cd:
    II(0x100910cd, 0x2)   jmpd(0x10091137, 0x68);               /* jmp 0x10091137 */
l_0x100910cf:
    II(0x100910cf, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x100910d2, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100910d5, 0x5)   calld(0x100763a0, -0x1ad3a);          /* call 0x100763a0 */
    II(0x100910da, 0x5)   calld(0x10152532, 0xc1453);           /* call 0x10152532 */
    II(0x100910df, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100910e1, 0x1)   pushd(eax);                           /* push eax */
    II(0x100910e2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100910e6, 0x1)   pushd(eax);                           /* push eax */
    II(0x100910e7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100910ea, 0x1)   inc(eax);                             /* inc eax */
    II(0x100910eb, 0x1)   cwde();                               /* cwde */
    II(0x100910ec, 0x1)   pushd(eax);                           /* push eax */
    II(0x100910ed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100910f0, 0x3)   sub(eax, memd_a32(ss, ebp - 0x4));    /* sub eax, [ebp-0x4] */
    II(0x100910f3, 0x1)   inc(eax);                             /* inc eax */
    II(0x100910f4, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100910f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100910fa, 0x3)   sub(eax, memd_a32(ss, ebp - 0x4));    /* sub eax, [ebp-0x4] */
    II(0x100910fd, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10091100, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10091103, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10091106, 0x5)   calld(0x10090aaa, -0x661);            /* call 0x10090aaa */
    II(0x1009110b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1009110d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1009110e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10091111, 0x1)   inc(eax);                             /* inc eax */
    II(0x10091112, 0x1)   cwde();                               /* cwde */
    II(0x10091113, 0x1)   pushd(eax);                           /* push eax */
    II(0x10091114, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10091118, 0x1)   pushd(eax);                           /* push eax */
    II(0x10091119, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1009111c, 0x3)   sub(eax, memd_a32(ss, ebp - 0x4));    /* sub eax, [ebp-0x4] */
    II(0x1009111f, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x10091122, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10091125, 0x3)   sub(eax, memd_a32(ss, ebp - 0x4));    /* sub eax, [ebp-0x4] */
    II(0x10091128, 0x1)   inc(eax);                             /* inc eax */
    II(0x10091129, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1009112c, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1009112f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10091132, 0x5)   calld(0x10090aaa, -0x68d);            /* call 0x10090aaa */
l_0x10091137:
    II(0x10091137, 0x5)   jmpd(0x10091084, -0xb8);              /* jmp 0x10091084 */
l_0x1009113c:
    II(0x1009113c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1009113f, 0x3)   add(eax, 0x21);                       /* add eax, 0x21 */
    II(0x10091142, 0x5)   calld(0x1009c6c8, 0xb581);            /* call 0x1009c6c8 */
    II(0x10091147, 0x3)   lea(ebx, ebp - 0x28);                 /* lea ebx, [ebp-0x28] */
    II(0x1009114a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1009114c, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1009114e, 0x5)   calld(0x1009c5dc, 0xb489);            /* call 0x1009c5dc */
    II(0x10091153, 0x2)   jmpd(0x1009115d, 0x8);                /* jmp 0x1009115d */
l_0x10091155:
    II(0x10091155, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10091158, 0x5)   calld(0x10076bf8, -0x1a565);          /* call 0x10076bf8 */
l_0x1009115d:
    II(0x1009115d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009115f, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10091162, 0x5)   calld(0x1013ad71, 0xa9c0a);           /* call 0x1013ad71 */
    II(0x10091167, 0x2)   test(al, al);                         /* test al, al */
    II(0x10091169, 0x6)   jzd(0x1009122b, 0xbc);                /* jz dword 0x1009122b */
    II(0x1009116f, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10091172, 0x5)   calld(0x1009c4f8, 0xb381);            /* call 0x1009c4f8 */
    II(0x10091177, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
//    II(0x1009117a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1009117d, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x10091180, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x10091183, 0x3)   calld_abs(memd_a32(ds, edx + 0x70));  /* call dword near [edx+0x70] */
    II(0x10091186, 0x2)   test(al, al);                         /* test al, al */
    II(0x10091188, 0x2)   jzd(0x1009119d, 0x13);                /* jz 0x1009119d */
    II(0x1009118a, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1009118d, 0x5)   calld(0x1009c4f8, 0xb366);            /* call 0x1009c4f8 */
    II(0x10091192, 0x5)   calld(0x1009c4c4, 0xb32d);            /* call 0x1009c4c4 */
    II(0x10091197, 0x4)   cmp(ax, 0x21);                        /* cmp ax, 0x21 */
    II(0x1009119b, 0x2)   jnzd(0x1009119f, 0x2);                /* jnz 0x1009119f */
l_0x1009119d:
    II(0x1009119d, 0x2)   jmpd(0x100911b2, 0x13);               /* jmp 0x100911b2 */
l_0x1009119f:
    II(0x1009119f, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100911a2, 0x5)   calld(0x1009c4f8, 0xb351);            /* call 0x1009c4f8 */
    II(0x100911a7, 0x5)   calld(0x1009c4c4, 0xb318);            /* call 0x1009c4c4 */
    II(0x100911ac, 0x4)   cmp(ax, 0x27);                        /* cmp ax, 0x27 */
    II(0x100911b0, 0x2)   jnzd(0x100911b4, 0x2);                /* jnz 0x100911b4 */
l_0x100911b2:
    II(0x100911b2, 0x2)   jmpd(0x10091226, 0x72);               /* jmp 0x10091226 */
l_0x100911b4:
    II(0x100911b4, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100911b7, 0x5)   calld(0x1009c4f8, 0xb33c);            /* call 0x1009c4f8 */
    II(0x100911bc, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
//    II(0x100911bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100911c2, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x100911c5, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x100911c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100911cb, 0x3)   calld_abs(memd_a32(ds, ebx + 0x1c));  /* call dword near [ebx+0x1c] */
    II(0x100911ce, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100911d0, 0x1)   pushd(eax);                           /* push eax */
    II(0x100911d1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100911d5, 0x1)   pushd(eax);                           /* push eax */
    II(0x100911d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100911d9, 0x1)   inc(eax);                             /* inc eax */
    II(0x100911da, 0x1)   cwde();                               /* cwde */
    II(0x100911db, 0x1)   pushd(eax);                           /* push eax */
    II(0x100911dc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100911df, 0x3)   sub(eax, memd_a32(ss, ebp - 0x4));    /* sub eax, [ebp-0x4] */
    II(0x100911e2, 0x1)   inc(eax);                             /* inc eax */
    II(0x100911e3, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100911e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100911e9, 0x3)   sub(eax, memd_a32(ss, ebp - 0x4));    /* sub eax, [ebp-0x4] */
    II(0x100911ec, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x100911ef, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100911f2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100911f5, 0x5)   calld(0x10090aaa, -0x750);            /* call 0x10090aaa */
    II(0x100911fa, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100911fc, 0x1)   pushd(eax);                           /* push eax */
    II(0x100911fd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10091200, 0x1)   inc(eax);                             /* inc eax */
    II(0x10091201, 0x1)   cwde();                               /* cwde */
    II(0x10091202, 0x1)   pushd(eax);                           /* push eax */
    II(0x10091203, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10091207, 0x1)   pushd(eax);                           /* push eax */
    II(0x10091208, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1009120b, 0x3)   sub(eax, memd_a32(ss, ebp - 0x4));    /* sub eax, [ebp-0x4] */
    II(0x1009120e, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x10091211, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x10091214, 0x3)   sub(eax, memd_a32(ss, ebp - 0x4));    /* sub eax, [ebp-0x4] */
    II(0x10091217, 0x1)   inc(eax);                             /* inc eax */
    II(0x10091218, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1009121b, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1009121e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10091221, 0x5)   calld(0x10090aaa, -0x77c);            /* call 0x10090aaa */
l_0x10091226:
    II(0x10091226, 0x5)   jmpd(0x10091155, -0xd6);              /* jmp 0x10091155 */
l_0x1009122b:
    II(0x1009122b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1009122d, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10091230, 0x5)   calld(0x1009ba6c, 0xa837);            /* call 0x1009ba6c */
    II(0x10091235, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10091237, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1009123a, 0x5)   calld(0x10075f6c, -0x1b2d3);          /* call 0x10075f6c */
    II(0x1009123f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10091241, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10091242, 0x1)   popd(edi);                            /* pop edi */
    II(0x10091243, 0x1)   popd(esi);                            /* pop esi */
    II(0x10091244, 0x1)   retd();                               /* ret */
FUNC_END

