FUNC_BEGIN(0x10096cab, 0x9b8c2a7fa7b01211, 0x20, ({0x68, 0x60, 0, 0, 0, 0xe8, 0x9d, 0xf0, 0xc, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x44, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x8b, 0x45, 0xf4, 0x83, 0xc0, 0x21, 0xe8, 0xf3, 0x59, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xd8, 0xe8, 0xfd, 0x58, 0, 0, 0x31, 0xc0, 0x50, 0x31, 0xc9, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0x58, 0x44, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xd8, 0xe8, 0xfe, 0xfe, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x6d, 0x40, 0xa, 0, 0x84, 0xc0, 0x74, 0x4a, 0x8d, 0x45, 0xd8, 0xe8, 0xe8, 0x57, 0, 0, 0xe8, 0xaf, 0x57, 0, 0, 0x89, 0x45, 0xc4, 0x8d, 0x45, 0xd8, 0xe8, 0xd8, 0x57, 0, 0, 0x89, 0x45, 0xc0, 0x8b, 0x45, 0xc0, 0x8b, 0x58, 0x2, 0x8d, 0x55, 0xc8, 0x8b, 0x45, 0xc0, 0xff, 0x53, 0x1c, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xc8, 0xe8, 0x91, 0x15, 0x7, 0, 0x84, 0xc0, 0x74, 0xf, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x21, 0x4d, 0, 0, 0xe9, 0xab, 0, 0, 0, 0xeb, 0xa0, 0xb8, 0x35, 0, 0, 0, 0xe8, 0xa4, 0xf0, 0xc, 0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x83, 0x7d, 0xec, 0, 0x74, 0x40, 0x8b, 0x45, 0xf4, 0x50, 0x8b, 0x55, 0xf8, 0x8d, 0x45, 0xe0, 0xe8, 0xea, 0xf0, 0xfd, 0xff, 0x50, 0xb9, 0x27, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xe8, 0xff, 0x52, 0x14, 0xf, 0xbf, 0xd8, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0xe8, 0xf9, 0x5b, 0xff, 0xff, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xbc, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xbc, 0x8b, 0x55, 0xbc, 0x8d, 0x45, 0xdc, 0xe8, 0x24, 0x5a, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0x78, 0x59, 0, 0, 0x8b, 0x5d, 0xf4, 0x83, 0xc3, 0x21, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xc5, 0x58, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0x61, 0x59, 0, 0, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x69, 0xdf, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xfb, 0x4b, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x71, 0x4c, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x10096cab, 0x5)   pushd(0x60);                          /* push dword 0x60 */
    II(0x10096cb0, 0x5)   calld(sys_check_available_stack_size, 0xcf09d); /* call 0x10165d52 */
    II(0x10096cb5, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10096cb6, 0x1)   pushd(esi);                           /* push esi */
    II(0x10096cb7, 0x1)   pushd(edi);                           /* push edi */
    II(0x10096cb8, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10096cb9, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10096cbb, 0x6)   sub(esp, 0x44);                       /* sub esp, 0x44 */
    II(0x10096cc1, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10096cc4, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x10096cc7, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
//    II(0x10096cca, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10096ccd, 0x3)   add(eax, 0x21);                       /* add eax, 0x21 */
    II(0x10096cd0, 0x5)   calld(0x1009c6c8, 0x59f3);            /* call 0x1009c6c8 */
    II(0x10096cd5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10096cd7, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10096cda, 0x5)   calld(0x1009c5dc, 0x58fd);            /* call 0x1009c5dc */
    II(0x10096cdf, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10096ce1, 0x1)   pushd(eax);                           /* push eax */
    II(0x10096ce2, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10096ce4, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10096ce6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10096ce8, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10096ceb, 0x5)   calld(0x1008b148, -0xbba8);           /* call 0x1008b148 */
    II(0x10096cf0, 0x2)   jmpd(0x10096cfa, 0x8);                /* jmp 0x10096cfa */
l_0x10096cf2:
    II(0x10096cf2, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10096cf5, 0x5)   calld(0x10076bf8, -0x20102);          /* call 0x10076bf8 */
l_0x10096cfa:
    II(0x10096cfa, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10096cfc, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10096cff, 0x5)   calld(0x1013ad71, 0xa406d);           /* call 0x1013ad71 */
    II(0x10096d04, 0x2)   test(al, al);                         /* test al, al */
    II(0x10096d06, 0x2)   jzd(0x10096d52, 0x4a);                /* jz 0x10096d52 */
    II(0x10096d08, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10096d0b, 0x5)   calld(0x1009c4f8, 0x57e8);            /* call 0x1009c4f8 */
    II(0x10096d10, 0x5)   calld(0x1009c4c4, 0x57af);            /* call 0x1009c4c4 */
    II(0x10096d15, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x10096d18, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10096d1b, 0x5)   calld(0x1009c4f8, 0x57d8);            /* call 0x1009c4f8 */
    II(0x10096d20, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
//    II(0x10096d23, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x10096d26, 0x3)   mov(ebx, memd_a32(ds, eax + 0x2));    /* mov ebx, [eax+0x2] */
    II(0x10096d29, 0x3)   lea(edx, ebp - 0x38);                 /* lea edx, [ebp-0x38] */
    II(0x10096d2c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x10096d2f, 0x3)   calld_abs(memd_a32(ds, ebx + 0x1c));  /* call dword near [ebx+0x1c] */
    II(0x10096d32, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10096d35, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10096d38, 0x5)   calld(0x101082ce, 0x71591);           /* call 0x101082ce */
    II(0x10096d3d, 0x2)   test(al, al);                         /* test al, al */
    II(0x10096d3f, 0x2)   jzd(0x10096d50, 0xf);                 /* jz 0x10096d50 */
    II(0x10096d41, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10096d43, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10096d46, 0x5)   calld(0x1009ba6c, 0x4d21);            /* call 0x1009ba6c */
    II(0x10096d4b, 0x5)   jmpd(0x10096dfb, 0xab);               /* jmp 0x10096dfb */
l_0x10096d50:
    II(0x10096d50, 0x2)   jmpd(0x10096cf2, -0x60);              /* jmp 0x10096cf2 */
l_0x10096d52:
    II(0x10096d52, 0x5)   mov(eax, 0x35);                       /* mov eax, 0x35 */
    II(0x10096d57, 0x5)   calld(sys_new, 0xcf0a4);              /* call 0x10165e00 */
    II(0x10096d5c, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x10096d5f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10096d62, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10096d65, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0);     /* cmp dword [ebp-0x14], 0x0 */
    II(0x10096d69, 0x2)   jzd(0x10096dab, 0x40);                /* jz 0x10096dab */
    II(0x10096d6b, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10096d6e, 0x1)   pushd(eax);                           /* push eax */
    II(0x10096d6f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10096d72, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x10096d75, 0x5)   calld(0x10075e64, -0x20f16);          /* call 0x10075e64 */
    II(0x10096d7a, 0x1)   pushd(eax);                           /* push eax */
    II(0x10096d7b, 0x5)   mov(ecx, 0x27);                       /* mov ecx, 0x27 */
    II(0x10096d80, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10096d83, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x10096d86, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10096d89, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x10096d8c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10096d8f, 0x3)   calld_abs(memd_a32(ds, edx + 0x14));  /* call dword near [edx+0x14] */
    II(0x10096d92, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x10096d95, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10096d98, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10096d9b, 0x5)   calld(0x1008c999, -0xa407);           /* call 0x1008c999 */
    II(0x10096da0, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x10096da3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10096da6, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x10096da9, 0x2)   jmpd(0x10096db1, 0x6);                /* jmp 0x10096db1 */
l_0x10096dab:
    II(0x10096dab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10096dae, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
l_0x10096db1:
    II(0x10096db1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x44));   /* mov edx, [ebp-0x44] */
    II(0x10096db4, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10096db7, 0x5)   calld(0x1009c7e0, 0x5a24);            /* call 0x1009c7e0 */
    II(0x10096dbc, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10096dbf, 0x5)   calld(0x1009c73c, 0x5978);            /* call 0x1009c73c */
    II(0x10096dc4, 0x3)   mov(ebx, memd_a32(ss, ebp - 0xc));    /* mov ebx, [ebp-0xc] */
    II(0x10096dc7, 0x3)   add(ebx, 0x21);                       /* add ebx, 0x21 */
    II(0x10096dca, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10096dcc, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10096dce, 0x5)   calld(0x1009c698, 0x58c5);            /* call 0x1009c698 */
    II(0x10096dd3, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10096dd6, 0x5)   calld(0x1009c73c, 0x5961);            /* call 0x1009c73c */
    II(0x10096ddb, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10096ddd, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x10096de2, 0x5)   calld(0x100a4d50, 0xdf69);            /* call 0x100a4d50 */
    II(0x10096de7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10096de9, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x10096dec, 0x5)   calld(0x1009b9ec, 0x4bfb);            /* call 0x1009b9ec */
    II(0x10096df1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10096df3, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x10096df6, 0x5)   calld(0x1009ba6c, 0x4c71);            /* call 0x1009ba6c */
l_0x10096dfb:
    II(0x10096dfb, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10096dfd, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10096dfe, 0x1)   popd(edi);                            /* pop edi */
    II(0x10096dff, 0x1)   popd(esi);                            /* pop esi */
    II(0x10096e00, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10096e01, 0x1)   retd();                               /* ret */
FUNC_END

