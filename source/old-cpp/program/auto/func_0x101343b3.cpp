FUNC_BEGIN(0x101343b3, 0xf5106d31c733c13d, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x95, 0x19, 0x3, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xfc, 0xf, 0xbf, 0x45, 0xfc, 0x83, 0xf8, 0xff, 0x75, 0x9, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x74, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xd0, 0x7, 0xa1, 0xec, 0x70, 0x1c, 0x10, 0x1, 0xd0, 0x66, 0x8b, 0, 0x89, 0x45, 0xf4, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0xff, 0x75, 0x9, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x4e, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x7, 0x8b, 0x15, 0xec, 0x70, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0x40, 0x6, 0x88, 0x45, 0xf8, 0x31, 0xdb, 0xf, 0xbf, 0x45, 0xf4, 0xc1, 0xe0, 0x4, 0x89, 0xc2, 0xa1, 0xf0, 0x70, 0x1c, 0x10, 0x1, 0xd0, 0x8b, 0x50, 0x8, 0x31, 0xc0, 0x8a, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x8b, 0x80, 0xd0, 0x70, 0x1c, 0x10, 0xe8, 0x12, 0xb0, 0xfb, 0xff, 0x31, 0xc0, 0x8a, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x8b, 0x80, 0xd0, 0x70, 0x1c, 0x10, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x101343b3, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x101343b8, 0x5)   calld(sys_check_available_stack_size, 0x31995); /* call 0x10165d52 */
    II(0x101343bd, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101343be, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101343bf, 0x1)   pushd(edx);                           /* push edx */
    II(0x101343c0, 0x1)   pushd(esi);                           /* push esi */
    II(0x101343c1, 0x1)   pushd(edi);                           /* push edi */
    II(0x101343c2, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101343c3, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101343c5, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x101343cb, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x101343ce, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x101343d2, 0x3)   cmp(eax, -0x1 /* 0xff */);            /* cmp eax, 0xff */
    II(0x101343d5, 0x2)   jnzd(0x101343e0, 0x9);                /* jnz 0x101343e0 */
    II(0x101343d7, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x101343de, 0x2)   jmpd(0x10134454, 0x74);               /* jmp 0x10134454 */
l_0x101343e0:
    II(0x101343e0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x101343e4, 0x3)   imul(edx, eax, 0x7);                  /* imul edx, eax, 0x7 */
    II(0x101343e7, 0x5)   mov(eax, memd_a32(ds, ptr_arr_meta_by_id)); /* mov eax, [0x101c70ec] */
    II(0x101343ec, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x101343ee, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x101343f1, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x101343f4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x101343f8, 0x3)   cmp(eax, -0x1 /* 0xff */);            /* cmp eax, 0xff */
    II(0x101343fb, 0x2)   jnzd(0x10134406, 0x9);                /* jnz 0x10134406 */
    II(0x101343fd, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x10134404, 0x2)   jmpd(0x10134454, 0x4e);               /* jmp 0x10134454 */
l_0x10134406:
    II(0x10134406, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1013440a, 0x3)   imul(eax, eax, 0x7);                  /* imul eax, eax, 0x7 */
    II(0x1013440d, 0x6)   mov(edx, memd_a32(ds, ptr_arr_meta_by_id)); /* mov edx, [0x101c70ec] */
    II(0x10134413, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10134415, 0x3)   mov(al, memb_a32(ds, eax + 0x6));     /* mov al, [eax+0x6] */
    II(0x10134418, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
    II(0x1013441b, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1013441d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10134421, 0x3)   shl(eax, 0x4);                        /* shl eax, 0x4 */
    II(0x10134424, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10134426, 0x5)   mov(eax, memd_a32(ds, ptr_arr_meta)); /* mov eax, [0x101c70f0] */
    II(0x1013442b, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1013442d, 0x3)   mov(edx, memd_a32(ds, eax + 0x8));    /* mov edx, [eax+0x8] */
    II(0x10134430, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10134432, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x10134435, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10134438, 0x6)   mov(eax, memd_a32(ds, eax + arr_res_file)); /* mov eax, [eax+0x101c70d0] */
    II(0x1013443e, 0x5)   calld(my_fseek, -0x44fee);            /* call 0x100ef455 */
    II(0x10134443, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10134445, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x10134448, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1013444b, 0x6)   mov(eax, memd_a32(ds, eax + arr_res_file)); /* mov eax, [eax+0x101c70d0] */
    II(0x10134451, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x10134454:
    II(0x10134454, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10134457, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10134459, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1013445a, 0x1)   popd(edi);                            /* pop edi */
    II(0x1013445b, 0x1)   popd(esi);                            /* pop esi */
    II(0x1013445c, 0x1)   popd(edx);                            /* pop edx */
    II(0x1013445d, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1013445e, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1013445f, 0x1)   retd();                               /* ret */
FUNC_END

