FUNC_BEGIN(0x1011241a, 0xecb0ba0d7e6ded2a, 0x20, ({0x68, 0x7c, 0, 0, 0, 0xe8, 0x2e, 0x39, 0x5, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x54, 0, 0, 0, 0x89, 0x45, 0xf8, 0x88, 0x55, 0xfc, 0xf, 0xbe, 0x45, 0xfc, 0x6b, 0xc0, 0x18, 0xba, 0xa4, 0x9e, 0x1b, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xf4, 0x80, 0x7d, 0xfc, 0x13, 0x7c, 0xc, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xf4, 0x7d, 0x5, 0, 0xeb, 0xa, 0xb8, 0x5, 0, 0, 0, 0xe8, 0xe8, 0x7d, 0x5, 0, 0x80, 0x7d, 0xfc, 0x1, 0xf, 0x85, 0xb5, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x12, 0x30, 0xe4, 0x5, 0xd5, 0x2, 0, 0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf8, 0x80, 0xb8, 0x1f, 0x5, 0, 0, 0, 0x74, 0x6, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0xb8, 0x38, 0, 0, 0, 0xe8, 0x5a, 0x39, 0x5, 0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xe4, 0x83, 0x7d, 0xe4, 0, 0x74, 0x31, 0x8b, 0x45, 0xf4, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x8, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x8, 0x40, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xec, 0x8b, 0x45, 0xe8, 0xe8, 0x34, 0xbf, 0xfb, 0xff, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xdc, 0xeb, 0x6, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xdc, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x8b, 0x4d, 0xf8, 0x1, 0xc1, 0x8b, 0x45, 0xdc, 0x89, 0x41, 0x16, 0xb9, 0x28, 0, 0, 0, 0xbb, 0x29, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf0, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x16, 0xe8, 0xfd, 0xc7, 0xfb, 0xff, 0xe9, 0x3f, 0x1, 0, 0, 0x8b, 0x45, 0xf4, 0x66, 0x83, 0x78, 0x8, 0xff, 0xf, 0x85, 0x77, 0, 0, 0, 0xb8, 0x38, 0, 0, 0, 0xe8, 0xc5, 0x38, 0x5, 0, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xd4, 0x83, 0x7d, 0xd4, 0, 0x74, 0x41, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x6, 0x8b, 0x55, 0xf4, 0x66, 0x2b, 0x42, 0x2, 0x98, 0x50, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x4, 0x8b, 0x55, 0xf4, 0x66, 0x2b, 0x2, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xf4, 0x8b, 0x18, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xd8, 0xe8, 0x1d, 0xbe, 0xfb, 0xff, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xcc, 0xeb, 0x6, 0x8b, 0x45, 0xd4, 0x89, 0x45, 0xcc, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xf8, 0x1, 0xc2, 0x8b, 0x45, 0xcc, 0x89, 0x42, 0x16, 0xe9, 0xba, 0, 0, 0, 0xb8, 0x38, 0, 0, 0, 0xe8, 0x4e, 0x38, 0x5, 0, 0x89, 0x45, 0xc8, 0x8b, 0x45, 0xc8, 0x89, 0x45, 0xc4, 0x83, 0x7d, 0xc4, 0, 0x74, 0x36, 0x8b, 0x45, 0xf4, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x8, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x8, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xc8, 0xe8, 0x23, 0xbe, 0xfb, 0xff, 0x89, 0x45, 0xc0, 0x8b, 0x45, 0xc0, 0x89, 0x45, 0xbc, 0xeb, 0x6, 0x8b, 0x45, 0xc4, 0x89, 0x45, 0xbc, 0xf, 0xbe, 0x55, 0xfc, 0xc1, 0xe2, 0x2, 0x3, 0x55, 0xf8, 0x8b, 0x45, 0xbc, 0x89, 0x42, 0x16, 0x8b, 0x45, 0xf4, 0x83, 0x78, 0xa, 0, 0x74, 0x4c, 0x8d, 0x45, 0xb8, 0xe8, 0x6, 0x2c, 0xfc, 0xff, 0x50, 0x8d, 0x45, 0xb4, 0xe8, 0x29, 0x2c, 0xfc, 0xff, 0x50, 0x8d, 0x45, 0xb0, 0xe8, 0x4c, 0x2c, 0xfc, 0xff, 0x50, 0x8d, 0x45, 0xac, 0xe8, 0x6f, 0x2c, 0xfc, 0xff, 0x50, 0xe8, 0x95, 0x2c, 0xfc, 0xff, 0xf, 0xbf, 0xc8, 0xe8, 0xb1, 0x2c, 0xfc, 0xff, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0xa, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x16, 0xe8, 0x2, 0xc9, 0xfb, 0xff, 0x80, 0x7d, 0xfc, 0xd, 0x7c, 0x6, 0x80, 0x7d, 0xfc, 0x10, 0x7e, 0x5, 0xe9, 0x94, 0, 0, 0, 0xba, 0xe, 0x3, 0, 0, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x16, 0xe8, 0xde, 0xca, 0xfb, 0xff, 0xba, 0xe, 0x3, 0, 0, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x16, 0xe8, 0x19, 0xcc, 0xfb, 0xff, 0xba, 0xa, 0x3, 0, 0, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x16, 0xe8, 0x59, 0xcb, 0xfb, 0xff, 0xba, 0xa, 0x3, 0, 0, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x16, 0xe8, 0x94, 0xcc, 0xfb, 0xff, 0xba, 0x1, 0, 0, 0, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x16, 0xe8, 0xae, 0x2a, 0xfc, 0xff, 0xf, 0xbe, 0x45, 0xfc, 0x8d, 0x90, 0xe8, 0x3, 0, 0, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x16, 0xe8, 0x62, 0x2a, 0xfc, 0xff, 0xe9, 0xa3, 0, 0, 0, 0x80, 0x7d, 0xfc, 0x11, 0x75, 0x51, 0xba, 0x1, 0, 0, 0, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x16, 0xe8, 0x70, 0x2a, 0xfc, 0xff, 0xf, 0xbe, 0x45, 0xfc, 0x8d, 0x90, 0xe8, 0x3, 0, 0, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x16, 0xe8, 0xf4, 0x29, 0xfc, 0xff, 0xf, 0xbe, 0x45, 0xfc, 0x8d, 0x90, 0xe8, 0x3, 0, 0, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x16, 0xe8, 0x8, 0x2a, 0xfc, 0xff, 0xeb, 0x4c, 0x31, 0xd2, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x16, 0xe8, 0x22, 0x2a, 0xfc, 0xff, 0xf, 0xbe, 0x45, 0xfc, 0x8d, 0x90, 0xe8, 0x3, 0, 0, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x16, 0xe8, 0xa6, 0x29, 0xfc, 0xff, 0xf, 0xbe, 0x45, 0xfc, 0x8d, 0x90, 0, 0x70, 0, 0, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x16, 0xe8, 0xba, 0x29, 0xfc, 0xff, 0x80, 0x7d, 0xfc, 0x17, 0x74, 0x6, 0x80, 0x7d, 0xfc, 0x16, 0x75, 0x2, 0xeb, 0x6, 0x80, 0x7d, 0xfc, 0x11, 0x75, 0x17, 0x8b, 0x45, 0xf8, 0x8b, 0x10, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x16, 0xe8, 0x29, 0xc8, 0xfb, 0xff, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x14, 0xc1, 0xfa, 0x10, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x16, 0xe8, 0xe4, 0x28, 0xfc, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0x10, 0x8b, 0x52, 0x12, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x16, 0xe8, 0x52, 0xd0, 0xfb, 0xff, 0xf, 0xbe, 0x55, 0xfc, 0xf, 0xbe, 0x45, 0xfc, 0x6b, 0xc0, 0xc, 0x3, 0x45, 0xf8, 0x81, 0xc2, 0xe8, 0x3, 0, 0, 0x89, 0x50, 0x76, 0xf, 0xbe, 0x45, 0xfc, 0x6b, 0xc0, 0xc, 0x8b, 0x55, 0xf8, 0x1, 0xc2, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0xe, 0x89, 0x42, 0x7a, 0xf, 0xbe, 0x45, 0xfc, 0x6b, 0xc0, 0xc, 0x8b, 0x55, 0xf8, 0x1, 0xc2, 0x8b, 0x45, 0xf4, 0x8b, 0x40, 0x12, 0x89, 0x42, 0x7e, 0xb8, 0x5, 0, 0, 0, 0xe8, 0xf7, 0x79, 0x5, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1011241a, 0x5)   pushd(0x7c);                          /* push dword 0x7c */
    II(0x1011241f, 0x5)   calld(sys_check_available_stack_size, 0x5392e); /* call 0x10165d52 */
    II(0x10112424, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10112425, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10112426, 0x1)   pushd(esi);                           /* push esi */
    II(0x10112427, 0x1)   pushd(edi);                           /* push edi */
    II(0x10112428, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10112429, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1011242b, 0x6)   sub(esp, 0x54);                       /* sub esp, 0x54 */
    II(0x10112431, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10112434, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x10112437, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1011243b, 0x3)   imul(eax, eax, 0x18);                 /* imul eax, eax, 0x18 */
    II(0x1011243e, 0x5)   mov(edx, 0x101b9ea4);                 /* mov edx, 0x101b9ea4 */
    II(0x10112443, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10112445, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10112448, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0x13);   /* cmp byte [ebp-0x4], 0x13 */
    II(0x1011244c, 0x2)   jld(0x1011245a, 0xc);                 /* jl 0x1011245a */
    II(0x1011244e, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10112453, 0x5)   calld(/* sys */ 0x1016a24c, 0x57df4); /* call 0x1016a24c */
    II(0x10112458, 0x2)   jmpd(0x10112464, 0xa);                /* jmp 0x10112464 */
l_0x1011245a:
    II(0x1011245a, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x1011245f, 0x5)   calld(/* sys */ 0x1016a24c, 0x57de8); /* call 0x1016a24c */
l_0x10112464:
    II(0x10112464, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0x1);    /* cmp byte [ebp-0x4], 0x1 */
    II(0x10112468, 0x6)   jnzd(0x10112523, 0xb5);               /* jnz dword 0x10112523 */
    II(0x1011246e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10112471, 0x3)   mov(al, memb_a32(ds, eax + 0x12));    /* mov al, [eax+0x12] */
    II(0x10112474, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10112476, 0x5)   add(eax, 0x2d5);                      /* add eax, 0x2d5 */
    II(0x1011247b, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1011247e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10112481, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10112484, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10112487, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1011248a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011248d, 0x7)   cmp(memb_a32(ds, eax + 0x51f), 0);    /* cmp byte [eax+0x51f], 0x0 */
    II(0x10112494, 0x2)   jzd(0x1011249c, 0x6);                 /* jz 0x1011249c */
    II(0x10112496, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10112499, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
l_0x1011249c:
    II(0x1011249c, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x101124a1, 0x5)   calld(sys_new, 0x5395a);              /* call 0x10165e00 */
    II(0x101124a6, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x101124a9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x101124ac, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x101124af, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0);     /* cmp dword [ebp-0x1c], 0x0 */
    II(0x101124b3, 0x2)   jzd(0x101124e6, 0x31);                /* jz 0x101124e6 */
    II(0x101124b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101124b8, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x101124ba, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101124bd, 0x1)   pushd(eax);                           /* push eax */
    II(0x101124be, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101124c1, 0x3)   movsx(ecx, memw_a32(ds, eax));        /* movsx ecx, word [eax] */
    II(0x101124c4, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101124c7, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x101124cb, 0x1)   inc(eax);                             /* inc eax */
    II(0x101124cc, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x101124cf, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x101124d3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x101124d6, 0x5)   calld(my_ctor_c17, -0x440cc);         /* call 0x100ce40f */
    II(0x101124db, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x101124de, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x101124e1, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x101124e4, 0x2)   jmpd(0x101124ec, 0x6);                /* jmp 0x101124ec */
l_0x101124e6:
    II(0x101124e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x101124e9, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
l_0x101124ec:
    II(0x101124ec, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x101124f0, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101124f3, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x8));    /* mov ecx, [ebp-0x8] */
    II(0x101124f6, 0x2)   add(ecx, eax);                        /* add ecx, eax */
    II(0x101124f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x101124fb, 0x3)   mov(memd_a32(ds, ecx + 0x16), eax);   /* mov [ecx+0x16], eax */
    II(0x101124fe, 0x5)   mov(ecx, 0x28);                       /* mov ecx, 0x28 */
    II(0x10112503, 0x5)   mov(ebx, 0x29);                       /* mov ebx, 0x29 */
    II(0x10112508, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x1011250c, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10112510, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10112513, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10112516, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x10112519, 0x5)   calld(0x100ced1b, -0x43803);          /* call 0x100ced1b */
    II(0x1011251e, 0x5)   jmpd(0x10112662, 0x13f);              /* jmp 0x10112662 */
l_0x10112523:
    II(0x10112523, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10112526, 0x5)   cmp(memw_a32(ds, eax + 0x8), -0x1 /* 0xff */); /* cmp word [eax+0x8], 0xff */
    II(0x1011252b, 0x6)   jnzd(0x101125a8, 0x77);               /* jnz dword 0x101125a8 */
    II(0x10112531, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x10112536, 0x5)   calld(sys_new, 0x538c5);              /* call 0x10165e00 */
    II(0x1011253b, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
//    II(0x1011253e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10112541, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x10112544, 0x4)   cmp(memd_a32(ss, ebp - 0x2c), 0);     /* cmp dword [ebp-0x2c], 0x0 */
    II(0x10112548, 0x2)   jzd(0x1011258b, 0x41);                /* jz 0x1011258b */
    II(0x1011254a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1011254d, 0x4)   mov(ax, memw_a32(ds, eax + 0x6));     /* mov ax, [eax+0x6] */
    II(0x10112551, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10112554, 0x4)   sub(ax, memw_a32(ds, edx + 0x2));     /* sub ax, [edx+0x2] */
    II(0x10112558, 0x1)   cwde();                               /* cwde */
    II(0x10112559, 0x1)   pushd(eax);                           /* push eax */
    II(0x1011255a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1011255d, 0x4)   mov(ax, memw_a32(ds, eax + 0x4));     /* mov ax, [eax+0x4] */
    II(0x10112561, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10112564, 0x3)   sub(ax, memw_a32(ds, edx));           /* sub ax, [edx] */
    II(0x10112567, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1011256a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1011256d, 0x2)   mov(ebx, memd_a32(ds, eax));          /* mov ebx, [eax] */
    II(0x1011256f, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10112572, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10112575, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x10112578, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1011257b, 0x5)   calld(0x100ce39d, -0x441e3);          /* call 0x100ce39d */
    II(0x10112580, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
//    II(0x10112583, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x10112586, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x10112589, 0x2)   jmpd(0x10112591, 0x6);                /* jmp 0x10112591 */
l_0x1011258b:
    II(0x1011258b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1011258e, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
l_0x10112591:
    II(0x10112591, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10112595, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10112598, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1011259b, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1011259d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x101125a0, 0x3)   mov(memd_a32(ds, edx + 0x16), eax);   /* mov [edx+0x16], eax */
    II(0x101125a3, 0x5)   jmpd(0x10112662, 0xba);               /* jmp 0x10112662 */
l_0x101125a8:
    II(0x101125a8, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x101125ad, 0x5)   calld(sys_new, 0x5384e);              /* call 0x10165e00 */
    II(0x101125b2, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
//    II(0x101125b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x101125b8, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
    II(0x101125bb, 0x4)   cmp(memd_a32(ss, ebp - 0x3c), 0);     /* cmp dword [ebp-0x3c], 0x0 */
    II(0x101125bf, 0x2)   jzd(0x101125f7, 0x36);                /* jz 0x101125f7 */
    II(0x101125c1, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101125c4, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x101125c6, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101125c9, 0x1)   pushd(eax);                           /* push eax */
    II(0x101125ca, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101125cd, 0x3)   movsx(ecx, memw_a32(ds, eax));        /* movsx ecx, word [eax] */
    II(0x101125d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101125d3, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x101125d7, 0x1)   inc(eax);                             /* inc eax */
    II(0x101125d8, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x101125db, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101125de, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x101125e1, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101125e4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x101125e7, 0x5)   calld(my_ctor_c17, -0x441dd);         /* call 0x100ce40f */
    II(0x101125ec, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
//    II(0x101125ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x101125f2, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x101125f5, 0x2)   jmpd(0x101125fd, 0x6);                /* jmp 0x101125fd */
l_0x101125f7:
    II(0x101125f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x101125fa, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
l_0x101125fd:
    II(0x101125fd, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x4));  /* movsx edx, byte [ebp-0x4] */
    II(0x10112601, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x10112604, 0x3)   add(edx, memd_a32(ss, ebp - 0x8));    /* add edx, [ebp-0x8] */
    II(0x10112607, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x1011260a, 0x3)   mov(memd_a32(ds, edx + 0x16), eax);   /* mov [edx+0x16], eax */
    II(0x1011260d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10112610, 0x4)   cmp(memd_a32(ds, eax + 0xa), 0);      /* cmp dword [eax+0xa], 0x0 */
    II(0x10112614, 0x2)   jzd(0x10112662, 0x4c);                /* jz 0x10112662 */
    II(0x10112616, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10112619, 0x5)   calld(0x100d5224, -0x3d3fa);          /* call 0x100d5224 */
    II(0x1011261e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1011261f, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x10112622, 0x5)   calld(0x100d5250, -0x3d3d7);          /* call 0x100d5250 */
    II(0x10112627, 0x1)   pushd(eax);                           /* push eax */
    II(0x10112628, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x1011262b, 0x5)   calld(0x100d527c, -0x3d3b4);          /* call 0x100d527c */
    II(0x10112630, 0x1)   pushd(eax);                           /* push eax */
    II(0x10112631, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x10112634, 0x5)   calld(0x100d52a8, -0x3d391);          /* call 0x100d52a8 */
    II(0x10112639, 0x1)   pushd(eax);                           /* push eax */
    II(0x1011263a, 0x5)   calld(0x100d52d4, -0x3d36b);          /* call 0x100d52d4 */
    II(0x1011263f, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x10112642, 0x5)   calld(0x100d52f8, -0x3d34f);          /* call 0x100d52f8 */
    II(0x10112647, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1011264a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1011264d, 0x3)   mov(edx, memd_a32(ds, eax + 0xa));    /* mov edx, [eax+0xa] */
    II(0x10112650, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10112654, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10112657, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1011265a, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x1011265d, 0x5)   calld(0x100cef64, -0x436fe);          /* call 0x100cef64 */
l_0x10112662:
    II(0x10112662, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0xd);    /* cmp byte [ebp-0x4], 0xd */
    II(0x10112666, 0x2)   jld(0x1011266e, 0x6);                 /* jl 0x1011266e */
    II(0x10112668, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0x10);   /* cmp byte [ebp-0x4], 0x10 */
    II(0x1011266c, 0x2)   jled(0x10112673, 0x5);                /* jle 0x10112673 */
l_0x1011266e:
    II(0x1011266e, 0x5)   jmpd(0x10112707, 0x94);               /* jmp 0x10112707 */
l_0x10112673:
    II(0x10112673, 0x5)   mov(edx, 0x30e);                      /* mov edx, 0x30e */
    II(0x10112678, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1011267c, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1011267f, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10112682, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x10112685, 0x5)   calld(0x100cf168, -0x43522);          /* call 0x100cf168 */
    II(0x1011268a, 0x5)   mov(edx, 0x30e);                      /* mov edx, 0x30e */
    II(0x1011268f, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10112693, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10112696, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10112699, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x1011269c, 0x5)   calld(0x100cf2ba, -0x433e7);          /* call 0x100cf2ba */
    II(0x101126a1, 0x5)   mov(edx, 0x30a);                      /* mov edx, 0x30a */
    II(0x101126a6, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x101126aa, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101126ad, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x101126b0, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x101126b3, 0x5)   calld(0x100cf211, -0x434a7);          /* call 0x100cf211 */
    II(0x101126b8, 0x5)   mov(edx, 0x30a);                      /* mov edx, 0x30a */
    II(0x101126bd, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x101126c1, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101126c4, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x101126c7, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x101126ca, 0x5)   calld(0x100cf363, -0x4336c);          /* call 0x100cf363 */
    II(0x101126cf, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x101126d4, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x101126d8, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101126db, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x101126de, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x101126e1, 0x5)   calld(0x100d5194, -0x3d552);          /* call 0x100d5194 */
    II(0x101126e6, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x101126ea, 0x6)   lea(edx, eax + 0x3e8);                /* lea edx, [eax+0x3e8] */
    II(0x101126f0, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x101126f4, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101126f7, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x101126fa, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x101126fd, 0x5)   calld(0x100d5164, -0x3d59e);          /* call 0x100d5164 */
    II(0x10112702, 0x5)   jmpd(0x101127aa, 0xa3);               /* jmp 0x101127aa */
l_0x10112707:
    II(0x10112707, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0x11);   /* cmp byte [ebp-0x4], 0x11 */
    II(0x1011270b, 0x2)   jnzd(0x1011275e, 0x51);               /* jnz 0x1011275e */
    II(0x1011270d, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10112712, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10112716, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10112719, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1011271c, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x1011271f, 0x5)   calld(0x100d5194, -0x3d590);          /* call 0x100d5194 */
    II(0x10112724, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10112728, 0x6)   lea(edx, eax + 0x3e8);                /* lea edx, [eax+0x3e8] */
    II(0x1011272e, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10112732, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10112735, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10112738, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x1011273b, 0x5)   calld(0x100d5134, -0x3d60c);          /* call 0x100d5134 */
    II(0x10112740, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10112744, 0x6)   lea(edx, eax + 0x3e8);                /* lea edx, [eax+0x3e8] */
    II(0x1011274a, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1011274e, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10112751, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10112754, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x10112757, 0x5)   calld(0x100d5164, -0x3d5f8);          /* call 0x100d5164 */
    II(0x1011275c, 0x2)   jmpd(0x101127aa, 0x4c);               /* jmp 0x101127aa */
l_0x1011275e:
    II(0x1011275e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10112760, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10112764, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10112767, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1011276a, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x1011276d, 0x5)   calld(0x100d5194, -0x3d5de);          /* call 0x100d5194 */
    II(0x10112772, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10112776, 0x6)   lea(edx, eax + 0x3e8);                /* lea edx, [eax+0x3e8] */
    II(0x1011277c, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10112780, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10112783, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10112786, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x10112789, 0x5)   calld(0x100d5134, -0x3d65a);          /* call 0x100d5134 */
    II(0x1011278e, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10112792, 0x6)   lea(edx, eax + 0x7000);               /* lea edx, [eax+0x7000] */
    II(0x10112798, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1011279c, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1011279f, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x101127a2, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x101127a5, 0x5)   calld(0x100d5164, -0x3d646);          /* call 0x100d5164 */
l_0x101127aa:
    II(0x101127aa, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0x17);   /* cmp byte [ebp-0x4], 0x17 */
    II(0x101127ae, 0x2)   jzd(0x101127b6, 0x6);                 /* jz 0x101127b6 */
    II(0x101127b0, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0x16);   /* cmp byte [ebp-0x4], 0x16 */
    II(0x101127b4, 0x2)   jnzd(0x101127b8, 0x2);                /* jnz 0x101127b8 */
l_0x101127b6:
    II(0x101127b6, 0x2)   jmpd(0x101127be, 0x6);                /* jmp 0x101127be */
l_0x101127b8:
    II(0x101127b8, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0x11);   /* cmp byte [ebp-0x4], 0x11 */
    II(0x101127bc, 0x2)   jnzd(0x101127d5, 0x17);               /* jnz 0x101127d5 */
l_0x101127be:
    II(0x101127be, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101127c1, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x101127c3, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x101127c7, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101127ca, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x101127cd, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x101127d0, 0x5)   calld(0x100ceffe, -0x437d7);          /* call 0x100ceffe */
l_0x101127d5:
    II(0x101127d5, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x101127d8, 0x3)   mov(edx, memd_a32(ds, eax + 0x14));   /* mov edx, [eax+0x14] */
    II(0x101127db, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x101127de, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x101127e2, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101127e5, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x101127e8, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x101127eb, 0x5)   calld(0x100d50d4, -0x3d71c);          /* call 0x100d50d4 */
    II(0x101127f0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101127f3, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x101127f5, 0x3)   mov(edx, memd_a32(ds, edx + 0x12));   /* mov edx, [edx+0x12] */
    II(0x101127f8, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x101127fc, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101127ff, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10112802, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x10112805, 0x5)   calld(0x100cf85c, -0x42fae);          /* call 0x100cf85c */
    II(0x1011280a, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x4));  /* movsx edx, byte [ebp-0x4] */
    II(0x1011280e, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10112812, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x10112815, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10112818, 0x6)   add(edx, 0x3e8);                      /* add edx, 0x3e8 */
    II(0x1011281e, 0x3)   mov(memd_a32(ds, eax + 0x76), edx);   /* mov [eax+0x76], edx */
    II(0x10112821, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10112825, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x10112828, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1011282b, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1011282d, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10112830, 0x3)   mov(eax, memd_a32(ds, eax + 0xe));    /* mov eax, [eax+0xe] */
    II(0x10112833, 0x3)   mov(memd_a32(ds, edx + 0x7a), eax);   /* mov [edx+0x7a], eax */
    II(0x10112836, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1011283a, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x1011283d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10112840, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10112842, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10112845, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x10112848, 0x3)   mov(memd_a32(ds, edx + 0x7e), eax);   /* mov [edx+0x7e], eax */
    II(0x1011284b, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x10112850, 0x5)   calld(/* sys */ 0x1016a24c, 0x579f7); /* call 0x1016a24c */
    II(0x10112855, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10112857, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10112858, 0x1)   popd(edi);                            /* pop edi */
    II(0x10112859, 0x1)   popd(esi);                            /* pop esi */
    II(0x1011285a, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1011285b, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1011285c, 0x1)   retd();                               /* ret */
FUNC_END

