FUNC_BEGIN(0x1012f672, 0xdd94ddbfb954247a, 0x20, ({0x68, 0xb4, 0, 0, 0, 0xe8, 0xd6, 0x66, 0x3, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x80, 0, 0, 0, 0x89, 0x45, 0xfc, 0xb8, 0x5, 0, 0, 0, 0xe8, 0xb5, 0xab, 0x3, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0x4b, 0x58, 0xfa, 0xff, 0x5, 0x5, 0, 0, 0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0x1, 0x58, 0xfa, 0xff, 0x5, 0x6, 0, 0, 0, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x26, 0xe8, 0xa, 0xbe, 0xf7, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x3c, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x32, 0xc1, 0xf8, 0x10, 0x1, 0xd8, 0xe8, 0x9a, 0xa0, 0xf5, 0xff, 0x89, 0x45, 0xf8, 0x8d, 0x55, 0xc8, 0x8b, 0x45, 0xfc, 0xe8, 0x19, 0x73, 0xfa, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x32, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0x9, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x1e, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x34, 0x48, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x26, 0xe8, 0xd4, 0x21, 0, 0, 0xe8, 0xcb, 0x22, 0, 0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x34, 0x89, 0x45, 0xec, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0xff, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x66, 0x3b, 0x45, 0xf8, 0xf, 0x8d, 0x2b, 0x2, 0, 0, 0xf, 0xbf, 0x55, 0xec, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x26, 0xe8, 0x9e, 0x21, 0, 0, 0xe8, 0x95, 0x22, 0, 0, 0x89, 0x45, 0xe4, 0x8b, 0x5d, 0xfc, 0x83, 0xc3, 0x36, 0xf, 0xbf, 0x55, 0xec, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x26, 0xe8, 0x81, 0x21, 0, 0, 0xe8, 0x78, 0x22, 0, 0, 0x89, 0xda, 0xe8, 0x15, 0x76, 0xf4, 0xff, 0x84, 0xc0, 0x74, 0x6, 0xc6, 0x45, 0xc4, 0x2, 0xeb, 0x4, 0xc6, 0x45, 0xc4, 0xa2, 0x31, 0xc0, 0x8a, 0x45, 0xc4, 0x50, 0xf, 0xbf, 0x4d, 0xd8, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0xaf, 0x57, 0xfa, 0xff, 0x98, 0x8d, 0x58, 0xa1, 0xf, 0xbf, 0x55, 0xec, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x26, 0xe8, 0x3c, 0x21, 0, 0, 0xe8, 0x6b, 0x22, 0, 0, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xf0, 0x8b, 0x75, 0xde, 0x1, 0xc6, 0x89, 0x75, 0xc0, 0xf, 0xbf, 0x45, 0xd8, 0xf, 0xbf, 0x75, 0xf4, 0xf, 0xaf, 0xc6, 0x8b, 0x75, 0xc0, 0x83, 0xc6, 0x55, 0x1, 0xf0, 0xff, 0x15, 0xec, 0xdd, 0x1b, 0x10, 0x83, 0x7d, 0xe4, 0, 0x74, 0x8, 0x8b, 0x45, 0xe4, 0x3b, 0x45, 0xe8, 0x75, 0x2, 0xeb, 0x2d, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0xb6, 0x56, 0xfa, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0xd, 0x57, 0xfa, 0xff, 0x98, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xf4, 0x29, 0xc2, 0x83, 0xfa, 0x26, 0x7d, 0x5, 0xe9, 0x38, 0x1, 0, 0, 0x8b, 0x45, 0xe4, 0xe8, 0x32, 0x22, 0, 0, 0x85, 0xc0, 0xf, 0x84, 0xd5, 0, 0, 0, 0x8d, 0x55, 0xbc, 0x8b, 0x45, 0xe4, 0xe8, 0x57, 0x22, 0, 0, 0x8b, 0x45, 0xe4, 0xe8, 0x17, 0x22, 0, 0, 0x89, 0x45, 0xb8, 0xe8, 0xc7, 0x5a, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8b, 0x45, 0xb8, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0xc1, 0xe0, 0x2, 0xff, 0xb0, 0xa0, 0xb4, 0x1b, 0x10, 0xb8, 0x20, 0, 0, 0, 0x50, 0xb8, 0x28, 0, 0, 0, 0x50, 0xf, 0xbf, 0x45, 0xf4, 0x50, 0x8b, 0x45, 0xf0, 0x5, 0x28, 0, 0, 0, 0xf, 0xbf, 0xc8, 0xf, 0xbf, 0x45, 0xbe, 0x40, 0x50, 0xf, 0xbf, 0x45, 0xbc, 0x40, 0x50, 0xb8, 0xee, 0x87, 0x1a, 0x10, 0x50, 0xb8, 0xa, 0, 0, 0, 0x50, 0x8d, 0x45, 0xb4, 0xe8, 0x37, 0x22, 0x1, 0, 0x50, 0xe8, 0x80, 0x27, 0x1, 0, 0x83, 0xc4, 0x14, 0xe8, 0x9, 0x9f, 0xf5, 0xff, 0xf, 0xbf, 0x55, 0xd8, 0x8b, 0x75, 0xde, 0x89, 0xc3, 0x89, 0xf0, 0xe8, 0x16, 0xa2, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb4, 0xe8, 0x51, 0x22, 0x1, 0, 0x8b, 0x45, 0xf4, 0x5, 0x10, 0, 0, 0, 0x98, 0x50, 0x8b, 0x45, 0xf0, 0x5, 0x10, 0, 0, 0, 0x98, 0x50, 0x8b, 0x55, 0xb8, 0x31, 0xc0, 0x8a, 0x42, 0x26, 0xf, 0xbf, 0xc8, 0x8b, 0x5d, 0xb8, 0x8b, 0x5b, 0x6, 0xc1, 0xfb, 0x10, 0xf, 0xbf, 0x55, 0xd8, 0x8b, 0x45, 0xde, 0xe8, 0xa2, 0xbd, 0xff, 0xff, 0xeb, 0x53, 0x8b, 0x45, 0xe4, 0xe8, 0xed, 0x21, 0, 0, 0x66, 0x3d, 0xff, 0xff, 0x74, 0x45, 0x8b, 0x45, 0xe4, 0xe8, 0xdf, 0x21, 0, 0, 0x98, 0xe8, 0xad, 0x46, 0, 0, 0x89, 0x45, 0xb0, 0x8d, 0x45, 0xc8, 0x50, 0xb9, 0x1, 0, 0, 0, 0x8b, 0x55, 0xb0, 0x8b, 0x12, 0xc1, 0xfa, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0xf, 0xbf, 0x55, 0xf4, 0x83, 0xc2, 0x10, 0x29, 0xc2, 0x89, 0xd0, 0xf, 0xbf, 0xd8, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x45, 0xb0, 0xe8, 0xbc, 0x93, 0xfb, 0xff, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xe8, 0xff, 0x15, 0xf0, 0xdd, 0x1b, 0x10, 0x1, 0x45, 0xf4, 0xe9, 0xc2, 0xfd, 0xff, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x36, 0xe8, 0xee, 0xb3, 0, 0, 0x84, 0xc0, 0xf, 0x84, 0xae, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x36, 0xe8, 0x76, 0x22, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x7, 0xe9, 0xff, 0xff, 0x8b, 0x55, 0xfc, 0x66, 0x2b, 0x42, 0x34, 0x89, 0x45, 0xac, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x36, 0xe8, 0x57, 0x22, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x4f, 0xe9, 0xff, 0xff, 0x8b, 0x55, 0xfc, 0x66, 0x2b, 0x42, 0x34, 0x89, 0x45, 0xa8, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0xe5, 0x54, 0xfa, 0xff, 0x89, 0x45, 0xa4, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0xd4, 0x54, 0xfa, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0x2c, 0x55, 0xfa, 0xff, 0x1, 0xc2, 0x89, 0x55, 0xa0, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0xe5, 0x54, 0xfa, 0xff, 0x98, 0x89, 0x45, 0x90, 0xff, 0x15, 0xf0, 0xdd, 0x1b, 0x10, 0xf, 0xbf, 0x55, 0xac, 0xf, 0xaf, 0xc2, 0xf, 0xbf, 0x55, 0xa4, 0x1, 0xd0, 0x83, 0xc0, 0x3, 0x89, 0x45, 0x94, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xde, 0, 0, 0, 0xe8, 0x22, 0x55, 0xfa, 0xff, 0x98, 0x3, 0x45, 0x90, 0x48, 0x89, 0x45, 0x98, 0xff, 0x15, 0xf0, 0xdd, 0x1b, 0x10, 0xf, 0xbf, 0x55, 0xa8, 0xf, 0xaf, 0xc2, 0xf, 0xbf, 0x55, 0xa4, 0x1, 0xd0, 0x83, 0xc0, 0x8, 0x89, 0x45, 0x9c, 0xf, 0xbf, 0x45, 0xa4, 0x3b, 0x45, 0x94, 0x7f, 0x9, 0xf, 0xbf, 0x45, 0xa0, 0x3b, 0x45, 0x94, 0x7f, 0x2, 0xeb, 0x1f, 0x68, 0xa2, 0, 0, 0, 0x8b, 0x45, 0x94, 0x50, 0x8b, 0x45, 0x98, 0x50, 0x8b, 0x4d, 0x94, 0x8b, 0x5d, 0x90, 0xf, 0xbf, 0x55, 0xd8, 0x8b, 0x45, 0xde, 0xe8, 0x16, 0xab, 0x3, 0, 0xf, 0xbf, 0x45, 0xa4, 0x3b, 0x45, 0x9c, 0x7f, 0x9, 0xf, 0xbf, 0x45, 0xa0, 0x3b, 0x45, 0x94, 0x7f, 0x2, 0xeb, 0x1f, 0x68, 0xa2, 0, 0, 0, 0x8b, 0x45, 0x9c, 0x50, 0x8b, 0x45, 0x98, 0x50, 0x8b, 0x4d, 0x9c, 0x8b, 0x5d, 0x90, 0xf, 0xbf, 0x55, 0xd8, 0x8b, 0x45, 0xde, 0xe8, 0xe3, 0xaa, 0x3, 0, 0xf, 0xbf, 0x45, 0xa0, 0x3b, 0x45, 0x94, 0x7e, 0x9, 0xf, 0xbf, 0x45, 0xa4, 0x3b, 0x45, 0x9c, 0x7e, 0x2, 0xeb, 0x68, 0x68, 0xa2, 0, 0, 0, 0xf, 0xbf, 0x55, 0xa0, 0x8b, 0x45, 0x9c, 0xe8, 0xa2, 0x9c, 0xf5, 0xff, 0x50, 0x8b, 0x45, 0x90, 0x50, 0xf, 0xbf, 0x55, 0xa4, 0x8b, 0x45, 0x94, 0xe8, 0x89, 0x73, 0xf4, 0xff, 0x8b, 0x5d, 0x90, 0xf, 0xbf, 0x55, 0xd8, 0x8b, 0x75, 0xde, 0x89, 0xc1, 0x89, 0xf0, 0xe8, 0x9a, 0xaa, 0x3, 0, 0x68, 0xa2, 0, 0, 0, 0xf, 0xbf, 0x55, 0xa0, 0x8b, 0x45, 0x9c, 0xe8, 0x6d, 0x9c, 0xf5, 0xff, 0x50, 0x8b, 0x45, 0x98, 0x50, 0xf, 0xbf, 0x55, 0xa4, 0x8b, 0x45, 0x94, 0xe8, 0x54, 0x73, 0xf4, 0xff, 0x89, 0xc1, 0x8b, 0x5d, 0x98, 0xf, 0xbf, 0x55, 0xd8, 0x8b, 0x45, 0xde, 0xe8, 0x67, 0xaa, 0x3, 0, 0xe8, 0xa6, 0x56, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x89, 0x45, 0x8c, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x32, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0x6, 0xc6, 0x45, 0x88, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0x88, 0, 0x31, 0xd2, 0x8a, 0x55, 0x88, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xce, 0, 0, 0, 0x8b, 0x5d, 0x8c, 0xe8, 0x9, 0xff, 0xf9, 0xff, 0xe8, 0x6c, 0x56, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0x89, 0x45, 0x84, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x32, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x3c, 0xc1, 0xf8, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x26, 0xe8, 0x39, 0xb9, 0xf7, 0xff, 0x98, 0x39, 0xc2, 0x7d, 0x6, 0xc6, 0x45, 0x80, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0x80, 0, 0x31, 0xd2, 0x8a, 0x55, 0x80, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xd2, 0, 0, 0, 0x8b, 0x5d, 0x84, 0xe8, 0xb8, 0xfe, 0xf9, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1012f672, 0x5)   pushd(0xb4);                          /* push dword 0xb4 */
    II(0x1012f677, 0x5)   calld(sys_check_available_stack_size, 0x366d6); /* call 0x10165d52 */
    II(0x1012f67c, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1012f67d, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1012f67e, 0x1)   pushd(edx);                           /* push edx */
    II(0x1012f67f, 0x1)   pushd(esi);                           /* push esi */
    II(0x1012f680, 0x1)   pushd(edi);                           /* push edi */
    II(0x1012f681, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1012f682, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1012f684, 0x6)   sub(esp, 0x80);                       /* sub esp, 0x80 */
    II(0x1012f68a, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1012f68d, 0x5)   mov(eax, 0x5);                        /* mov eax, 0x5 */
    II(0x1012f692, 0x5)   calld(/* sys */ 0x1016a24c, 0x3abb5); /* call 0x1016a24c */
    II(0x1012f697, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f69a, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x1012f6a0, 0x5)   calld(0x100d4ef0, -0x5a7b5);          /* call 0x100d4ef0 */
    II(0x1012f6a5, 0x5)   add(eax, 0x5);                        /* add eax, 0x5 */
    II(0x1012f6aa, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1012f6ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f6b0, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x1012f6b6, 0x5)   calld(0x100d4ebc, -0x5a7ff);          /* call 0x100d4ebc */
    II(0x1012f6bb, 0x5)   add(eax, 0x6);                        /* add eax, 0x6 */
    II(0x1012f6c0, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1012f6c3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f6c6, 0x3)   add(eax, 0x26);                       /* add eax, 0x26 */
    II(0x1012f6c9, 0x5)   calld(my_1_get_count, -0x841f6);      /* call 0x100ab4d8 */
    II(0x1012f6ce, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1012f6d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f6d4, 0x3)   mov(ebx, memd_a32(ds, eax + 0x3c));   /* mov ebx, [eax+0x3c] */
    II(0x1012f6d7, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1012f6da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f6dd, 0x3)   mov(eax, memd_a32(ds, eax + 0x32));   /* mov eax, [eax+0x32] */
    II(0x1012f6e0, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1012f6e3, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x1012f6e5, 0x5)   calld(my_min, -0xa5f66);              /* call 0x10089784 */
    II(0x1012f6ea, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1012f6ed, 0x3)   lea(edx, ebp - 0x38);                 /* lea edx, [ebp-0x38] */
    II(0x1012f6f0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f6f3, 0x5)   calld(0x100d6a11, -0x58ce7);          /* call 0x100d6a11 */
    II(0x1012f6f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f6fb, 0x3)   mov(eax, memd_a32(ds, eax + 0x32));   /* mov eax, [eax+0x32] */
    II(0x1012f6fe, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1012f701, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1012f703, 0x2)   jnzd(0x1012f70e, 0x9);                /* jnz 0x1012f70e */
    II(0x1012f705, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x1012f70c, 0x2)   jmpd(0x1012f72c, 0x1e);               /* jmp 0x1012f72c */
l_0x1012f70e:
    II(0x1012f70e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f711, 0x4)   mov(ax, memw_a32(ds, eax + 0x34));    /* mov ax, [eax+0x34] */
    II(0x1012f715, 0x1)   dec(eax);                             /* dec eax */
    II(0x1012f716, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1012f719, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f71c, 0x3)   add(eax, 0x26);                       /* add eax, 0x26 */
    II(0x1012f71f, 0x5)   calld(0x101318f8, 0x21d4);            /* call 0x101318f8 */
    II(0x1012f724, 0x5)   calld(0x101319f4, 0x22cb);            /* call 0x101319f4 */
    II(0x1012f729, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
l_0x1012f72c:
    II(0x1012f72c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f72f, 0x4)   mov(ax, memw_a32(ds, eax + 0x34));    /* mov ax, [eax+0x34] */
    II(0x1012f733, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1012f736, 0x2)   jmpd(0x1012f73e, 0x6);                /* jmp 0x1012f73e */
l_0x1012f738:
    II(0x1012f738, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1012f73b, 0x3)   inc(memd_a32(ss, ebp - 0x14));        /* inc dword [ebp-0x14] */
l_0x1012f73e:
    II(0x1012f73e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1012f741, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x1012f745, 0x6)   jged(0x1012f976, 0x22b);              /* jge dword 0x1012f976 */
    II(0x1012f74b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1012f74f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f752, 0x3)   add(eax, 0x26);                       /* add eax, 0x26 */
    II(0x1012f755, 0x5)   calld(0x101318f8, 0x219e);            /* call 0x101318f8 */
    II(0x1012f75a, 0x5)   calld(0x101319f4, 0x2295);            /* call 0x101319f4 */
    II(0x1012f75f, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1012f762, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x1012f765, 0x3)   add(ebx, 0x36);                       /* add ebx, 0x36 */
    II(0x1012f768, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1012f76c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f76f, 0x3)   add(eax, 0x26);                       /* add eax, 0x26 */
    II(0x1012f772, 0x5)   calld(0x101318f8, 0x2181);            /* call 0x101318f8 */
    II(0x1012f777, 0x5)   calld(0x101319f4, 0x2278);            /* call 0x101319f4 */
    II(0x1012f77c, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x1012f77e, 0x5)   calld(0x10076d98, -0xb89eb);          /* call 0x10076d98 */
    II(0x1012f783, 0x2)   test(al, al);                         /* test al, al */
    II(0x1012f785, 0x2)   jzd(0x1012f78d, 0x6);                 /* jz 0x1012f78d */
    II(0x1012f787, 0x4)   mov(memb_a32(ss, ebp - 0x3c), 0x2);   /* mov byte [ebp-0x3c], 0x2 */
    II(0x1012f78b, 0x2)   jmpd(0x1012f791, 0x4);                /* jmp 0x1012f791 */
l_0x1012f78d:
    II(0x1012f78d, 0x4)   mov(memb_a32(ss, ebp - 0x3c), 0xa2);  /* mov byte [ebp-0x3c], 0xa2 */
l_0x1012f791:
    II(0x1012f791, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012f793, 0x3)   mov(al, memb_a32(ss, ebp - 0x3c));    /* mov al, [ebp-0x3c] */
    II(0x1012f796, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012f797, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x28)); /* movsx ecx, word [ebp-0x28] */
    II(0x1012f79b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f79e, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x1012f7a4, 0x5)   calld(0x100d4f58, -0x5a851);          /* call 0x100d4f58 */
    II(0x1012f7a9, 0x1)   cwde();                               /* cwde */
    II(0x1012f7aa, 0x3)   lea(ebx, eax - 0x5f);                 /* lea ebx, [eax-0x5f] */
    II(0x1012f7ad, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x1012f7b1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f7b4, 0x3)   add(eax, 0x26);                       /* add eax, 0x26 */
    II(0x1012f7b7, 0x5)   calld(0x101318f8, 0x213c);            /* call 0x101318f8 */
    II(0x1012f7bc, 0x5)   calld(0x10131a2c, 0x226b);            /* call 0x10131a2c */
    II(0x1012f7c1, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012f7c3, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1012f7c7, 0x3)   mov(esi, memd_a32(ss, ebp - 0x22));   /* mov esi, [ebp-0x22] */
    II(0x1012f7ca, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x1012f7cc, 0x3)   mov(memd_a32(ss, ebp - 0x40), esi);   /* mov [ebp-0x40], esi */
    II(0x1012f7cf, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x28)); /* movsx eax, word [ebp-0x28] */
    II(0x1012f7d3, 0x4)   movsx(esi, memw_a32(ss, ebp - 0xc));  /* movsx esi, word [ebp-0xc] */
    II(0x1012f7d7, 0x3)   imul(eax, esi);                       /* imul eax, esi */
    II(0x1012f7da, 0x3)   mov(esi, memd_a32(ss, ebp - 0x40));   /* mov esi, [ebp-0x40] */
    II(0x1012f7dd, 0x3)   add(esi, 0x55);                       /* add esi, 0x55 */
    II(0x1012f7e0, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x1012f7e2, 0x6)   calld_abs(memd_a32(ds, 0x101bddec));  /* call dword near [0x101bddec] */
    II(0x1012f7e8, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0);     /* cmp dword [ebp-0x1c], 0x0 */
    II(0x1012f7ec, 0x2)   jzd(0x1012f7f6, 0x8);                 /* jz 0x1012f7f6 */
    II(0x1012f7ee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1012f7f1, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x18));   /* cmp eax, [ebp-0x18] */
    II(0x1012f7f4, 0x2)   jnzd(0x1012f7f8, 0x2);                /* jnz 0x1012f7f8 */
l_0x1012f7f6:
    II(0x1012f7f6, 0x2)   jmpd(0x1012f825, 0x2d);               /* jmp 0x1012f825 */
l_0x1012f7f8:
    II(0x1012f7f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f7fb, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x1012f801, 0x5)   calld(0x100d4ebc, -0x5a94a);          /* call 0x100d4ebc */
    II(0x1012f806, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1012f809, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f80c, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x1012f812, 0x5)   calld(0x100d4f24, -0x5a8f3);          /* call 0x100d4f24 */
    II(0x1012f817, 0x1)   cwde();                               /* cwde */
    II(0x1012f818, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1012f81a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1012f81e, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x1012f820, 0x3)   cmp(edx, 0x26);                       /* cmp edx, 0x26 */
    II(0x1012f823, 0x2)   jged(0x1012f82a, 0x5);                /* jge 0x1012f82a */
l_0x1012f825:
    II(0x1012f825, 0x5)   jmpd(0x1012f962, 0x138);              /* jmp 0x1012f962 */
l_0x1012f82a:
    II(0x1012f82a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1012f82d, 0x5)   calld(0x10131a64, 0x2232);            /* call 0x10131a64 */
    II(0x1012f832, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1012f834, 0x6)   jzd(0x1012f90f, 0xd5);                /* jz dword 0x1012f90f */
    II(0x1012f83a, 0x3)   lea(edx, ebp - 0x44);                 /* lea edx, [ebp-0x44] */
    II(0x1012f83d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1012f840, 0x5)   calld(0x10131a9c, 0x2257);            /* call 0x10131a9c */
    II(0x1012f845, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1012f848, 0x5)   calld(0x10131a64, 0x2217);            /* call 0x10131a64 */
    II(0x1012f84d, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x1012f850, 0x5)   calld(0x100d531c, -0x5a539);          /* call 0x100d531c */
    II(0x1012f855, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1012f85a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012f85b, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1012f860, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012f861, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x1012f864, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1012f867, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1012f86c, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1012f86f, 0x6)   pushd(memd_a32(ds, eax + 0x101bb4a0)); /* push dword [eax+0x101bb4a0] */
    II(0x1012f875, 0x5)   mov(eax, 0x20);                       /* mov eax, 0x20 */
    II(0x1012f87a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012f87b, 0x5)   mov(eax, 0x28);                       /* mov eax, 0x28 */
    II(0x1012f880, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012f881, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1012f885, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012f886, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1012f889, 0x5)   add(eax, 0x28);                       /* add eax, 0x28 */
    II(0x1012f88e, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1012f891, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x42)); /* movsx eax, word [ebp-0x42] */
    II(0x1012f895, 0x1)   inc(eax);                             /* inc eax */
    II(0x1012f896, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012f897, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x44)); /* movsx eax, word [ebp-0x44] */
    II(0x1012f89b, 0x1)   inc(eax);                             /* inc eax */
    II(0x1012f89c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012f89d, 0x5)   mov(eax, 0x101a87ee);                 /* mov eax, 0x101a87ee */ /* "%i,%i" */
    II(0x1012f8a2, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012f8a3, 0x5)   mov(eax, 0xa);                        /* mov eax, 0xa */
    II(0x1012f8a8, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012f8a9, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1012f8ac, 0x5)   calld(my_string_ctor, 0x12237);       /* call 0x10141ae8 */
    II(0x1012f8b1, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012f8b2, 0x5)   calld(0x10142037, 0x12780);           /* call 0x10142037 */
    II(0x1012f8b7, 0x3)   add(esp, 0x14);                       /* add esp, 0x14 */
    II(0x1012f8ba, 0x5)   calld(my_strobj_c_str_v2, -0xa60f7);  /* call 0x100897c8 */
    II(0x1012f8bf, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x1012f8c3, 0x3)   mov(esi, memd_a32(ss, ebp - 0x22));   /* mov esi, [ebp-0x22] */
    II(0x1012f8c6, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1012f8c8, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x1012f8ca, 0x5)   calld(0x100e9ae5, -0x45dea);          /* call 0x100e9ae5 */
    II(0x1012f8cf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012f8d1, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x1012f8d4, 0x5)   calld(my_string_dtor, 0x12251);       /* call 0x10141b2a */
    II(0x1012f8d9, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012f8dc, 0x5)   add(eax, 0x10);                       /* add eax, 0x10 */
    II(0x1012f8e1, 0x1)   cwde();                               /* cwde */
    II(0x1012f8e2, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012f8e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1012f8e6, 0x5)   add(eax, 0x10);                       /* add eax, 0x10 */
    II(0x1012f8eb, 0x1)   cwde();                               /* cwde */
    II(0x1012f8ec, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012f8ed, 0x3)   mov(edx, memd_a32(ss, ebp - 0x48));   /* mov edx, [ebp-0x48] */
    II(0x1012f8f0, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012f8f2, 0x3)   mov(al, memb_a32(ds, edx + 0x26));    /* mov al, [edx+0x26] */
    II(0x1012f8f5, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1012f8f8, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x48));   /* mov ebx, [ebp-0x48] */
    II(0x1012f8fb, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x6));    /* mov ebx, [ebx+0x6] */
    II(0x1012f8fe, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1012f901, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x1012f905, 0x3)   mov(eax, memd_a32(ss, ebp - 0x22));   /* mov eax, [ebp-0x22] */
    II(0x1012f908, 0x5)   calld(0x1012b6af, -0x425e);           /* call 0x1012b6af */
    II(0x1012f90d, 0x2)   jmpd(0x1012f962, 0x53);               /* jmp 0x1012f962 */
l_0x1012f90f:
    II(0x1012f90f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1012f912, 0x5)   calld(0x10131b04, 0x21ed);            /* call 0x10131b04 */
    II(0x1012f917, 0x4)   cmp(ax, 0xffff);                      /* cmp ax, 0xffff */
    II(0x1012f91b, 0x2)   jzd(0x1012f962, 0x45);                /* jz 0x1012f962 */
    II(0x1012f91d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1012f920, 0x5)   calld(0x10131b04, 0x21df);            /* call 0x10131b04 */
    II(0x1012f925, 0x1)   cwde();                               /* cwde */
    II(0x1012f926, 0x5)   calld(my_get_res_data_by_id, 0x46ad); /* call 0x10133fd8 */
    II(0x1012f92b, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x1012f92e, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1012f931, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012f932, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1012f937, 0x3)   mov(edx, memd_a32(ss, ebp - 0x50));   /* mov edx, [ebp-0x50] */
    II(0x1012f93a, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x1012f93c, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1012f93f, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012f941, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1012f944, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x1012f946, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1012f948, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1012f94c, 0x3)   add(edx, 0x10);                       /* add edx, 0x10 */
    II(0x1012f94f, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x1012f951, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012f953, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1012f956, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x1012f95a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x1012f95d, 0x5)   calld(0x100e8d1e, -0x46c44);          /* call 0x100e8d1e */
l_0x1012f962:
    II(0x1012f962, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1012f965, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1012f968, 0x6)   calld_abs(memd_a32(ds, 0x101bddf0));  /* call dword near [0x101bddf0] */
    II(0x1012f96e, 0x3)   add(memd_a32(ss, ebp - 0xc), eax);    /* add [ebp-0xc], eax */
    II(0x1012f971, 0x5)   jmpd(0x1012f738, -0x23e);             /* jmp 0x1012f738 */
l_0x1012f976:
    II(0x1012f976, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012f978, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f97b, 0x3)   add(eax, 0x36);                       /* add eax, 0x36 */
    II(0x1012f97e, 0x5)   calld(0x1013ad71, 0xb3ee);            /* call 0x1013ad71 */
    II(0x1012f983, 0x2)   test(al, al);                         /* test al, al */
    II(0x1012f985, 0x6)   jzd(0x1012fb39, 0x1ae);               /* jz dword 0x1012fb39 */
    II(0x1012f98b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f98e, 0x3)   add(eax, 0x36);                       /* add eax, 0x36 */
    II(0x1012f991, 0x5)   calld(0x10131c0c, 0x2276);            /* call 0x10131c0c */
    II(0x1012f996, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012f998, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f99b, 0x5)   calld(0x1012e2a7, -0x16f9);           /* call 0x1012e2a7 */
    II(0x1012f9a0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1012f9a3, 0x4)   sub(ax, memw_a32(ds, edx + 0x34));    /* sub ax, [edx+0x34] */
    II(0x1012f9a7, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x1012f9aa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f9ad, 0x3)   add(eax, 0x36);                       /* add eax, 0x36 */
    II(0x1012f9b0, 0x5)   calld(0x10131c0c, 0x2257);            /* call 0x10131c0c */
    II(0x1012f9b5, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012f9b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f9ba, 0x5)   calld(0x1012e30e, -0x16b1);           /* call 0x1012e30e */
    II(0x1012f9bf, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1012f9c2, 0x4)   sub(ax, memw_a32(ds, edx + 0x34));    /* sub ax, [edx+0x34] */
    II(0x1012f9c6, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
    II(0x1012f9c9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f9cc, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x1012f9d2, 0x5)   calld(0x100d4ebc, -0x5ab1b);          /* call 0x100d4ebc */
    II(0x1012f9d7, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x1012f9da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f9dd, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x1012f9e3, 0x5)   calld(0x100d4ebc, -0x5ab2c);          /* call 0x100d4ebc */
    II(0x1012f9e8, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012f9ea, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012f9ed, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x1012f9f3, 0x5)   calld(0x100d4f24, -0x5aad4);          /* call 0x100d4f24 */
    II(0x1012f9f8, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1012f9fa, 0x3)   mov(memd_a32(ss, ebp - 0x60), edx);   /* mov [ebp-0x60], edx */
    II(0x1012f9fd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012fa00, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x1012fa06, 0x5)   calld(0x100d4ef0, -0x5ab1b);          /* call 0x100d4ef0 */
    II(0x1012fa0b, 0x1)   cwde();                               /* cwde */
    II(0x1012fa0c, 0x3)   mov(memd_a32(ss, ebp - 0x70), eax);   /* mov [ebp-0x70], eax */
    II(0x1012fa0f, 0x6)   calld_abs(memd_a32(ds, 0x101bddf0));  /* call dword near [0x101bddf0] */
    II(0x1012fa15, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x54)); /* movsx edx, word [ebp-0x54] */
    II(0x1012fa19, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x1012fa1c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x5c)); /* movsx edx, word [ebp-0x5c] */
    II(0x1012fa20, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1012fa22, 0x3)   add(eax, 0x3);                        /* add eax, 0x3 */
    II(0x1012fa25, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
    II(0x1012fa28, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012fa2b, 0x6)   mov(eax, memd_a32(ds, eax + 0xde));   /* mov eax, [eax+0xde] */
    II(0x1012fa31, 0x5)   calld(0x100d4f58, -0x5aade);          /* call 0x100d4f58 */
    II(0x1012fa36, 0x1)   cwde();                               /* cwde */
    II(0x1012fa37, 0x3)   add(eax, memd_a32(ss, ebp - 0x70));   /* add eax, [ebp-0x70] */
    II(0x1012fa3a, 0x1)   dec(eax);                             /* dec eax */
    II(0x1012fa3b, 0x3)   mov(memd_a32(ss, ebp - 0x68), eax);   /* mov [ebp-0x68], eax */
    II(0x1012fa3e, 0x6)   calld_abs(memd_a32(ds, 0x101bddf0));  /* call dword near [0x101bddf0] */
    II(0x1012fa44, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x58)); /* movsx edx, word [ebp-0x58] */
    II(0x1012fa48, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x1012fa4b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x5c)); /* movsx edx, word [ebp-0x5c] */
    II(0x1012fa4f, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1012fa51, 0x3)   add(eax, 0x8);                        /* add eax, 0x8 */
    II(0x1012fa54, 0x3)   mov(memd_a32(ss, ebp - 0x64), eax);   /* mov [ebp-0x64], eax */
    II(0x1012fa57, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x5c)); /* movsx eax, word [ebp-0x5c] */
    II(0x1012fa5b, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x6c));   /* cmp eax, [ebp-0x6c] */
    II(0x1012fa5e, 0x2)   jgd(0x1012fa69, 0x9);                 /* jg 0x1012fa69 */
    II(0x1012fa60, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x60)); /* movsx eax, word [ebp-0x60] */
    II(0x1012fa64, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x6c));   /* cmp eax, [ebp-0x6c] */
    II(0x1012fa67, 0x2)   jgd(0x1012fa6b, 0x2);                 /* jg 0x1012fa6b */
l_0x1012fa69:
    II(0x1012fa69, 0x2)   jmpd(0x1012fa8a, 0x1f);               /* jmp 0x1012fa8a */
l_0x1012fa6b:
    II(0x1012fa6b, 0x5)   pushd(0xa2);                          /* push dword 0xa2 */
    II(0x1012fa70, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x1012fa73, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012fa74, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x1012fa77, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012fa78, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x6c));   /* mov ecx, [ebp-0x6c] */
    II(0x1012fa7b, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x70));   /* mov ebx, [ebp-0x70] */
    II(0x1012fa7e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x1012fa82, 0x3)   mov(eax, memd_a32(ss, ebp - 0x22));   /* mov eax, [ebp-0x22] */
    II(0x1012fa85, 0x5)   calld(/* sys */ 0x1016a5a0, 0x3ab16); /* call 0x1016a5a0 */
l_0x1012fa8a:
    II(0x1012fa8a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x5c)); /* movsx eax, word [ebp-0x5c] */
    II(0x1012fa8e, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x64));   /* cmp eax, [ebp-0x64] */
    II(0x1012fa91, 0x2)   jgd(0x1012fa9c, 0x9);                 /* jg 0x1012fa9c */
    II(0x1012fa93, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x60)); /* movsx eax, word [ebp-0x60] */
    II(0x1012fa97, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x6c));   /* cmp eax, [ebp-0x6c] */
    II(0x1012fa9a, 0x2)   jgd(0x1012fa9e, 0x2);                 /* jg 0x1012fa9e */
l_0x1012fa9c:
    II(0x1012fa9c, 0x2)   jmpd(0x1012fabd, 0x1f);               /* jmp 0x1012fabd */
l_0x1012fa9e:
    II(0x1012fa9e, 0x5)   pushd(0xa2);                          /* push dword 0xa2 */
    II(0x1012faa3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x64));   /* mov eax, [ebp-0x64] */
    II(0x1012faa6, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012faa7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x1012faaa, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012faab, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x64));   /* mov ecx, [ebp-0x64] */
    II(0x1012faae, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x70));   /* mov ebx, [ebp-0x70] */
    II(0x1012fab1, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x1012fab5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x22));   /* mov eax, [ebp-0x22] */
    II(0x1012fab8, 0x5)   calld(/* sys */ 0x1016a5a0, 0x3aae3); /* call 0x1016a5a0 */
l_0x1012fabd:
    II(0x1012fabd, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x60)); /* movsx eax, word [ebp-0x60] */
    II(0x1012fac1, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x6c));   /* cmp eax, [ebp-0x6c] */
    II(0x1012fac4, 0x2)   jled(0x1012facf, 0x9);                /* jle 0x1012facf */
    II(0x1012fac6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x5c)); /* movsx eax, word [ebp-0x5c] */
    II(0x1012faca, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x64));   /* cmp eax, [ebp-0x64] */
    II(0x1012facd, 0x2)   jled(0x1012fad1, 0x2);                /* jle 0x1012fad1 */
l_0x1012facf:
    II(0x1012facf, 0x2)   jmpd(0x1012fb39, 0x68);               /* jmp 0x1012fb39 */
l_0x1012fad1:
    II(0x1012fad1, 0x5)   pushd(0xa2);                          /* push dword 0xa2 */
    II(0x1012fad6, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x60)); /* movsx edx, word [ebp-0x60] */
    II(0x1012fada, 0x3)   mov(eax, memd_a32(ss, ebp - 0x64));   /* mov eax, [ebp-0x64] */
    II(0x1012fadd, 0x5)   calld(my_min, -0xa635e);              /* call 0x10089784 */
    II(0x1012fae2, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012fae3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x70));   /* mov eax, [ebp-0x70] */
    II(0x1012fae6, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012fae7, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x5c)); /* movsx edx, word [ebp-0x5c] */
    II(0x1012faeb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x1012faee, 0x5)   calld(0x10076e7c, -0xb8c77);          /* call 0x10076e7c */
    II(0x1012faf3, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x70));   /* mov ebx, [ebp-0x70] */
    II(0x1012faf6, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x1012fafa, 0x3)   mov(esi, memd_a32(ss, ebp - 0x22));   /* mov esi, [ebp-0x22] */
    II(0x1012fafd, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1012faff, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x1012fb01, 0x5)   calld(/* sys */ 0x1016a5a0, 0x3aa9a); /* call 0x1016a5a0 */
    II(0x1012fb06, 0x5)   pushd(0xa2);                          /* push dword 0xa2 */
    II(0x1012fb0b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x60)); /* movsx edx, word [ebp-0x60] */
    II(0x1012fb0f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x64));   /* mov eax, [ebp-0x64] */
    II(0x1012fb12, 0x5)   calld(my_min, -0xa6393);              /* call 0x10089784 */
    II(0x1012fb17, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012fb18, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x1012fb1b, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012fb1c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x5c)); /* movsx edx, word [ebp-0x5c] */
    II(0x1012fb20, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x1012fb23, 0x5)   calld(0x10076e7c, -0xb8cac);          /* call 0x10076e7c */
    II(0x1012fb28, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1012fb2a, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x68));   /* mov ebx, [ebp-0x68] */
    II(0x1012fb2d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x1012fb31, 0x3)   mov(eax, memd_a32(ss, ebp - 0x22));   /* mov eax, [ebp-0x22] */
    II(0x1012fb34, 0x5)   calld(/* sys */ 0x1016a5a0, 0x3aa67); /* call 0x1016a5a0 */
l_0x1012fb39:
    II(0x1012fb39, 0x5)   calld(0x100d51e4, -0x5a95a);          /* call 0x100d51e4 */
    II(0x1012fb3e, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1012fb43, 0x3)   mov(memd_a32(ss, ebp - 0x74), eax);   /* mov [ebp-0x74], eax */
    II(0x1012fb46, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012fb49, 0x3)   mov(eax, memd_a32(ds, eax + 0x32));   /* mov eax, [eax+0x32] */
    II(0x1012fb4c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1012fb4f, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1012fb51, 0x2)   jled(0x1012fb59, 0x6);                /* jle 0x1012fb59 */
    II(0x1012fb53, 0x4)   mov(memb_a32(ss, ebp - 0x78), 0x1);   /* mov byte [ebp-0x78], 0x1 */
    II(0x1012fb57, 0x2)   jmpd(0x1012fb5d, 0x4);                /* jmp 0x1012fb5d */
l_0x1012fb59:
    II(0x1012fb59, 0x4)   mov(memb_a32(ss, ebp - 0x78), 0);     /* mov byte [ebp-0x78], 0x0 */
l_0x1012fb5d:
    II(0x1012fb5d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012fb5f, 0x3)   mov(dl, memb_a32(ss, ebp - 0x78));    /* mov dl, [ebp-0x78] */
    II(0x1012fb62, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012fb65, 0x6)   mov(eax, memd_a32(ds, eax + 0xce));   /* mov eax, [eax+0xce] */
    II(0x1012fb6b, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x74));   /* mov ebx, [ebp-0x74] */
    II(0x1012fb6e, 0x5)   calld(0x100cfa7c, -0x600f7);          /* call 0x100cfa7c */
    II(0x1012fb73, 0x5)   calld(0x100d51e4, -0x5a994);          /* call 0x100d51e4 */
    II(0x1012fb78, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1012fb7d, 0x3)   mov(memd_a32(ss, ebp - 0x7c), eax);   /* mov [ebp-0x7c], eax */
    II(0x1012fb80, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012fb83, 0x3)   mov(edx, memd_a32(ds, eax + 0x32));   /* mov edx, [eax+0x32] */
    II(0x1012fb86, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1012fb89, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012fb8c, 0x3)   mov(eax, memd_a32(ds, eax + 0x3c));   /* mov eax, [eax+0x3c] */
    II(0x1012fb8f, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1012fb92, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1012fb94, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012fb97, 0x3)   add(eax, 0x26);                       /* add eax, 0x26 */
    II(0x1012fb9a, 0x5)   calld(my_1_get_count, -0x846c7);      /* call 0x100ab4d8 */
    II(0x1012fb9f, 0x1)   cwde();                               /* cwde */
    II(0x1012fba0, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1012fba2, 0x2)   jged(0x1012fbaa, 0x6);                /* jge 0x1012fbaa */
    II(0x1012fba4, 0x4)   mov(memb_a32(ss, ebp - 0x80), 0x1);   /* mov byte [ebp-0x80], 0x1 */
    II(0x1012fba8, 0x2)   jmpd(0x1012fbae, 0x4);                /* jmp 0x1012fbae */
l_0x1012fbaa:
    II(0x1012fbaa, 0x4)   mov(memb_a32(ss, ebp - 0x80), 0);     /* mov byte [ebp-0x80], 0x0 */
l_0x1012fbae:
    II(0x1012fbae, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1012fbb0, 0x3)   mov(dl, memb_a32(ss, ebp - 0x80));    /* mov dl, [ebp-0x80] */
    II(0x1012fbb3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1012fbb6, 0x6)   mov(eax, memd_a32(ds, eax + 0xd2));   /* mov eax, [eax+0xd2] */
    II(0x1012fbbc, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x7c));   /* mov ebx, [ebp-0x7c] */
    II(0x1012fbbf, 0x5)   calld(0x100cfa7c, -0x60148);          /* call 0x100cfa7c */
    II(0x1012fbc4, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1012fbc6, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1012fbc7, 0x1)   popd(edi);                            /* pop edi */
    II(0x1012fbc8, 0x1)   popd(esi);                            /* pop esi */
    II(0x1012fbc9, 0x1)   popd(edx);                            /* pop edx */
    II(0x1012fbca, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1012fbcb, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1012fbcc, 0x1)   retd();                               /* ret */
FUNC_END

