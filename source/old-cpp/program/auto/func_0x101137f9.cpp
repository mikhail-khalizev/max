FUNC_BEGIN(0x101137f9, 0xd022f4309832588d, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x4f, 0x25, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xfc, 0xc6, 0x45, 0xf8, 0x4, 0xfe, 0x4d, 0xf8, 0x80, 0x7d, 0xf8, 0xff, 0x74, 0x56, 0x8a, 0x45, 0xf8, 0x4, 0xd, 0x88, 0x45, 0xf4, 0x31, 0xdb, 0xf, 0xbe, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0xe8, 0x26, 0xf0, 0xff, 0xff, 0xf, 0xbe, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x83, 0x78, 0x16, 0, 0x74, 0x2e, 0xba, 0xa, 0x3, 0, 0, 0xf, 0xbe, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x40, 0x16, 0xe8, 0xb3, 0xb9, 0xfb, 0xff, 0xba, 0xa, 0x3, 0, 0, 0xf, 0xbe, 0x45, 0xf4, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x40, 0x16, 0xe8, 0xee, 0xba, 0xfb, 0xff, 0xeb, 0xa1, 0x8b, 0x45, 0xfc, 0x83, 0x78, 0x5a, 0, 0x74, 0x14, 0xe8, 0x3f, 0x19, 0xfc, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x5a, 0xe8, 0x72, 0xc2, 0xfb, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0x78, 0x5e, 0, 0x74, 0x14, 0xe8, 0x22, 0x19, 0xfc, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x5e, 0xe8, 0x55, 0xc2, 0xfb, 0xff, 0xc6, 0x45, 0xf8, 0x2, 0xeb, 0x6, 0x8a, 0x45, 0xf8, 0xfe, 0x45, 0xf8, 0x31, 0xc0, 0x8a, 0x45, 0xf8, 0x83, 0xf8, 0xe, 0x7d, 0x1d, 0x8b, 0x45, 0xfc, 0x8b, 0x10, 0x31, 0xc0, 0x8a, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xfc, 0x8b, 0x80, 0x9d, 0x5, 0, 0, 0xe8, 0x8a, 0x46, 0xfc, 0xff, 0xeb, 0xd3, 0x8b, 0x45, 0xfc, 0xc6, 0x80, 0xb0, 0x3, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x80, 0x46, 0x4, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x80, 0xd5, 0x5, 0, 0, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x101137f9, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x101137fe, 0x5)   calld(sys_check_available_stack_size, 0x5254f); /* call 0x10165d52 */
    II(0x10113803, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10113804, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10113805, 0x1)   pushd(edx);                           /* push edx */
    II(0x10113806, 0x1)   pushd(esi);                           /* push esi */
    II(0x10113807, 0x1)   pushd(edi);                           /* push edi */
    II(0x10113808, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10113809, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1011380b, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x10113811, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10113814, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x4);    /* mov byte [ebp-0x8], 0x4 */
l_0x10113818:
    II(0x10113818, 0x3)   dec(memb_a32(ss, ebp - 0x8));         /* dec byte [ebp-0x8] */
    II(0x1011381b, 0x4)   cmp(memb_a32(ss, ebp - 0x8), -0x1 /* 0xff */); /* cmp byte [ebp-0x8], 0xff */
    II(0x1011381f, 0x2)   jzd(0x10113877, 0x56);                /* jz 0x10113877 */
    II(0x10113821, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x10113824, 0x2)   add(al, 0xd);                         /* add al, 0xd */
    II(0x10113826, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x10113829, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1011382b, 0x4)   movsx(edx, memb_a32(ss, ebp - 0xc));  /* movsx edx, byte [ebp-0xc] */
    II(0x1011382f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10113832, 0x5)   calld(0x1011285d, -0xfda);            /* call 0x1011285d */
    II(0x10113837, 0x4)   movsx(eax, memb_a32(ss, ebp - 0xc));  /* movsx eax, byte [ebp-0xc] */
    II(0x1011383b, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1011383e, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x10113841, 0x4)   cmp(memd_a32(ds, eax + 0x16), 0);     /* cmp dword [eax+0x16], 0x0 */
    II(0x10113845, 0x2)   jzd(0x10113875, 0x2e);                /* jz 0x10113875 */
    II(0x10113847, 0x5)   mov(edx, 0x30a);                      /* mov edx, 0x30a */
    II(0x1011384c, 0x4)   movsx(eax, memb_a32(ss, ebp - 0xc));  /* movsx eax, byte [ebp-0xc] */
    II(0x10113850, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10113853, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x10113856, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x10113859, 0x5)   calld(0x100cf211, -0x4464d);          /* call 0x100cf211 */
    II(0x1011385e, 0x5)   mov(edx, 0x30a);                      /* mov edx, 0x30a */
    II(0x10113863, 0x4)   movsx(eax, memb_a32(ss, ebp - 0xc));  /* movsx eax, byte [ebp-0xc] */
    II(0x10113867, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1011386a, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x1011386d, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x10113870, 0x5)   calld(0x100cf363, -0x44512);          /* call 0x100cf363 */
l_0x10113875:
    II(0x10113875, 0x2)   jmpd(0x10113818, -0x5f);              /* jmp 0x10113818 */
l_0x10113877:
    II(0x10113877, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011387a, 0x4)   cmp(memd_a32(ds, eax + 0x5a), 0);     /* cmp dword [eax+0x5a], 0x0 */
    II(0x1011387e, 0x2)   jzd(0x10113894, 0x14);                /* jz 0x10113894 */
    II(0x10113880, 0x5)   calld(0x100d51c4, -0x3e6c1);          /* call 0x100d51c4 */
    II(0x10113885, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10113887, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x10113889, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1011388c, 0x3)   mov(eax, memd_a32(ds, eax + 0x5a));   /* mov eax, [eax+0x5a] */
    II(0x1011388f, 0x5)   calld(0x100cfb06, -0x43d8e);          /* call 0x100cfb06 */
l_0x10113894:
    II(0x10113894, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10113897, 0x4)   cmp(memd_a32(ds, eax + 0x5e), 0);     /* cmp dword [eax+0x5e], 0x0 */
    II(0x1011389b, 0x2)   jzd(0x101138b1, 0x14);                /* jz 0x101138b1 */
    II(0x1011389d, 0x5)   calld(0x100d51c4, -0x3e6de);          /* call 0x100d51c4 */
    II(0x101138a2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101138a4, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x101138a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101138a9, 0x3)   mov(eax, memd_a32(ds, eax + 0x5e));   /* mov eax, [eax+0x5e] */
    II(0x101138ac, 0x5)   calld(0x100cfb06, -0x43dab);          /* call 0x100cfb06 */
l_0x101138b1:
    II(0x101138b1, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x2);    /* mov byte [ebp-0x8], 0x2 */
    II(0x101138b5, 0x2)   jmpd(0x101138bd, 0x6);                /* jmp 0x101138bd */
l_0x101138b7:
    II(0x101138b7, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x101138ba, 0x3)   inc(memb_a32(ss, ebp - 0x8));         /* inc byte [ebp-0x8] */
l_0x101138bd:
    II(0x101138bd, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101138bf, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x101138c2, 0x3)   cmp(eax, 0xe);                        /* cmp eax, 0xe */
    II(0x101138c5, 0x2)   jged(0x101138e4, 0x1d);               /* jge 0x101138e4 */
    II(0x101138c7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101138ca, 0x2)   mov(edx, memd_a32(ds, eax));          /* mov edx, [eax] */
    II(0x101138cc, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101138ce, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x101138d1, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101138d4, 0x3)   add(eax, memd_a32(ss, ebp - 0x4));    /* add eax, [ebp-0x4] */
    II(0x101138d7, 0x6)   mov(eax, memd_a32(ds, eax + 0x59d));  /* mov eax, [eax+0x59d] */
    II(0x101138dd, 0x5)   calld(0x100d7f6c, -0x3b976);          /* call 0x100d7f6c */
    II(0x101138e2, 0x2)   jmpd(0x101138b7, -0x2d);              /* jmp 0x101138b7 */
l_0x101138e4:
    II(0x101138e4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101138e7, 0x7)   mov(memb_a32(ds, eax + 0x3b0), 0);    /* mov byte [eax+0x3b0], 0x0 */
    II(0x101138ee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101138f1, 0x7)   mov(memb_a32(ds, eax + 0x446), 0);    /* mov byte [eax+0x446], 0x0 */
    II(0x101138f8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101138fb, 0x9)   mov(memw_a32(ds, eax + 0x5d5), 0xffff); /* mov word [eax+0x5d5], 0xffff */
    II(0x10113904, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10113906, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10113907, 0x1)   popd(edi);                            /* pop edi */
    II(0x10113908, 0x1)   popd(esi);                            /* pop esi */
    II(0x10113909, 0x1)   popd(edx);                            /* pop edx */
    II(0x1011390a, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1011390b, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1011390c, 0x1)   retd();                               /* ret */
FUNC_END

