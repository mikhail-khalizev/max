FUNC_BEGIN(0x100a93e5, 0x531c67bde93c57da, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0x63, 0xc9, 0xb, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x31, 0xcf, 0xfc, 0xff, 0x8d, 0x5d, 0xf8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xa5, 0xd0, 0xfc, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf8, 0xe8, 0xdb, 0xd7, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x4a, 0x19, 0x9, 0, 0x84, 0xc0, 0x74, 0x43, 0x8d, 0x45, 0xf8, 0xe8, 0x6d, 0xcf, 0xfc, 0xff, 0x80, 0x78, 0x3d, 0x2, 0x75, 0x1e, 0x8d, 0x45, 0xf8, 0xe8, 0x5f, 0xcf, 0xfc, 0xff, 0x80, 0x78, 0x3e, 0x5, 0x74, 0xe, 0x8d, 0x45, 0xf8, 0xe8, 0x51, 0xcf, 0xfc, 0xff, 0x80, 0x78, 0x3e, 0x6, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x13, 0xc6, 0x45, 0xfc, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x5, 0xcb, 0xfc, 0xff, 0xe9, 0x8a, 0, 0, 0, 0xeb, 0xa7, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0xc0, 0xce, 0xfc, 0xff, 0x8d, 0x5d, 0xf8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xb8, 0xcf, 0xfc, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf8, 0xe8, 0x6a, 0xd7, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0xd9, 0x18, 0x9, 0, 0x84, 0xc0, 0x74, 0x40, 0x8d, 0x45, 0xf8, 0xe8, 0xfc, 0xce, 0xfc, 0xff, 0x80, 0x78, 0x3d, 0x2, 0x75, 0x1e, 0x8d, 0x45, 0xf8, 0xe8, 0xee, 0xce, 0xfc, 0xff, 0x80, 0x78, 0x3e, 0x5, 0x74, 0xe, 0x8d, 0x45, 0xf8, 0xe8, 0xe0, 0xce, 0xfc, 0xff, 0x80, 0x78, 0x3e, 0x6, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x10, 0xc6, 0x45, 0xfc, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x94, 0xca, 0xfc, 0xff, 0xeb, 0x1c, 0xeb, 0xaa, 0xc6, 0x45, 0xfc, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x82, 0xca, 0xfc, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x76, 0xca, 0xfc, 0xff, 0x8a, 0x45, 0xfc, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100a93e5, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x100a93ea, 0x5)   calld(sys_check_available_stack_size, 0xbc963); /* call 0x10165d52 */
    II(0x100a93ef, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a93f0, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a93f1, 0x1)   pushd(edx);                           /* push edx */
    II(0x100a93f2, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a93f3, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a93f4, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a93f5, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a93f7, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x100a93fd, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100a9402, 0x5)   calld(0x10076338, -0x330cf);          /* call 0x10076338 */
    II(0x100a9407, 0x3)   lea(ebx, ebp - 0x8);                  /* lea ebx, [ebp-0x8] */
    II(0x100a940a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a940c, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100a940e, 0x5)   calld(0x100764b8, -0x32f5b);          /* call 0x100764b8 */
    II(0x100a9413, 0x2)   jmpd(0x100a941d, 0x8);                /* jmp 0x100a941d */
l_0x100a9415:
    II(0x100a9415, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a9418, 0x5)   calld(0x10076bf8, -0x32825);          /* call 0x10076bf8 */
l_0x100a941d:
    II(0x100a941d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a941f, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a9422, 0x5)   calld(0x1013ad71, 0x9194a);           /* call 0x1013ad71 */
    II(0x100a9427, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a9429, 0x2)   jzd(0x100a946e, 0x43);                /* jz 0x100a946e */
    II(0x100a942b, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a942e, 0x5)   calld(0x100763a0, -0x33093);          /* call 0x100763a0 */
    II(0x100a9433, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x2);   /* cmp byte [eax+0x3d], 0x2 */
    II(0x100a9437, 0x2)   jnzd(0x100a9457, 0x1e);               /* jnz 0x100a9457 */
    II(0x100a9439, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a943c, 0x5)   calld(0x100763a0, -0x330a1);          /* call 0x100763a0 */
    II(0x100a9441, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x5);   /* cmp byte [eax+0x3e], 0x5 */
    II(0x100a9445, 0x2)   jzd(0x100a9455, 0xe);                 /* jz 0x100a9455 */
    II(0x100a9447, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a944a, 0x5)   calld(0x100763a0, -0x330af);          /* call 0x100763a0 */
    II(0x100a944f, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x6);   /* cmp byte [eax+0x3e], 0x6 */
    II(0x100a9453, 0x2)   jnzd(0x100a9457, 0x2);                /* jnz 0x100a9457 */
l_0x100a9455:
    II(0x100a9455, 0x2)   jmpd(0x100a9459, 0x2);                /* jmp 0x100a9459 */
l_0x100a9457:
    II(0x100a9457, 0x2)   jmpd(0x100a946c, 0x13);               /* jmp 0x100a946c */
l_0x100a9459:
    II(0x100a9459, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0x1);    /* mov byte [ebp-0x4], 0x1 */
    II(0x100a945d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a945f, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a9462, 0x5)   calld(0x10075f6c, -0x334fb);          /* call 0x10075f6c */
    II(0x100a9467, 0x5)   jmpd(0x100a94f6, 0x8a);               /* jmp 0x100a94f6 */
l_0x100a946c:
    II(0x100a946c, 0x2)   jmpd(0x100a9415, -0x59);              /* jmp 0x100a9415 */
l_0x100a946e:
    II(0x100a946e, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x100a9473, 0x5)   calld(0x10076338, -0x33140);          /* call 0x10076338 */
    II(0x100a9478, 0x3)   lea(ebx, ebp - 0x8);                  /* lea ebx, [ebp-0x8] */
    II(0x100a947b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a947d, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100a947f, 0x5)   calld(0x1007643c, -0x33048);          /* call 0x1007643c */
    II(0x100a9484, 0x2)   jmpd(0x100a948e, 0x8);                /* jmp 0x100a948e */
l_0x100a9486:
    II(0x100a9486, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a9489, 0x5)   calld(0x10076bf8, -0x32896);          /* call 0x10076bf8 */
l_0x100a948e:
    II(0x100a948e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a9490, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a9493, 0x5)   calld(0x1013ad71, 0x918d9);           /* call 0x1013ad71 */
    II(0x100a9498, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a949a, 0x2)   jzd(0x100a94dc, 0x40);                /* jz 0x100a94dc */
    II(0x100a949c, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a949f, 0x5)   calld(0x100763a0, -0x33104);          /* call 0x100763a0 */
    II(0x100a94a4, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x2);   /* cmp byte [eax+0x3d], 0x2 */
    II(0x100a94a8, 0x2)   jnzd(0x100a94c8, 0x1e);               /* jnz 0x100a94c8 */
    II(0x100a94aa, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a94ad, 0x5)   calld(0x100763a0, -0x33112);          /* call 0x100763a0 */
    II(0x100a94b2, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x5);   /* cmp byte [eax+0x3e], 0x5 */
    II(0x100a94b6, 0x2)   jzd(0x100a94c6, 0xe);                 /* jz 0x100a94c6 */
    II(0x100a94b8, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a94bb, 0x5)   calld(0x100763a0, -0x33120);          /* call 0x100763a0 */
    II(0x100a94c0, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x6);   /* cmp byte [eax+0x3e], 0x6 */
    II(0x100a94c4, 0x2)   jnzd(0x100a94c8, 0x2);                /* jnz 0x100a94c8 */
l_0x100a94c6:
    II(0x100a94c6, 0x2)   jmpd(0x100a94ca, 0x2);                /* jmp 0x100a94ca */
l_0x100a94c8:
    II(0x100a94c8, 0x2)   jmpd(0x100a94da, 0x10);               /* jmp 0x100a94da */
l_0x100a94ca:
    II(0x100a94ca, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0x1);    /* mov byte [ebp-0x4], 0x1 */
    II(0x100a94ce, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a94d0, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a94d3, 0x5)   calld(0x10075f6c, -0x3356c);          /* call 0x10075f6c */
    II(0x100a94d8, 0x2)   jmpd(0x100a94f6, 0x1c);               /* jmp 0x100a94f6 */
l_0x100a94da:
    II(0x100a94da, 0x2)   jmpd(0x100a9486, -0x56);              /* jmp 0x100a9486 */
l_0x100a94dc:
    II(0x100a94dc, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0);      /* mov byte [ebp-0x4], 0x0 */
    II(0x100a94e0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a94e2, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100a94e5, 0x5)   calld(0x10075f6c, -0x3357e);          /* call 0x10075f6c */
    II(0x100a94ea, 0x2)   jmpd(0x100a94f6, 0xa);                /* jmp 0x100a94f6 */
//  II(0x100a94ec, 0xa)   /* Недостижимый код. */
l_0x100a94f6:
    II(0x100a94f6, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x100a94f9, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a94fb, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a94fc, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a94fd, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a94fe, 0x1)   popd(edx);                            /* pop edx */
    II(0x100a94ff, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a9500, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a9501, 0x1)   retd();                               /* ret */
FUNC_END

