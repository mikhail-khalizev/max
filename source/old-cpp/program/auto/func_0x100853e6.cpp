FUNC_BEGIN(0x100853e6, 0xdaa25172b353ad3d, 0x20, ({0x68, 0x94, 0, 0, 0, 0xe8, 0x62, 0x9, 0xe, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x7c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0x9c, 0xe8, 0xde, 0x67, 0, 0, 0x89, 0x45, 0xa4, 0x80, 0x65, 0xf4, 0xfe, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x20, 0xe8, 0xe7, 0x48, 0, 0, 0x8d, 0x5d, 0xa8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xb7, 0x47, 0, 0, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xac, 0xe8, 0xc3, 0x10, 0xff, 0xff, 0x89, 0x45, 0xb0, 0x80, 0x65, 0xf4, 0xfe, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0xc5, 0, 0, 0, 0xbb, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0x6d, 0x4c, 0, 0, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x54, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x6, 0xc6, 0x45, 0xf0, 0x3, 0xeb, 0x4, 0xc6, 0x45, 0xf0, 0x2, 0xf, 0xbe, 0x4d, 0xf0, 0xbb, 0x1, 0, 0, 0, 0x8d, 0x45, 0x9c, 0xe8, 0x70, 0x52, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0xe8, 0x96, 0x9a, 0x9, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x20, 0xe8, 0x6b, 0x48, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xa8, 0xe8, 0xc1, 0x46, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xa8, 0xe8, 0x47, 0x17, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xa8, 0xe8, 0xb6, 0x58, 0xb, 0, 0x84, 0xc0, 0x74, 0x69, 0x8d, 0x45, 0xa8, 0xe8, 0x5, 0x46, 0, 0, 0xe8, 0xf8, 0x4a, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xac, 0xe8, 0x66, 0xf, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xac, 0xe8, 0x18, 0x17, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xac, 0xe8, 0x87, 0x58, 0xb, 0, 0x84, 0xc0, 0x74, 0x38, 0x8d, 0x45, 0xac, 0xe8, 0x12, 0xf, 0xff, 0xff, 0x3b, 0x45, 0xfc, 0x74, 0x29, 0x8d, 0x45, 0xac, 0xe8, 0x9d, 0xe, 0xff, 0xff, 0x8b, 0x58, 0x1e, 0xc1, 0xfb, 0x10, 0x8d, 0x45, 0xac, 0xe8, 0x8f, 0xe, 0xff, 0xff, 0x8b, 0x50, 0x1c, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0x9c, 0xe8, 0x9, 0x52, 0, 0, 0x1, 0xd8, 0xc6, 0, 0, 0xeb, 0xb2, 0xeb, 0x81, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x2e, 0xe8, 0x3c, 0x58, 0xb, 0, 0x84, 0xc0, 0x74, 0x6a, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x2e, 0xe8, 0x2c, 0x44, 0, 0, 0xe8, 0x2b, 0x45, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xac, 0xe8, 0xe9, 0xe, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xac, 0xe8, 0x9b, 0x16, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xac, 0xe8, 0xa, 0x58, 0xb, 0, 0x84, 0xc0, 0x74, 0x38, 0x8d, 0x45, 0xac, 0xe8, 0x95, 0xe, 0xff, 0xff, 0x3b, 0x45, 0xfc, 0x74, 0x29, 0x8d, 0x45, 0xac, 0xe8, 0x20, 0xe, 0xff, 0xff, 0x8b, 0x58, 0x1e, 0xc1, 0xfb, 0x10, 0x8d, 0x45, 0xac, 0xe8, 0x12, 0xe, 0xff, 0xff, 0x8b, 0x50, 0x1c, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0x9c, 0xe8, 0x8c, 0x51, 0, 0, 0x1, 0xd8, 0xc6, 0, 0, 0xeb, 0xb2, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x3e, 0xe8, 0x3b, 0x5f, 0, 0, 0x84, 0xc0, 0x74, 0x11, 0x31, 0xd2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x3e, 0xe8, 0xaf, 0x57, 0xb, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x2f, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x3e, 0xe8, 0xa1, 0xf, 0xff, 0xff, 0x8b, 0x58, 0x1e, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x3e, 0xe8, 0x90, 0xf, 0xff, 0xff, 0x8b, 0x50, 0x1c, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0x9c, 0xe8, 0x36, 0x51, 0, 0, 0x1, 0xd8, 0xc6, 0, 0, 0x8d, 0x45, 0xb8, 0xe8, 0xf1, 0x14, 0xff, 0xff, 0x8d, 0x55, 0xbc, 0x8b, 0x45, 0xf8, 0xe8, 0x70, 0xfc, 0xff, 0xff, 0x8b, 0x5d, 0xfc, 0x8b, 0x5b, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xc0, 0xe8, 0x88, 0x14, 0xff, 0xff, 0x8b, 0x5d, 0xfc, 0x8b, 0x5b, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x55, 0xfc, 0x8b, 0x52, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xc4, 0xe8, 0x6e, 0x14, 0xff, 0xff, 0x8b, 0x45, 0xbe, 0x2b, 0x45, 0xc2, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xbc, 0x2b, 0x45, 0xc0, 0x98, 0xe8, 0xe6, 0x6c, 0xd, 0, 0x89, 0x45, 0xd0, 0x8d, 0x55, 0xc4, 0x8d, 0x45, 0xcc, 0xe8, 0x3, 0x8, 0xff, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xbc, 0x8d, 0x45, 0xc8, 0xe8, 0xf6, 0x7, 0xff, 0xff, 0x89, 0xda, 0xe8, 0x55, 0x9, 0x2, 0, 0x6b, 0xc0, 0x32, 0x89, 0x45, 0xe4, 0xc7, 0x45, 0xd8, 0x1, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xd8, 0xff, 0x45, 0xd8, 0xf, 0xbf, 0x55, 0xe4, 0xbb, 0x64, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0xf, 0xbf, 0x55, 0xd8, 0x39, 0xc2, 0xf, 0x8d, 0xf6, 0x1, 0, 0, 0x8b, 0x45, 0xd0, 0x5, 0x2, 0, 0, 0, 0x25, 0x7, 0, 0, 0, 0x89, 0x45, 0xe0, 0xf, 0xbf, 0x45, 0xe0, 0xc1, 0xe0, 0x2, 0x66, 0x8b, 0x80, 0x48, 0x53, 0x1c, 0x10, 0xf, 0xaf, 0x45, 0xd8, 0x8b, 0x55, 0xbc, 0x1, 0xc2, 0x66, 0x89, 0x55, 0xb8, 0xf, 0xbf, 0x45, 0xe0, 0xc1, 0xe0, 0x2, 0x66, 0x8b, 0x80, 0x4a, 0x53, 0x1c, 0x10, 0xf, 0xaf, 0x45, 0xd8, 0x8b, 0x55, 0xbe, 0x1, 0xc2, 0x66, 0x89, 0x55, 0xba, 0x8b, 0x45, 0xe0, 0x5, 0x3, 0, 0, 0, 0x25, 0x6, 0, 0, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xd0, 0x25, 0x1, 0, 0, 0, 0x89, 0x45, 0xdc, 0xeb, 0x4, 0x83, 0x45, 0xdc, 0x2, 0xf, 0xbf, 0x45, 0xdc, 0x83, 0xf8, 0x5, 0xf, 0x8d, 0x7d, 0x1, 0, 0, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0x98, 0xeb, 0x3e, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xd4, 0xeb, 0x53, 0x8b, 0x45, 0xd8, 0x1, 0xc0, 0x89, 0x45, 0xd4, 0xeb, 0x49, 0x8b, 0x45, 0xd8, 0x1, 0xc0, 0x40, 0x89, 0x45, 0xd4, 0xeb, 0x3e, 0x8b, 0x45, 0xd8, 0x40, 0x89, 0x45, 0xd4, 0xeb, 0x35, 0xeb, 0x33, 0x8b, 0xc0, 0x22, 0x57, 0x8, 0x10, 0x2a, 0x57, 0x8, 0x10, 0x2a, 0x57, 0x8, 0x10, 0x34, 0x57, 0x8, 0x10, 0x3f, 0x57, 0x8, 0x10, 0x8b, 0x45, 0x98, 0x89, 0x45, 0x94, 0x66, 0x83, 0x7d, 0x94, 0x4, 0x77, 0xdb, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0x94, 0xc1, 0xe0, 0x2, 0x2e, 0xff, 0xa0, 0x4c, 0x57, 0x8, 0x10, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xe8, 0xff, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x66, 0x3b, 0x45, 0xd4, 0xf, 0x8d, 0xe9, 0, 0, 0, 0xf, 0xbf, 0x45, 0xb8, 0x85, 0xc0, 0x7c, 0xc, 0x8b, 0x45, 0xb8, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7c, 0x2, 0xeb, 0x8, 0xf, 0xbf, 0x45, 0xba, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0xc, 0x8b, 0x45, 0xba, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x7c, 0x2, 0xeb, 0x1d, 0xf, 0xbf, 0x5d, 0xba, 0xf, 0xbf, 0x55, 0xb8, 0x8d, 0x45, 0x9c, 0xe8, 0x51, 0x4f, 0, 0, 0x1, 0xd8, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x1f, 0x83, 0x7d, 0xb4, 0, 0x74, 0x17, 0xf, 0xbf, 0x45, 0xb8, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xb4, 0xf, 0xbf, 0x55, 0xba, 0x8b, 0, 0x1, 0xd0, 0xf6, 0, 0x8, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x60, 0x8d, 0x55, 0xbc, 0x8d, 0x45, 0x90, 0xe8, 0x52, 0x6, 0xff, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xb8, 0x8d, 0x45, 0x8c, 0xe8, 0x45, 0x6, 0xff, 0xff, 0x89, 0xda, 0xe8, 0xa4, 0x7, 0x2, 0, 0x6b, 0xc8, 0x32, 0x8d, 0x55, 0xc0, 0x8d, 0x45, 0x88, 0xe8, 0x30, 0x6, 0xff, 0xff, 0x89, 0xc3, 0x8d, 0x55, 0xb8, 0x8d, 0x45, 0x84, 0xe8, 0x23, 0x6, 0xff, 0xff, 0x89, 0xda, 0xe8, 0x82, 0x7, 0x2, 0, 0x1, 0xc1, 0x89, 0x4d, 0xec, 0x8b, 0x45, 0xec, 0x66, 0x3b, 0x45, 0xe4, 0x7d, 0x11, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe4, 0x8d, 0x55, 0xb8, 0x8d, 0x45, 0xc4, 0xe8, 0xdd, 0x32, 0, 0, 0xf, 0xbf, 0x45, 0xe0, 0xc1, 0xe0, 0x2, 0xba, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8d, 0x45, 0xb8, 0xe8, 0x27, 0x59, 0, 0, 0xe9, 0x4, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xe0, 0x5, 0x2, 0, 0, 0, 0x25, 0x7, 0, 0, 0, 0x89, 0x45, 0xe0, 0xe9, 0x72, 0xfe, 0xff, 0xff, 0xe9, 0xe8, 0xfd, 0xff, 0xff, 0x8b, 0x45, 0xc4, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x42, 0x1e, 0x8b, 0x45, 0xc6, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x42, 0x20, 0x31, 0xd2, 0x8d, 0x45, 0xac, 0xe8, 0xb2, 0x6, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xa8, 0xe8, 0x80, 0x37, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0x9c, 0xe8, 0xd1, 0x63, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100853e6, 0x5)   pushd(0x94);                          /* push dword 0x94 */
    II(0x100853eb, 0x5)   calld(sys_check_available_stack_size, 0xe0962); /* call 0x10165d52 */
    II(0x100853f0, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100853f1, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100853f2, 0x1)   pushd(esi);                           /* push esi */
    II(0x100853f3, 0x1)   pushd(edi);                           /* push edi */
    II(0x100853f4, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100853f5, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100853f7, 0x6)   sub(esp, 0x7c);                       /* sub esp, 0x7c */
    II(0x100853fd, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10085400, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x10085403, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x10085407, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x1008540a, 0x5)   calld(0x1008bbed, 0x67de);            /* call 0x1008bbed */
    II(0x1008540f, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x10085412, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x10085416, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10085419, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x1008541c, 0x5)   calld(0x10089d08, 0x48e7);            /* call 0x10089d08 */
    II(0x10085421, 0x3)   lea(ebx, ebp - 0x58);                 /* lea ebx, [ebp-0x58] */
    II(0x10085424, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10085426, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10085428, 0x5)   calld(0x10089be4, 0x47b7);            /* call 0x10089be4 */
    II(0x1008542d, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x10085431, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x10085434, 0x5)   calld(0x100764fc, -0xef3d);           /* call 0x100764fc */
    II(0x10085439, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x1008543c, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x10085440, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10085443, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10085446, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10085449, 0x6)   imul(eax, eax, 0xc5);                 /* imul eax, eax, 0xc5 */
    II(0x1008544f, 0x5)   mov(ebx, 0x101c31c4);                 /* mov ebx, 0x101c31c4 */
    II(0x10085454, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10085456, 0x5)   calld(0x1008a0c8, 0x4c6d);            /* call 0x1008a0c8 */
    II(0x1008545b, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
    II(0x1008545e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10085461, 0x3)   mov(al, memb_a32(ds, eax + 0x54));    /* mov al, [eax+0x54] */
    II(0x10085464, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10085469, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008546b, 0x2)   jnzd(0x10085473, 0x6);                /* jnz 0x10085473 */
    II(0x1008546d, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x3);   /* mov byte [ebp-0x10], 0x3 */
    II(0x10085471, 0x2)   jmpd(0x10085477, 0x4);                /* jmp 0x10085477 */
l_0x10085473:
    II(0x10085473, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x2);   /* mov byte [ebp-0x10], 0x2 */
l_0x10085477:
    II(0x10085477, 0x4)   movsx(ecx, memb_a32(ss, ebp - 0x10)); /* movsx ecx, byte [ebp-0x10] */
    II(0x1008547b, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x10085480, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x10085483, 0x5)   calld(0x1008a6f8, 0x5270);            /* call 0x1008a6f8 */
    II(0x10085488, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008548a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008548d, 0x5)   calld(0x1011ef28, 0x99a96);           /* call 0x1011ef28 */
    II(0x10085492, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10085495, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x10085498, 0x5)   calld(0x10089d08, 0x486b);            /* call 0x10089d08 */
    II(0x1008549d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008549f, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x100854a2, 0x5)   calld(0x10089b68, 0x46c1);            /* call 0x10089b68 */
    II(0x100854a7, 0x2)   jmpd(0x100854b1, 0x8);                /* jmp 0x100854b1 */
l_0x100854a9:
    II(0x100854a9, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x100854ac, 0x5)   calld(0x10076bf8, -0xe8b9);           /* call 0x10076bf8 */
l_0x100854b1:
    II(0x100854b1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100854b3, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x100854b6, 0x5)   calld(0x1013ad71, 0xb58b6);           /* call 0x1013ad71 */
    II(0x100854bb, 0x2)   test(al, al);                         /* test al, al */
    II(0x100854bd, 0x2)   jzd(0x10085528, 0x69);                /* jz 0x10085528 */
    II(0x100854bf, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x100854c2, 0x5)   calld(0x10089acc, 0x4605);            /* call 0x10089acc */
    II(0x100854c7, 0x5)   calld(0x10089fc4, 0x4af8);            /* call 0x10089fc4 */
    II(0x100854cc, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100854ce, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100854d1, 0x5)   calld(0x1007643c, -0xf09a);           /* call 0x1007643c */
    II(0x100854d6, 0x2)   jmpd(0x100854e0, 0x8);                /* jmp 0x100854e0 */
l_0x100854d8:
    II(0x100854d8, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100854db, 0x5)   calld(0x10076bf8, -0xe8e8);           /* call 0x10076bf8 */
l_0x100854e0:
    II(0x100854e0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100854e2, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100854e5, 0x5)   calld(0x1013ad71, 0xb5887);           /* call 0x1013ad71 */
    II(0x100854ea, 0x2)   test(al, al);                         /* test al, al */
    II(0x100854ec, 0x2)   jzd(0x10085526, 0x38);                /* jz 0x10085526 */
    II(0x100854ee, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100854f1, 0x5)   calld(0x10076408, -0xf0ee);           /* call 0x10076408 */
    II(0x100854f6, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x4));    /* cmp eax, [ebp-0x4] */
    II(0x100854f9, 0x2)   jzd(0x10085524, 0x29);                /* jz 0x10085524 */
    II(0x100854fb, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100854fe, 0x5)   calld(0x100763a0, -0xf163);           /* call 0x100763a0 */
    II(0x10085503, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1e));   /* mov ebx, [eax+0x1e] */
    II(0x10085506, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10085509, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x1008550c, 0x5)   calld(0x100763a0, -0xf171);           /* call 0x100763a0 */
    II(0x10085511, 0x3)   mov(edx, memd_a32(ds, eax + 0x1c));   /* mov edx, [eax+0x1c] */
    II(0x10085514, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10085517, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x1008551a, 0x5)   calld(0x1008a728, 0x5209);            /* call 0x1008a728 */
    II(0x1008551f, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10085521, 0x3)   mov(memb_a32(ds, eax), 0);            /* mov byte [eax], 0x0 */
l_0x10085524:
    II(0x10085524, 0x2)   jmpd(0x100854d8, -0x4e);              /* jmp 0x100854d8 */
l_0x10085526:
    II(0x10085526, 0x2)   jmpd(0x100854a9, -0x7f);              /* jmp 0x100854a9 */
l_0x10085528:
    II(0x10085528, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008552a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1008552d, 0x3)   add(eax, 0x2e);                       /* add eax, 0x2e */
    II(0x10085530, 0x5)   calld(0x1013ad71, 0xb583c);           /* call 0x1013ad71 */
    II(0x10085535, 0x2)   test(al, al);                         /* test al, al */
    II(0x10085537, 0x2)   jzd(0x100855a3, 0x6a);                /* jz 0x100855a3 */
    II(0x10085539, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1008553c, 0x3)   add(eax, 0x2e);                       /* add eax, 0x2e */
    II(0x1008553f, 0x5)   calld(0x10089970, 0x442c);            /* call 0x10089970 */
    II(0x10085544, 0x5)   calld(0x10089a74, 0x452b);            /* call 0x10089a74 */
    II(0x10085549, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008554b, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x1008554e, 0x5)   calld(0x1007643c, -0xf117);           /* call 0x1007643c */
    II(0x10085553, 0x2)   jmpd(0x1008555d, 0x8);                /* jmp 0x1008555d */
l_0x10085555:
    II(0x10085555, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x10085558, 0x5)   calld(0x10076bf8, -0xe965);           /* call 0x10076bf8 */
l_0x1008555d:
    II(0x1008555d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008555f, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x10085562, 0x5)   calld(0x1013ad71, 0xb580a);           /* call 0x1013ad71 */
    II(0x10085567, 0x2)   test(al, al);                         /* test al, al */
    II(0x10085569, 0x2)   jzd(0x100855a3, 0x38);                /* jz 0x100855a3 */
    II(0x1008556b, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x1008556e, 0x5)   calld(0x10076408, -0xf16b);           /* call 0x10076408 */
    II(0x10085573, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x4));    /* cmp eax, [ebp-0x4] */
    II(0x10085576, 0x2)   jzd(0x100855a1, 0x29);                /* jz 0x100855a1 */
    II(0x10085578, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x1008557b, 0x5)   calld(0x100763a0, -0xf1e0);           /* call 0x100763a0 */
    II(0x10085580, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1e));   /* mov ebx, [eax+0x1e] */
    II(0x10085583, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10085586, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x10085589, 0x5)   calld(0x100763a0, -0xf1ee);           /* call 0x100763a0 */
    II(0x1008558e, 0x3)   mov(edx, memd_a32(ds, eax + 0x1c));   /* mov edx, [eax+0x1c] */
    II(0x10085591, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10085594, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x10085597, 0x5)   calld(0x1008a728, 0x518c);            /* call 0x1008a728 */
    II(0x1008559c, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x1008559e, 0x3)   mov(memb_a32(ds, eax), 0);            /* mov byte [eax], 0x0 */
l_0x100855a1:
    II(0x100855a1, 0x2)   jmpd(0x10085555, -0x4e);              /* jmp 0x10085555 */
l_0x100855a3:
    II(0x100855a3, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100855a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100855a9, 0x3)   add(eax, 0x3e);                       /* add eax, 0x3e */
    II(0x100855ac, 0x5)   calld(0x1008b4ec, 0x5f3b);            /* call 0x1008b4ec */
    II(0x100855b1, 0x2)   test(al, al);                         /* test al, al */
    II(0x100855b3, 0x2)   jzd(0x100855c6, 0x11);                /* jz 0x100855c6 */
    II(0x100855b5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100855b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100855ba, 0x3)   add(eax, 0x3e);                       /* add eax, 0x3e */
    II(0x100855bd, 0x5)   calld(0x1013ad71, 0xb57af);           /* call 0x1013ad71 */
    II(0x100855c2, 0x2)   test(al, al);                         /* test al, al */
    II(0x100855c4, 0x2)   jnzd(0x100855c8, 0x2);                /* jnz 0x100855c8 */
l_0x100855c6:
    II(0x100855c6, 0x2)   jmpd(0x100855f7, 0x2f);               /* jmp 0x100855f7 */
l_0x100855c8:
    II(0x100855c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100855cb, 0x3)   add(eax, 0x3e);                       /* add eax, 0x3e */
    II(0x100855ce, 0x5)   calld(0x10076574, -0xf05f);           /* call 0x10076574 */
    II(0x100855d3, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1e));   /* mov ebx, [eax+0x1e] */
    II(0x100855d6, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100855d9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100855dc, 0x3)   add(eax, 0x3e);                       /* add eax, 0x3e */
    II(0x100855df, 0x5)   calld(0x10076574, -0xf070);           /* call 0x10076574 */
    II(0x100855e4, 0x3)   mov(edx, memd_a32(ds, eax + 0x1c));   /* mov edx, [eax+0x1c] */
    II(0x100855e7, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100855ea, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100855ed, 0x5)   calld(0x1008a728, 0x5136);            /* call 0x1008a728 */
    II(0x100855f2, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100855f4, 0x3)   mov(memb_a32(ds, eax), 0);            /* mov byte [eax], 0x0 */
l_0x100855f7:
    II(0x100855f7, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100855fa, 0x5)   calld(my_ctor_0x101b4184, -0xeb0f);   /* call 0x10076af0 */
    II(0x100855ff, 0x3)   lea(edx, ebp - 0x44);                 /* lea edx, [ebp-0x44] */
    II(0x10085602, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10085605, 0x5)   calld(0x1008527a, -0x390);            /* call 0x1008527a */
    II(0x1008560a, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x1008560d, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x1a));   /* mov ebx, [ebx+0x1a] */
    II(0x10085610, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10085613, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10085616, 0x3)   mov(edx, memd_a32(ds, edx + 0x18));   /* mov edx, [edx+0x18] */
    II(0x10085619, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1008561c, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x1008561f, 0x5)   calld(0x10076aac, -0xeb78);           /* call 0x10076aac */
    II(0x10085624, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x10085627, 0x3)   mov(ebx, memd_a32(ds, ebx + 0x1a));   /* mov ebx, [ebx+0x1a] */
    II(0x1008562a, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1008562d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10085630, 0x3)   mov(edx, memd_a32(ds, edx + 0x18));   /* mov edx, [edx+0x18] */
    II(0x10085633, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10085636, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10085639, 0x5)   calld(0x10076aac, -0xeb92);           /* call 0x10076aac */
    II(0x1008563e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x42));   /* mov eax, [ebp-0x42] */
    II(0x10085641, 0x3)   sub(eax, memd_a32(ss, ebp - 0x3e));   /* sub eax, [ebp-0x3e] */
    II(0x10085644, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10085647, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x1008564a, 0x3)   sub(eax, memd_a32(ss, ebp - 0x40));   /* sub eax, [ebp-0x40] */
    II(0x1008564d, 0x1)   cwde();                               /* cwde */
    II(0x1008564e, 0x5)   calld(0x1015c339, 0xd6ce6);           /* call 0x1015c339 */
    II(0x10085653, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x10085656, 0x3)   lea(edx, ebp - 0x3c);                 /* lea edx, [ebp-0x3c] */
    II(0x10085659, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1008565c, 0x5)   calld(0x10075e64, -0xf7fd);           /* call 0x10075e64 */
    II(0x10085661, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10085663, 0x3)   lea(edx, ebp - 0x44);                 /* lea edx, [ebp-0x44] */
    II(0x10085666, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x10085669, 0x5)   calld(0x10075e64, -0xf80a);           /* call 0x10075e64 */
    II(0x1008566e, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x10085670, 0x5)   calld(0x100a5fca, 0x20955);           /* call 0x100a5fca */
    II(0x10085675, 0x3)   imul(eax, eax, 0x32);                 /* imul eax, eax, 0x32 */
    II(0x10085678, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1008567b, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0x1);   /* mov dword [ebp-0x28], 0x1 */
    II(0x10085682, 0x2)   jmpd(0x1008568a, 0x6);                /* jmp 0x1008568a */
l_0x10085684:
    II(0x10085684, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10085687, 0x3)   inc(memd_a32(ss, ebp - 0x28));        /* inc dword [ebp-0x28] */
l_0x1008568a:
    II(0x1008568a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x1008568e, 0x5)   mov(ebx, 0x64);                       /* mov ebx, 0x64 */
    II(0x10085693, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10085695, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10085698, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1008569a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x28)); /* movsx edx, word [ebp-0x28] */
    II(0x1008569e, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100856a0, 0x6)   jged(0x1008589c, 0x1f6);              /* jge dword 0x1008589c */
    II(0x100856a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100856a9, 0x5)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x100856ae, 0x5)   and_(eax, 0x7);                       /* and eax, 0x7 */
    II(0x100856b3, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100856b6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100856ba, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100856bd, 0x7)   mov(ax, memw_a32(ds, eax + 0x101c5348)); /* mov ax, [eax+0x101c5348] */
    II(0x100856c4, 0x4)   imul(eax, memd_a32(ss, ebp - 0x28));  /* imul eax, [ebp-0x28] */
    II(0x100856c8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x44));   /* mov edx, [ebp-0x44] */
    II(0x100856cb, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100856cd, 0x4)   mov(memw_a32(ss, ebp - 0x48), dx);    /* mov [ebp-0x48], dx */
    II(0x100856d1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x100856d5, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100856d8, 0x7)   mov(ax, memw_a32(ds, eax + 0x101c534a)); /* mov ax, [eax+0x101c534a] */
    II(0x100856df, 0x4)   imul(eax, memd_a32(ss, ebp - 0x28));  /* imul eax, [ebp-0x28] */
    II(0x100856e3, 0x3)   mov(edx, memd_a32(ss, ebp - 0x42));   /* mov edx, [ebp-0x42] */
    II(0x100856e6, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100856e8, 0x4)   mov(memw_a32(ss, ebp - 0x46), dx);    /* mov [ebp-0x46], dx */
    II(0x100856ec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100856ef, 0x5)   add(eax, 0x3);                        /* add eax, 0x3 */
    II(0x100856f4, 0x5)   and_(eax, 0x6);                       /* and eax, 0x6 */
    II(0x100856f9, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100856fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100856ff, 0x5)   and_(eax, 0x1);                       /* and eax, 0x1 */
    II(0x10085704, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x10085707, 0x2)   jmpd(0x1008570d, 0x4);                /* jmp 0x1008570d */
l_0x10085709:
    II(0x10085709, 0x4)   add(memd_a32(ss, ebp - 0x24), 0x2);   /* add dword [ebp-0x24], 0x2 */
l_0x1008570d:
    II(0x1008570d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x10085711, 0x3)   cmp(eax, 0x5);                        /* cmp eax, 0x5 */
    II(0x10085714, 0x6)   jged(0x10085897, 0x17d);              /* jge dword 0x10085897 */
    II(0x1008571a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1008571d, 0x3)   mov(memd_a32(ss, ebp - 0x68), eax);   /* mov [ebp-0x68], eax */
    II(0x10085720, 0x2)   jmpd(0x10085760, 0x3e);               /* jmp 0x10085760 */
l_0x10085722:
    II(0x10085722, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10085725, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x10085728, 0x2)   jmpd(0x1008577d, 0x53);               /* jmp 0x1008577d */
l_0x1008572a:
    II(0x1008572a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1008572d, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x1008572f, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x10085732, 0x2)   jmpd(0x1008577d, 0x49);               /* jmp 0x1008577d */
l_0x10085734:
    II(0x10085734, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10085737, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x10085739, 0x1)   inc(eax);                             /* inc eax */
    II(0x1008573a, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x1008573d, 0x2)   jmpd(0x1008577d, 0x3e);               /* jmp 0x1008577d */
l_0x1008573f:
    II(0x1008573f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10085742, 0x1)   inc(eax);                             /* inc eax */
    II(0x10085743, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x10085746, 0x2)   jmpd(0x1008577d, 0x35);               /* jmp 0x1008577d */
l_0x10085748:
    II(0x10085748, 0x2)   jmpd(0x1008577d, 0x33);               /* jmp 0x1008577d */
//    II(0x1008574a, 0x2)   /* Выравнивание. */
//    II(0x1008574c, 0x14)  /* Служебная область с абсолютными адресами переходов. {0x10085722, 0x1008572a, 0x1008572a, 0x10085734, 0x1008573f}. */
l_0x10085760:
    II(0x10085760, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x10085763, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
    II(0x10085766, 0x5)   cmp(memw_a32(ss, ebp - 0x6c), 0x4);   /* cmp word [ebp-0x6c], 0x4 */
    II(0x1008576b, 0x2)   jad(0x10085748, -0x25);               /* ja 0x10085748 */
    II(0x1008576d, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1008576f, 0x4)   mov(ax, memw_a32(ss, ebp - 0x6c));    /* mov ax, [ebp-0x6c] */
    II(0x10085773, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10085776, 0x7)   jmpd_abs_switch(memd_a32(cs, eax + 0x1008574c), (0x10085722)(0x1008572a)(0x10085734)(0x1008573f)); /* jmp dword near [cs:eax+0x1008574c] */
l_0x1008577d:
    II(0x1008577d, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x10085784, 0x2)   jmpd(0x1008578c, 0x6);                /* jmp 0x1008578c */
l_0x10085786:
    II(0x10085786, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10085789, 0x3)   inc(memd_a32(ss, ebp - 0x18));        /* inc dword [ebp-0x18] */
l_0x1008578c:
    II(0x1008578c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1008578f, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x2c));    /* cmp ax, [ebp-0x2c] */
    II(0x10085793, 0x6)   jged(0x10085882, 0xe9);               /* jge dword 0x10085882 */
    II(0x10085799, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x48)); /* movsx eax, word [ebp-0x48] */
    II(0x1008579d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008579f, 0x2)   jld(0x100857ad, 0xc);                 /* jl 0x100857ad */
    II(0x100857a1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100857a4, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x100857ab, 0x2)   jld(0x100857af, 0x2);                 /* jl 0x100857af */
l_0x100857ad:
    II(0x100857ad, 0x2)   jmpd(0x100857b7, 0x8);                /* jmp 0x100857b7 */
l_0x100857af:
    II(0x100857af, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x46)); /* movsx eax, word [ebp-0x46] */
    II(0x100857b3, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100857b5, 0x2)   jged(0x100857b9, 0x2);                /* jge 0x100857b9 */
l_0x100857b7:
    II(0x100857b7, 0x2)   jmpd(0x100857c5, 0xc);                /* jmp 0x100857c5 */
l_0x100857b9:
    II(0x100857b9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x46));   /* mov eax, [ebp-0x46] */
    II(0x100857bc, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x100857c3, 0x2)   jld(0x100857c7, 0x2);                 /* jl 0x100857c7 */
l_0x100857c5:
    II(0x100857c5, 0x2)   jmpd(0x100857e4, 0x1d);               /* jmp 0x100857e4 */
l_0x100857c7:
    II(0x100857c7, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x46)); /* movsx ebx, word [ebp-0x46] */
    II(0x100857cb, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x48)); /* movsx edx, word [ebp-0x48] */
    II(0x100857cf, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100857d2, 0x5)   calld(0x1008a728, 0x4f51);            /* call 0x1008a728 */
    II(0x100857d7, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x100857d9, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100857db, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100857e0, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100857e2, 0x2)   jgd(0x100857e6, 0x2);                 /* jg 0x100857e6 */
l_0x100857e4:
    II(0x100857e4, 0x2)   jmpd(0x10085805, 0x1f);               /* jmp 0x10085805 */
l_0x100857e6:
    II(0x100857e6, 0x4)   cmp(memd_a32(ss, ebp - 0x4c), 0);     /* cmp dword [ebp-0x4c], 0x0 */
    II(0x100857ea, 0x2)   jzd(0x10085803, 0x17);                /* jz 0x10085803 */
    II(0x100857ec, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x48)); /* movsx eax, word [ebp-0x48] */
    II(0x100857f0, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100857f3, 0x3)   add(eax, memd_a32(ss, ebp - 0x4c));   /* add eax, [ebp-0x4c] */
    II(0x100857f6, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x46)); /* movsx edx, word [ebp-0x46] */
    II(0x100857fa, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100857fc, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100857fe, 0x3)   test(memb_a32(ds, eax), 0x8);         /* test byte [eax], 0x8 */
    II(0x10085801, 0x2)   jnzd(0x10085805, 0x2);                /* jnz 0x10085805 */
l_0x10085803:
    II(0x10085803, 0x2)   jmpd(0x10085807, 0x2);                /* jmp 0x10085807 */
l_0x10085805:
    II(0x10085805, 0x2)   jmpd(0x10085867, 0x60);               /* jmp 0x10085867 */
l_0x10085807:
    II(0x10085807, 0x3)   lea(edx, ebp - 0x44);                 /* lea edx, [ebp-0x44] */
    II(0x1008580a, 0x3)   lea(eax, ebp - 0x70);                 /* lea eax, [ebp-0x70] */
    II(0x1008580d, 0x5)   calld(0x10075e64, -0xf9ae);           /* call 0x10075e64 */
    II(0x10085812, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10085814, 0x3)   lea(edx, ebp - 0x48);                 /* lea edx, [ebp-0x48] */
    II(0x10085817, 0x3)   lea(eax, ebp - 0x74);                 /* lea eax, [ebp-0x74] */
    II(0x1008581a, 0x5)   calld(0x10075e64, -0xf9bb);           /* call 0x10075e64 */
    II(0x1008581f, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x10085821, 0x5)   calld(0x100a5fca, 0x207a4);           /* call 0x100a5fca */
    II(0x10085826, 0x3)   imul(ecx, eax, 0x32);                 /* imul ecx, eax, 0x32 */
    II(0x10085829, 0x3)   lea(edx, ebp - 0x40);                 /* lea edx, [ebp-0x40] */
    II(0x1008582c, 0x3)   lea(eax, ebp - 0x78);                 /* lea eax, [ebp-0x78] */
    II(0x1008582f, 0x5)   calld(0x10075e64, -0xf9d0);           /* call 0x10075e64 */
    II(0x10085834, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10085836, 0x3)   lea(edx, ebp - 0x48);                 /* lea edx, [ebp-0x48] */
    II(0x10085839, 0x3)   lea(eax, ebp - 0x7c);                 /* lea eax, [ebp-0x7c] */
    II(0x1008583c, 0x5)   calld(0x10075e64, -0xf9dd);           /* call 0x10075e64 */
    II(0x10085841, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x10085843, 0x5)   calld(0x100a5fca, 0x20782);           /* call 0x100a5fca */
    II(0x10085848, 0x2)   add(ecx, eax);                        /* add ecx, eax */
    II(0x1008584a, 0x3)   mov(memd_a32(ss, ebp - 0x14), ecx);   /* mov [ebp-0x14], ecx */
    II(0x1008584d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10085850, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x1c));    /* cmp ax, [ebp-0x1c] */
    II(0x10085854, 0x2)   jged(0x10085867, 0x11);               /* jge 0x10085867 */
    II(0x10085856, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10085859, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1008585c, 0x3)   lea(edx, ebp - 0x48);                 /* lea edx, [ebp-0x48] */
    II(0x1008585f, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10085862, 0x5)   calld(0x10088b44, 0x32dd);            /* call 0x10088b44 */
l_0x10085867:
    II(0x10085867, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x20)); /* movsx eax, word [ebp-0x20] */
    II(0x1008586b, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1008586e, 0x5)   mov(edx, 0x101c5348);                 /* mov edx, 0x101c5348 */
    II(0x10085873, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10085875, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x10085878, 0x5)   calld(0x1008b1a4, 0x5927);            /* call 0x1008b1a4 */
    II(0x1008587d, 0x5)   jmpd(0x10085786, -0xfc);              /* jmp 0x10085786 */
l_0x10085882:
    II(0x10085882, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10085885, 0x5)   add(eax, 0x2);                        /* add eax, 0x2 */
    II(0x1008588a, 0x5)   and_(eax, 0x7);                       /* and eax, 0x7 */
    II(0x1008588f, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10085892, 0x5)   jmpd(0x10085709, -0x18e);             /* jmp 0x10085709 */
l_0x10085897:
    II(0x10085897, 0x5)   jmpd(0x10085684, -0x218);             /* jmp 0x10085684 */
l_0x1008589c:
    II(0x1008589c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x1008589f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100858a2, 0x4)   mov(memw_a32(ds, edx + 0x1e), ax);    /* mov [edx+0x1e], ax */
    II(0x100858a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3a));   /* mov eax, [ebp-0x3a] */
    II(0x100858a9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100858ac, 0x4)   mov(memw_a32(ds, edx + 0x20), ax);    /* mov [edx+0x20], ax */
    II(0x100858b0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100858b2, 0x3)   lea(eax, ebp - 0x54);                 /* lea eax, [ebp-0x54] */
    II(0x100858b5, 0x5)   calld(0x10075f6c, -0xf94e);           /* call 0x10075f6c */
    II(0x100858ba, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100858bc, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x100858bf, 0x5)   calld(0x10089044, 0x3780);            /* call 0x10089044 */
    II(0x100858c4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100858c6, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100858c9, 0x5)   calld(0x1008bc9f, 0x63d1);            /* call 0x1008bc9f */
    II(0x100858ce, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100858d0, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100858d1, 0x1)   popd(edi);                            /* pop edi */
    II(0x100858d2, 0x1)   popd(esi);                            /* pop esi */
    II(0x100858d3, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100858d4, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100858d5, 0x1)   retd();                               /* ret */
FUNC_END

