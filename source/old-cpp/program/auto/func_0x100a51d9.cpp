FUNC_BEGIN(0x100a51d9, 0x2647cd1bcc1ecaa5, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x6f, 0xb, 0xc, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0xf6, 0x5c, 0xfe, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0x68, 0x5c, 0xfe, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0xe6, 0x19, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x55, 0x5b, 0x9, 0, 0x84, 0xc0, 0x74, 0x42, 0x8d, 0x45, 0xf0, 0xe8, 0x9c, 0x5b, 0xfe, 0xff, 0xe8, 0x63, 0x5b, 0xfe, 0xff, 0x66, 0x3b, 0x45, 0xfc, 0x75, 0x1b, 0x8d, 0x45, 0xf0, 0xe8, 0x89, 0x5b, 0xfe, 0xff, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xec, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xec, 0xff, 0x52, 0x28, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x10, 0xc6, 0x45, 0xf4, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x5e, 0x39, 0xfe, 0xff, 0xeb, 0x1c, 0xeb, 0xa8, 0xc6, 0x45, 0xf4, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x4c, 0x39, 0xfe, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x40, 0x39, 0xfe, 0xff, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100a51d9, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x100a51de, 0x5)   calld(sys_check_available_stack_size, 0xc0b6f); /* call 0x10165d52 */
    II(0x100a51e3, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100a51e4, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100a51e5, 0x1)   pushd(esi);                           /* push esi */
    II(0x100a51e6, 0x1)   pushd(edi);                           /* push edi */
    II(0x100a51e7, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100a51e8, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100a51ea, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100a51f0, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100a51f3, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x100a51f6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100a51f9, 0x5)   calld(0x1008aef4, -0x1a30a);          /* call 0x1008aef4 */
    II(0x100a51fe, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100a5200, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a5203, 0x5)   calld(0x1008ae70, -0x1a398);          /* call 0x1008ae70 */
    II(0x100a5208, 0x2)   jmpd(0x100a5212, 0x8);                /* jmp 0x100a5212 */
l_0x100a520a:
    II(0x100a520a, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a520d, 0x5)   calld(0x10076bf8, -0x2e61a);          /* call 0x10076bf8 */
l_0x100a5212:
    II(0x100a5212, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a5214, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a5217, 0x5)   calld(0x1013ad71, 0x95b55);           /* call 0x1013ad71 */
    II(0x100a521c, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a521e, 0x2)   jzd(0x100a5262, 0x42);                /* jz 0x100a5262 */
    II(0x100a5220, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a5223, 0x5)   calld(0x1008adc4, -0x1a464);          /* call 0x1008adc4 */
    II(0x100a5228, 0x5)   calld(0x1008ad90, -0x1a49d);          /* call 0x1008ad90 */
    II(0x100a522d, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4));     /* cmp ax, [ebp-0x4] */
    II(0x100a5231, 0x2)   jnzd(0x100a524e, 0x1b);               /* jnz 0x100a524e */
    II(0x100a5233, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a5236, 0x5)   calld(0x1008adc4, -0x1a477);          /* call 0x1008adc4 */
    II(0x100a523b, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
//    II(0x100a523e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a5241, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100a5244, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100a5247, 0x3)   calld_abs(memd_a32(ds, edx + 0x28));  /* call dword near [edx+0x28] */
    II(0x100a524a, 0x2)   test(al, al);                         /* test al, al */
    II(0x100a524c, 0x2)   jnzd(0x100a5250, 0x2);                /* jnz 0x100a5250 */
l_0x100a524e:
    II(0x100a524e, 0x2)   jmpd(0x100a5260, 0x10);               /* jmp 0x100a5260 */
l_0x100a5250:
    II(0x100a5250, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100a5254, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a5256, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a5259, 0x5)   calld(0x10088bbc, -0x1c6a2);          /* call 0x10088bbc */
    II(0x100a525e, 0x2)   jmpd(0x100a527c, 0x1c);               /* jmp 0x100a527c */
l_0x100a5260:
    II(0x100a5260, 0x2)   jmpd(0x100a520a, -0x58);              /* jmp 0x100a520a */
l_0x100a5262:
    II(0x100a5262, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100a5266, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100a5268, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100a526b, 0x5)   calld(0x10088bbc, -0x1c6b4);          /* call 0x10088bbc */
    II(0x100a5270, 0x2)   jmpd(0x100a527c, 0xa);                /* jmp 0x100a527c */
//  II(0x100a5272, 0xa)   /* Недостижимый код. */
l_0x100a527c:
    II(0x100a527c, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100a527f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100a5281, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100a5282, 0x1)   popd(edi);                            /* pop edi */
    II(0x100a5283, 0x1)   popd(esi);                            /* pop esi */
    II(0x100a5284, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100a5285, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100a5286, 0x1)   retd();                               /* ret */
FUNC_END

