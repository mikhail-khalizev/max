FUNC_BEGIN(0x1013468c, 0x724f441e564eebb9, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0xbc, 0x16, 0x3, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0xb8, 0, 0x15, 0, 0, 0xe8, 0x62, 0x19, 0x3, 0, 0xa3, 0x58, 0x94, 0x1c, 0x10, 0x83, 0x3d, 0x58, 0x94, 0x1c, 0x10, 0, 0x75, 0xc, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xe9, 0x9f, 0x2, 0, 0, 0xa1, 0x58, 0x94, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0x30, 0xc0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0xa3, 0xa0, 0x70, 0x1c, 0x10, 0xa1, 0xa0, 0x70, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0xa3, 0xa4, 0x70, 0x1c, 0x10, 0xa1, 0xa4, 0x70, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0xa3, 0xa8, 0x70, 0x1c, 0x10, 0xa1, 0xa8, 0x70, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0xa3, 0xac, 0x70, 0x1c, 0x10, 0xa1, 0xac, 0x70, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0xa3, 0xb0, 0x70, 0x1c, 0x10, 0xa1, 0xb0, 0x70, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0xa3, 0xb4, 0x70, 0x1c, 0x10, 0xa1, 0xb4, 0x70, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0xa3, 0xb8, 0x70, 0x1c, 0x10, 0xa1, 0xb8, 0x70, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0xa3, 0xbc, 0x70, 0x1c, 0x10, 0xa1, 0xbc, 0x70, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0xa3, 0xc4, 0x70, 0x1c, 0x10, 0xa1, 0xc4, 0x70, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0xa3, 0xc0, 0x70, 0x1c, 0x10, 0xa1, 0xc0, 0x70, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0xa3, 0xc8, 0x70, 0x1c, 0x10, 0xa1, 0xc8, 0x70, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0xa3, 0xcc, 0x70, 0x1c, 0x10, 0xa1, 0xcc, 0x70, 0x1c, 0x10, 0x5, 0, 0x1, 0, 0, 0xa3, 0x5c, 0x94, 0x1c, 0x10, 0xc7, 0x45, 0xfc, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xfc, 0xff, 0x45, 0xfc, 0xf, 0xbf, 0x45, 0xfc, 0x3d, 0, 0x1, 0, 0, 0x7d, 0x50, 0xf, 0xbf, 0x55, 0xfc, 0xa1, 0xb0, 0x70, 0x1c, 0x10, 0x1, 0xc2, 0x8a, 0x45, 0xfc, 0x88, 0x2, 0xf, 0xbf, 0x5d, 0xfc, 0xa1, 0xac, 0x70, 0x1c, 0x10, 0x1, 0xc3, 0x8a, 0x2, 0x88, 0x3, 0xf, 0xbf, 0x55, 0xfc, 0xa1, 0xa8, 0x70, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0x13, 0x88, 0x10, 0xf, 0xbf, 0x5d, 0xfc, 0x8b, 0x15, 0xa4, 0x70, 0x1c, 0x10, 0x1, 0xda, 0x8a, 0, 0x88, 0x2, 0xf, 0xbf, 0x45, 0xfc, 0x8b, 0x1d, 0xa0, 0x70, 0x1c, 0x10, 0x1, 0xd8, 0x8a, 0x12, 0x88, 0x10, 0xeb, 0x9f, 0x66, 0xc7, 0x45, 0xfc, 0, 0, 0xc7, 0x45, 0xf8, 0x20, 0, 0, 0, 0xeb, 0xd, 0x8b, 0x45, 0xfc, 0x66, 0xff, 0x45, 0xfc, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xfc, 0x83, 0xf8, 0x18, 0xf, 0x8d, 0xa7, 0, 0, 0, 0xf, 0xbf, 0x45, 0xfc, 0x83, 0xf8, 0x8, 0x75, 0x4, 0x83, 0x45, 0xf8, 0x8, 0x8b, 0x45, 0xfc, 0x25, 0x7, 0, 0, 0, 0x98, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x1d, 0xa0, 0x70, 0x1c, 0x10, 0x1, 0xda, 0x8a, 0x80, 0xf0, 0xb4, 0x1b, 0x10, 0x88, 0x2, 0x8b, 0x45, 0xfc, 0x25, 0x7, 0, 0, 0, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xf8, 0x8b, 0x1d, 0xa4, 0x70, 0x1c, 0x10, 0x1, 0xd8, 0x8a, 0x92, 0xf8, 0xb4, 0x1b, 0x10, 0x88, 0x10, 0x8b, 0x45, 0xfc, 0x25, 0x7, 0, 0, 0, 0x98, 0xf, 0xbf, 0x5d, 0xf8, 0x8b, 0x15, 0xa8, 0x70, 0x1c, 0x10, 0x1, 0xda, 0x8a, 0x80, 0, 0xb5, 0x1b, 0x10, 0x88, 0x2, 0x8b, 0x45, 0xfc, 0x25, 0x7, 0, 0, 0, 0x98, 0xf, 0xbf, 0x5d, 0xf8, 0x8b, 0x15, 0xac, 0x70, 0x1c, 0x10, 0x1, 0xda, 0x8a, 0x80, 0x8, 0xb5, 0x1b, 0x10, 0x88, 0x2, 0x8b, 0x45, 0xfc, 0x25, 0x7, 0, 0, 0, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xf8, 0x8b, 0x1d, 0xb0, 0x70, 0x1c, 0x10, 0x1, 0xd8, 0x8a, 0x92, 0x10, 0xb5, 0x1b, 0x10, 0x88, 0x10, 0xe9, 0x3f, 0xff, 0xff, 0xff, 0xa1, 0x5c, 0x94, 0x1c, 0x10, 0x5, 0, 0x7, 0, 0, 0x89, 0x45, 0xf4, 0x66, 0xc7, 0x45, 0xfc, 0, 0, 0xeb, 0x7, 0x8b, 0x45, 0xfc, 0x66, 0xff, 0x45, 0xfc, 0xf, 0xbf, 0x45, 0xfc, 0x3d, 0, 0x1, 0, 0, 0x7d, 0xd, 0x8b, 0x55, 0xf4, 0xff, 0x45, 0xf4, 0x8a, 0x45, 0xfc, 0x88, 0x2, 0xeb, 0xe1, 0x66, 0xc7, 0x5, 0xb4, 0x61, 0x1c, 0x10, 0, 0x20, 0xa1, 0xa0, 0x70, 0x1c, 0x10, 0xa3, 0xb6, 0x61, 0x1c, 0x10, 0x66, 0xc7, 0x5, 0xb0, 0x64, 0x1c, 0x10, 0, 0x10, 0xa1, 0xa4, 0x70, 0x1c, 0x10, 0xa3, 0xb2, 0x64, 0x1c, 0x10, 0x66, 0xc7, 0x5, 0xac, 0x67, 0x1c, 0x10, 0, 0x8, 0xa1, 0xa8, 0x70, 0x1c, 0x10, 0xa3, 0xae, 0x67, 0x1c, 0x10, 0x66, 0xc7, 0x5, 0xa8, 0x6a, 0x1c, 0x10, 0, 0x4, 0xa1, 0xac, 0x70, 0x1c, 0x10, 0xa3, 0xaa, 0x6a, 0x1c, 0x10, 0x66, 0xc7, 0x5, 0xa4, 0x6d, 0x1c, 0x10, 0, 0x80, 0xa1, 0xb0, 0x70, 0x1c, 0x10, 0xa3, 0xa6, 0x6d, 0x1c, 0x10, 0xc7, 0x45, 0xec, 0x1, 0, 0, 0, 0x8b, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1013468c, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x10134691, 0x5)   calld(sys_check_available_stack_size, 0x316bc); /* call 0x10165d52 */
    II(0x10134696, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10134697, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10134698, 0x1)   pushd(edx);                           /* push edx */
    II(0x10134699, 0x1)   pushd(esi);                           /* push esi */
    II(0x1013469a, 0x1)   pushd(edi);                           /* push edi */
    II(0x1013469b, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1013469c, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1013469e, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x101346a4, 0x5)   mov(eax, 0x1500);                     /* mov eax, 0x1500 */
    II(0x101346a9, 0x5)   calld(sys_new_arr, 0x31962);          /* call 0x10166010 */
    II(0x101346ae, 0x5)   mov(memd_a32(ds, 0x101c9458), eax);   /* mov [0x101c9458], eax */
    II(0x101346b3, 0x7)   cmp(memd_a32(ds, 0x101c9458), 0);     /* cmp dword [0x101c9458], 0x0 */
    II(0x101346ba, 0x2)   jnzd(0x101346c8, 0xc);                /* jnz 0x101346c8 */
    II(0x101346bc, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x101346c3, 0x5)   jmpd(0x10134967, 0x29f);              /* jmp 0x10134967 */
l_0x101346c8:
    II(0x101346c8, 0x5)   mov(eax, memd_a32(ds, 0x101c9458));   /* mov eax, [0x101c9458] */
    II(0x101346cd, 0x5)   add(eax, 0x100);                      /* add eax, 0x100 */
    II(0x101346d2, 0x2)   xor_(al, al);                         /* xor al, al */
    II(0x101346d4, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x101346d7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101346da, 0x5)   mov(memd_a32(ds, 0x101c70a0), eax);   /* mov [0x101c70a0], eax */
//    II(0x101346df, 0x5)   mov(eax, memd_a32(ds, 0x101c70a0));   /* mov eax, [0x101c70a0] */
    II(0x101346e4, 0x5)   add(eax, 0x100);                      /* add eax, 0x100 */
    II(0x101346e9, 0x5)   mov(memd_a32(ds, 0x101c70a4), eax);   /* mov [0x101c70a4], eax */
//    II(0x101346ee, 0x5)   mov(eax, memd_a32(ds, 0x101c70a4));   /* mov eax, [0x101c70a4] */
    II(0x101346f3, 0x5)   add(eax, 0x100);                      /* add eax, 0x100 */
    II(0x101346f8, 0x5)   mov(memd_a32(ds, 0x101c70a8), eax);   /* mov [0x101c70a8], eax */
//    II(0x101346fd, 0x5)   mov(eax, memd_a32(ds, 0x101c70a8));   /* mov eax, [0x101c70a8] */
    II(0x10134702, 0x5)   add(eax, 0x100);                      /* add eax, 0x100 */
    II(0x10134707, 0x5)   mov(memd_a32(ds, 0x101c70ac), eax);   /* mov [0x101c70ac], eax */
//    II(0x1013470c, 0x5)   mov(eax, memd_a32(ds, 0x101c70ac));   /* mov eax, [0x101c70ac] */
    II(0x10134711, 0x5)   add(eax, 0x100);                      /* add eax, 0x100 */
    II(0x10134716, 0x5)   mov(memd_a32(ds, 0x101c70b0), eax);   /* mov [0x101c70b0], eax */
//    II(0x1013471b, 0x5)   mov(eax, memd_a32(ds, 0x101c70b0));   /* mov eax, [0x101c70b0] */
    II(0x10134720, 0x5)   add(eax, 0x100);                      /* add eax, 0x100 */
    II(0x10134725, 0x5)   mov(memd_a32(ds, 0x101c70b4), eax);   /* mov [0x101c70b4], eax */
//    II(0x1013472a, 0x5)   mov(eax, memd_a32(ds, 0x101c70b4));   /* mov eax, [0x101c70b4] */
    II(0x1013472f, 0x5)   add(eax, 0x100);                      /* add eax, 0x100 */
    II(0x10134734, 0x5)   mov(memd_a32(ds, 0x101c70b8), eax);   /* mov [0x101c70b8], eax */
//    II(0x10134739, 0x5)   mov(eax, memd_a32(ds, 0x101c70b8));   /* mov eax, [0x101c70b8] */
    II(0x1013473e, 0x5)   add(eax, 0x100);                      /* add eax, 0x100 */
    II(0x10134743, 0x5)   mov(memd_a32(ds, 0x101c70bc), eax);   /* mov [0x101c70bc], eax */
//    II(0x10134748, 0x5)   mov(eax, memd_a32(ds, 0x101c70bc));   /* mov eax, [0x101c70bc] */
    II(0x1013474d, 0x5)   add(eax, 0x100);                      /* add eax, 0x100 */
    II(0x10134752, 0x5)   mov(memd_a32(ds, 0x101c70c4), eax);   /* mov [0x101c70c4], eax */
//    II(0x10134757, 0x5)   mov(eax, memd_a32(ds, 0x101c70c4));   /* mov eax, [0x101c70c4] */
    II(0x1013475c, 0x5)   add(eax, 0x100);                      /* add eax, 0x100 */
    II(0x10134761, 0x5)   mov(memd_a32(ds, 0x101c70c0), eax);   /* mov [0x101c70c0], eax */
//    II(0x10134766, 0x5)   mov(eax, memd_a32(ds, 0x101c70c0));   /* mov eax, [0x101c70c0] */
    II(0x1013476b, 0x5)   add(eax, 0x100);                      /* add eax, 0x100 */
    II(0x10134770, 0x5)   mov(memd_a32(ds, 0x101c70c8), eax);   /* mov [0x101c70c8], eax */
//    II(0x10134775, 0x5)   mov(eax, memd_a32(ds, 0x101c70c8));   /* mov eax, [0x101c70c8] */
    II(0x1013477a, 0x5)   add(eax, 0x100);                      /* add eax, 0x100 */
    II(0x1013477f, 0x5)   mov(memd_a32(ds, 0x101c70cc), eax);   /* mov [0x101c70cc], eax */
//    II(0x10134784, 0x5)   mov(eax, memd_a32(ds, 0x101c70cc));   /* mov eax, [0x101c70cc] */
    II(0x10134789, 0x5)   add(eax, 0x100);                      /* add eax, 0x100 */
    II(0x1013478e, 0x5)   mov(memd_a32(ds, 0x101c945c), eax);   /* mov [0x101c945c], eax */
    II(0x10134793, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0);      /* mov dword [ebp-0x4], 0x0 */
    II(0x1013479a, 0x2)   jmpd(0x101347a2, 0x6);                /* jmp 0x101347a2 */
l_0x1013479c:
    II(0x1013479c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013479f, 0x3)   inc(memd_a32(ss, ebp - 0x4));         /* inc dword [ebp-0x4] */
l_0x101347a2:
    II(0x101347a2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x101347a6, 0x5)   cmp(eax, 0x100);                      /* cmp eax, 0x100 */
    II(0x101347ab, 0x2)   jged(0x101347fd, 0x50);               /* jge 0x101347fd */
    II(0x101347ad, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x101347b1, 0x5)   mov(eax, memd_a32(ds, 0x101c70b0));   /* mov eax, [0x101c70b0] */
    II(0x101347b6, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x101347b8, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x101347bb, 0x2)   mov(memb_a32(ds, edx), al);           /* mov [edx], al */
    II(0x101347bd, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x101347c1, 0x5)   mov(eax, memd_a32(ds, 0x101c70ac));   /* mov eax, [0x101c70ac] */
    II(0x101347c6, 0x2)   add(ebx, eax);                        /* add ebx, eax */
    II(0x101347c8, 0x2)   mov(al, memb_a32(ds, edx));           /* mov al, [edx] */
    II(0x101347ca, 0x2)   mov(memb_a32(ds, ebx), al);           /* mov [ebx], al */
    II(0x101347cc, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x101347d0, 0x5)   mov(eax, memd_a32(ds, 0x101c70a8));   /* mov eax, [0x101c70a8] */
    II(0x101347d5, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x101347d7, 0x2)   mov(dl, memb_a32(ds, ebx));           /* mov dl, [ebx] */
    II(0x101347d9, 0x2)   mov(memb_a32(ds, eax), dl);           /* mov [eax], dl */
    II(0x101347db, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x101347df, 0x6)   mov(edx, memd_a32(ds, 0x101c70a4));   /* mov edx, [0x101c70a4] */
    II(0x101347e5, 0x2)   add(edx, ebx);                        /* add edx, ebx */
    II(0x101347e7, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x101347e9, 0x2)   mov(memb_a32(ds, edx), al);           /* mov [edx], al */
    II(0x101347eb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x101347ef, 0x6)   mov(ebx, memd_a32(ds, 0x101c70a0));   /* mov ebx, [0x101c70a0] */
    II(0x101347f5, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x101347f7, 0x2)   mov(dl, memb_a32(ds, edx));           /* mov dl, [edx] */
    II(0x101347f9, 0x2)   mov(memb_a32(ds, eax), dl);           /* mov [eax], dl */
    II(0x101347fb, 0x2)   jmpd(0x1013479c, -0x61);              /* jmp 0x1013479c */
l_0x101347fd:
    II(0x101347fd, 0x6)   mov(memw_a32(ss, ebp - 0x4), 0);      /* mov word [ebp-0x4], 0x0 */
    II(0x10134803, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x20);   /* mov dword [ebp-0x8], 0x20 */
    II(0x1013480a, 0x2)   jmpd(0x10134819, 0xd);                /* jmp 0x10134819 */
l_0x1013480c:
    II(0x1013480c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013480f, 0x4)   inc(memw_a32(ss, ebp - 0x4));         /* inc word [ebp-0x4] */
    II(0x10134813, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10134816, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x10134819:
    II(0x10134819, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1013481d, 0x3)   cmp(eax, 0x18);                       /* cmp eax, 0x18 */
    II(0x10134820, 0x6)   jged(0x101348cd, 0xa7);               /* jge dword 0x101348cd */
    II(0x10134826, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1013482a, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x1013482d, 0x2)   jnzd(0x10134833, 0x4);                /* jnz 0x10134833 */
    II(0x1013482f, 0x4)   add(memd_a32(ss, ebp - 0x8), 0x8);    /* add dword [ebp-0x8], 0x8 */
l_0x10134833:
    II(0x10134833, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10134836, 0x5)   and_(eax, 0x7);                       /* and eax, 0x7 */
    II(0x1013483b, 0x1)   cwde();                               /* cwde */
    II(0x1013483c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10134840, 0x6)   mov(ebx, memd_a32(ds, 0x101c70a0));   /* mov ebx, [0x101c70a0] */
    II(0x10134846, 0x2)   add(edx, ebx);                        /* add edx, ebx */
    II(0x10134848, 0x6)   mov(al, memb_a32(ds, eax + 0x101bb4f0)); /* mov al, [eax+0x101bb4f0] */
    II(0x1013484e, 0x2)   mov(memb_a32(ds, edx), al);           /* mov [edx], al */
    II(0x10134850, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10134853, 0x5)   and_(eax, 0x7);                       /* and eax, 0x7 */
    II(0x10134858, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1013485b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1013485f, 0x6)   mov(ebx, memd_a32(ds, 0x101c70a4));   /* mov ebx, [0x101c70a4] */
    II(0x10134865, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x10134867, 0x6)   mov(dl, memb_a32(ds, edx + 0x101bb4f8)); /* mov dl, [edx+0x101bb4f8] */
    II(0x1013486d, 0x2)   mov(memb_a32(ds, eax), dl);           /* mov [eax], dl */
    II(0x1013486f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10134872, 0x5)   and_(eax, 0x7);                       /* and eax, 0x7 */
    II(0x10134877, 0x1)   cwde();                               /* cwde */
    II(0x10134878, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x1013487c, 0x6)   mov(edx, memd_a32(ds, 0x101c70a8));   /* mov edx, [0x101c70a8] */
    II(0x10134882, 0x2)   add(edx, ebx);                        /* add edx, ebx */
    II(0x10134884, 0x6)   mov(al, memb_a32(ds, eax + 0x101bb500)); /* mov al, [eax+0x101bb500] */
    II(0x1013488a, 0x2)   mov(memb_a32(ds, edx), al);           /* mov [edx], al */
    II(0x1013488c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013488f, 0x5)   and_(eax, 0x7);                       /* and eax, 0x7 */
    II(0x10134894, 0x1)   cwde();                               /* cwde */
    II(0x10134895, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x10134899, 0x6)   mov(edx, memd_a32(ds, 0x101c70ac));   /* mov edx, [0x101c70ac] */
    II(0x1013489f, 0x2)   add(edx, ebx);                        /* add edx, ebx */
    II(0x101348a1, 0x6)   mov(al, memb_a32(ds, eax + 0x101bb508)); /* mov al, [eax+0x101bb508] */
    II(0x101348a7, 0x2)   mov(memb_a32(ds, edx), al);           /* mov [edx], al */
    II(0x101348a9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101348ac, 0x5)   and_(eax, 0x7);                       /* and eax, 0x7 */
    II(0x101348b1, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x101348b4, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x101348b8, 0x6)   mov(ebx, memd_a32(ds, 0x101c70b0));   /* mov ebx, [0x101c70b0] */
    II(0x101348be, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x101348c0, 0x6)   mov(dl, memb_a32(ds, edx + 0x101bb510)); /* mov dl, [edx+0x101bb510] */
    II(0x101348c6, 0x2)   mov(memb_a32(ds, eax), dl);           /* mov [eax], dl */
    II(0x101348c8, 0x5)   jmpd(0x1013480c, -0xc1);              /* jmp 0x1013480c */
l_0x101348cd:
    II(0x101348cd, 0x5)   mov(eax, memd_a32(ds, 0x101c945c));   /* mov eax, [0x101c945c] */
    II(0x101348d2, 0x5)   add(eax, 0x700);                      /* add eax, 0x700 */
    II(0x101348d7, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x101348da, 0x6)   mov(memw_a32(ss, ebp - 0x4), 0);      /* mov word [ebp-0x4], 0x0 */
    II(0x101348e0, 0x2)   jmpd(0x101348e9, 0x7);                /* jmp 0x101348e9 */
l_0x101348e2:
    II(0x101348e2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101348e5, 0x4)   inc(memw_a32(ss, ebp - 0x4));         /* inc word [ebp-0x4] */
l_0x101348e9:
    II(0x101348e9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x101348ed, 0x5)   cmp(eax, 0x100);                      /* cmp eax, 0x100 */
    II(0x101348f2, 0x2)   jged(0x10134901, 0xd);                /* jge 0x10134901 */
    II(0x101348f4, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x101348f7, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
    II(0x101348fa, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x101348fd, 0x2)   mov(memb_a32(ds, edx), al);           /* mov [edx], al */
    II(0x101348ff, 0x2)   jmpd(0x101348e2, -0x1f);              /* jmp 0x101348e2 */
l_0x10134901:
    II(0x10134901, 0x9)   mov(memw_a32(ds, 0x101c61b4), 0x2000); /* mov word [0x101c61b4], 0x2000 */
    II(0x1013490a, 0x5)   mov(eax, memd_a32(ds, 0x101c70a0));   /* mov eax, [0x101c70a0] */
    II(0x1013490f, 0x5)   mov(memd_a32(ds, 0x101c61b6), eax);   /* mov [0x101c61b6], eax */
    II(0x10134914, 0x9)   mov(memw_a32(ds, 0x101c64b0), 0x1000); /* mov word [0x101c64b0], 0x1000 */
    II(0x1013491d, 0x5)   mov(eax, memd_a32(ds, 0x101c70a4));   /* mov eax, [0x101c70a4] */
    II(0x10134922, 0x5)   mov(memd_a32(ds, 0x101c64b2), eax);   /* mov [0x101c64b2], eax */
    II(0x10134927, 0x9)   mov(memw_a32(ds, 0x101c67ac), 0x800); /* mov word [0x101c67ac], 0x800 */
    II(0x10134930, 0x5)   mov(eax, memd_a32(ds, 0x101c70a8));   /* mov eax, [0x101c70a8] */
    II(0x10134935, 0x5)   mov(memd_a32(ds, 0x101c67ae), eax);   /* mov [0x101c67ae], eax */
    II(0x1013493a, 0x9)   mov(memw_a32(ds, 0x101c6aa8), 0x400); /* mov word [0x101c6aa8], 0x400 */
    II(0x10134943, 0x5)   mov(eax, memd_a32(ds, 0x101c70ac));   /* mov eax, [0x101c70ac] */
    II(0x10134948, 0x5)   mov(memd_a32(ds, 0x101c6aaa), eax);   /* mov [0x101c6aaa], eax */
    II(0x1013494d, 0x9)   mov(memw_a32(ds, 0x101c6da4), 0x8000); /* mov word [0x101c6da4], 0x8000 */
    II(0x10134956, 0x5)   mov(eax, memd_a32(ds, 0x101c70b0));   /* mov eax, [0x101c70b0] */
    II(0x1013495b, 0x5)   mov(memd_a32(ds, 0x101c6da6), eax);   /* mov [0x101c6da6], eax */
    II(0x10134960, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x1);   /* mov dword [ebp-0x14], 0x1 */
l_0x10134967:
    II(0x10134967, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1013496a, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1013496c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1013496d, 0x1)   popd(edi);                            /* pop edi */
    II(0x1013496e, 0x1)   popd(esi);                            /* pop esi */
    II(0x1013496f, 0x1)   popd(edx);                            /* pop edx */
    II(0x10134970, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10134971, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10134972, 0x1)   retd();                               /* ret */
FUNC_END

