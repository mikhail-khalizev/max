FUNC_BEGIN(0x100de9ab, 0x1e2147fbbb06b66d, 0x20, ({0x68, 0x20, 0, 0, 0, 0xe8, 0x9d, 0x73, 0x8, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x4, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x80, 0xb8, 0x9d, 0x3, 0, 0, 0, 0xf, 0x84, 0x8f, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x81, 0xc2, 0xaf, 0x3, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0x45, 0x3, 0, 0, 0xe8, 0x77, 0x18, 0xff, 0xff, 0xe8, 0xd2, 0x67, 0xff, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0x5d, 0x3, 0, 0, 0xe8, 0x2, 0x11, 0xff, 0xff, 0xe8, 0xbb, 0x67, 0xff, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0x61, 0x3, 0, 0, 0xe8, 0xeb, 0x10, 0xff, 0xff, 0xe8, 0xa4, 0x67, 0xff, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0x65, 0x3, 0, 0, 0xe8, 0xd4, 0x10, 0xff, 0xff, 0xe8, 0x8d, 0x67, 0xff, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0x69, 0x3, 0, 0, 0xe8, 0xbd, 0x10, 0xff, 0xff, 0xe8, 0x76, 0x67, 0xff, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0x6d, 0x3, 0, 0, 0xe8, 0xa6, 0x10, 0xff, 0xff, 0xe9, 0xa8, 0, 0, 0, 0xe8, 0x7a, 0x67, 0xff, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0x91, 0x67, 0xff, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0x5d, 0x3, 0, 0, 0xe8, 0xf7, 0xf, 0xff, 0xff, 0xe8, 0x5a, 0x67, 0xff, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0x71, 0x67, 0xff, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0x61, 0x3, 0, 0, 0xe8, 0xd7, 0xf, 0xff, 0xff, 0xe8, 0x3a, 0x67, 0xff, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0x51, 0x67, 0xff, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0x65, 0x3, 0, 0, 0xe8, 0xb7, 0xf, 0xff, 0xff, 0xe8, 0x1a, 0x67, 0xff, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0x31, 0x67, 0xff, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0x69, 0x3, 0, 0, 0xe8, 0x97, 0xf, 0xff, 0xff, 0xe8, 0xfa, 0x66, 0xff, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0x11, 0x67, 0xff, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0x6d, 0x3, 0, 0, 0xe8, 0x77, 0xf, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xf8, 0xa2, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100de9ab, 0x5)   pushd(0x20);                          /* push dword 0x20 */
    II(0x100de9b0, 0x5)   calld(sys_check_available_stack_size, 0x8739d); /* call 0x10165d52 */
    II(0x100de9b5, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100de9b6, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100de9b7, 0x1)   pushd(edx);                           /* push edx */
    II(0x100de9b8, 0x1)   pushd(esi);                           /* push esi */
    II(0x100de9b9, 0x1)   pushd(edi);                           /* push edi */
    II(0x100de9ba, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100de9bb, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100de9bd, 0x6)   sub(esp, 0x4);                        /* sub esp, 0x4 */
    II(0x100de9c3, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100de9c6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100de9c9, 0x7)   cmp(memb_a32(ds, eax + 0x39d), 0);    /* cmp byte [eax+0x39d], 0x0 */
    II(0x100de9d0, 0x6)   jzd(0x100dea65, 0x8f);                /* jz dword 0x100dea65 */
    II(0x100de9d6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100de9d9, 0x6)   add(edx, 0x3af);                      /* add edx, 0x3af */
    II(0x100de9df, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100de9e2, 0x6)   mov(eax, memd_a32(ds, eax + 0x345));  /* mov eax, [eax+0x345] */
    II(0x100de9e8, 0x5)   calld(0x100d0264, -0xe789);           /* call 0x100d0264 */
    II(0x100de9ed, 0x5)   calld(0x100d51c4, -0x982e);           /* call 0x100d51c4 */
    II(0x100de9f2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100de9f4, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100de9f6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100de9f9, 0x6)   mov(eax, memd_a32(ds, eax + 0x35d));  /* mov eax, [eax+0x35d] */
    II(0x100de9ff, 0x5)   calld(0x100cfb06, -0xeefe);           /* call 0x100cfb06 */
    II(0x100dea04, 0x5)   calld(0x100d51c4, -0x9845);           /* call 0x100d51c4 */
    II(0x100dea09, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100dea0b, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100dea0d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dea10, 0x6)   mov(eax, memd_a32(ds, eax + 0x361));  /* mov eax, [eax+0x361] */
    II(0x100dea16, 0x5)   calld(0x100cfb06, -0xef15);           /* call 0x100cfb06 */
    II(0x100dea1b, 0x5)   calld(0x100d51c4, -0x985c);           /* call 0x100d51c4 */
    II(0x100dea20, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100dea22, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100dea24, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dea27, 0x6)   mov(eax, memd_a32(ds, eax + 0x365));  /* mov eax, [eax+0x365] */
    II(0x100dea2d, 0x5)   calld(0x100cfb06, -0xef2c);           /* call 0x100cfb06 */
    II(0x100dea32, 0x5)   calld(0x100d51c4, -0x9873);           /* call 0x100d51c4 */
    II(0x100dea37, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100dea39, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100dea3b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dea3e, 0x6)   mov(eax, memd_a32(ds, eax + 0x369));  /* mov eax, [eax+0x369] */
    II(0x100dea44, 0x5)   calld(0x100cfb06, -0xef43);           /* call 0x100cfb06 */
    II(0x100dea49, 0x5)   calld(0x100d51c4, -0x988a);           /* call 0x100d51c4 */
    II(0x100dea4e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100dea50, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100dea52, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dea55, 0x6)   mov(eax, memd_a32(ds, eax + 0x36d));  /* mov eax, [eax+0x36d] */
    II(0x100dea5b, 0x5)   calld(0x100cfb06, -0xef5a);           /* call 0x100cfb06 */
    II(0x100dea60, 0x5)   jmpd(0x100deb0d, 0xa8);               /* jmp 0x100deb0d */
l_0x100dea65:
    II(0x100dea65, 0x5)   calld(0x100d51e4, -0x9886);           /* call 0x100d51e4 */
    II(0x100dea6a, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100dea6c, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100dea6e, 0x5)   calld(0x100d5204, -0x986f);           /* call 0x100d5204 */
    II(0x100dea73, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100dea75, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100dea77, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dea7a, 0x6)   mov(eax, memd_a32(ds, eax + 0x35d));  /* mov eax, [eax+0x35d] */
    II(0x100dea80, 0x5)   calld(0x100cfa7c, -0xf009);           /* call 0x100cfa7c */
    II(0x100dea85, 0x5)   calld(0x100d51e4, -0x98a6);           /* call 0x100d51e4 */
    II(0x100dea8a, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100dea8c, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100dea8e, 0x5)   calld(0x100d5204, -0x988f);           /* call 0x100d5204 */
    II(0x100dea93, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100dea95, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100dea97, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100dea9a, 0x6)   mov(eax, memd_a32(ds, eax + 0x361));  /* mov eax, [eax+0x361] */
    II(0x100deaa0, 0x5)   calld(0x100cfa7c, -0xf029);           /* call 0x100cfa7c */
    II(0x100deaa5, 0x5)   calld(0x100d51e4, -0x98c6);           /* call 0x100d51e4 */
    II(0x100deaaa, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100deaac, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100deaae, 0x5)   calld(0x100d5204, -0x98af);           /* call 0x100d5204 */
    II(0x100deab3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100deab5, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100deab7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100deaba, 0x6)   mov(eax, memd_a32(ds, eax + 0x365));  /* mov eax, [eax+0x365] */
    II(0x100deac0, 0x5)   calld(0x100cfa7c, -0xf049);           /* call 0x100cfa7c */
    II(0x100deac5, 0x5)   calld(0x100d51e4, -0x98e6);           /* call 0x100d51e4 */
    II(0x100deaca, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100deacc, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100deace, 0x5)   calld(0x100d5204, -0x98cf);           /* call 0x100d5204 */
    II(0x100dead3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100dead5, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100dead7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100deada, 0x6)   mov(eax, memd_a32(ds, eax + 0x369));  /* mov eax, [eax+0x369] */
    II(0x100deae0, 0x5)   calld(0x100cfa7c, -0xf069);           /* call 0x100cfa7c */
    II(0x100deae5, 0x5)   calld(0x100d51e4, -0x9906);           /* call 0x100d51e4 */
    II(0x100deaea, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100deaec, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100deaee, 0x5)   calld(0x100d5204, -0x98ef);           /* call 0x100d5204 */
    II(0x100deaf3, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100deaf5, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100deaf7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100deafa, 0x6)   mov(eax, memd_a32(ds, eax + 0x36d));  /* mov eax, [eax+0x36d] */
    II(0x100deb00, 0x5)   calld(0x100cfa7c, -0xf089);           /* call 0x100cfa7c */
    II(0x100deb05, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100deb08, 0x5)   calld(0x100d8e05, -0x5d08);           /* call 0x100d8e05 */
l_0x100deb0d:
    II(0x100deb0d, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100deb0f, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100deb10, 0x1)   popd(edi);                            /* pop edi */
    II(0x100deb11, 0x1)   popd(esi);                            /* pop esi */
    II(0x100deb12, 0x1)   popd(edx);                            /* pop edx */
    II(0x100deb13, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100deb14, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100deb15, 0x1)   retd();                               /* ret */
FUNC_END

