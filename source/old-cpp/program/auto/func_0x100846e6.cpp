FUNC_BEGIN(0x100846e6, 0x3c8c91992be6148c, 0x20, ({0x68, 0x60, 0, 0, 0, 0xe8, 0x62, 0x16, 0xe, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x44, 0, 0, 0, 0x89, 0x45, 0xfc, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xc4, 0xe8, 0x1b, 0x55, 0, 0, 0x89, 0x45, 0xc8, 0x80, 0x65, 0xf4, 0xfe, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xcc, 0xe8, 0xdc, 0x1d, 0xff, 0xff, 0x89, 0x45, 0xd0, 0x80, 0x65, 0xf4, 0xfe, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0x8d, 0x45, 0xd4, 0xe8, 0xb3, 0x23, 0xff, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2a, 0xe8, 0xc7, 0x65, 0xb, 0, 0x84, 0xc0, 0x75, 0x14, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2a, 0xe8, 0x23, 0x56, 0, 0, 0xe8, 0x12, 0x58, 0, 0, 0x85, 0xc0, 0x75, 0x1d, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xcc, 0xe8, 0xfc, 0x17, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0xca, 0x48, 0, 0, 0xe9, 0x8d, 0x2, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2a, 0xe8, 0xf2, 0x55, 0, 0, 0xe8, 0xe1, 0x57, 0, 0, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x66, 0x8b, 0x40, 0x1a, 0x66, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xd8, 0x66, 0x8b, 0x40, 0x1c, 0x66, 0x89, 0x45, 0xd6, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x20, 0xe8, 0x55, 0x55, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xc4, 0xe8, 0xab, 0x53, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xc4, 0xe8, 0x31, 0x24, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0xa0, 0x65, 0xb, 0, 0x84, 0xc0, 0x74, 0x5e, 0x8d, 0x45, 0xc4, 0xe8, 0x57, 0x53, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2a, 0xe8, 0x1e, 0x56, 0, 0, 0x39, 0xc2, 0x74, 0x23, 0x8d, 0x55, 0xd4, 0x8d, 0x45, 0xc0, 0xe8, 0x6b, 0x16, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xc4, 0xe8, 0xc9, 0x52, 0, 0, 0xe8, 0x68, 0x57, 0, 0, 0xe8, 0x4f, 0xe5, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x10, 0x8d, 0x45, 0xc4, 0xe8, 0xb3, 0x52, 0, 0, 0xe8, 0xde, 0x57, 0, 0, 0x1, 0x45, 0xe8, 0x8d, 0x45, 0xc4, 0xe8, 0xa3, 0x52, 0, 0, 0xe8, 0x4, 0x68, 0xff, 0xff, 0x1, 0x45, 0xf0, 0xeb, 0x8c, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x45, 0xe8, 0x7d, 0x1d, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xcc, 0xe8, 0x22, 0x17, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0xf0, 0x47, 0, 0, 0xe9, 0xb3, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x2a, 0xe8, 0xf, 0x55, 0, 0, 0xe8, 0xfe, 0x56, 0, 0, 0xe8, 0xfd, 0x17, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x1d, 0xc6, 0x45, 0xf8, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xcc, 0xe8, 0xe3, 0x16, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0xb1, 0x47, 0, 0, 0xe9, 0x74, 0x1, 0, 0, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x3e, 0xe8, 0xbe, 0x64, 0xb, 0, 0x84, 0xc0, 0x74, 0x22, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x3e, 0xe8, 0xb2, 0x1c, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x3e, 0xe8, 0xa5, 0x1c, 0xff, 0xff, 0x66, 0x8b, 0x52, 0x1a, 0x66, 0x3b, 0x50, 0x1e, 0x74, 0x2, 0xeb, 0x22, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x3e, 0xe8, 0x8e, 0x1c, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x3e, 0xe8, 0x81, 0x1c, 0xff, 0xff, 0x66, 0x8b, 0x52, 0x1c, 0x66, 0x3b, 0x50, 0x20, 0x74, 0x2, 0xeb, 0x1d, 0xc6, 0x45, 0xf8, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xcc, 0xe8, 0x5f, 0x16, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0x2d, 0x47, 0, 0, 0xe9, 0xf0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x20, 0xe8, 0xe1, 0x53, 0, 0, 0x8d, 0x5d, 0xc4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x35, 0x52, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xc4, 0xe8, 0xbb, 0x22, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0x2a, 0x64, 0xb, 0, 0x84, 0xc0, 0xf, 0x84, 0x7a, 0, 0, 0, 0x8d, 0x45, 0xc4, 0xe8, 0x75, 0x51, 0, 0, 0xe8, 0x68, 0x56, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xcc, 0xe8, 0xd6, 0x1a, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xcc, 0xe8, 0x88, 0x22, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xcc, 0xe8, 0xf7, 0x63, 0xb, 0, 0x84, 0xc0, 0x74, 0x46, 0x8d, 0x45, 0xcc, 0xe8, 0x4e, 0x1a, 0xff, 0xff, 0xe8, 0x35, 0x25, 0xff, 0xff, 0x89, 0x45, 0xe0, 0x8d, 0x45, 0xcc, 0xe8, 0xa, 0x1a, 0xff, 0xff, 0xe8, 0xa1, 0x18, 0xff, 0xff, 0x66, 0x8b, 0x40, 0x17, 0x89, 0x45, 0xe4, 0xf, 0xbf, 0x55, 0xe0, 0xf, 0xbf, 0x45, 0xdc, 0xe8, 0xcd, 0x24, 0xff, 0xff, 0x89, 0x45, 0xdc, 0xf, 0xbf, 0x55, 0xe4, 0xf, 0xbf, 0x45, 0xec, 0xe8, 0xbd, 0x24, 0xff, 0xff, 0x89, 0x45, 0xec, 0xeb, 0xa4, 0xe9, 0x6c, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xdc, 0x66, 0x3b, 0x45, 0xec, 0x7f, 0x6, 0xc6, 0x45, 0xbc, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xbc, 0, 0x8a, 0x45, 0xbc, 0x88, 0x45, 0xf8, 0x31, 0xd2, 0x8d, 0x45, 0xcc, 0xe8, 0x80, 0x15, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0x4e, 0x46, 0, 0, 0xeb, 0x14, 0x31, 0xd2, 0x8d, 0x45, 0xcc, 0xe8, 0x6a, 0x15, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc4, 0xe8, 0x38, 0x46, 0, 0, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100846e6, 0x5)   pushd(0x60);                          /* push dword 0x60 */
    II(0x100846eb, 0x5)   calld(sys_check_available_stack_size, 0xe1662); /* call 0x10165d52 */
    II(0x100846f0, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100846f1, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100846f2, 0x1)   pushd(edx);                           /* push edx */
    II(0x100846f3, 0x1)   pushd(esi);                           /* push esi */
    II(0x100846f4, 0x1)   pushd(edi);                           /* push edi */
    II(0x100846f5, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100846f6, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100846f8, 0x6)   sub(esp, 0x44);                       /* sub esp, 0x44 */
    II(0x100846fe, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10084701, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x10084705, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10084708, 0x5)   calld(0x10089c28, 0x551b);            /* call 0x10089c28 */
    II(0x1008470d, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x10084710, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x10084714, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x10084718, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1008471b, 0x5)   calld(0x100764fc, -0xe224);           /* call 0x100764fc */
    II(0x10084720, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x10084723, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x10084727, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x1008472e, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x10084735, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x10084738, 0x5)   calld(my_ctor_0x101b4184, -0xdc4d);   /* call 0x10076af0 */
    II(0x1008473d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008473f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084742, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x10084745, 0x5)   calld(0x1013ad11, 0xb65c7);           /* call 0x1013ad11 */
    II(0x1008474a, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008474c, 0x2)   jnzd(0x10084762, 0x14);               /* jnz 0x10084762 */
    II(0x1008474e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084751, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x10084754, 0x5)   calld(0x10089d7c, 0x5623);            /* call 0x10089d7c */
    II(0x10084759, 0x5)   calld(0x10089f70, 0x5812);            /* call 0x10089f70 */
    II(0x1008475e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10084760, 0x2)   jnzd(0x1008477f, 0x1d);               /* jnz 0x1008477f */
l_0x10084762:
    II(0x10084762, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x10084766, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10084768, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1008476b, 0x5)   calld(0x10075f6c, -0xe804);           /* call 0x10075f6c */
    II(0x10084770, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10084772, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10084775, 0x5)   calld(0x10089044, 0x48ca);            /* call 0x10089044 */
    II(0x1008477a, 0x5)   jmpd(0x10084a0c, 0x28d);              /* jmp 0x10084a0c */
l_0x1008477f:
    II(0x1008477f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084782, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x10084785, 0x5)   calld(0x10089d7c, 0x55f2);            /* call 0x10089d7c */
    II(0x1008478a, 0x5)   calld(0x10089f70, 0x57e1);            /* call 0x10089f70 */
    II(0x1008478f, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
//    II(0x10084792, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10084795, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x10084799, 0x4)   mov(memw_a32(ss, ebp - 0x2c), ax);    /* mov [ebp-0x2c], ax */
    II(0x1008479d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100847a0, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x100847a4, 0x4)   mov(memw_a32(ss, ebp - 0x2a), ax);    /* mov [ebp-0x2a], ax */
    II(0x100847a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100847ab, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x100847ae, 0x5)   calld(0x10089d08, 0x5555);            /* call 0x10089d08 */
    II(0x100847b3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100847b5, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100847b8, 0x5)   calld(0x10089b68, 0x53ab);            /* call 0x10089b68 */
    II(0x100847bd, 0x2)   jmpd(0x100847c7, 0x8);                /* jmp 0x100847c7 */
l_0x100847bf:
    II(0x100847bf, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100847c2, 0x5)   calld(0x10076bf8, -0xdbcf);           /* call 0x10076bf8 */
l_0x100847c7:
    II(0x100847c7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100847c9, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100847cc, 0x5)   calld(0x1013ad71, 0xb65a0);           /* call 0x1013ad71 */
    II(0x100847d1, 0x2)   test(al, al);                         /* test al, al */
    II(0x100847d3, 0x2)   jzd(0x10084833, 0x5e);                /* jz 0x10084833 */
    II(0x100847d5, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100847d8, 0x5)   calld(0x10089b34, 0x5357);            /* call 0x10089b34 */
    II(0x100847dd, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100847df, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100847e2, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x100847e5, 0x5)   calld(0x10089e08, 0x561e);            /* call 0x10089e08 */
    II(0x100847ea, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100847ec, 0x2)   jzd(0x10084811, 0x23);                /* jz 0x10084811 */
    II(0x100847ee, 0x3)   lea(edx, ebp - 0x2c);                 /* lea edx, [ebp-0x2c] */
    II(0x100847f1, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x100847f4, 0x5)   calld(0x10075e64, -0xe995);           /* call 0x10075e64 */
    II(0x100847f9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100847fb, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100847fe, 0x5)   calld(0x10089acc, 0x52c9);            /* call 0x10089acc */
    II(0x10084803, 0x5)   calld(0x10089f70, 0x5768);            /* call 0x10089f70 */
    II(0x10084808, 0x5)   calld(0x10082d5c, -0x1ab1);           /* call 0x10082d5c */
    II(0x1008480d, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008480f, 0x2)   jzd(0x10084821, 0x10);                /* jz 0x10084821 */
l_0x10084811:
    II(0x10084811, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10084814, 0x5)   calld(0x10089acc, 0x52b3);            /* call 0x10089acc */
    II(0x10084819, 0x5)   calld(0x10089ffc, 0x57de);            /* call 0x10089ffc */
    II(0x1008481e, 0x3)   add(memd_a32(ss, ebp - 0x18), eax);   /* add [ebp-0x18], eax */
l_0x10084821:
    II(0x10084821, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10084824, 0x5)   calld(0x10089acc, 0x52a3);            /* call 0x10089acc */
    II(0x10084829, 0x5)   calld(0x1007b032, -0x97fc);           /* call 0x1007b032 */
    II(0x1008482e, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
    II(0x10084831, 0x2)   jmpd(0x100847bf, -0x74);              /* jmp 0x100847bf */
l_0x10084833:
    II(0x10084833, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10084836, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x18));    /* cmp ax, [ebp-0x18] */
    II(0x1008483a, 0x2)   jged(0x10084859, 0x1d);               /* jge 0x10084859 */
    II(0x1008483c, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x10084840, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10084842, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10084845, 0x5)   calld(0x10075f6c, -0xe8de);           /* call 0x10075f6c */
    II(0x1008484a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008484c, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1008484f, 0x5)   calld(0x10089044, 0x47f0);            /* call 0x10089044 */
    II(0x10084854, 0x5)   jmpd(0x10084a0c, 0x1b3);              /* jmp 0x10084a0c */
l_0x10084859:
    II(0x10084859, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008485c, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x1008485f, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10084862, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10084865, 0x3)   add(eax, 0x2a);                       /* add eax, 0x2a */
    II(0x10084868, 0x5)   calld(0x10089d7c, 0x550f);            /* call 0x10089d7c */
    II(0x1008486d, 0x5)   calld(0x10089f70, 0x56fe);            /* call 0x10089f70 */
    II(0x10084872, 0x5)   calld(0x10076074, -0xe803);           /* call 0x10076074 */
    II(0x10084877, 0x2)   test(al, al);                         /* test al, al */
    II(0x10084879, 0x2)   jzd(0x10084898, 0x1d);                /* jz 0x10084898 */
    II(0x1008487b, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x1008487f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10084881, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10084884, 0x5)   calld(0x10075f6c, -0xe91d);           /* call 0x10075f6c */
    II(0x10084889, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008488b, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1008488e, 0x5)   calld(0x10089044, 0x47b1);            /* call 0x10089044 */
    II(0x10084893, 0x5)   jmpd(0x10084a0c, 0x174);              /* jmp 0x10084a0c */
l_0x10084898:
    II(0x10084898, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
    II(0x1008489f, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x100848a6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100848a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100848ab, 0x3)   add(eax, 0x3e);                       /* add eax, 0x3e */
    II(0x100848ae, 0x5)   calld(0x1013ad71, 0xb64be);           /* call 0x1013ad71 */
    II(0x100848b3, 0x2)   test(al, al);                         /* test al, al */
    II(0x100848b5, 0x2)   jzd(0x100848d9, 0x22);                /* jz 0x100848d9 */
    II(0x100848b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100848ba, 0x3)   add(eax, 0x3e);                       /* add eax, 0x3e */
    II(0x100848bd, 0x5)   calld(0x10076574, -0xe34e);           /* call 0x10076574 */
    II(0x100848c2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100848c4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100848c7, 0x3)   add(eax, 0x3e);                       /* add eax, 0x3e */
    II(0x100848ca, 0x5)   calld(0x10076574, -0xe35b);           /* call 0x10076574 */
    II(0x100848cf, 0x4)   mov(dx, memw_a32(ds, edx + 0x1a));    /* mov dx, [edx+0x1a] */
    II(0x100848d3, 0x4)   cmp(dx, memw_a32(ds, eax + 0x1e));    /* cmp dx, [eax+0x1e] */
    II(0x100848d7, 0x2)   jzd(0x100848db, 0x2);                 /* jz 0x100848db */
l_0x100848d9:
    II(0x100848d9, 0x2)   jmpd(0x100848fd, 0x22);               /* jmp 0x100848fd */
l_0x100848db:
    II(0x100848db, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100848de, 0x3)   add(eax, 0x3e);                       /* add eax, 0x3e */
    II(0x100848e1, 0x5)   calld(0x10076574, -0xe372);           /* call 0x10076574 */
    II(0x100848e6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100848e8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100848eb, 0x3)   add(eax, 0x3e);                       /* add eax, 0x3e */
    II(0x100848ee, 0x5)   calld(0x10076574, -0xe37f);           /* call 0x10076574 */
    II(0x100848f3, 0x4)   mov(dx, memw_a32(ds, edx + 0x1c));    /* mov dx, [edx+0x1c] */
    II(0x100848f7, 0x4)   cmp(dx, memw_a32(ds, eax + 0x20));    /* cmp dx, [eax+0x20] */
    II(0x100848fb, 0x2)   jzd(0x100848ff, 0x2);                 /* jz 0x100848ff */
l_0x100848fd:
    II(0x100848fd, 0x2)   jmpd(0x1008491c, 0x1d);               /* jmp 0x1008491c */
l_0x100848ff:
    II(0x100848ff, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x10084903, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10084905, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10084908, 0x5)   calld(0x10075f6c, -0xe9a1);           /* call 0x10075f6c */
    II(0x1008490d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008490f, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10084912, 0x5)   calld(0x10089044, 0x472d);            /* call 0x10089044 */
    II(0x10084917, 0x5)   jmpd(0x10084a0c, 0xf0);               /* jmp 0x10084a0c */
l_0x1008491c:
    II(0x1008491c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008491f, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x10084922, 0x5)   calld(0x10089d08, 0x53e1);            /* call 0x10089d08 */
    II(0x10084927, 0x3)   lea(ebx, ebp - 0x3c);                 /* lea ebx, [ebp-0x3c] */
    II(0x1008492a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008492c, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1008492e, 0x5)   calld(0x10089b68, 0x5235);            /* call 0x10089b68 */
    II(0x10084933, 0x2)   jmpd(0x1008493d, 0x8);                /* jmp 0x1008493d */
l_0x10084935:
    II(0x10084935, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10084938, 0x5)   calld(0x10076bf8, -0xdd45);           /* call 0x10076bf8 */
l_0x1008493d:
    II(0x1008493d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008493f, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10084942, 0x5)   calld(0x1013ad71, 0xb642a);           /* call 0x1013ad71 */
    II(0x10084947, 0x2)   test(al, al);                         /* test al, al */
    II(0x10084949, 0x6)   jzd(0x100849c9, 0x7a);                /* jz dword 0x100849c9 */
    II(0x1008494f, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10084952, 0x5)   calld(0x10089acc, 0x5175);            /* call 0x10089acc */
    II(0x10084957, 0x5)   calld(0x10089fc4, 0x5668);            /* call 0x10089fc4 */
    II(0x1008495c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008495e, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10084961, 0x5)   calld(0x1007643c, -0xe52a);           /* call 0x1007643c */
    II(0x10084966, 0x2)   jmpd(0x10084970, 0x8);                /* jmp 0x10084970 */
l_0x10084968:
    II(0x10084968, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1008496b, 0x5)   calld(0x10076bf8, -0xdd78);           /* call 0x10076bf8 */
l_0x10084970:
    II(0x10084970, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10084972, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10084975, 0x5)   calld(0x1013ad71, 0xb63f7);           /* call 0x1013ad71 */
    II(0x1008497a, 0x2)   test(al, al);                         /* test al, al */
    II(0x1008497c, 0x2)   jzd(0x100849c4, 0x46);                /* jz 0x100849c4 */
    II(0x1008497e, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10084981, 0x5)   calld(0x100763d4, -0xe5b2);           /* call 0x100763d4 */
    II(0x10084986, 0x5)   calld(0x10076ec0, -0xdacb);           /* call 0x10076ec0 */
    II(0x1008498b, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1008498e, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x10084991, 0x5)   calld(0x100763a0, -0xe5f6);           /* call 0x100763a0 */
    II(0x10084996, 0x5)   calld(0x1007623c, -0xe75f);           /* call 0x1007623c */
    II(0x1008499b, 0x4)   mov(ax, memw_a32(ds, eax + 0x17));    /* mov ax, [eax+0x17] */
    II(0x1008499f, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100849a2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x100849a6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x100849aa, 0x5)   calld(0x10076e7c, -0xdb33);           /* call 0x10076e7c */
    II(0x100849af, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100849b2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100849b6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x100849ba, 0x5)   calld(0x10076e7c, -0xdb43);           /* call 0x10076e7c */
    II(0x100849bf, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100849c2, 0x2)   jmpd(0x10084968, -0x5c);              /* jmp 0x10084968 */
l_0x100849c4:
    II(0x100849c4, 0x5)   jmpd(0x10084935, -0x94);              /* jmp 0x10084935 */
l_0x100849c9:
    II(0x100849c9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100849cc, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x100849d0, 0x2)   jgd(0x100849d8, 0x6);                 /* jg 0x100849d8 */
    II(0x100849d2, 0x4)   mov(memb_a32(ss, ebp - 0x44), 0x1);   /* mov byte [ebp-0x44], 0x1 */
    II(0x100849d6, 0x2)   jmpd(0x100849dc, 0x4);                /* jmp 0x100849dc */
l_0x100849d8:
    II(0x100849d8, 0x4)   mov(memb_a32(ss, ebp - 0x44), 0);     /* mov byte [ebp-0x44], 0x0 */
l_0x100849dc:
    II(0x100849dc, 0x3)   mov(al, memb_a32(ss, ebp - 0x44));    /* mov al, [ebp-0x44] */
    II(0x100849df, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
    II(0x100849e2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100849e4, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100849e7, 0x5)   calld(0x10075f6c, -0xea80);           /* call 0x10075f6c */
    II(0x100849ec, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100849ee, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100849f1, 0x5)   calld(0x10089044, 0x464e);            /* call 0x10089044 */
    II(0x100849f6, 0x2)   jmpd(0x10084a0c, 0x14);               /* jmp 0x10084a0c */
//  II(0x100849f8, 0x14)  /* Недостижимый код. */
l_0x10084a0c:
    II(0x10084a0c, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x10084a0f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10084a11, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10084a12, 0x1)   popd(edi);                            /* pop edi */
    II(0x10084a13, 0x1)   popd(esi);                            /* pop esi */
    II(0x10084a14, 0x1)   popd(edx);                            /* pop edx */
    II(0x10084a15, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10084a16, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10084a17, 0x1)   retd();                               /* ret */
FUNC_END

