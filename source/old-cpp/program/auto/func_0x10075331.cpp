FUNC_BEGIN(0x10075331, 0x21b7ff75956fa6f0, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x17, 0xa, 0xf, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0xf, 0xbf, 0x45, 0xf8, 0x85, 0xc0, 0x7c, 0xc, 0x8b, 0x45, 0xf8, 0x66, 0x3b, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x7c, 0x2, 0xeb, 0x8, 0xf, 0xbf, 0x45, 0xfc, 0x85, 0xc0, 0x7d, 0x2, 0xeb, 0xc, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x5, 0x74, 0x81, 0x1c, 0x10, 0x7c, 0xc, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0xe9, 0xec, 0, 0, 0, 0x80, 0x4d, 0xf0, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0x68, 0x11, 0, 0, 0x89, 0x45, 0xe4, 0x80, 0x65, 0xf0, 0xfe, 0xf, 0xbf, 0x5d, 0xfc, 0xf, 0xbf, 0x55, 0xf8, 0xb8, 0xb8, 0x39, 0x1c, 0x10, 0xe8, 0x94, 0xe1, 0x8, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0x85, 0x10, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0x37, 0x18, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xa6, 0x59, 0xc, 0, 0x84, 0xc0, 0xf, 0x84, 0x84, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xc5, 0xf, 0, 0, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xf4, 0x39, 0xc2, 0x75, 0xe, 0x8d, 0x45, 0xe8, 0xe8, 0xb0, 0xf, 0, 0, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x2, 0xeb, 0x19, 0x8d, 0x45, 0xe8, 0xe8, 0xa0, 0xf, 0, 0, 0xe8, 0x4f, 0xd, 0, 0, 0x25, 0xff, 0xff, 0, 0, 0x3d, 0xff, 0xff, 0, 0, 0x75, 0x2, 0xeb, 0x26, 0x8d, 0x45, 0xe8, 0xe8, 0x85, 0xf, 0, 0, 0xf7, 0x40, 0x12, 0x8, 0, 0x80, 0, 0x75, 0x13, 0x8d, 0x45, 0xe8, 0xe8, 0x74, 0xf, 0, 0, 0x8b, 0x40, 0x12, 0x83, 0xe0, 0x11, 0x83, 0xf8, 0x10, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x17, 0x8d, 0x45, 0xe8, 0xe8, 0xc5, 0xf, 0, 0, 0x89, 0x45, 0xec, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x1c, 0xb, 0, 0, 0xeb, 0x22, 0xe9, 0x62, 0xff, 0xff, 0xff, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x4, 0xb, 0, 0, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xf8, 0xa, 0, 0, 0x8b, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x10075331, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x10075336, 0x5)   calld(sys_check_available_stack_size, 0xf0a17); /* call 0x10165d52 */
    II(0x1007533b, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1007533c, 0x1)   pushd(esi);                           /* push esi */
    II(0x1007533d, 0x1)   pushd(edi);                           /* push edi */
    II(0x1007533e, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1007533f, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10075341, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x10075347, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1007534a, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x1007534d, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x10075350, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10075354, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10075356, 0x2)   jld(0x10075364, 0xc);                 /* jl 0x10075364 */
    II(0x10075358, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007535b, 0x7)   cmp(ax, memw_a32(ds, 0x101c8172));    /* cmp ax, [0x101c8172] */
    II(0x10075362, 0x2)   jld(0x10075366, 0x2);                 /* jl 0x10075366 */
l_0x10075364:
    II(0x10075364, 0x2)   jmpd(0x1007536e, 0x8);                /* jmp 0x1007536e */
l_0x10075366:
    II(0x10075366, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1007536a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007536c, 0x2)   jged(0x10075370, 0x2);                /* jge 0x10075370 */
l_0x1007536e:
    II(0x1007536e, 0x2)   jmpd(0x1007537c, 0xc);                /* jmp 0x1007537c */
l_0x10075370:
    II(0x10075370, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10075373, 0x7)   cmp(ax, memw_a32(ds, 0x101c8174));    /* cmp ax, [0x101c8174] */
    II(0x1007537a, 0x2)   jld(0x10075388, 0xc);                 /* jl 0x10075388 */
l_0x1007537c:
    II(0x1007537c, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x10075383, 0x5)   jmpd(0x10075474, 0xec);               /* jmp 0x10075474 */
l_0x10075388:
    II(0x10075388, 0x4)   or_(memb_a32(ss, ebp - 0x10), 0x1);   /* or byte [ebp-0x10], 0x1 */
    II(0x1007538c, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007538f, 0x5)   calld(0x100764fc, 0x1168);            /* call 0x100764fc */
    II(0x10075394, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10075397, 0x4)   and_(memb_a32(ss, ebp - 0x10), -0x2 /* 0xfe */); /* and byte [ebp-0x10], 0xfe */
    II(0x1007539b, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x4));  /* movsx ebx, word [ebp-0x4] */
    II(0x1007539f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100753a3, 0x5)   mov(eax, 0x101c39b8);                 /* mov eax, 0x101c39b8 */
    II(0x100753a8, 0x5)   calld(0x10103541, 0x8e194);           /* call 0x10103541 */
    II(0x100753ad, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100753af, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100753b2, 0x5)   calld(0x1007643c, 0x1085);            /* call 0x1007643c */
    II(0x100753b7, 0x2)   jmpd(0x100753c1, 0x8);                /* jmp 0x100753c1 */
l_0x100753b9:
    II(0x100753b9, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100753bc, 0x5)   calld(0x10076bf8, 0x1837);            /* call 0x10076bf8 */
l_0x100753c1:
    II(0x100753c1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100753c3, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100753c6, 0x5)   calld(0x1013ad71, 0xc59a6);           /* call 0x1013ad71 */
    II(0x100753cb, 0x2)   test(al, al);                         /* test al, al */
    II(0x100753cd, 0x6)   jzd(0x10075457, 0x84);                /* jz dword 0x10075457 */
    II(0x100753d3, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100753d6, 0x5)   calld(0x100763a0, 0xfc5);             /* call 0x100763a0 */
    II(0x100753db, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100753dd, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100753e0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100753e4, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100753e6, 0x2)   jnzd(0x100753f6, 0xe);                /* jnz 0x100753f6 */
    II(0x100753e8, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100753eb, 0x5)   calld(0x100763a0, 0xfb0);             /* call 0x100763a0 */
    II(0x100753f0, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x100753f4, 0x2)   jnzd(0x100753f8, 0x2);                /* jnz 0x100753f8 */
l_0x100753f6:
    II(0x100753f6, 0x2)   jmpd(0x10075411, 0x19);               /* jmp 0x10075411 */
l_0x100753f8:
    II(0x100753f8, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100753fb, 0x5)   calld(0x100763a0, 0xfa0);             /* call 0x100763a0 */
    II(0x10075400, 0x5)   calld(0x10076154, 0xd4f);             /* call 0x10076154 */
    II(0x10075405, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x1007540a, 0x5)   cmp(eax, 0xffff);                     /* cmp eax, 0xffff */
    II(0x1007540f, 0x2)   jnzd(0x10075413, 0x2);                /* jnz 0x10075413 */
l_0x10075411:
    II(0x10075411, 0x2)   jmpd(0x10075439, 0x26);               /* jmp 0x10075439 */
l_0x10075413:
    II(0x10075413, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10075416, 0x5)   calld(0x100763a0, 0xf85);             /* call 0x100763a0 */
    II(0x1007541b, 0x7)   test(memd_a32(ds, eax + 0x12), 0x800008); /* test dword [eax+0x12], 0x800008 */
    II(0x10075422, 0x2)   jnzd(0x10075437, 0x13);               /* jnz 0x10075437 */
    II(0x10075424, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10075427, 0x5)   calld(0x100763a0, 0xf74);             /* call 0x100763a0 */
    II(0x1007542c, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x1007542f, 0x3)   and_(eax, 0x11);                      /* and eax, 0x11 */
    II(0x10075432, 0x3)   cmp(eax, 0x10);                       /* cmp eax, 0x10 */
    II(0x10075435, 0x2)   jnzd(0x10075439, 0x2);                /* jnz 0x10075439 */
l_0x10075437:
    II(0x10075437, 0x2)   jmpd(0x1007543b, 0x2);                /* jmp 0x1007543b */
l_0x10075439:
    II(0x10075439, 0x2)   jmpd(0x10075452, 0x17);               /* jmp 0x10075452 */
l_0x1007543b:
    II(0x1007543b, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007543e, 0x5)   calld(0x10076408, 0xfc5);             /* call 0x10076408 */
    II(0x10075443, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10075446, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10075448, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007544b, 0x5)   calld(0x10075f6c, 0xb1c);             /* call 0x10075f6c */
    II(0x10075450, 0x2)   jmpd(0x10075474, 0x22);               /* jmp 0x10075474 */
l_0x10075452:
    II(0x10075452, 0x5)   jmpd(0x100753b9, -0x9e);              /* jmp 0x100753b9 */
l_0x10075457:
    II(0x10075457, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
    II(0x1007545e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10075460, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10075463, 0x5)   calld(0x10075f6c, 0xb04);             /* call 0x10075f6c */
    II(0x10075468, 0x2)   jmpd(0x10075474, 0xa);                /* jmp 0x10075474 */
//  II(0x1007546a, 0xa)   /* Недостижимый код. */
l_0x10075474:
    II(0x10075474, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10075477, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10075479, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1007547a, 0x1)   popd(edi);                            /* pop edi */
    II(0x1007547b, 0x1)   popd(esi);                            /* pop esi */
    II(0x1007547c, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1007547d, 0x1)   retd();                               /* ret */
FUNC_END

