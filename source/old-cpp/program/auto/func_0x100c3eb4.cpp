FUNC_BEGIN(0x100c3eb4, 0x2e91d33e9ffca75c, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x94, 0x1e, 0xa, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x2, 0x88, 0x45, 0xf8, 0xe9, 0x27, 0x1, 0, 0, 0xe8, 0xb9, 0x1f, 0xa, 0, 0x6b, 0xc0, 0x7, 0xc1, 0xe8, 0xf, 0x85, 0xc0, 0x75, 0x9, 0xc7, 0x45, 0xf4, 0x8, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xf4, 0x7, 0, 0, 0, 0xe9, 0x20, 0x1, 0, 0, 0xe8, 0x95, 0x1f, 0xa, 0, 0x6b, 0xc0, 0x7, 0xc1, 0xe8, 0xf, 0x85, 0xc0, 0x75, 0x9, 0xc7, 0x45, 0xf4, 0x8, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xf4, 0x4, 0, 0, 0, 0xe9, 0xfc, 0, 0, 0, 0xe8, 0x71, 0x1f, 0xa, 0, 0x6b, 0xc0, 0x7, 0xc1, 0xe8, 0xf, 0x85, 0xc0, 0x75, 0x9, 0xc7, 0x45, 0xf4, 0x8, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xf4, 0x1, 0, 0, 0, 0xe9, 0xd8, 0, 0, 0, 0xe8, 0x4d, 0x1f, 0xa, 0, 0x6b, 0xc0, 0x7, 0xc1, 0xe8, 0xf, 0x85, 0xc0, 0x75, 0x9, 0xc7, 0x45, 0xf4, 0x8, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xf4, 0x2, 0, 0, 0, 0xe9, 0xb4, 0, 0, 0, 0xc7, 0x45, 0xf4, 0x6, 0, 0, 0, 0xe9, 0xa8, 0, 0, 0, 0xc7, 0x45, 0xf4, 0x5, 0, 0, 0, 0xe9, 0x9c, 0, 0, 0, 0xc7, 0x45, 0xf4, 0x6, 0, 0, 0, 0xe9, 0x90, 0, 0, 0, 0xe8, 0x5, 0x1f, 0xa, 0, 0x6b, 0xc0, 0x7, 0xc1, 0xe8, 0xf, 0x85, 0xc0, 0x75, 0x9, 0xc7, 0x45, 0xf4, 0x8, 0, 0, 0, 0xeb, 0x11, 0xe8, 0xed, 0x1e, 0xa, 0, 0x8d, 0x4, 0x40, 0xc1, 0xe8, 0xf, 0x83, 0xc0, 0x3, 0x89, 0x45, 0xf4, 0xeb, 0x65, 0xe8, 0xda, 0x1e, 0xa, 0, 0x6b, 0xc0, 0x7, 0xc1, 0xe8, 0xf, 0x85, 0xc0, 0x75, 0x9, 0xc7, 0x45, 0xf4, 0x8, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xf4, 0x3, 0, 0, 0, 0xeb, 0x44, 0xeb, 0x42, 0x90, 0xdd, 0x3e, 0xc, 0x10, 0x1, 0x3f, 0xc, 0x10, 0x25, 0x3f, 0xc, 0x10, 0x49, 0x3f, 0xc, 0x10, 0x6d, 0x3f, 0xc, 0x10, 0x79, 0x3f, 0xc, 0x10, 0x85, 0x3f, 0xc, 0x10, 0x91, 0x3f, 0xc, 0x10, 0xbc, 0x3f, 0xc, 0x10, 0x8a, 0x45, 0xf8, 0xfe, 0xc8, 0x88, 0x45, 0xec, 0x80, 0x7d, 0xec, 0x8, 0x77, 0xcb, 0x31, 0xc0, 0x8a, 0x45, 0xec, 0xc1, 0xe0, 0x2, 0x2e, 0xff, 0xa0, 0xe0, 0x3f, 0xc, 0x10, 0xf, 0xbf, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0x8a, 0, 0x4, 0x6b, 0xf, 0xbe, 0xc0, 0xe8, 0xc8, 0x6a, 0, 0, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0xe8, 0xef, 0x1f, 0x7, 0, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100c3eb4, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x100c3eb9, 0x5)   calld(sys_check_available_stack_size, 0xa1e94); /* call 0x10165d52 */
    II(0x100c3ebe, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100c3ebf, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100c3ec0, 0x1)   pushd(edx);                           /* push edx */
    II(0x100c3ec1, 0x1)   pushd(esi);                           /* push esi */
    II(0x100c3ec2, 0x1)   pushd(edi);                           /* push edi */
    II(0x100c3ec3, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100c3ec4, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100c3ec6, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x100c3ecc, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100c3ecf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c3ed2, 0x3)   mov(al, memb_a32(ds, eax + 0x2));     /* mov al, [eax+0x2] */
    II(0x100c3ed5, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
    II(0x100c3ed8, 0x5)   jmpd(0x100c4004, 0x127);              /* jmp 0x100c4004 */
l_0x100c3edd:
    II(0x100c3edd, 0x5)   calld(/* sys */ 0x10165e9b, 0xa1fb9); /* call 0x10165e9b */
    II(0x100c3ee2, 0x3)   imul(eax, eax, 0x7);                  /* imul eax, eax, 0x7 */
    II(0x100c3ee5, 0x3)   shr(eax, 0xf);                        /* shr eax, 0xf */
    II(0x100c3ee8, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c3eea, 0x2)   jnzd(0x100c3ef5, 0x9);                /* jnz 0x100c3ef5 */
    II(0x100c3eec, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x8);    /* mov dword [ebp-0xc], 0x8 */
    II(0x100c3ef3, 0x2)   jmpd(0x100c3efc, 0x7);                /* jmp 0x100c3efc */
l_0x100c3ef5:
    II(0x100c3ef5, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x7);    /* mov dword [ebp-0xc], 0x7 */
l_0x100c3efc:
    II(0x100c3efc, 0x5)   jmpd(0x100c4021, 0x120);              /* jmp 0x100c4021 */
l_0x100c3f01:
    II(0x100c3f01, 0x5)   calld(/* sys */ 0x10165e9b, 0xa1f95); /* call 0x10165e9b */
    II(0x100c3f06, 0x3)   imul(eax, eax, 0x7);                  /* imul eax, eax, 0x7 */
    II(0x100c3f09, 0x3)   shr(eax, 0xf);                        /* shr eax, 0xf */
    II(0x100c3f0c, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c3f0e, 0x2)   jnzd(0x100c3f19, 0x9);                /* jnz 0x100c3f19 */
    II(0x100c3f10, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x8);    /* mov dword [ebp-0xc], 0x8 */
    II(0x100c3f17, 0x2)   jmpd(0x100c3f20, 0x7);                /* jmp 0x100c3f20 */
l_0x100c3f19:
    II(0x100c3f19, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x4);    /* mov dword [ebp-0xc], 0x4 */
l_0x100c3f20:
    II(0x100c3f20, 0x5)   jmpd(0x100c4021, 0xfc);               /* jmp 0x100c4021 */
l_0x100c3f25:
    II(0x100c3f25, 0x5)   calld(/* sys */ 0x10165e9b, 0xa1f71); /* call 0x10165e9b */
    II(0x100c3f2a, 0x3)   imul(eax, eax, 0x7);                  /* imul eax, eax, 0x7 */
    II(0x100c3f2d, 0x3)   shr(eax, 0xf);                        /* shr eax, 0xf */
    II(0x100c3f30, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c3f32, 0x2)   jnzd(0x100c3f3d, 0x9);                /* jnz 0x100c3f3d */
    II(0x100c3f34, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x8);    /* mov dword [ebp-0xc], 0x8 */
    II(0x100c3f3b, 0x2)   jmpd(0x100c3f44, 0x7);                /* jmp 0x100c3f44 */
l_0x100c3f3d:
    II(0x100c3f3d, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x1);    /* mov dword [ebp-0xc], 0x1 */
l_0x100c3f44:
    II(0x100c3f44, 0x5)   jmpd(0x100c4021, 0xd8);               /* jmp 0x100c4021 */
l_0x100c3f49:
    II(0x100c3f49, 0x5)   calld(/* sys */ 0x10165e9b, 0xa1f4d); /* call 0x10165e9b */
    II(0x100c3f4e, 0x3)   imul(eax, eax, 0x7);                  /* imul eax, eax, 0x7 */
    II(0x100c3f51, 0x3)   shr(eax, 0xf);                        /* shr eax, 0xf */
    II(0x100c3f54, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c3f56, 0x2)   jnzd(0x100c3f61, 0x9);                /* jnz 0x100c3f61 */
    II(0x100c3f58, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x8);    /* mov dword [ebp-0xc], 0x8 */
    II(0x100c3f5f, 0x2)   jmpd(0x100c3f68, 0x7);                /* jmp 0x100c3f68 */
l_0x100c3f61:
    II(0x100c3f61, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x2);    /* mov dword [ebp-0xc], 0x2 */
l_0x100c3f68:
    II(0x100c3f68, 0x5)   jmpd(0x100c4021, 0xb4);               /* jmp 0x100c4021 */
l_0x100c3f6d:
    II(0x100c3f6d, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x6);    /* mov dword [ebp-0xc], 0x6 */
    II(0x100c3f74, 0x5)   jmpd(0x100c4021, 0xa8);               /* jmp 0x100c4021 */
l_0x100c3f79:
    II(0x100c3f79, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x5);    /* mov dword [ebp-0xc], 0x5 */
    II(0x100c3f80, 0x5)   jmpd(0x100c4021, 0x9c);               /* jmp 0x100c4021 */
l_0x100c3f85:
    II(0x100c3f85, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x6);    /* mov dword [ebp-0xc], 0x6 */
    II(0x100c3f8c, 0x5)   jmpd(0x100c4021, 0x90);               /* jmp 0x100c4021 */
l_0x100c3f91:
    II(0x100c3f91, 0x5)   calld(/* sys */ 0x10165e9b, 0xa1f05); /* call 0x10165e9b */
    II(0x100c3f96, 0x3)   imul(eax, eax, 0x7);                  /* imul eax, eax, 0x7 */
    II(0x100c3f99, 0x3)   shr(eax, 0xf);                        /* shr eax, 0xf */
    II(0x100c3f9c, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c3f9e, 0x2)   jnzd(0x100c3fa9, 0x9);                /* jnz 0x100c3fa9 */
    II(0x100c3fa0, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x8);    /* mov dword [ebp-0xc], 0x8 */
    II(0x100c3fa7, 0x2)   jmpd(0x100c3fba, 0x11);               /* jmp 0x100c3fba */
l_0x100c3fa9:
    II(0x100c3fa9, 0x5)   calld(/* sys */ 0x10165e9b, 0xa1eed); /* call 0x10165e9b */
    II(0x100c3fae, 0x3)   lea(eax, eax + eax * 0x2);            /* lea eax, [eax+eax*2] */
    II(0x100c3fb1, 0x3)   shr(eax, 0xf);                        /* shr eax, 0xf */
    II(0x100c3fb4, 0x3)   add(eax, 0x3);                        /* add eax, 0x3 */
    II(0x100c3fb7, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
l_0x100c3fba:
    II(0x100c3fba, 0x2)   jmpd(0x100c4021, 0x65);               /* jmp 0x100c4021 */
l_0x100c3fbc:
    II(0x100c3fbc, 0x5)   calld(/* sys */ 0x10165e9b, 0xa1eda); /* call 0x10165e9b */
    II(0x100c3fc1, 0x3)   imul(eax, eax, 0x7);                  /* imul eax, eax, 0x7 */
    II(0x100c3fc4, 0x3)   shr(eax, 0xf);                        /* shr eax, 0xf */
    II(0x100c3fc7, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100c3fc9, 0x2)   jnzd(0x100c3fd4, 0x9);                /* jnz 0x100c3fd4 */
    II(0x100c3fcb, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x8);    /* mov dword [ebp-0xc], 0x8 */
    II(0x100c3fd2, 0x2)   jmpd(0x100c3fdb, 0x7);                /* jmp 0x100c3fdb */
l_0x100c3fd4:
    II(0x100c3fd4, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x3);    /* mov dword [ebp-0xc], 0x3 */
l_0x100c3fdb:
    II(0x100c3fdb, 0x2)   jmpd(0x100c4021, 0x44);               /* jmp 0x100c4021 */
l_0x100c3fdd:
    II(0x100c3fdd, 0x2)   jmpd(0x100c4021, 0x42);               /* jmp 0x100c4021 */
//    II(0x100c3fdf, 0x1)   /* Выравнивание. */
//    II(0x100c3fe0, 0x24)  /* Служебная область с абсолютными адресами переходов. {0x100c3edd, 0x100c3f01, 0x100c3f25, 0x100c3f49, 0x100c3f6d, 0x100c3f79, 0x100c3f85, 0x100c3f91, 0x100c3fbc}. */
l_0x100c4004:
    II(0x100c4004, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100c4007, 0x2)   dec(al);                              /* dec al */
    II(0x100c4009, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
    II(0x100c400c, 0x4)   cmp(memb_a32(ss, ebp - 0x14), 0x8);   /* cmp byte [ebp-0x14], 0x8 */
    II(0x100c4010, 0x2)   jad(0x100c3fdd, -0x35);               /* ja 0x100c3fdd */
    II(0x100c4012, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100c4014, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x100c4017, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100c401a, 0x7)   jmpd_abs_switch(memd_a32(cs, eax + 0x100c3fe0), (0x100c3edd)(0x100c3f01)(0x100c3f25)(0x100c3f49)(0x100c3f6d)(0x100c3f79)(0x100c3f85)(0x100c3f91)(0x100c3fbc)); /* jmp dword near [cs:eax+0x100c3fe0] */
l_0x100c4021:
    II(0x100c4021, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100c4025, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c4028, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x100c402a, 0x2)   add(al, 0x6b);                        /* add al, 0x6b */
    II(0x100c402c, 0x3)   movsx(eax, al);                       /* movsx eax, al */
    II(0x100c402f, 0x5)   calld(0x100caafc, 0x6ac8);            /* call 0x100caafc */
    II(0x100c4034, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100c4037, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100c403a, 0x5)   calld(0x1013602e, 0x71fef);           /* call 0x1013602e */
    II(0x100c403f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100c4042, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x100c4045, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100c4048, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100c404a, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100c404b, 0x1)   popd(edi);                            /* pop edi */
    II(0x100c404c, 0x1)   popd(esi);                            /* pop esi */
    II(0x100c404d, 0x1)   popd(edx);                            /* pop edx */
    II(0x100c404e, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100c404f, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100c4050, 0x1)   retd();                               /* ret */
FUNC_END

