FUNC_BEGIN(0x1014cfd6, 0x22952f5e7be412c8, 0x20, ({0x68, 0x54, 0, 0, 0, 0xe8, 0x72, 0x8d, 0x1, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x3c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xcc, 0xe8, 0x21, 0x37, 0xf9, 0xff, 0x89, 0x45, 0xd0, 0x80, 0x65, 0xf4, 0xfe, 0xbb, 0x40, 0x71, 0x1c, 0x10, 0xba, 0xe9, 0xd2, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x3b, 0x8f, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x8, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xc0, 0x33, 0x8b, 0x80, 0xc0, 0x81, 0x1c, 0x10, 0x89, 0x45, 0xd4, 0xba, 0xf3, 0xd2, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x69, 0x90, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x7c, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x12, 0, 0, 0, 0, 0xbb, 0xf6, 0xd2, 0x1a, 0x10, 0x8d, 0x55, 0xd8, 0x8b, 0x45, 0xfc, 0xe8, 0xfa, 0x91, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xcc, 0xe8, 0x38, 0x36, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x86, 0x33, 0xf9, 0xff, 0x8b, 0x45, 0xd4, 0x25, 0xff, 0xff, 0xfe, 0xff, 0x8b, 0x55, 0xf8, 0x89, 0x42, 0x12, 0x31, 0xd2, 0x8d, 0x45, 0xcc, 0xe8, 0xe3, 0xdc, 0xfe, 0xff, 0x84, 0xc0, 0xf, 0x84, 0x87, 0x2, 0, 0, 0xba, 0xfc, 0xd2, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0xa5, 0x35, 0xf9, 0xff, 0xe8, 0x4f, 0x8f, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x15, 0x8, 0xba, 0xc, 0xd3, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0x88, 0x35, 0xf9, 0xff, 0xe8, 0x32, 0x8f, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x15, 0x4, 0xba, 0x18, 0xd3, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0x6b, 0x35, 0xf9, 0xff, 0xe8, 0x15, 0x8f, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x15, 0x2, 0xba, 0x26, 0xd3, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0x4e, 0x35, 0xf9, 0xff, 0xe8, 0xf8, 0x8e, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x15, 0x1, 0xba, 0x34, 0xd3, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0x31, 0x35, 0xf9, 0xff, 0xe8, 0xdb, 0x8e, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x14, 0x80, 0xba, 0x3f, 0xd3, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0x14, 0x35, 0xf9, 0xff, 0xe8, 0xbe, 0x8e, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x14, 0x40, 0xba, 0x4a, 0xd3, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0xf7, 0x34, 0xf9, 0xff, 0xe8, 0xa1, 0x8e, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x9, 0xf7, 0x45, 0xd4, 0, 0, 0x20, 0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x14, 0x20, 0xba, 0x5a, 0xd3, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0xd1, 0x34, 0xf9, 0xff, 0xe8, 0x7b, 0x8e, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x14, 0x8, 0xba, 0x6b, 0xd3, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0xb4, 0x34, 0xf9, 0xff, 0xe8, 0x5e, 0x8e, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x14, 0x4, 0xba, 0x7a, 0xd3, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0x97, 0x34, 0xf9, 0xff, 0xe8, 0x41, 0x8e, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x14, 0x2, 0xba, 0x8c, 0xd3, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0x7a, 0x34, 0xf9, 0xff, 0xe8, 0x24, 0x8e, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x14, 0x1, 0xba, 0x95, 0xd3, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0x5d, 0x34, 0xf9, 0xff, 0xe8, 0x7, 0x8e, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x13, 0x40, 0xba, 0xa1, 0xd3, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0x40, 0x34, 0xf9, 0xff, 0xe8, 0xea, 0x8d, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x13, 0x2, 0xba, 0xac, 0xd3, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0x23, 0x34, 0xf9, 0xff, 0xe8, 0xcd, 0x8d, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x13, 0x1, 0xba, 0xbd, 0xd3, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0x6, 0x34, 0xf9, 0xff, 0xe8, 0xb0, 0x8d, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x12, 0x80, 0xba, 0xcd, 0xd3, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0xe9, 0x33, 0xf9, 0xff, 0xe8, 0x93, 0x8d, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x12, 0x40, 0xba, 0xdd, 0xd3, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0xcc, 0x33, 0xf9, 0xff, 0xe8, 0x76, 0x8d, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x12, 0x20, 0xba, 0xea, 0xd3, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0xaf, 0x33, 0xf9, 0xff, 0xe8, 0x59, 0x8d, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x12, 0x10, 0xba, 0xf3, 0xd3, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0x92, 0x33, 0xf9, 0xff, 0xe8, 0x3c, 0x8d, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x12, 0x8, 0xba, 0x2, 0xd4, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0x75, 0x33, 0xf9, 0xff, 0xe8, 0x1f, 0x8d, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x12, 0x4, 0xba, 0xb, 0xd4, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0x58, 0x33, 0xf9, 0xff, 0xe8, 0x2, 0x8d, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x12, 0x2, 0xba, 0x15, 0xd4, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0x3b, 0x33, 0xf9, 0xff, 0xe8, 0xe5, 0x8c, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x12, 0x1, 0x8b, 0x45, 0xf8, 0xc6, 0x40, 0x5b, 0, 0xba, 0x22, 0xd4, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x79, 0x8d, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x50, 0x16, 0xba, 0x24, 0xd4, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x63, 0x8d, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x50, 0x18, 0xba, 0x26, 0xd4, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x4d, 0x8d, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x4a, 0x66, 0x89, 0x50, 0x1a, 0xba, 0x2d, 0xd4, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x36, 0x8d, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x4a, 0x66, 0x89, 0x50, 0x1c, 0xbb, 0x34, 0xd4, 0x1a, 0x10, 0x8d, 0x55, 0xdc, 0x8b, 0x45, 0xfc, 0xe8, 0x65, 0x8d, 0xff, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xb8, 0xa7, 0, 0, 0, 0, 0x74, 0xe, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xa7, 0, 0, 0, 0xe8, 0xbc, 0x8b, 0x1, 0, 0x8d, 0x45, 0xdc, 0xe8, 0x18, 0xc4, 0xf3, 0xff, 0xe8, 0x12, 0x4b, 0x2, 0, 0x85, 0xc0, 0x75, 0xf, 0x8b, 0x45, 0xf8, 0xc7, 0x80, 0xa7, 0, 0, 0, 0, 0, 0, 0, 0xeb, 0x36, 0x8d, 0x45, 0xdc, 0xe8, 0xf8, 0xc3, 0xf3, 0xff, 0xe8, 0xf2, 0x4a, 0x2, 0, 0x40, 0xe8, 0x35, 0x8c, 0x1, 0, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x89, 0x90, 0xa7, 0, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0xda, 0xc3, 0xf3, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x8b, 0x80, 0xa7, 0, 0, 0, 0xe8, 0xd1, 0x8a, 0x1, 0, 0xba, 0x39, 0xd4, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x9f, 0x8c, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x90, 0xd9, 0, 0, 0, 0xba, 0x49, 0xd4, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x86, 0x8c, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x90, 0xdb, 0, 0, 0, 0xbb, 0x5c, 0x71, 0x1c, 0x10, 0xba, 0x59, 0xd4, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x11, 0x8b, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x88, 0x50, 0x26, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x26, 0x88, 0x45, 0xc8, 0xeb, 0x43, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x13, 0x20, 0xeb, 0x55, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x13, 0x10, 0xeb, 0x4c, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x13, 0x8, 0xeb, 0x43, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x13, 0x4, 0xeb, 0x3a, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x13, 0x80, 0xeb, 0x31, 0xeb, 0x2f, 0x55, 0xd4, 0x14, 0x10, 0x5e, 0xd4, 0x14, 0x10, 0x67, 0xd4, 0x14, 0x10, 0x70, 0xd4, 0x14, 0x10, 0x79, 0xd4, 0x14, 0x10, 0x8a, 0x45, 0xc8, 0x88, 0x45, 0xc4, 0x80, 0x7d, 0xc4, 0x4, 0x77, 0xde, 0x31, 0xc0, 0x8a, 0x45, 0xc4, 0xc1, 0xe0, 0x2, 0x2e, 0xff, 0xa0, 0x84, 0xd4, 0x14, 0x10, 0xba, 0x5e, 0xd4, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xea, 0x8b, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x27, 0xba, 0x66, 0xd4, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xd7, 0x8b, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x28, 0xba, 0x71, 0xd4, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xc4, 0x8b, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x29, 0xba, 0x77, 0xd4, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xfe, 0x8a, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x82, 0xab, 0, 0, 0, 0xba, 0x86, 0xd4, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xe8, 0x8a, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x82, 0xac, 0, 0, 0, 0xba, 0x97, 0xd4, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xd2, 0x8a, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x82, 0xad, 0, 0, 0, 0xba, 0xa7, 0xd4, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xbc, 0x8a, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x82, 0xae, 0, 0, 0, 0xba, 0xb7, 0xd4, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xa6, 0x8a, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x82, 0xb0, 0, 0, 0, 0xba, 0xc6, 0xd4, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x90, 0x8a, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x82, 0xb1, 0, 0, 0, 0xba, 0xd7, 0xd4, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x7a, 0x8a, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x82, 0xb2, 0, 0, 0, 0xba, 0xe7, 0xd4, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x64, 0x8a, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x82, 0xb3, 0, 0, 0, 0xba, 0xf7, 0xd4, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x1, 0x8b, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x2a, 0xba, 0x4, 0xd5, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xee, 0x8a, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x2b, 0xbb, 0xcc, 0x71, 0x1c, 0x10, 0xba, 0xd, 0xd5, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x7f, 0x89, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x2c, 0xba, 0x13, 0xd5, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xc3, 0x8a, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x2d, 0xba, 0x21, 0xd5, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xb0, 0x8a, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x2e, 0xba, 0x2e, 0xd5, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x9d, 0x8a, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x2f, 0xba, 0x3e, 0xd5, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x8a, 0x8a, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x30, 0xba, 0x4e, 0xd5, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x77, 0x8a, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x31, 0xba, 0x5b, 0xd5, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x63, 0x8a, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x33, 0xba, 0x66, 0xd5, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x4f, 0x8a, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x35, 0xba, 0x78, 0xd5, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x3b, 0x8a, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x37, 0xba, 0x8a, 0xd5, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x27, 0x8a, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x39, 0xba, 0x9f, 0xd5, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x13, 0x8a, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x82, 0xd5, 0, 0, 0, 0xba, 0xab, 0xd5, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xfc, 0x89, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x82, 0xd7, 0, 0, 0, 0xba, 0xbe, 0xd5, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xe5, 0x89, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x3b, 0xbb, 0xe8, 0x71, 0x1c, 0x10, 0xba, 0xce, 0xd5, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x75, 0x88, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x3d, 0xbb, 0x4, 0x72, 0x1c, 0x10, 0xba, 0xd5, 0xd5, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x5d, 0x88, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x3e, 0xbb, 0xe8, 0x71, 0x1c, 0x10, 0xba, 0xdb, 0xd5, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x45, 0x88, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x3f, 0xbb, 0x4, 0x72, 0x1c, 0x10, 0xba, 0xe8, 0xd5, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x2d, 0x88, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x40, 0xbb, 0x20, 0x72, 0x1c, 0x10, 0xba, 0xf4, 0xd5, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x15, 0x88, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x82, 0xa6, 0, 0, 0, 0xba, 0x1, 0xd6, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x56, 0x89, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x41, 0xba, 0xf, 0xd6, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x42, 0x89, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x43, 0xba, 0x1d, 0xd6, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x2e, 0x89, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x45, 0xba, 0x28, 0xd6, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x1b, 0x89, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x46, 0xba, 0x35, 0xd6, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x8, 0x89, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x47, 0xba, 0x40, 0xd6, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xf5, 0x88, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x48, 0xba, 0x4c, 0xd6, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xe2, 0x88, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x49, 0xba, 0x58, 0xd6, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xcf, 0x88, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x4a, 0xba, 0x67, 0xd6, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xbc, 0x88, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x4c, 0xba, 0x77, 0xd6, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xa9, 0x88, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x4b, 0xba, 0x87, 0xd6, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x96, 0x88, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x4d, 0xba, 0x8c, 0xd6, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x83, 0x88, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x4e, 0xba, 0x92, 0xd6, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x70, 0x88, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x50, 0xba, 0x98, 0xd6, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xaa, 0x87, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x51, 0xba, 0xa6, 0xd6, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x4a, 0x88, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x42, 0x52, 0xba, 0xae, 0xd6, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x36, 0x88, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x54, 0xba, 0xb3, 0xd6, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x70, 0x87, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x55, 0xba, 0xc2, 0xd6, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x5d, 0x87, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x56, 0xbb, 0x3c, 0x72, 0x1c, 0x10, 0xba, 0xcd, 0xd6, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xa1, 0x86, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x57, 0xba, 0xd4, 0xd6, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xe5, 0x87, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x58, 0xba, 0xe1, 0xd6, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x1f, 0x87, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x59, 0xba, 0xf2, 0xd6, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xc, 0x87, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x5a, 0xbb, 0x94, 0x71, 0x1c, 0x10, 0xba, 0x4, 0xd7, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x50, 0x86, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x5d, 0xba, 0x13, 0xd7, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xe1, 0x86, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x5e, 0xba, 0x19, 0xd7, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xce, 0x86, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x5f, 0xbb, 0x58, 0x72, 0x1c, 0x10, 0xba, 0x20, 0xd7, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x12, 0x86, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x60, 0xbb, 0x58, 0x72, 0x1c, 0x10, 0xba, 0x27, 0xd7, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xfa, 0x85, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x61, 0xbb, 0x58, 0x72, 0x1c, 0x10, 0xba, 0x2e, 0xd7, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xe2, 0x85, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x62, 0xba, 0x33, 0xd7, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x26, 0x87, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x63, 0xba, 0x41, 0xd7, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x13, 0x87, 0xff, 0xff, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x64, 0xba, 0x4f, 0xd7, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x4d, 0x86, 0xff, 0xff, 0x88, 0xc2, 0x8b, 0x45, 0xf8, 0x88, 0x50, 0x7b, 0xba, 0x59, 0xd7, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0x38, 0x86, 0xff, 0xff, 0x88, 0xc2, 0x8b, 0x45, 0xf8, 0x88, 0x50, 0x7a, 0xba, 0x66, 0xd7, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xd6, 0x86, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x50, 0x78, 0xba, 0x71, 0xd7, 0x1a, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xc0, 0x86, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x88, 0x50, 0x5c, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x76, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0x7, 0x8b, 0x45, 0xf8, 0x66, 0xff, 0x40, 0x78, 0xbb, 0x7d, 0xd7, 0x1a, 0x10, 0x8d, 0x55, 0xe0, 0x8b, 0x45, 0xfc, 0xe8, 0x98, 0x87, 0xff, 0xff, 0xe8, 0x7d, 0x33, 0xf9, 0xff, 0x8b, 0x5d, 0xf8, 0x83, 0xc3, 0x65, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xa, 0x90, 0xf2, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x24, 0x27, 0xf9, 0xff, 0x8b, 0x45, 0xf8, 0x66, 0xc7, 0x40, 0x69, 0, 0, 0xbb, 0x82, 0xd7, 0x1a, 0x10, 0x8d, 0x55, 0xe4, 0x8b, 0x45, 0xfc, 0xe8, 0xf, 0x88, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xcc, 0xe8, 0x4d, 0x2c, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe4, 0xe8, 0x9b, 0x29, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xcc, 0xe8, 0x6, 0xd3, 0xfe, 0xff, 0x84, 0xc0, 0xf, 0x84, 0x5, 0x1, 0, 0, 0xba, 0x8d, 0xd7, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0xc8, 0x2b, 0xf9, 0xff, 0xe8, 0x72, 0x85, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x69, 0x1, 0xba, 0xa0, 0xd7, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0xab, 0x2b, 0xf9, 0xff, 0xe8, 0x55, 0x85, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x69, 0x2, 0xba, 0xb4, 0xd7, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0x8e, 0x2b, 0xf9, 0xff, 0xe8, 0x38, 0x85, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x69, 0x4, 0xba, 0xc5, 0xd7, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0x71, 0x2b, 0xf9, 0xff, 0xe8, 0x1b, 0x85, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x69, 0x8, 0xba, 0xd9, 0xd7, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0x54, 0x2b, 0xf9, 0xff, 0xe8, 0xfe, 0x84, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x69, 0x10, 0xba, 0xec, 0xd7, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0x37, 0x2b, 0xf9, 0xff, 0xe8, 0xe1, 0x84, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x69, 0x20, 0xba, 0, 0xd8, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0x1a, 0x2b, 0xf9, 0xff, 0xe8, 0xc4, 0x84, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x69, 0x40, 0xba, 0x11, 0xd8, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0xfd, 0x2a, 0xf9, 0xff, 0xe8, 0xa7, 0x84, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x69, 0x80, 0xba, 0x25, 0xd8, 0x1a, 0x10, 0x8d, 0x45, 0xcc, 0xe8, 0xe0, 0x2a, 0xf9, 0xff, 0xe8, 0x8a, 0x84, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x7, 0x8b, 0x45, 0xf8, 0x80, 0x48, 0x6a, 0x4, 0xbb, 0x3d, 0xd8, 0x1a, 0x10, 0x8d, 0x55, 0xe8, 0x8b, 0x45, 0xfc, 0xe8, 0x26, 0x86, 0xff, 0xff, 0xe8, 0xb, 0x32, 0xf9, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x6c, 0xe8, 0xe2, 0xdb, 0xf7, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xb4, 0x25, 0xf9, 0xff, 0xbb, 0x49, 0xd8, 0x1a, 0x10, 0x8d, 0x55, 0xec, 0x8b, 0x45, 0xfc, 0xe8, 0xfa, 0x85, 0xff, 0xff, 0xe8, 0xdf, 0x31, 0xf9, 0xff, 0x8b, 0x5d, 0xf8, 0x83, 0xc3, 0x70, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xe0, 0xd6, 0xf5, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x86, 0x25, 0xf9, 0xff, 0xbb, 0x51, 0xd8, 0x1a, 0x10, 0x8d, 0x55, 0xf0, 0x8b, 0x45, 0xfc, 0xe8, 0xcc, 0x85, 0xff, 0xff, 0xe8, 0xb1, 0x31, 0xf9, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x5, 0x82, 0, 0, 0, 0xe8, 0x3a, 0x8a, 0xf2, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x58, 0x25, 0xf9, 0xff, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x74, 0xe8, 0x76, 0x21, 0xf8, 0xff, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x3e, 0x2a, 0x74, 0x9, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x3e, 0x1d, 0x75, 0x7, 0x8b, 0x45, 0xf8, 0xc6, 0x40, 0x3e, 0x1, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x6c, 0xe8, 0xfe, 0x8a, 0xf2, 0xff, 0x8b, 0x50, 0x8, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0x39, 0xd0, 0x7e, 0x14, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x6c, 0xe8, 0xde, 0x8a, 0xf2, 0xff, 0x8a, 0x50, 0xa, 0x8b, 0x45, 0xf8, 0x88, 0x50, 0x4d, 0x8b, 0x45, 0xf8, 0xe8, 0xd3, 0xd6, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x66, 0xc0, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xb5, 0x3e, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xcc, 0xe8, 0x7d, 0x27, 0xf9, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1014cfd6, 0x5)   pushd(0x54);                          /* push dword 0x54 */
    II(0x1014cfdb, 0x5)   calld(sys_check_available_stack_size, 0x18d72); /* call 0x10165d52 */
    II(0x1014cfe0, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1014cfe1, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1014cfe2, 0x1)   pushd(esi);                           /* push esi */
    II(0x1014cfe3, 0x1)   pushd(edi);                           /* push edi */
    II(0x1014cfe4, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1014cfe5, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1014cfe7, 0x6)   sub(esp, 0x3c);                       /* sub esp, 0x3c */
    II(0x1014cfed, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1014cff0, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1014cff3, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x1014cff7, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014cffa, 0x5)   calld(0x100e0720, -0x6c8df);          /* call 0x100e0720 */
    II(0x1014cfff, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x1014d002, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x1014d006, 0x5)   mov(ebx, 0x101c7140);                 /* mov ebx, 0x101c7140 */
    II(0x1014d00b, 0x5)   mov(edx, 0x101ad2e9);                 /* mov edx, 0x101ad2e9 */ /* "unit_type" */
    II(0x1014d010, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d013, 0x5)   calld(0x10145f53, -0x70c5);           /* call 0x10145f53 */
    II(0x1014d018, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d01b, 0x4)   mov(memw_a32(ds, edx + 0x8), ax);     /* mov [edx+0x8], ax */
    II(0x1014d01f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d022, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1014d025, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1014d028, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x1014d02b, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c81c0)); /* mov eax, [eax+0x101c81c0] */
    II(0x1014d031, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x1014d034, 0x5)   mov(edx, 0x101ad2f3);                 /* mov edx, 0x101ad2f3 */ /* "id" */
    II(0x1014d039, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d03c, 0x5)   calld(0x101460aa, -0x6f97);           /* call 0x101460aa */
    II(0x1014d041, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d044, 0x4)   mov(memw_a32(ds, edx + 0x7c), ax);    /* mov [edx+0x7c], ax */
    II(0x1014d048, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d04b, 0x7)   mov(memd_a32(ds, eax + 0x12), 0);     /* mov dword [eax+0x12], 0x0 */
    II(0x1014d052, 0x5)   mov(ebx, 0x101ad2f6);                 /* mov ebx, 0x101ad2f6 */ /* "flags" */
    II(0x1014d057, 0x3)   lea(edx, ebp - 0x28);                 /* lea edx, [ebp-0x28] */
    II(0x1014d05a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d05d, 0x5)   calld(0x1014625c, -0x6e06);           /* call 0x1014625c */
    II(0x1014d062, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014d064, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014d067, 0x5)   calld(0x100e06a4, -0x6c9c8);          /* call 0x100e06a4 */
    II(0x1014d06c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014d06e, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x1014d071, 0x5)   calld(0x100e03fc, -0x6cc7a);          /* call 0x100e03fc */
    II(0x1014d076, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1014d079, 0x5)   and_(eax, 0xfffeffff);                /* and eax, 0xfffeffff */
    II(0x1014d07e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d081, 0x3)   mov(memd_a32(ds, edx + 0x12), eax);   /* mov [edx+0x12], eax */
    II(0x1014d084, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014d086, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014d089, 0x5)   calld(0x1013ad71, -0x1231d);          /* call 0x1013ad71 */
    II(0x1014d08e, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014d090, 0x6)   jzd(0x1014d31d, 0x287);               /* jz dword 0x1014d31d */
    II(0x1014d096, 0x5)   mov(edx, 0x101ad2fc);                 /* mov edx, 0x101ad2fc */ /* "spinning_turret" */
    II(0x1014d09b, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014d09e, 0x5)   calld(0x100e0648, -0x6ca5b);          /* call 0x100e0648 */
    II(0x1014d0a3, 0x5)   calld(0x10145ff7, -0x70b1);           /* call 0x10145ff7 */
    II(0x1014d0a8, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014d0aa, 0x2)   jzd(0x1014d0b3, 0x7);                 /* jz 0x1014d0b3 */
    II(0x1014d0ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d0af, 0x4)   or_(memb_a32(ds, eax + 0x15), 0x8);   /* or byte [eax+0x15], 0x8 */
l_0x1014d0b3:
    II(0x1014d0b3, 0x5)   mov(edx, 0x101ad30c);                 /* mov edx, 0x101ad30c */ /* "sentry_unit" */
    II(0x1014d0b8, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014d0bb, 0x5)   calld(0x100e0648, -0x6ca78);          /* call 0x100e0648 */
    II(0x1014d0c0, 0x5)   calld(0x10145ff7, -0x70ce);           /* call 0x10145ff7 */
    II(0x1014d0c5, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014d0c7, 0x2)   jzd(0x1014d0d0, 0x7);                 /* jz 0x1014d0d0 */
    II(0x1014d0c9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d0cc, 0x4)   or_(memb_a32(ds, eax + 0x15), 0x4);   /* or byte [eax+0x15], 0x4 */
l_0x1014d0d0:
    II(0x1014d0d0, 0x5)   mov(edx, 0x101ad318);                 /* mov edx, 0x101ad318 */ /* "turret_sprite" */
    II(0x1014d0d5, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014d0d8, 0x5)   calld(0x100e0648, -0x6ca95);          /* call 0x100e0648 */
    II(0x1014d0dd, 0x5)   calld(0x10145ff7, -0x70eb);           /* call 0x10145ff7 */
    II(0x1014d0e2, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014d0e4, 0x2)   jzd(0x1014d0ed, 0x7);                 /* jz 0x1014d0ed */
    II(0x1014d0e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d0e9, 0x4)   or_(memb_a32(ds, eax + 0x15), 0x2);   /* or byte [eax+0x15], 0x2 */
l_0x1014d0ed:
    II(0x1014d0ed, 0x5)   mov(edx, 0x101ad326);                 /* mov edx, 0x101ad326 */ /* "requires_slab" */
    II(0x1014d0f2, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014d0f5, 0x5)   calld(0x100e0648, -0x6cab2);          /* call 0x100e0648 */
    II(0x1014d0fa, 0x5)   calld(0x10145ff7, -0x7108);           /* call 0x10145ff7 */
    II(0x1014d0ff, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014d101, 0x2)   jzd(0x1014d10a, 0x7);                 /* jz 0x1014d10a */
    II(0x1014d103, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d106, 0x4)   or_(memb_a32(ds, eax + 0x15), 0x1);   /* or byte [eax+0x15], 0x1 */
l_0x1014d10a:
    II(0x1014d10a, 0x5)   mov(edx, 0x101ad334);                 /* mov edx, 0x101ad334 */ /* "standalone" */
    II(0x1014d10f, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014d112, 0x5)   calld(0x100e0648, -0x6cacf);          /* call 0x100e0648 */
    II(0x1014d117, 0x5)   calld(0x10145ff7, -0x7125);           /* call 0x10145ff7 */
    II(0x1014d11c, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014d11e, 0x2)   jzd(0x1014d127, 0x7);                 /* jz 0x1014d127 */
    II(0x1014d120, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d123, 0x4)   or_(memb_a32(ds, eax + 0x14), -0x80 /* 0x80 */); /* or byte [eax+0x14], 0x80 */
l_0x1014d127:
    II(0x1014d127, 0x5)   mov(edx, 0x101ad33f);                 /* mov edx, 0x101ad33f */ /* "selectable" */
    II(0x1014d12c, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014d12f, 0x5)   calld(0x100e0648, -0x6caec);          /* call 0x100e0648 */
    II(0x1014d134, 0x5)   calld(0x10145ff7, -0x7142);           /* call 0x10145ff7 */
    II(0x1014d139, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014d13b, 0x2)   jzd(0x1014d144, 0x7);                 /* jz 0x1014d144 */
    II(0x1014d13d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d140, 0x4)   or_(memb_a32(ds, eax + 0x14), 0x40);  /* or byte [eax+0x14], 0x40 */
l_0x1014d144:
    II(0x1014d144, 0x5)   mov(edx, 0x101ad34a);                 /* mov edx, 0x101ad34a */ /* "electronic_unit" */
    II(0x1014d149, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014d14c, 0x5)   calld(0x100e0648, -0x6cb09);          /* call 0x100e0648 */
    II(0x1014d151, 0x5)   calld(0x10145ff7, -0x715f);           /* call 0x10145ff7 */
    II(0x1014d156, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014d158, 0x2)   jnzd(0x1014d163, 0x9);                /* jnz 0x1014d163 */
    II(0x1014d15a, 0x7)   test(memd_a32(ss, ebp - 0x2c), 0x200000); /* test dword [ebp-0x2c], 0x200000 */
    II(0x1014d161, 0x2)   jzd(0x1014d16a, 0x7);                 /* jz 0x1014d16a */
l_0x1014d163:
    II(0x1014d163, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d166, 0x4)   or_(memb_a32(ds, eax + 0x14), 0x20);  /* or byte [eax+0x14], 0x20 */
l_0x1014d16a:
    II(0x1014d16a, 0x5)   mov(edx, 0x101ad35a);                 /* mov edx, 0x101ad35a */ /* "constructor_unit" */
    II(0x1014d16f, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014d172, 0x5)   calld(0x100e0648, -0x6cb2f);          /* call 0x100e0648 */
    II(0x1014d177, 0x5)   calld(0x10145ff7, -0x7185);           /* call 0x10145ff7 */
    II(0x1014d17c, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014d17e, 0x2)   jzd(0x1014d187, 0x7);                 /* jz 0x1014d187 */
    II(0x1014d180, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d183, 0x4)   or_(memb_a32(ds, eax + 0x14), 0x8);   /* or byte [eax+0x14], 0x8 */
l_0x1014d187:
    II(0x1014d187, 0x5)   mov(edx, 0x101ad36b);                 /* mov edx, 0x101ad36b */ /* "fires_missiles" */
    II(0x1014d18c, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014d18f, 0x5)   calld(0x100e0648, -0x6cb4c);          /* call 0x100e0648 */
    II(0x1014d194, 0x5)   calld(0x10145ff7, -0x71a2);           /* call 0x10145ff7 */
    II(0x1014d199, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014d19b, 0x2)   jzd(0x1014d1a4, 0x7);                 /* jz 0x1014d1a4 */
    II(0x1014d19d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d1a0, 0x4)   or_(memb_a32(ds, eax + 0x14), 0x4);   /* or byte [eax+0x14], 0x4 */
l_0x1014d1a4:
    II(0x1014d1a4, 0x5)   mov(edx, 0x101ad37a);                 /* mov edx, 0x101ad37a */ /* "has_firing_sprite" */
    II(0x1014d1a9, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014d1ac, 0x5)   calld(0x100e0648, -0x6cb69);          /* call 0x100e0648 */
    II(0x1014d1b1, 0x5)   calld(0x10145ff7, -0x71bf);           /* call 0x10145ff7 */
    II(0x1014d1b6, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014d1b8, 0x2)   jzd(0x1014d1c1, 0x7);                 /* jz 0x1014d1c1 */
    II(0x1014d1ba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d1bd, 0x4)   or_(memb_a32(ds, eax + 0x14), 0x2);   /* or byte [eax+0x14], 0x2 */
l_0x1014d1c1:
    II(0x1014d1c1, 0x5)   mov(edx, 0x101ad38c);                 /* mov edx, 0x101ad38c */ /* "hovering" */
    II(0x1014d1c6, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014d1c9, 0x5)   calld(0x100e0648, -0x6cb86);          /* call 0x100e0648 */
    II(0x1014d1ce, 0x5)   calld(0x10145ff7, -0x71dc);           /* call 0x10145ff7 */
    II(0x1014d1d3, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014d1d5, 0x2)   jzd(0x1014d1de, 0x7);                 /* jz 0x1014d1de */
    II(0x1014d1d7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d1da, 0x4)   or_(memb_a32(ds, eax + 0x14), 0x1);   /* or byte [eax+0x14], 0x1 */
l_0x1014d1de:
    II(0x1014d1de, 0x5)   mov(edx, 0x101ad395);                 /* mov edx, 0x101ad395 */ /* "upgradeable" */
    II(0x1014d1e3, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014d1e6, 0x5)   calld(0x100e0648, -0x6cba3);          /* call 0x100e0648 */
    II(0x1014d1eb, 0x5)   calld(0x10145ff7, -0x71f9);           /* call 0x10145ff7 */
    II(0x1014d1f0, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014d1f2, 0x2)   jzd(0x1014d1fb, 0x7);                 /* jz 0x1014d1fb */
    II(0x1014d1f4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d1f7, 0x4)   or_(memb_a32(ds, eax + 0x13), 0x40);  /* or byte [eax+0x13], 0x40 */
l_0x1014d1fb:
    II(0x1014d1fb, 0x5)   mov(edx, 0x101ad3a1);                 /* mov edx, 0x101ad3a1 */ /* "stationary" */
    II(0x1014d200, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014d203, 0x5)   calld(0x100e0648, -0x6cbc0);          /* call 0x100e0648 */
    II(0x1014d208, 0x5)   calld(0x10145ff7, -0x7216);           /* call 0x10145ff7 */
    II(0x1014d20d, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014d20f, 0x2)   jzd(0x1014d218, 0x7);                 /* jz 0x1014d218 */
    II(0x1014d211, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d214, 0x4)   or_(memb_a32(ds, eax + 0x13), 0x2);   /* or byte [eax+0x13], 0x2 */
l_0x1014d218:
    II(0x1014d218, 0x5)   mov(edx, 0x101ad3ac);                 /* mov edx, 0x101ad3ac */ /* "mobile_land_unit" */
    II(0x1014d21d, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014d220, 0x5)   calld(0x100e0648, -0x6cbdd);          /* call 0x100e0648 */
    II(0x1014d225, 0x5)   calld(0x10145ff7, -0x7233);           /* call 0x10145ff7 */
    II(0x1014d22a, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014d22c, 0x2)   jzd(0x1014d235, 0x7);                 /* jz 0x1014d235 */
    II(0x1014d22e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d231, 0x4)   or_(memb_a32(ds, eax + 0x13), 0x1);   /* or byte [eax+0x13], 0x1 */
l_0x1014d235:
    II(0x1014d235, 0x5)   mov(edx, 0x101ad3bd);                 /* mov edx, 0x101ad3bd */ /* "mobile_sea_unit" */
    II(0x1014d23a, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014d23d, 0x5)   calld(0x100e0648, -0x6cbfa);          /* call 0x100e0648 */
    II(0x1014d242, 0x5)   calld(0x10145ff7, -0x7250);           /* call 0x10145ff7 */
    II(0x1014d247, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014d249, 0x2)   jzd(0x1014d252, 0x7);                 /* jz 0x1014d252 */
    II(0x1014d24b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d24e, 0x4)   or_(memb_a32(ds, eax + 0x12), -0x80 /* 0x80 */); /* or byte [eax+0x12], 0x80 */
l_0x1014d252:
    II(0x1014d252, 0x5)   mov(edx, 0x101ad3cd);                 /* mov edx, 0x101ad3cd */ /* "mobile_air_unit" */
    II(0x1014d257, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014d25a, 0x5)   calld(0x100e0648, -0x6cc17);          /* call 0x100e0648 */
    II(0x1014d25f, 0x5)   calld(0x10145ff7, -0x726d);           /* call 0x10145ff7 */
    II(0x1014d264, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014d266, 0x2)   jzd(0x1014d26f, 0x7);                 /* jz 0x1014d26f */
    II(0x1014d268, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d26b, 0x4)   or_(memb_a32(ds, eax + 0x12), 0x40);  /* or byte [eax+0x12], 0x40 */
l_0x1014d26f:
    II(0x1014d26f, 0x5)   mov(edx, 0x101ad3dd);                 /* mov edx, 0x101ad3dd */ /* "missile_unit" */
    II(0x1014d274, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014d277, 0x5)   calld(0x100e0648, -0x6cc34);          /* call 0x100e0648 */
    II(0x1014d27c, 0x5)   calld(0x10145ff7, -0x728a);           /* call 0x10145ff7 */
    II(0x1014d281, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014d283, 0x2)   jzd(0x1014d28c, 0x7);                 /* jz 0x1014d28c */
    II(0x1014d285, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d288, 0x4)   or_(memb_a32(ds, eax + 0x12), 0x20);  /* or byte [eax+0x12], 0x20 */
l_0x1014d28c:
    II(0x1014d28c, 0x5)   mov(edx, 0x101ad3ea);                 /* mov edx, 0x101ad3ea */ /* "building" */
    II(0x1014d291, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014d294, 0x5)   calld(0x100e0648, -0x6cc51);          /* call 0x100e0648 */
    II(0x1014d299, 0x5)   calld(0x10145ff7, -0x72a7);           /* call 0x10145ff7 */
    II(0x1014d29e, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014d2a0, 0x2)   jzd(0x1014d2a9, 0x7);                 /* jz 0x1014d2a9 */
    II(0x1014d2a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d2a5, 0x4)   or_(memb_a32(ds, eax + 0x12), 0x10);  /* or byte [eax+0x12], 0x10 */
l_0x1014d2a9:
    II(0x1014d2a9, 0x5)   mov(edx, 0x101ad3f3);                 /* mov edx, 0x101ad3f3 */ /* "connector_unit" */
    II(0x1014d2ae, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014d2b1, 0x5)   calld(0x100e0648, -0x6cc6e);          /* call 0x100e0648 */
    II(0x1014d2b6, 0x5)   calld(0x10145ff7, -0x72c4);           /* call 0x10145ff7 */
    II(0x1014d2bb, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014d2bd, 0x2)   jzd(0x1014d2c6, 0x7);                 /* jz 0x1014d2c6 */
    II(0x1014d2bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d2c2, 0x4)   or_(memb_a32(ds, eax + 0x12), 0x8);   /* or byte [eax+0x12], 0x8 */
l_0x1014d2c6:
    II(0x1014d2c6, 0x5)   mov(edx, 0x101ad402);                 /* mov edx, 0x101ad402 */ /* "animated" */
    II(0x1014d2cb, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014d2ce, 0x5)   calld(0x100e0648, -0x6cc8b);          /* call 0x100e0648 */
    II(0x1014d2d3, 0x5)   calld(0x10145ff7, -0x72e1);           /* call 0x10145ff7 */
    II(0x1014d2d8, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014d2da, 0x2)   jzd(0x1014d2e3, 0x7);                 /* jz 0x1014d2e3 */
    II(0x1014d2dc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d2df, 0x4)   or_(memb_a32(ds, eax + 0x12), 0x4);   /* or byte [eax+0x12], 0x4 */
l_0x1014d2e3:
    II(0x1014d2e3, 0x5)   mov(edx, 0x101ad40b);                 /* mov edx, 0x101ad40b */ /* "exploding" */
    II(0x1014d2e8, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014d2eb, 0x5)   calld(0x100e0648, -0x6cca8);          /* call 0x100e0648 */
    II(0x1014d2f0, 0x5)   calld(0x10145ff7, -0x72fe);           /* call 0x10145ff7 */
    II(0x1014d2f5, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014d2f7, 0x2)   jzd(0x1014d300, 0x7);                 /* jz 0x1014d300 */
    II(0x1014d2f9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d2fc, 0x4)   or_(memb_a32(ds, eax + 0x12), 0x2);   /* or byte [eax+0x12], 0x2 */
l_0x1014d300:
    II(0x1014d300, 0x5)   mov(edx, 0x101ad415);                 /* mov edx, 0x101ad415 */ /* "ground_cover" */
    II(0x1014d305, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014d308, 0x5)   calld(0x100e0648, -0x6ccc5);          /* call 0x100e0648 */
    II(0x1014d30d, 0x5)   calld(0x10145ff7, -0x731b);           /* call 0x10145ff7 */
    II(0x1014d312, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014d314, 0x2)   jzd(0x1014d31d, 0x7);                 /* jz 0x1014d31d */
    II(0x1014d316, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d319, 0x4)   or_(memb_a32(ds, eax + 0x12), 0x1);   /* or byte [eax+0x12], 0x1 */
l_0x1014d31d:
    II(0x1014d31d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d320, 0x4)   mov(memb_a32(ds, eax + 0x5b), 0);     /* mov byte [eax+0x5b], 0x0 */
    II(0x1014d324, 0x5)   mov(edx, 0x101ad422);                 /* mov edx, 0x101ad422 */ /* "x" */
    II(0x1014d329, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d32c, 0x5)   calld(0x101460aa, -0x7287);           /* call 0x101460aa */
    II(0x1014d331, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014d333, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d336, 0x4)   mov(memw_a32(ds, eax + 0x16), dx);    /* mov [eax+0x16], dx */
    II(0x1014d33a, 0x5)   mov(edx, 0x101ad424);                 /* mov edx, 0x101ad424 */ /* "y" */
    II(0x1014d33f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d342, 0x5)   calld(0x101460aa, -0x729d);           /* call 0x101460aa */
    II(0x1014d347, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014d349, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d34c, 0x4)   mov(memw_a32(ds, eax + 0x18), dx);    /* mov [eax+0x18], dx */
    II(0x1014d350, 0x5)   mov(edx, 0x101ad426);                 /* mov edx, 0x101ad426 */ /* "grid_x" */
    II(0x1014d355, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d358, 0x5)   calld(0x101460aa, -0x72b3);           /* call 0x101460aa */
    II(0x1014d35d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014d35f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d362, 0x1)   dec(edx);                             /* dec edx */
    II(0x1014d363, 0x4)   mov(memw_a32(ds, eax + 0x1a), dx);    /* mov [eax+0x1a], dx */
    II(0x1014d367, 0x5)   mov(edx, 0x101ad42d);                 /* mov edx, 0x101ad42d */ /* "grid_y" */
    II(0x1014d36c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d36f, 0x5)   calld(0x101460aa, -0x72ca);           /* call 0x101460aa */
    II(0x1014d374, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014d376, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d379, 0x1)   dec(edx);                             /* dec edx */
    II(0x1014d37a, 0x4)   mov(memw_a32(ds, eax + 0x1c), dx);    /* mov [eax+0x1c], dx */
    II(0x1014d37e, 0x5)   mov(ebx, 0x101ad434);                 /* mov ebx, 0x101ad434 */ /* "name" */
    II(0x1014d383, 0x3)   lea(edx, ebp - 0x24);                 /* lea edx, [ebp-0x24] */
    II(0x1014d386, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d389, 0x5)   calld(0x101460f3, -0x729b);           /* call 0x101460f3 */
    II(0x1014d38e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d391, 0x7)   cmp(memd_a32(ds, eax + 0xa7), 0);     /* cmp dword [eax+0xa7], 0x0 */
    II(0x1014d398, 0x2)   jzd(0x1014d3a8, 0xe);                 /* jz 0x1014d3a8 */
    II(0x1014d39a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d39d, 0x6)   mov(eax, memd_a32(ds, eax + 0xa7));   /* mov eax, [eax+0xa7] */
    II(0x1014d3a3, 0x5)   calld(sys_delete, 0x18bbc);           /* call 0x10165f64 */
l_0x1014d3a8:
    II(0x1014d3a8, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1014d3ab, 0x5)   calld(my_strobj_c_str_v2, -0xc3be8);  /* call 0x100897c8 */
    II(0x1014d3b0, 0x5)   calld(sys_strlen, 0x24b12);           /* call 0x10171ec7 */
    II(0x1014d3b5, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1014d3b7, 0x2)   jnzd(0x1014d3c8, 0xf);                /* jnz 0x1014d3c8 */
    II(0x1014d3b9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d3bc, 0xa)   mov(memd_a32(ds, eax + 0xa7), 0);     /* mov dword [eax+0xa7], 0x0 */
    II(0x1014d3c6, 0x2)   jmpd(0x1014d3fe, 0x36);               /* jmp 0x1014d3fe */
l_0x1014d3c8:
    II(0x1014d3c8, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1014d3cb, 0x5)   calld(my_strobj_c_str_v2, -0xc3c08);  /* call 0x100897c8 */
    II(0x1014d3d0, 0x5)   calld(sys_strlen, 0x24af2);           /* call 0x10171ec7 */
    II(0x1014d3d5, 0x1)   inc(eax);                             /* inc eax */
    II(0x1014d3d6, 0x5)   calld(sys_new_arr, 0x18c35);          /* call 0x10166010 */
    II(0x1014d3db, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014d3dd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d3e0, 0x6)   mov(memd_a32(ds, eax + 0xa7), edx);   /* mov [eax+0xa7], edx */
    II(0x1014d3e6, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1014d3e9, 0x5)   calld(my_strobj_c_str_v2, -0xc3c26);  /* call 0x100897c8 */
    II(0x1014d3ee, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014d3f0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d3f3, 0x6)   mov(eax, memd_a32(ds, eax + 0xa7));   /* mov eax, [eax+0xa7] */
    II(0x1014d3f9, 0x5)   calld(sys_strcpy, 0x18ad1);           /* call 0x10165ecf */
l_0x1014d3fe:
    II(0x1014d3fe, 0x5)   mov(edx, 0x101ad439);                 /* mov edx, 0x101ad439 */ /* "shadow_offset_x" */
    II(0x1014d403, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d406, 0x5)   calld(0x101460aa, -0x7361);           /* call 0x101460aa */
    II(0x1014d40b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014d40d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d410, 0x7)   mov(memw_a32(ds, eax + 0xd9), dx);    /* mov [eax+0xd9], dx */
    II(0x1014d417, 0x5)   mov(edx, 0x101ad449);                 /* mov edx, 0x101ad449 */ /* "shadow_offset_y" */
    II(0x1014d41c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d41f, 0x5)   calld(0x101460aa, -0x737a);           /* call 0x101460aa */
    II(0x1014d424, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014d426, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d429, 0x7)   mov(memw_a32(ds, eax + 0xdb), dx);    /* mov [eax+0xdb], dx */
    II(0x1014d430, 0x5)   mov(ebx, 0x101c715c);                 /* mov ebx, 0x101c715c */
    II(0x1014d435, 0x5)   mov(edx, 0x101ad459);                 /* mov edx, 0x101ad459 */ /* "team" */
    II(0x1014d43a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d43d, 0x5)   calld(0x10145f53, -0x74ef);           /* call 0x10145f53 */
    II(0x1014d442, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014d444, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d447, 0x3)   mov(memb_a32(ds, eax + 0x26), dl);    /* mov [eax+0x26], dl */
    II(0x1014d44a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d44d, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1014d450, 0x3)   mov(memb_a32(ss, ebp - 0x38), al);    /* mov [ebp-0x38], al */
    II(0x1014d453, 0x2)   jmpd(0x1014d498, 0x43);               /* jmp 0x1014d498 */
l_0x1014d455:
    II(0x1014d455, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d458, 0x4)   or_(memb_a32(ds, eax + 0x13), 0x20);  /* or byte [eax+0x13], 0x20 */
    II(0x1014d45c, 0x2)   jmpd(0x1014d4b3, 0x55);               /* jmp 0x1014d4b3 */
l_0x1014d45e:
    II(0x1014d45e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d461, 0x4)   or_(memb_a32(ds, eax + 0x13), 0x10);  /* or byte [eax+0x13], 0x10 */
    II(0x1014d465, 0x2)   jmpd(0x1014d4b3, 0x4c);               /* jmp 0x1014d4b3 */
l_0x1014d467:
    II(0x1014d467, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d46a, 0x4)   or_(memb_a32(ds, eax + 0x13), 0x8);   /* or byte [eax+0x13], 0x8 */
    II(0x1014d46e, 0x2)   jmpd(0x1014d4b3, 0x43);               /* jmp 0x1014d4b3 */
l_0x1014d470:
    II(0x1014d470, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d473, 0x4)   or_(memb_a32(ds, eax + 0x13), 0x4);   /* or byte [eax+0x13], 0x4 */
    II(0x1014d477, 0x2)   jmpd(0x1014d4b3, 0x3a);               /* jmp 0x1014d4b3 */
l_0x1014d479:
    II(0x1014d479, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d47c, 0x4)   or_(memb_a32(ds, eax + 0x13), -0x80 /* 0x80 */); /* or byte [eax+0x13], 0x80 */
    II(0x1014d480, 0x2)   jmpd(0x1014d4b3, 0x31);               /* jmp 0x1014d4b3 */
l_0x1014d482:
    II(0x1014d482, 0x2)   jmpd(0x1014d4b3, 0x2f);               /* jmp 0x1014d4b3 */
//    II(0x1014d484, 0x14)  /* Служебная область с абсолютными адресами переходов. {0x1014d455, 0x1014d45e, 0x1014d467, 0x1014d470, 0x1014d479}. */
l_0x1014d498:
    II(0x1014d498, 0x3)   mov(al, memb_a32(ss, ebp - 0x38));    /* mov al, [ebp-0x38] */
    II(0x1014d49b, 0x3)   mov(memb_a32(ss, ebp - 0x3c), al);    /* mov [ebp-0x3c], al */
    II(0x1014d49e, 0x4)   cmp(memb_a32(ss, ebp - 0x3c), 0x4);   /* cmp byte [ebp-0x3c], 0x4 */
    II(0x1014d4a2, 0x2)   jad(0x1014d482, -0x22);               /* ja 0x1014d482 */
    II(0x1014d4a4, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1014d4a6, 0x3)   mov(al, memb_a32(ss, ebp - 0x3c));    /* mov al, [ebp-0x3c] */
    II(0x1014d4a9, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1014d4ac, 0x7)   jmpd_abs_switch(memd_a32(cs, eax + 0x1014d484), (0x1014d455)(0x1014d45e)(0x1014d467)(0x1014d470)(0x1014d479)); /* jmp dword near [cs:eax+0x1014d484] */
l_0x1014d4b3:
    II(0x1014d4b3, 0x5)   mov(edx, 0x101ad45e);                 /* mov edx, 0x101ad45e */ /* "unit_id" */
    II(0x1014d4b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d4bb, 0x5)   calld(0x101460aa, -0x7416);           /* call 0x101460aa */
    II(0x1014d4c0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d4c3, 0x3)   mov(memb_a32(ds, edx + 0x27), al);    /* mov [edx+0x27], al */
    II(0x1014d4c6, 0x5)   mov(edx, 0x101ad466);                 /* mov edx, 0x101ad466 */ /* "brightness" */
    II(0x1014d4cb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d4ce, 0x5)   calld(0x101460aa, -0x7429);           /* call 0x101460aa */
    II(0x1014d4d3, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d4d6, 0x3)   mov(memb_a32(ds, edx + 0x28), al);    /* mov [edx+0x28], al */
    II(0x1014d4d9, 0x5)   mov(edx, 0x101ad471);                 /* mov edx, 0x101ad471 */ /* "angle" */
    II(0x1014d4de, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d4e1, 0x5)   calld(0x101460aa, -0x743c);           /* call 0x101460aa */
    II(0x1014d4e6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d4e9, 0x3)   mov(memb_a32(ds, edx + 0x29), al);    /* mov [edx+0x29], al */
    II(0x1014d4ec, 0x5)   mov(edx, 0x101ad477);                 /* mov edx, 0x101ad477 */ /* "visible_to_red" */
    II(0x1014d4f1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d4f4, 0x5)   calld(0x10145ff7, -0x7502);           /* call 0x10145ff7 */
    II(0x1014d4f9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d4fc, 0x6)   mov(memb_a32(ds, edx + 0xab), al);    /* mov [edx+0xab], al */
    II(0x1014d502, 0x5)   mov(edx, 0x101ad486);                 /* mov edx, 0x101ad486 */ /* "visible_to_green" */
    II(0x1014d507, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d50a, 0x5)   calld(0x10145ff7, -0x7518);           /* call 0x10145ff7 */
    II(0x1014d50f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d512, 0x6)   mov(memb_a32(ds, edx + 0xac), al);    /* mov [edx+0xac], al */
    II(0x1014d518, 0x5)   mov(edx, 0x101ad497);                 /* mov edx, 0x101ad497 */ /* "visible_to_blue" */
    II(0x1014d51d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d520, 0x5)   calld(0x10145ff7, -0x752e);           /* call 0x10145ff7 */
    II(0x1014d525, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d528, 0x6)   mov(memb_a32(ds, edx + 0xad), al);    /* mov [edx+0xad], al */
    II(0x1014d52e, 0x5)   mov(edx, 0x101ad4a7);                 /* mov edx, 0x101ad4a7 */ /* "visible_to_gray" */
    II(0x1014d533, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d536, 0x5)   calld(0x10145ff7, -0x7544);           /* call 0x10145ff7 */
    II(0x1014d53b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d53e, 0x6)   mov(memb_a32(ds, edx + 0xae), al);    /* mov [edx+0xae], al */
    II(0x1014d544, 0x5)   mov(edx, 0x101ad4b7);                 /* mov edx, 0x101ad4b7 */ /* "spotted_by_red" */
    II(0x1014d549, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d54c, 0x5)   calld(0x10145ff7, -0x755a);           /* call 0x10145ff7 */
    II(0x1014d551, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d554, 0x6)   mov(memb_a32(ds, edx + 0xb0), al);    /* mov [edx+0xb0], al */
    II(0x1014d55a, 0x5)   mov(edx, 0x101ad4c6);                 /* mov edx, 0x101ad4c6 */ /* "spotted_by_green" */
    II(0x1014d55f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d562, 0x5)   calld(0x10145ff7, -0x7570);           /* call 0x10145ff7 */
    II(0x1014d567, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d56a, 0x6)   mov(memb_a32(ds, edx + 0xb1), al);    /* mov [edx+0xb1], al */
    II(0x1014d570, 0x5)   mov(edx, 0x101ad4d7);                 /* mov edx, 0x101ad4d7 */ /* "spotted_by_blue" */
    II(0x1014d575, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d578, 0x5)   calld(0x10145ff7, -0x7586);           /* call 0x10145ff7 */
    II(0x1014d57d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d580, 0x6)   mov(memb_a32(ds, edx + 0xb2), al);    /* mov [edx+0xb2], al */
    II(0x1014d586, 0x5)   mov(edx, 0x101ad4e7);                 /* mov edx, 0x101ad4e7 */ /* "spotted_by_gray" */
    II(0x1014d58b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d58e, 0x5)   calld(0x10145ff7, -0x759c);           /* call 0x10145ff7 */
    II(0x1014d593, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d596, 0x6)   mov(memb_a32(ds, edx + 0xb3), al);    /* mov [edx+0xb3], al */
    II(0x1014d59c, 0x5)   mov(edx, 0x101ad4f7);                 /* mov edx, 0x101ad4f7 */ /* "max_velocity" */
    II(0x1014d5a1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d5a4, 0x5)   calld(0x101460aa, -0x74ff);           /* call 0x101460aa */
    II(0x1014d5a9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d5ac, 0x3)   mov(memb_a32(ds, edx + 0x2a), al);    /* mov [edx+0x2a], al */
    II(0x1014d5af, 0x5)   mov(edx, 0x101ad504);                 /* mov edx, 0x101ad504 */ /* "velocity" */
    II(0x1014d5b4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d5b7, 0x5)   calld(0x101460aa, -0x7512);           /* call 0x101460aa */
    II(0x1014d5bc, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d5bf, 0x3)   mov(memb_a32(ds, edx + 0x2b), al);    /* mov [edx+0x2b], al */
    II(0x1014d5c2, 0x5)   mov(ebx, 0x101c71cc);                 /* mov ebx, 0x101c71cc */
    II(0x1014d5c7, 0x5)   mov(edx, 0x101ad50d);                 /* mov edx, 0x101ad50d */ /* "sound" */
    II(0x1014d5cc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d5cf, 0x5)   calld(0x10145f53, -0x7681);           /* call 0x10145f53 */
    II(0x1014d5d4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d5d7, 0x3)   mov(memb_a32(ds, edx + 0x2c), al);    /* mov [edx+0x2c], al */
    II(0x1014d5da, 0x5)   mov(edx, 0x101ad513);                 /* mov edx, 0x101ad513 */ /* "scaler_adjust" */
    II(0x1014d5df, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d5e2, 0x5)   calld(0x101460aa, -0x753d);           /* call 0x101460aa */
    II(0x1014d5e7, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d5ea, 0x3)   mov(memb_a32(ds, edx + 0x2d), al);    /* mov [edx+0x2d], al */
    II(0x1014d5ed, 0x5)   mov(edx, 0x101ad521);                 /* mov edx, 0x101ad521 */ /* "turret_angle" */
    II(0x1014d5f2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d5f5, 0x5)   calld(0x101460aa, -0x7550);           /* call 0x101460aa */
    II(0x1014d5fa, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d5fd, 0x3)   mov(memb_a32(ds, edx + 0x2e), al);    /* mov [edx+0x2e], al */
    II(0x1014d600, 0x5)   mov(edx, 0x101ad52e);                 /* mov edx, 0x101ad52e */ /* "turret_offset_x" */
    II(0x1014d605, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d608, 0x5)   calld(0x101460aa, -0x7563);           /* call 0x101460aa */
    II(0x1014d60d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d610, 0x3)   mov(memb_a32(ds, edx + 0x2f), al);    /* mov [edx+0x2f], al */
    II(0x1014d613, 0x5)   mov(edx, 0x101ad53e);                 /* mov edx, 0x101ad53e */ /* "turret_offset_y" */
    II(0x1014d618, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d61b, 0x5)   calld(0x101460aa, -0x7576);           /* call 0x101460aa */
    II(0x1014d620, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d623, 0x3)   mov(memb_a32(ds, edx + 0x30), al);    /* mov [edx+0x30], al */
    II(0x1014d626, 0x5)   mov(edx, 0x101ad54e);                 /* mov edx, 0x101ad54e */ /* "total_images" */
    II(0x1014d62b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d62e, 0x5)   calld(0x101460aa, -0x7589);           /* call 0x101460aa */
    II(0x1014d633, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d636, 0x4)   mov(memw_a32(ds, edx + 0x31), ax);    /* mov [edx+0x31], ax */
    II(0x1014d63a, 0x5)   mov(edx, 0x101ad55b);                 /* mov edx, 0x101ad55b */ /* "image_base" */
    II(0x1014d63f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d642, 0x5)   calld(0x101460aa, -0x759d);           /* call 0x101460aa */
    II(0x1014d647, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d64a, 0x4)   mov(memw_a32(ds, edx + 0x33), ax);    /* mov [edx+0x33], ax */
    II(0x1014d64e, 0x5)   mov(edx, 0x101ad566);                 /* mov edx, 0x101ad566 */ /* "turret_image_base" */
    II(0x1014d653, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d656, 0x5)   calld(0x101460aa, -0x75b1);           /* call 0x101460aa */
    II(0x1014d65b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d65e, 0x4)   mov(memw_a32(ds, edx + 0x35), ax);    /* mov [edx+0x35], ax */
    II(0x1014d662, 0x5)   mov(edx, 0x101ad578);                 /* mov edx, 0x101ad578 */ /* "firing_image_base" */
    II(0x1014d667, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d66a, 0x5)   calld(0x101460aa, -0x75c5);           /* call 0x101460aa */
    II(0x1014d66f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d672, 0x4)   mov(memw_a32(ds, edx + 0x37), ax);    /* mov [edx+0x37], ax */
    II(0x1014d676, 0x5)   mov(edx, 0x101ad58a);                 /* mov edx, 0x101ad58a */ /* "connector_image_base" */
    II(0x1014d67b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d67e, 0x5)   calld(0x101460aa, -0x75d9);           /* call 0x101460aa */
    II(0x1014d683, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d686, 0x4)   mov(memw_a32(ds, edx + 0x39), ax);    /* mov [edx+0x39], ax */
    II(0x1014d68a, 0x5)   mov(edx, 0x101ad59f);                 /* mov edx, 0x101ad59f */ /* "image_index" */
    II(0x1014d68f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d692, 0x5)   calld(0x101460aa, -0x75ed);           /* call 0x101460aa */
    II(0x1014d697, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d69a, 0x7)   mov(memw_a32(ds, edx + 0xd5), ax);    /* mov [edx+0xd5], ax */
    II(0x1014d6a1, 0x5)   mov(edx, 0x101ad5ab);                 /* mov edx, 0x101ad5ab */ /* "turret_image_index" */
    II(0x1014d6a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d6a9, 0x5)   calld(0x101460aa, -0x7604);           /* call 0x101460aa */
    II(0x1014d6ae, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d6b1, 0x7)   mov(memw_a32(ds, edx + 0xd7), ax);    /* mov [edx+0xd7], ax */
    II(0x1014d6b8, 0x5)   mov(edx, 0x101ad5be);                 /* mov edx, 0x101ad5be */ /* "image_index_max" */
    II(0x1014d6bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d6c0, 0x5)   calld(0x101460aa, -0x761b);           /* call 0x101460aa */
    II(0x1014d6c5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d6c8, 0x4)   mov(memw_a32(ds, edx + 0x3b), ax);    /* mov [edx+0x3b], ax */
    II(0x1014d6cc, 0x5)   mov(ebx, 0x101c71e8);                 /* mov ebx, 0x101c71e8 */
    II(0x1014d6d1, 0x5)   mov(edx, 0x101ad5ce);                 /* mov edx, 0x101ad5ce */ /* "orders" */
    II(0x1014d6d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d6d9, 0x5)   calld(0x10145f53, -0x778b);           /* call 0x10145f53 */
    II(0x1014d6de, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d6e1, 0x3)   mov(memb_a32(ds, edx + 0x3d), al);    /* mov [edx+0x3d], al */
    II(0x1014d6e4, 0x5)   mov(ebx, 0x101c7204);                 /* mov ebx, 0x101c7204 */
    II(0x1014d6e9, 0x5)   mov(edx, 0x101ad5d5);                 /* mov edx, 0x101ad5d5 */ /* "state" */
    II(0x1014d6ee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d6f1, 0x5)   calld(0x10145f53, -0x77a3);           /* call 0x10145f53 */
    II(0x1014d6f6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d6f9, 0x3)   mov(memb_a32(ds, edx + 0x3e), al);    /* mov [edx+0x3e], al */
    II(0x1014d6fc, 0x5)   mov(ebx, 0x101c71e8);                 /* mov ebx, 0x101c71e8 */
    II(0x1014d701, 0x5)   mov(edx, 0x101ad5db);                 /* mov edx, 0x101ad5db */ /* "prior_orders" */
    II(0x1014d706, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d709, 0x5)   calld(0x10145f53, -0x77bb);           /* call 0x10145f53 */
    II(0x1014d70e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d711, 0x3)   mov(memb_a32(ds, edx + 0x3f), al);    /* mov [edx+0x3f], al */
    II(0x1014d714, 0x5)   mov(ebx, 0x101c7204);                 /* mov ebx, 0x101c7204 */
    II(0x1014d719, 0x5)   mov(edx, 0x101ad5e8);                 /* mov edx, 0x101ad5e8 */ /* "prior_state" */
    II(0x1014d71e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d721, 0x5)   calld(0x10145f53, -0x77d3);           /* call 0x10145f53 */
    II(0x1014d726, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d729, 0x3)   mov(memb_a32(ds, edx + 0x40), al);    /* mov [edx+0x40], al */
    II(0x1014d72c, 0x5)   mov(ebx, 0x101c7220);                 /* mov ebx, 0x101c7220 */
    II(0x1014d731, 0x5)   mov(edx, 0x101ad5f4);                 /* mov edx, 0x101ad5f4 */ /* "laying_state" */
    II(0x1014d736, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d739, 0x5)   calld(0x10145f53, -0x77eb);           /* call 0x10145f53 */
    II(0x1014d73e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d741, 0x6)   mov(memb_a32(ds, edx + 0xa6), al);    /* mov [edx+0xa6], al */
    II(0x1014d747, 0x5)   mov(edx, 0x101ad601);                 /* mov edx, 0x101ad601 */ /* "target_grid_x" */
    II(0x1014d74c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d74f, 0x5)   calld(0x101460aa, -0x76aa);           /* call 0x101460aa */
    II(0x1014d754, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d757, 0x4)   mov(memw_a32(ds, edx + 0x41), ax);    /* mov [edx+0x41], ax */
    II(0x1014d75b, 0x5)   mov(edx, 0x101ad60f);                 /* mov edx, 0x101ad60f */ /* "target_grid_y" */
    II(0x1014d760, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d763, 0x5)   calld(0x101460aa, -0x76be);           /* call 0x101460aa */
    II(0x1014d768, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d76b, 0x4)   mov(memw_a32(ds, edx + 0x43), ax);    /* mov [edx+0x43], ax */
    II(0x1014d76f, 0x5)   mov(edx, 0x101ad61d);                 /* mov edx, 0x101ad61d */ /* "build_time" */
    II(0x1014d774, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d777, 0x5)   calld(0x101460aa, -0x76d2);           /* call 0x101460aa */
    II(0x1014d77c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d77f, 0x3)   mov(memb_a32(ds, edx + 0x45), al);    /* mov [edx+0x45], al */
    II(0x1014d782, 0x5)   mov(edx, 0x101ad628);                 /* mov edx, 0x101ad628 */ /* "total_mining" */
    II(0x1014d787, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d78a, 0x5)   calld(0x101460aa, -0x76e5);           /* call 0x101460aa */
    II(0x1014d78f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d792, 0x3)   mov(memb_a32(ds, edx + 0x46), al);    /* mov [edx+0x46], al */
    II(0x1014d795, 0x5)   mov(edx, 0x101ad635);                 /* mov edx, 0x101ad635 */ /* "raw_mining" */
    II(0x1014d79a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d79d, 0x5)   calld(0x101460aa, -0x76f8);           /* call 0x101460aa */
    II(0x1014d7a2, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d7a5, 0x3)   mov(memb_a32(ds, edx + 0x47), al);    /* mov [edx+0x47], al */
    II(0x1014d7a8, 0x5)   mov(edx, 0x101ad640);                 /* mov edx, 0x101ad640 */ /* "fuel_mining" */
    II(0x1014d7ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d7b0, 0x5)   calld(0x101460aa, -0x770b);           /* call 0x101460aa */
    II(0x1014d7b5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d7b8, 0x3)   mov(memb_a32(ds, edx + 0x48), al);    /* mov [edx+0x48], al */
    II(0x1014d7bb, 0x5)   mov(edx, 0x101ad64c);                 /* mov edx, 0x101ad64c */ /* "gold_mining" */
    II(0x1014d7c0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d7c3, 0x5)   calld(0x101460aa, -0x771e);           /* call 0x101460aa */
    II(0x1014d7c8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d7cb, 0x3)   mov(memb_a32(ds, edx + 0x49), al);    /* mov [edx+0x49], al */
    II(0x1014d7ce, 0x5)   mov(edx, 0x101ad658);                 /* mov edx, 0x101ad658 */ /* "raw_mining_max" */
    II(0x1014d7d3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d7d6, 0x5)   calld(0x101460aa, -0x7731);           /* call 0x101460aa */
    II(0x1014d7db, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d7de, 0x3)   mov(memb_a32(ds, edx + 0x4a), al);    /* mov [edx+0x4a], al */
    II(0x1014d7e1, 0x5)   mov(edx, 0x101ad667);                 /* mov edx, 0x101ad667 */ /* "fuel_mining_max" */
    II(0x1014d7e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d7e9, 0x5)   calld(0x101460aa, -0x7744);           /* call 0x101460aa */
    II(0x1014d7ee, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d7f1, 0x3)   mov(memb_a32(ds, edx + 0x4c), al);    /* mov [edx+0x4c], al */
    II(0x1014d7f4, 0x5)   mov(edx, 0x101ad677);                 /* mov edx, 0x101ad677 */ /* "gold_mining_max" */
    II(0x1014d7f9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d7fc, 0x5)   calld(0x101460aa, -0x7757);           /* call 0x101460aa */
    II(0x1014d801, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d804, 0x3)   mov(memb_a32(ds, edx + 0x4b), al);    /* mov [edx+0x4b], al */
    II(0x1014d807, 0x5)   mov(edx, 0x101ad687);                 /* mov edx, 0x101ad687 */ /* "hits" */
    II(0x1014d80c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d80f, 0x5)   calld(0x101460aa, -0x776a);           /* call 0x101460aa */
    II(0x1014d814, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d817, 0x3)   mov(memb_a32(ds, edx + 0x4d), al);    /* mov [edx+0x4d], al */
    II(0x1014d81a, 0x5)   mov(edx, 0x101ad68c);                 /* mov edx, 0x101ad68c */ /* "speed" */
    II(0x1014d81f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d822, 0x5)   calld(0x101460aa, -0x777d);           /* call 0x101460aa */
    II(0x1014d827, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d82a, 0x3)   mov(memb_a32(ds, edx + 0x4e), al);    /* mov [edx+0x4e], al */
    II(0x1014d82d, 0x5)   mov(edx, 0x101ad692);                 /* mov edx, 0x101ad692 */ /* "shots" */
    II(0x1014d832, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d835, 0x5)   calld(0x101460aa, -0x7790);           /* call 0x101460aa */
    II(0x1014d83a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d83d, 0x3)   mov(memb_a32(ds, edx + 0x50), al);    /* mov [edx+0x50], al */
    II(0x1014d840, 0x5)   mov(edx, 0x101ad698);                 /* mov edx, 0x101ad698 */ /* "move_and_fire" */
    II(0x1014d845, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d848, 0x5)   calld(0x10145ff7, -0x7856);           /* call 0x10145ff7 */
    II(0x1014d84d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d850, 0x3)   mov(memb_a32(ds, edx + 0x51), al);    /* mov [edx+0x51], al */
    II(0x1014d853, 0x5)   mov(edx, 0x101ad6a6);                 /* mov edx, 0x101ad6a6 */ /* "storage" */
    II(0x1014d858, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d85b, 0x5)   calld(0x101460aa, -0x77b6);           /* call 0x101460aa */
    II(0x1014d860, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d863, 0x4)   mov(memw_a32(ds, edx + 0x52), ax);    /* mov [edx+0x52], ax */
    II(0x1014d867, 0x5)   mov(edx, 0x101ad6ae);                 /* mov edx, 0x101ad6ae */ /* "ammo" */
    II(0x1014d86c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d86f, 0x5)   calld(0x101460aa, -0x77ca);           /* call 0x101460aa */
    II(0x1014d874, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d877, 0x3)   mov(memb_a32(ds, edx + 0x54), al);    /* mov [edx+0x54], al */
    II(0x1014d87a, 0x5)   mov(edx, 0x101ad6b3);                 /* mov edx, 0x101ad6b3 */ /* "targeting_mode" */
    II(0x1014d87f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d882, 0x5)   calld(0x10145ff7, -0x7890);           /* call 0x10145ff7 */
    II(0x1014d887, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d88a, 0x3)   mov(memb_a32(ds, edx + 0x55), al);    /* mov [edx+0x55], al */
    II(0x1014d88d, 0x5)   mov(edx, 0x101ad6c2);                 /* mov edx, 0x101ad6c2 */ /* "enter_mode" */
    II(0x1014d892, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d895, 0x5)   calld(0x10145ff7, -0x78a3);           /* call 0x10145ff7 */
    II(0x1014d89a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d89d, 0x3)   mov(memb_a32(ds, edx + 0x56), al);    /* mov [edx+0x56], al */
    II(0x1014d8a0, 0x5)   mov(ebx, 0x101c723c);                 /* mov ebx, 0x101c723c */
    II(0x1014d8a5, 0x5)   mov(edx, 0x101ad6cd);                 /* mov edx, 0x101ad6cd */ /* "cursor" */
    II(0x1014d8aa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d8ad, 0x5)   calld(0x10145f53, -0x795f);           /* call 0x10145f53 */
    II(0x1014d8b2, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d8b5, 0x3)   mov(memb_a32(ds, edx + 0x57), al);    /* mov [edx+0x57], al */
    II(0x1014d8b8, 0x5)   mov(edx, 0x101ad6d4);                 /* mov edx, 0x101ad6d4 */ /* "recoil_delay" */
    II(0x1014d8bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d8c0, 0x5)   calld(0x101460aa, -0x781b);           /* call 0x101460aa */
    II(0x1014d8c5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d8c8, 0x3)   mov(memb_a32(ds, edx + 0x58), al);    /* mov [edx+0x58], al */
    II(0x1014d8cb, 0x5)   mov(edx, 0x101ad6e1);                 /* mov edx, 0x101ad6e1 */ /* "delayed_reaction" */
    II(0x1014d8d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d8d3, 0x5)   calld(0x10145ff7, -0x78e1);           /* call 0x10145ff7 */
    II(0x1014d8d8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d8db, 0x3)   mov(memb_a32(ds, edx + 0x59), al);    /* mov [edx+0x59], al */
    II(0x1014d8de, 0x5)   mov(edx, 0x101ad6f2);                 /* mov edx, 0x101ad6f2 */ /* "damaged_this_turn" */
    II(0x1014d8e3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d8e6, 0x5)   calld(0x10145ff7, -0x78f4);           /* call 0x10145ff7 */
    II(0x1014d8eb, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d8ee, 0x3)   mov(memb_a32(ds, edx + 0x5a), al);    /* mov [edx+0x5a], al */
    II(0x1014d8f1, 0x5)   mov(ebx, 0x101c7194);                 /* mov ebx, 0x101c7194 */
    II(0x1014d8f6, 0x5)   mov(edx, 0x101ad704);                 /* mov edx, 0x101ad704 */ /* "research_topic" */
    II(0x1014d8fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d8fe, 0x5)   calld(0x10145f53, -0x79b0);           /* call 0x10145f53 */
    II(0x1014d903, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d906, 0x3)   mov(memb_a32(ds, edx + 0x5d), al);    /* mov [edx+0x5d], al */
    II(0x1014d909, 0x5)   mov(edx, 0x101ad713);                 /* mov edx, 0x101ad713 */ /* "moved" */
    II(0x1014d90e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d911, 0x5)   calld(0x10145ff7, -0x791f);           /* call 0x10145ff7 */
    II(0x1014d916, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d919, 0x3)   mov(memb_a32(ds, edx + 0x5e), al);    /* mov [edx+0x5e], al */
    II(0x1014d91c, 0x5)   mov(edx, 0x101ad719);                 /* mov edx, 0x101ad719 */ /* "bobbed" */
    II(0x1014d921, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d924, 0x5)   calld(0x10145ff7, -0x7932);           /* call 0x10145ff7 */
    II(0x1014d929, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d92c, 0x3)   mov(memb_a32(ds, edx + 0x5f), al);    /* mov [edx+0x5f], al */
    II(0x1014d92f, 0x5)   mov(ebx, 0x101c7258);                 /* mov ebx, 0x101c7258 */
    II(0x1014d934, 0x5)   mov(edx, 0x101ad720);                 /* mov edx, 0x101ad720 */ /* "engine" */
    II(0x1014d939, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d93c, 0x5)   calld(0x10145f53, -0x79ee);           /* call 0x10145f53 */
    II(0x1014d941, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d944, 0x3)   mov(memb_a32(ds, edx + 0x60), al);    /* mov [edx+0x60], al */
    II(0x1014d947, 0x5)   mov(ebx, 0x101c7258);                 /* mov ebx, 0x101c7258 */
    II(0x1014d94c, 0x5)   mov(edx, 0x101ad727);                 /* mov edx, 0x101ad727 */ /* "weapon" */
    II(0x1014d951, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d954, 0x5)   calld(0x10145f53, -0x7a06);           /* call 0x10145f53 */
    II(0x1014d959, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d95c, 0x3)   mov(memb_a32(ds, edx + 0x61), al);    /* mov [edx+0x61], al */
    II(0x1014d95f, 0x5)   mov(ebx, 0x101c7258);                 /* mov ebx, 0x101c7258 */
    II(0x1014d964, 0x5)   mov(edx, 0x101ad72e);                 /* mov edx, 0x101ad72e */ /* "comm" */
    II(0x1014d969, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d96c, 0x5)   calld(0x10145f53, -0x7a1e);           /* call 0x10145f53 */
    II(0x1014d971, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d974, 0x3)   mov(memb_a32(ds, edx + 0x62), al);    /* mov [edx+0x62], al */
    II(0x1014d977, 0x5)   mov(edx, 0x101ad733);                 /* mov edx, 0x101ad733 */ /* "fuel_distance" */
    II(0x1014d97c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d97f, 0x5)   calld(0x101460aa, -0x78da);           /* call 0x101460aa */
    II(0x1014d984, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d987, 0x3)   mov(memb_a32(ds, edx + 0x63), al);    /* mov [edx+0x63], al */
    II(0x1014d98a, 0x5)   mov(edx, 0x101ad741);                 /* mov edx, 0x101ad741 */ /* "move_fraction" */
    II(0x1014d98f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d992, 0x5)   calld(0x101460aa, -0x78ed);           /* call 0x101460aa */
    II(0x1014d997, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014d99a, 0x3)   mov(memb_a32(ds, edx + 0x64), al);    /* mov [edx+0x64], al */
    II(0x1014d99d, 0x5)   mov(edx, 0x101ad74f);                 /* mov edx, 0x101ad74f */ /* "energized" */
    II(0x1014d9a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d9a5, 0x5)   calld(0x10145ff7, -0x79b3);           /* call 0x10145ff7 */
    II(0x1014d9aa, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x1014d9ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d9af, 0x3)   mov(memb_a32(ds, eax + 0x7b), dl);    /* mov [eax+0x7b], dl */
    II(0x1014d9b2, 0x5)   mov(edx, 0x101ad759);                 /* mov edx, 0x101ad759 */ /* "repeat_build" */
    II(0x1014d9b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d9ba, 0x5)   calld(0x10145ff7, -0x79c8);           /* call 0x10145ff7 */
    II(0x1014d9bf, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x1014d9c1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d9c4, 0x3)   mov(memb_a32(ds, eax + 0x7a), dl);    /* mov [eax+0x7a], dl */
    II(0x1014d9c7, 0x5)   mov(edx, 0x101ad766);                 /* mov edx, 0x101ad766 */ /* "build_rate" */
    II(0x1014d9cc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d9cf, 0x5)   calld(0x101460aa, -0x792a);           /* call 0x101460aa */
    II(0x1014d9d4, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014d9d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d9d9, 0x4)   mov(memw_a32(ds, eax + 0x78), dx);    /* mov [eax+0x78], dx */
    II(0x1014d9dd, 0x5)   mov(edx, 0x101ad771);                 /* mov edx, 0x101ad771 */ /* "auto_survey" */
    II(0x1014d9e2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014d9e5, 0x5)   calld(0x101460aa, -0x7940);           /* call 0x101460aa */
    II(0x1014d9ea, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014d9ec, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d9ef, 0x3)   mov(memb_a32(ds, eax + 0x5c), dl);    /* mov [eax+0x5c], dl */
    II(0x1014d9f2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014d9f5, 0x3)   mov(eax, memd_a32(ds, eax + 0x76));   /* mov eax, [eax+0x76] */
    II(0x1014d9f8, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1014d9fb, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1014d9fd, 0x2)   jnzd(0x1014da06, 0x7);                /* jnz 0x1014da06 */
    II(0x1014d9ff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014da02, 0x4)   inc(memw_a32(ds, eax + 0x78));        /* inc word [eax+0x78] */
l_0x1014da06:
    II(0x1014da06, 0x5)   mov(ebx, 0x101ad77d);                 /* mov ebx, 0x101ad77d */ /* "path" */
    II(0x1014da0b, 0x3)   lea(edx, ebp - 0x20);                 /* lea edx, [ebp-0x20] */
    II(0x1014da0e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014da11, 0x5)   calld(0x101461ae, -0x7868);           /* call 0x101461ae */
    II(0x1014da16, 0x5)   calld(0x100e0d98, -0x6cc83);          /* call 0x100e0d98 */
    II(0x1014da1b, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014da1e, 0x3)   add(ebx, 0x65);                       /* add ebx, 0x65 */
    II(0x1014da21, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014da23, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1014da25, 0x5)   calld(0x10076a34, -0xd6ff6);          /* call 0x10076a34 */
    II(0x1014da2a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014da2c, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x1014da2f, 0x5)   calld(0x100e0158, -0x6d8dc);          /* call 0x100e0158 */
    II(0x1014da34, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014da37, 0x6)   mov(memw_a32(ds, eax + 0x69), 0);     /* mov word [eax+0x69], 0x0 */
    II(0x1014da3d, 0x5)   mov(ebx, 0x101ad782);                 /* mov ebx, 0x101ad782 */ /* "connectors" */
    II(0x1014da42, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x1014da45, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014da48, 0x5)   calld(0x1014625c, -0x77f1);           /* call 0x1014625c */
    II(0x1014da4d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014da4f, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014da52, 0x5)   calld(0x100e06a4, -0x6d3b3);          /* call 0x100e06a4 */
    II(0x1014da57, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014da59, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1014da5c, 0x5)   calld(0x100e03fc, -0x6d665);          /* call 0x100e03fc */
    II(0x1014da61, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014da63, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014da66, 0x5)   calld(0x1013ad71, -0x12cfa);          /* call 0x1013ad71 */
    II(0x1014da6b, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014da6d, 0x6)   jzd(0x1014db78, 0x105);               /* jz dword 0x1014db78 */
    II(0x1014da73, 0x5)   mov(edx, 0x101ad78d);                 /* mov edx, 0x101ad78d */ /* "connect_north_left" */
    II(0x1014da78, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014da7b, 0x5)   calld(0x100e0648, -0x6d438);          /* call 0x100e0648 */
    II(0x1014da80, 0x5)   calld(0x10145ff7, -0x7a8e);           /* call 0x10145ff7 */
    II(0x1014da85, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014da87, 0x2)   jzd(0x1014da90, 0x7);                 /* jz 0x1014da90 */
    II(0x1014da89, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014da8c, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x1);   /* or byte [eax+0x69], 0x1 */
l_0x1014da90:
    II(0x1014da90, 0x5)   mov(edx, 0x101ad7a0);                 /* mov edx, 0x101ad7a0 */ /* "connect_north_right" */
    II(0x1014da95, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014da98, 0x5)   calld(0x100e0648, -0x6d455);          /* call 0x100e0648 */
    II(0x1014da9d, 0x5)   calld(0x10145ff7, -0x7aab);           /* call 0x10145ff7 */
    II(0x1014daa2, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014daa4, 0x2)   jzd(0x1014daad, 0x7);                 /* jz 0x1014daad */
    II(0x1014daa6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014daa9, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x2);   /* or byte [eax+0x69], 0x2 */
l_0x1014daad:
    II(0x1014daad, 0x5)   mov(edx, 0x101ad7b4);                 /* mov edx, 0x101ad7b4 */ /* "connect_east_top" */
    II(0x1014dab2, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014dab5, 0x5)   calld(0x100e0648, -0x6d472);          /* call 0x100e0648 */
    II(0x1014daba, 0x5)   calld(0x10145ff7, -0x7ac8);           /* call 0x10145ff7 */
    II(0x1014dabf, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014dac1, 0x2)   jzd(0x1014daca, 0x7);                 /* jz 0x1014daca */
    II(0x1014dac3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dac6, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x4);   /* or byte [eax+0x69], 0x4 */
l_0x1014daca:
    II(0x1014daca, 0x5)   mov(edx, 0x101ad7c5);                 /* mov edx, 0x101ad7c5 */ /* "connect_east_bottom" */
    II(0x1014dacf, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014dad2, 0x5)   calld(0x100e0648, -0x6d48f);          /* call 0x100e0648 */
    II(0x1014dad7, 0x5)   calld(0x10145ff7, -0x7ae5);           /* call 0x10145ff7 */
    II(0x1014dadc, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014dade, 0x2)   jzd(0x1014dae7, 0x7);                 /* jz 0x1014dae7 */
    II(0x1014dae0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dae3, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x8);   /* or byte [eax+0x69], 0x8 */
l_0x1014dae7:
    II(0x1014dae7, 0x5)   mov(edx, 0x101ad7d9);                 /* mov edx, 0x101ad7d9 */ /* "connect_south_left" */
    II(0x1014daec, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014daef, 0x5)   calld(0x100e0648, -0x6d4ac);          /* call 0x100e0648 */
    II(0x1014daf4, 0x5)   calld(0x10145ff7, -0x7b02);           /* call 0x10145ff7 */
    II(0x1014daf9, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014dafb, 0x2)   jzd(0x1014db04, 0x7);                 /* jz 0x1014db04 */
    II(0x1014dafd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014db00, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x10);  /* or byte [eax+0x69], 0x10 */
l_0x1014db04:
    II(0x1014db04, 0x5)   mov(edx, 0x101ad7ec);                 /* mov edx, 0x101ad7ec */ /* "connect_south_right" */
    II(0x1014db09, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014db0c, 0x5)   calld(0x100e0648, -0x6d4c9);          /* call 0x100e0648 */
    II(0x1014db11, 0x5)   calld(0x10145ff7, -0x7b1f);           /* call 0x10145ff7 */
    II(0x1014db16, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014db18, 0x2)   jzd(0x1014db21, 0x7);                 /* jz 0x1014db21 */
    II(0x1014db1a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014db1d, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x20);  /* or byte [eax+0x69], 0x20 */
l_0x1014db21:
    II(0x1014db21, 0x5)   mov(edx, 0x101ad800);                 /* mov edx, 0x101ad800 */ /* "connect_west_top" */
    II(0x1014db26, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014db29, 0x5)   calld(0x100e0648, -0x6d4e6);          /* call 0x100e0648 */
    II(0x1014db2e, 0x5)   calld(0x10145ff7, -0x7b3c);           /* call 0x10145ff7 */
    II(0x1014db33, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014db35, 0x2)   jzd(0x1014db3e, 0x7);                 /* jz 0x1014db3e */
    II(0x1014db37, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014db3a, 0x4)   or_(memb_a32(ds, eax + 0x69), 0x40);  /* or byte [eax+0x69], 0x40 */
l_0x1014db3e:
    II(0x1014db3e, 0x5)   mov(edx, 0x101ad811);                 /* mov edx, 0x101ad811 */ /* "connect_west_bottom" */
    II(0x1014db43, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014db46, 0x5)   calld(0x100e0648, -0x6d503);          /* call 0x100e0648 */
    II(0x1014db4b, 0x5)   calld(0x10145ff7, -0x7b59);           /* call 0x10145ff7 */
    II(0x1014db50, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014db52, 0x2)   jzd(0x1014db5b, 0x7);                 /* jz 0x1014db5b */
    II(0x1014db54, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014db57, 0x4)   or_(memb_a32(ds, eax + 0x69), -0x80 /* 0x80 */); /* or byte [eax+0x69], 0x80 */
l_0x1014db5b:
    II(0x1014db5b, 0x5)   mov(edx, 0x101ad825);                 /* mov edx, 0x101ad825 */ /* "connection_being_tested" */
    II(0x1014db60, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014db63, 0x5)   calld(0x100e0648, -0x6d520);          /* call 0x100e0648 */
    II(0x1014db68, 0x5)   calld(0x10145ff7, -0x7b76);           /* call 0x10145ff7 */
    II(0x1014db6d, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014db6f, 0x2)   jzd(0x1014db78, 0x7);                 /* jz 0x1014db78 */
    II(0x1014db71, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014db74, 0x4)   or_(memb_a32(ds, eax + 0x6a), 0x4);   /* or byte [eax+0x6a], 0x4 */
l_0x1014db78:
    II(0x1014db78, 0x5)   mov(ebx, 0x101ad83d);                 /* mov ebx, 0x101ad83d */ /* "base_values" */
    II(0x1014db7d, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x1014db80, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014db83, 0x5)   calld(0x101461ae, -0x79da);           /* call 0x101461ae */
    II(0x1014db88, 0x5)   calld(0x100e0d98, -0x6cdf5);          /* call 0x100e0d98 */
    II(0x1014db8d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014db8f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014db92, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x1014db95, 0x5)   calld(0x100cb77c, -0x8241e);          /* call 0x100cb77c */
    II(0x1014db9a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014db9c, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1014db9f, 0x5)   calld(0x100e0158, -0x6da4c);          /* call 0x100e0158 */
    II(0x1014dba4, 0x5)   mov(ebx, 0x101ad849);                 /* mov ebx, 0x101ad849 */ /* "complex" */
    II(0x1014dba9, 0x3)   lea(edx, ebp - 0x14);                 /* lea edx, [ebp-0x14] */
    II(0x1014dbac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014dbaf, 0x5)   calld(0x101461ae, -0x7a06);           /* call 0x101461ae */
    II(0x1014dbb4, 0x5)   calld(0x100e0d98, -0x6ce21);          /* call 0x100e0d98 */
    II(0x1014dbb9, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x1014dbbc, 0x3)   add(ebx, 0x70);                       /* add ebx, 0x70 */
    II(0x1014dbbf, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014dbc1, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1014dbc3, 0x5)   calld(0x100ab2a8, -0xa2920);          /* call 0x100ab2a8 */
    II(0x1014dbc8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014dbca, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1014dbcd, 0x5)   calld(0x100e0158, -0x6da7a);          /* call 0x100e0158 */
    II(0x1014dbd2, 0x5)   mov(ebx, 0x101ad851);                 /* mov ebx, 0x101ad851 */ /* "parent_unit" */
    II(0x1014dbd7, 0x3)   lea(edx, ebp - 0x10);                 /* lea edx, [ebp-0x10] */
    II(0x1014dbda, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1014dbdd, 0x5)   calld(0x101461ae, -0x7a34);           /* call 0x101461ae */
    II(0x1014dbe2, 0x5)   calld(0x100e0d98, -0x6ce4f);          /* call 0x100e0d98 */
    II(0x1014dbe7, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1014dbe9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dbec, 0x5)   add(eax, 0x82);                       /* add eax, 0x82 */
    II(0x1014dbf1, 0x5)   calld(0x10076630, -0xd75c6);          /* call 0x10076630 */
    II(0x1014dbf6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014dbf8, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1014dbfb, 0x5)   calld(0x100e0158, -0x6daa8);          /* call 0x100e0158 */
    II(0x1014dc00, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1014dc03, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dc06, 0x3)   add(eax, 0x74);                       /* add eax, 0x74 */
    II(0x1014dc09, 0x5)   calld(0x100cfd84, -0x7de8a);          /* call 0x100cfd84 */
    II(0x1014dc0e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dc11, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x2a);  /* cmp byte [eax+0x3e], 0x2a */
    II(0x1014dc15, 0x2)   jzd(0x1014dc20, 0x9);                 /* jz 0x1014dc20 */
    II(0x1014dc17, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dc1a, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1d);  /* cmp byte [eax+0x3e], 0x1d */
    II(0x1014dc1e, 0x2)   jnzd(0x1014dc27, 0x7);                /* jnz 0x1014dc27 */
l_0x1014dc20:
    II(0x1014dc20, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dc23, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x1);   /* mov byte [eax+0x3e], 0x1 */
l_0x1014dc27:
    II(0x1014dc27, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dc2a, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x1014dc2d, 0x5)   calld(0x10076730, -0xd7502);          /* call 0x10076730 */
    II(0x1014dc32, 0x3)   mov(edx, memd_a32(ds, eax + 0x8));    /* mov edx, [eax+0x8] */
    II(0x1014dc35, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1014dc38, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dc3b, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x1014dc3e, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1014dc43, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x1014dc45, 0x2)   jled(0x1014dc5b, 0x14);               /* jle 0x1014dc5b */
    II(0x1014dc47, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dc4a, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x1014dc4d, 0x5)   calld(0x10076730, -0xd7522);          /* call 0x10076730 */
    II(0x1014dc52, 0x3)   mov(dl, memb_a32(ds, eax + 0xa));     /* mov dl, [eax+0xa] */
    II(0x1014dc55, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dc58, 0x3)   mov(memb_a32(ds, eax + 0x4d), dl);    /* mov [eax+0x4d], dl */
l_0x1014dc5b:
    II(0x1014dc5b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dc5e, 0x5)   calld(0x1015b336, 0xd6d3);            /* call 0x1015b336 */
    II(0x1014dc63, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014dc66, 0x5)   calld(0x10149cd1, -0x3f9a);           /* call 0x10149cd1 */
    II(0x1014dc6b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014dc6d, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1014dc70, 0x5)   calld(my_string_dtor, -0xc14b);       /* call 0x10141b2a */
    II(0x1014dc75, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014dc77, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1014dc7a, 0x5)   calld(0x100e03fc, -0x6d883);          /* call 0x100e03fc */
    II(0x1014dc7f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1014dc81, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1014dc82, 0x1)   popd(edi);                            /* pop edi */
    II(0x1014dc83, 0x1)   popd(esi);                            /* pop esi */
    II(0x1014dc84, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1014dc85, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1014dc86, 0x1)   retd();                               /* ret */
FUNC_END

