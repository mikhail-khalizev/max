FUNC_BEGIN(0x1010d407, 0x4d632fd6b3bb6ff4, 0x20, ({0x68, 0x64, 0, 0, 0, 0xe8, 0x41, 0x89, 0x5, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x3c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x88, 0x55, 0xfc, 0xf, 0xbe, 0x45, 0xfc, 0x6b, 0xd0, 0x18, 0xb8, 0x30, 0x98, 0x1b, 0x10, 0x1, 0xd0, 0x89, 0x45, 0xf4, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xd, 0xce, 0x5, 0, 0x8b, 0x45, 0xf4, 0x66, 0x83, 0x78, 0x8, 0xff, 0xf, 0x85, 0x77, 0, 0, 0, 0xb8, 0x38, 0, 0, 0, 0xe8, 0xa9, 0x89, 0x5, 0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x83, 0x7d, 0xec, 0, 0x74, 0x41, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x6, 0x8b, 0x55, 0xf4, 0x66, 0x2b, 0x42, 0x2, 0x98, 0x50, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x4, 0x8b, 0x55, 0xf4, 0x66, 0x2b, 0x2, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xf4, 0x8b, 0x18, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x10, 0x8b, 0x45, 0xf0, 0xe8, 0x1, 0xf, 0xfc, 0xff, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0xe4, 0xeb, 0x6, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xe4, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xf8, 0x1, 0xc2, 0x8b, 0x45, 0xe4, 0x89, 0x42, 0x20, 0xe9, 0xba, 0, 0, 0, 0xb8, 0x38, 0, 0, 0, 0xe8, 0x32, 0x89, 0x5, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xdc, 0x83, 0x7d, 0xdc, 0, 0x74, 0x36, 0x8b, 0x45, 0xf4, 0x8b, 0, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0x45, 0xf4, 0xf, 0xbf, 0x8, 0x8b, 0x45, 0xf4, 0x66, 0x8b, 0x40, 0x8, 0x40, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xe0, 0xe8, 0x7, 0xf, 0xfc, 0xff, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xd4, 0xeb, 0x6, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xd4, 0xf, 0xbe, 0x55, 0xfc, 0xc1, 0xe2, 0x2, 0x3, 0x55, 0xf8, 0x8b, 0x45, 0xd4, 0x89, 0x42, 0x20, 0x8b, 0x45, 0xf4, 0x83, 0x78, 0xa, 0, 0x74, 0x4c, 0x8d, 0x45, 0xd0, 0xe8, 0xea, 0x7c, 0xfc, 0xff, 0x50, 0x8d, 0x45, 0xcc, 0xe8, 0xd, 0x7d, 0xfc, 0xff, 0x50, 0x8d, 0x45, 0xc8, 0xe8, 0x30, 0x7d, 0xfc, 0xff, 0x50, 0x8d, 0x45, 0xc4, 0xe8, 0x53, 0x7d, 0xfc, 0xff, 0x50, 0xe8, 0x79, 0x7d, 0xfc, 0xff, 0xf, 0xbf, 0xc8, 0xe8, 0x95, 0x7d, 0xfc, 0xff, 0xf, 0xbf, 0xd8, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0xa, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x20, 0xe8, 0xe6, 0x19, 0xfc, 0xff, 0x31, 0xd2, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x20, 0xe8, 0x2, 0x7c, 0xfc, 0xff, 0xf, 0xbe, 0x55, 0xfc, 0x81, 0xc2, 0xe8, 0x3, 0, 0, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x20, 0xe8, 0x86, 0x7b, 0xfc, 0xff, 0xf, 0xbe, 0x45, 0xfc, 0x8d, 0x90, 0, 0x70, 0, 0, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x20, 0xe8, 0x9a, 0x7b, 0xfc, 0xff, 0x8b, 0x55, 0xf4, 0x8b, 0x52, 0x14, 0xc1, 0xfa, 0x10, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x20, 0xe8, 0xef, 0x7a, 0xfc, 0xff, 0x8b, 0x45, 0xf8, 0x8b, 0, 0x8b, 0x50, 0x12, 0xf, 0xbe, 0x45, 0xfc, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xf8, 0x8b, 0x40, 0x20, 0xe8, 0x5d, 0x22, 0xfc, 0xff, 0xf, 0xbe, 0x55, 0xfc, 0xf, 0xbe, 0x45, 0xfc, 0x6b, 0xc0, 0xc, 0x3, 0x45, 0xf8, 0x81, 0xc2, 0xe8, 0x3, 0, 0, 0x89, 0x50, 0x50, 0xf, 0xbe, 0x45, 0xfc, 0x6b, 0xc0, 0xc, 0x3, 0x45, 0xf8, 0x8b, 0x55, 0xf4, 0x8b, 0x52, 0xe, 0x89, 0x50, 0x54, 0xf, 0xbe, 0x45, 0xfc, 0x6b, 0xc0, 0xc, 0x3, 0x45, 0xf8, 0x8b, 0x55, 0xf4, 0x8b, 0x52, 0x12, 0x89, 0x50, 0x58, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1010d407, 0x5)   pushd(0x64);                          /* push dword 0x64 */
    II(0x1010d40c, 0x5)   calld(sys_check_available_stack_size, 0x58941); /* call 0x10165d52 */
    II(0x1010d411, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1010d412, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1010d413, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010d414, 0x1)   pushd(edi);                           /* push edi */
    II(0x1010d415, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1010d416, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1010d418, 0x6)   sub(esp, 0x3c);                       /* sub esp, 0x3c */
    II(0x1010d41e, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1010d421, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x1010d424, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1010d428, 0x3)   imul(edx, eax, 0x18);                 /* imul edx, eax, 0x18 */
    II(0x1010d42b, 0x5)   mov(eax, 0x101b9830);                 /* mov eax, 0x101b9830 */
    II(0x1010d430, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1010d432, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1010d435, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1010d43a, 0x5)   calld(/* sys */ 0x1016a24c, 0x5ce0d); /* call 0x1016a24c */
    II(0x1010d43f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010d442, 0x5)   cmp(memw_a32(ds, eax + 0x8), -0x1 /* 0xff */); /* cmp word [eax+0x8], 0xff */
    II(0x1010d447, 0x6)   jnzd(0x1010d4c4, 0x77);               /* jnz dword 0x1010d4c4 */
    II(0x1010d44d, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x1010d452, 0x5)   calld(sys_new, 0x589a9);              /* call 0x10165e00 */
    II(0x1010d457, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x1010d45a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010d45d, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1010d460, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0);     /* cmp dword [ebp-0x14], 0x0 */
    II(0x1010d464, 0x2)   jzd(0x1010d4a7, 0x41);                /* jz 0x1010d4a7 */
    II(0x1010d466, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010d469, 0x4)   mov(ax, memw_a32(ds, eax + 0x6));     /* mov ax, [eax+0x6] */
    II(0x1010d46d, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1010d470, 0x4)   sub(ax, memw_a32(ds, edx + 0x2));     /* sub ax, [edx+0x2] */
    II(0x1010d474, 0x1)   cwde();                               /* cwde */
    II(0x1010d475, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010d476, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010d479, 0x4)   mov(ax, memw_a32(ds, eax + 0x4));     /* mov ax, [eax+0x4] */
    II(0x1010d47d, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1010d480, 0x3)   sub(ax, memw_a32(ds, edx));           /* sub ax, [edx] */
    II(0x1010d483, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1010d486, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010d489, 0x2)   mov(ebx, memd_a32(ds, eax));          /* mov ebx, [eax] */
    II(0x1010d48b, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1010d48e, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010d491, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x1010d494, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1010d497, 0x5)   calld(0x100ce39d, -0x3f0ff);          /* call 0x100ce39d */
    II(0x1010d49c, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
//    II(0x1010d49f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1010d4a2, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1010d4a5, 0x2)   jmpd(0x1010d4ad, 0x6);                /* jmp 0x1010d4ad */
l_0x1010d4a7:
    II(0x1010d4a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1010d4aa, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
l_0x1010d4ad:
    II(0x1010d4ad, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1010d4b1, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010d4b4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1010d4b7, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1010d4b9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1010d4bc, 0x3)   mov(memd_a32(ds, edx + 0x20), eax);   /* mov [edx+0x20], eax */
    II(0x1010d4bf, 0x5)   jmpd(0x1010d57e, 0xba);               /* jmp 0x1010d57e */
l_0x1010d4c4:
    II(0x1010d4c4, 0x5)   mov(eax, 0x38);                       /* mov eax, 0x38 */
    II(0x1010d4c9, 0x5)   calld(sys_new, 0x58932);              /* call 0x10165e00 */
    II(0x1010d4ce, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x1010d4d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1010d4d4, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1010d4d7, 0x4)   cmp(memd_a32(ss, ebp - 0x24), 0);     /* cmp dword [ebp-0x24], 0x0 */
    II(0x1010d4db, 0x2)   jzd(0x1010d513, 0x36);                /* jz 0x1010d513 */
    II(0x1010d4dd, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010d4e0, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010d4e2, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1010d4e5, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010d4e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010d4e9, 0x3)   movsx(ecx, memw_a32(ds, eax));        /* movsx ecx, word [eax] */
    II(0x1010d4ec, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010d4ef, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x1010d4f3, 0x1)   inc(eax);                             /* inc eax */
    II(0x1010d4f4, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1010d4f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010d4fa, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x1010d4fd, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1010d500, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1010d503, 0x5)   calld(my_ctor_c17, -0x3f0f9);         /* call 0x100ce40f */
    II(0x1010d508, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
//    II(0x1010d50b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1010d50e, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x1010d511, 0x2)   jmpd(0x1010d519, 0x6);                /* jmp 0x1010d519 */
l_0x1010d513:
    II(0x1010d513, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1010d516, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
l_0x1010d519:
    II(0x1010d519, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x4));  /* movsx edx, byte [ebp-0x4] */
    II(0x1010d51d, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x1010d520, 0x3)   add(edx, memd_a32(ss, ebp - 0x8));    /* add edx, [ebp-0x8] */
    II(0x1010d523, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1010d526, 0x3)   mov(memd_a32(ds, edx + 0x20), eax);   /* mov [edx+0x20], eax */
    II(0x1010d529, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010d52c, 0x4)   cmp(memd_a32(ds, eax + 0xa), 0);      /* cmp dword [eax+0xa], 0x0 */
    II(0x1010d530, 0x2)   jzd(0x1010d57e, 0x4c);                /* jz 0x1010d57e */
    II(0x1010d532, 0x3)   lea(eax, ebp - 0x30);                 /* lea eax, [ebp-0x30] */
    II(0x1010d535, 0x5)   calld(0x100d5224, -0x38316);          /* call 0x100d5224 */
    II(0x1010d53a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010d53b, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1010d53e, 0x5)   calld(0x100d5250, -0x382f3);          /* call 0x100d5250 */
    II(0x1010d543, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010d544, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1010d547, 0x5)   calld(0x100d527c, -0x382d0);          /* call 0x100d527c */
    II(0x1010d54c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010d54d, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1010d550, 0x5)   calld(0x100d52a8, -0x382ad);          /* call 0x100d52a8 */
    II(0x1010d555, 0x1)   pushd(eax);                           /* push eax */
    II(0x1010d556, 0x5)   calld(0x100d52d4, -0x38287);          /* call 0x100d52d4 */
    II(0x1010d55b, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x1010d55e, 0x5)   calld(0x100d52f8, -0x3826b);          /* call 0x100d52f8 */
    II(0x1010d563, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1010d566, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1010d569, 0x3)   mov(edx, memd_a32(ds, eax + 0xa));    /* mov edx, [eax+0xa] */
    II(0x1010d56c, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1010d570, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010d573, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1010d576, 0x3)   mov(eax, memd_a32(ds, eax + 0x20));   /* mov eax, [eax+0x20] */
    II(0x1010d579, 0x5)   calld(0x100cef64, -0x3e61a);          /* call 0x100cef64 */
l_0x1010d57e:
    II(0x1010d57e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1010d580, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1010d584, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010d587, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1010d58a, 0x3)   mov(eax, memd_a32(ds, eax + 0x20));   /* mov eax, [eax+0x20] */
    II(0x1010d58d, 0x5)   calld(0x100d5194, -0x383fe);          /* call 0x100d5194 */
    II(0x1010d592, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x4));  /* movsx edx, byte [ebp-0x4] */
    II(0x1010d596, 0x6)   add(edx, 0x3e8);                      /* add edx, 0x3e8 */
    II(0x1010d59c, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1010d5a0, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010d5a3, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1010d5a6, 0x3)   mov(eax, memd_a32(ds, eax + 0x20));   /* mov eax, [eax+0x20] */
    II(0x1010d5a9, 0x5)   calld(0x100d5134, -0x3847a);          /* call 0x100d5134 */
    II(0x1010d5ae, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1010d5b2, 0x6)   lea(edx, eax + 0x7000);               /* lea edx, [eax+0x7000] */
    II(0x1010d5b8, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1010d5bc, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010d5bf, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1010d5c2, 0x3)   mov(eax, memd_a32(ds, eax + 0x20));   /* mov eax, [eax+0x20] */
    II(0x1010d5c5, 0x5)   calld(0x100d5164, -0x38466);          /* call 0x100d5164 */
    II(0x1010d5ca, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1010d5cd, 0x3)   mov(edx, memd_a32(ds, edx + 0x14));   /* mov edx, [edx+0x14] */
    II(0x1010d5d0, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1010d5d3, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1010d5d7, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010d5da, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1010d5dd, 0x3)   mov(eax, memd_a32(ds, eax + 0x20));   /* mov eax, [eax+0x20] */
    II(0x1010d5e0, 0x5)   calld(0x100d50d4, -0x38511);          /* call 0x100d50d4 */
    II(0x1010d5e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1010d5e8, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1010d5ea, 0x3)   mov(edx, memd_a32(ds, eax + 0x12));   /* mov edx, [eax+0x12] */
    II(0x1010d5ed, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1010d5f1, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010d5f4, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1010d5f7, 0x3)   mov(eax, memd_a32(ds, eax + 0x20));   /* mov eax, [eax+0x20] */
    II(0x1010d5fa, 0x5)   calld(0x100cf85c, -0x3dda3);          /* call 0x100cf85c */
    II(0x1010d5ff, 0x4)   movsx(edx, memb_a32(ss, ebp - 0x4));  /* movsx edx, byte [ebp-0x4] */
    II(0x1010d603, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1010d607, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x1010d60a, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1010d60d, 0x6)   add(edx, 0x3e8);                      /* add edx, 0x3e8 */
    II(0x1010d613, 0x3)   mov(memd_a32(ds, eax + 0x50), edx);   /* mov [eax+0x50], edx */
    II(0x1010d616, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1010d61a, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x1010d61d, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1010d620, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1010d623, 0x3)   mov(edx, memd_a32(ds, edx + 0xe));    /* mov edx, [edx+0xe] */
    II(0x1010d626, 0x3)   mov(memd_a32(ds, eax + 0x54), edx);   /* mov [eax+0x54], edx */
    II(0x1010d629, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x1010d62d, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x1010d630, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x1010d633, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1010d636, 0x3)   mov(edx, memd_a32(ds, edx + 0x12));   /* mov edx, [edx+0x12] */
    II(0x1010d639, 0x3)   mov(memd_a32(ds, eax + 0x58), edx);   /* mov [eax+0x58], edx */
    II(0x1010d63c, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010d63e, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010d63f, 0x1)   popd(edi);                            /* pop edi */
    II(0x1010d640, 0x1)   popd(esi);                            /* pop esi */
    II(0x1010d641, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1010d642, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1010d643, 0x1)   retd();                               /* ret */
FUNC_END

