FUNC_BEGIN(0x100776f3, 0x322b8ab57295c200, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x55, 0xe6, 0xe, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xfc, 0x89, 0x5d, 0xf8, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x1c, 0xec, 0xff, 0xff, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x90, 0xed, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0xe8, 0xc, 0xeb, 0xff, 0xff, 0x66, 0x8b, 0x40, 0x12, 0x89, 0x45, 0xe8, 0x8d, 0x45, 0xe4, 0xe8, 0xb1, 0xf3, 0xff, 0xff, 0x8b, 0x45, 0xf4, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x4, 0x75, 0x13, 0xc6, 0x45, 0xf0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xf, 0xe8, 0xff, 0xff, 0xe9, 0x39, 0x1, 0, 0, 0x8b, 0x45, 0xf4, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x3, 0x45, 0xf8, 0x80, 0x38, 0, 0x75, 0x13, 0xc6, 0x45, 0xf0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xe9, 0xe7, 0xff, 0xff, 0xe9, 0x13, 0x1, 0, 0, 0x8b, 0x45, 0xf4, 0xe8, 0xac, 0xea, 0xff, 0xff, 0x80, 0x78, 0x16, 0, 0x74, 0xf, 0x8b, 0x45, 0xf4, 0xe8, 0x9e, 0xea, 0xff, 0xff, 0x66, 0x8b, 0x40, 0x10, 0x1, 0x45, 0xe8, 0x8b, 0x45, 0xf4, 0xe8, 0x8f, 0xea, 0xff, 0xff, 0x66, 0x8b, 0x40, 0x17, 0x66, 0x3b, 0x45, 0xe8, 0x7e, 0xf, 0x8b, 0x45, 0xf4, 0xe8, 0x7d, 0xea, 0xff, 0xff, 0x66, 0x8b, 0x40, 0x17, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xe8, 0xf, 0xaf, 0x45, 0xe8, 0x89, 0x45, 0xe8, 0xf, 0xbf, 0x45, 0xe8, 0x85, 0xc0, 0x75, 0x13, 0xc6, 0x45, 0xf0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x86, 0xe7, 0xff, 0xff, 0xe9, 0xb0, 0, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0x3, 0xf4, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x72, 0x35, 0xc, 0, 0x84, 0xc0, 0xf, 0x84, 0x7a, 0, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0x91, 0xeb, 0xff, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0xf, 0xbf, 0x45, 0xfc, 0x39, 0xc2, 0x75, 0x60, 0x8d, 0x45, 0xec, 0xe8, 0x7c, 0xeb, 0xff, 0xff, 0x8b, 0x55, 0xf4, 0x66, 0x8b, 0x52, 0x1a, 0x66, 0x2b, 0x50, 0x1a, 0x66, 0x89, 0x55, 0xe4, 0x8d, 0x45, 0xec, 0xe8, 0x65, 0xeb, 0xff, 0xff, 0x8b, 0x55, 0xf4, 0x66, 0x8b, 0x52, 0x1c, 0x66, 0x2b, 0x50, 0x1c, 0x66, 0x89, 0x55, 0xe6, 0xf, 0xbf, 0x55, 0xe6, 0xf, 0xbf, 0x45, 0xe6, 0xf, 0xaf, 0xd0, 0x89, 0xd3, 0xf, 0xbf, 0x55, 0xe4, 0xf, 0xbf, 0x45, 0xe4, 0xf, 0xaf, 0xc2, 0x1, 0xc3, 0xf, 0xbf, 0x45, 0xe8, 0x39, 0xc3, 0x7f, 0x10, 0xc6, 0x45, 0xf0, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xf2, 0xe6, 0xff, 0xff, 0xeb, 0x1f, 0xe9, 0x6c, 0xff, 0xff, 0xff, 0xc6, 0x45, 0xf0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xdd, 0xe6, 0xff, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xd1, 0xe6, 0xff, 0xff, 0x8a, 0x45, 0xf0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x100776f3, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x100776f8, 0x5)   calld(sys_check_available_stack_size, 0xee655); /* call 0x10165d52 */
    II(0x100776fd, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100776fe, 0x1)   pushd(esi);                           /* push esi */
    II(0x100776ff, 0x1)   pushd(edi);                           /* push edi */
    II(0x10077700, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10077701, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10077703, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x10077709, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1007770c, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x1007770f, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x10077712, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x10077717, 0x5)   calld(0x10076338, -0x13e4);           /* call 0x10076338 */
    II(0x1007771c, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x1007771f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10077721, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10077723, 0x5)   calld(0x100764b8, -0x1270);           /* call 0x100764b8 */
    II(0x10077728, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1007772b, 0x5)   calld(0x1007623c, -0x14f4);           /* call 0x1007623c */
    II(0x10077730, 0x4)   mov(ax, memw_a32(ds, eax + 0x12));    /* mov ax, [eax+0x12] */
    II(0x10077734, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10077737, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x1007773a, 0x5)   calld(my_ctor_0x101b4184, -0xc4f);    /* call 0x10076af0 */
    II(0x1007773f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10077742, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10077745, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1007774a, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x1007774d, 0x2)   jnzd(0x10077762, 0x13);               /* jnz 0x10077762 */
    II(0x1007774f, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x10077753, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10077755, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10077758, 0x5)   calld(0x10075f6c, -0x17f1);           /* call 0x10075f6c */
    II(0x1007775d, 0x5)   jmpd(0x1007789b, 0x139);              /* jmp 0x1007789b */
l_0x10077762:
    II(0x10077762, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10077765, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10077768, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1007776d, 0x3)   add(eax, memd_a32(ss, ebp - 0x8));    /* add eax, [ebp-0x8] */
    II(0x10077770, 0x3)   cmp(memb_a32(ds, eax), 0);            /* cmp byte [eax], 0x0 */
    II(0x10077773, 0x2)   jnzd(0x10077788, 0x13);               /* jnz 0x10077788 */
    II(0x10077775, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x10077779, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007777b, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1007777e, 0x5)   calld(0x10075f6c, -0x1817);           /* call 0x10075f6c */
    II(0x10077783, 0x5)   jmpd(0x1007789b, 0x113);              /* jmp 0x1007789b */
l_0x10077788:
    II(0x10077788, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1007778b, 0x5)   calld(0x1007623c, -0x1554);           /* call 0x1007623c */
    II(0x10077790, 0x4)   cmp(memb_a32(ds, eax + 0x16), 0);     /* cmp byte [eax+0x16], 0x0 */
    II(0x10077794, 0x2)   jzd(0x100777a5, 0xf);                 /* jz 0x100777a5 */
    II(0x10077796, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10077799, 0x5)   calld(0x1007623c, -0x1562);           /* call 0x1007623c */
    II(0x1007779e, 0x4)   mov(ax, memw_a32(ds, eax + 0x10));    /* mov ax, [eax+0x10] */
    II(0x100777a2, 0x3)   add(memd_a32(ss, ebp - 0x18), eax);   /* add [ebp-0x18], eax */
l_0x100777a5:
    II(0x100777a5, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100777a8, 0x5)   calld(0x1007623c, -0x1571);           /* call 0x1007623c */
    II(0x100777ad, 0x4)   mov(ax, memw_a32(ds, eax + 0x17));    /* mov ax, [eax+0x17] */
    II(0x100777b1, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x18));    /* cmp ax, [ebp-0x18] */
    II(0x100777b5, 0x2)   jled(0x100777c6, 0xf);                /* jle 0x100777c6 */
    II(0x100777b7, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100777ba, 0x5)   calld(0x1007623c, -0x1583);           /* call 0x1007623c */
    II(0x100777bf, 0x4)   mov(ax, memw_a32(ds, eax + 0x17));    /* mov ax, [eax+0x17] */
    II(0x100777c3, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
l_0x100777c6:
    II(0x100777c6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100777c9, 0x4)   imul(eax, memd_a32(ss, ebp - 0x18));  /* imul eax, [ebp-0x18] */
    II(0x100777cd, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100777d0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x100777d4, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100777d6, 0x2)   jnzd(0x100777eb, 0x13);               /* jnz 0x100777eb */
    II(0x100777d8, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x100777dc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100777de, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100777e1, 0x5)   calld(0x10075f6c, -0x187a);           /* call 0x10075f6c */
    II(0x100777e6, 0x5)   jmpd(0x1007789b, 0xb0);               /* jmp 0x1007789b */
l_0x100777eb:
    II(0x100777eb, 0x2)   jmpd(0x100777f5, 0x8);                /* jmp 0x100777f5 */
l_0x100777ed:
    II(0x100777ed, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100777f0, 0x5)   calld(0x10076bf8, -0xbfd);            /* call 0x10076bf8 */
l_0x100777f5:
    II(0x100777f5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100777f7, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100777fa, 0x5)   calld(0x1013ad71, 0xc3572);           /* call 0x1013ad71 */
    II(0x100777ff, 0x2)   test(al, al);                         /* test al, al */
    II(0x10077801, 0x6)   jzd(0x10077881, 0x7a);                /* jz dword 0x10077881 */
    II(0x10077807, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1007780a, 0x5)   calld(0x100763a0, -0x146f);           /* call 0x100763a0 */
    II(0x1007780f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10077811, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x10077814, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10077818, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1007781a, 0x2)   jnzd(0x1007787c, 0x60);               /* jnz 0x1007787c */
    II(0x1007781c, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1007781f, 0x5)   calld(0x100763a0, -0x1484);           /* call 0x100763a0 */
    II(0x10077824, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10077827, 0x4)   mov(dx, memw_a32(ds, edx + 0x1a));    /* mov dx, [edx+0x1a] */
    II(0x1007782b, 0x4)   sub(dx, memw_a32(ds, eax + 0x1a));    /* sub dx, [eax+0x1a] */
    II(0x1007782f, 0x4)   mov(memw_a32(ss, ebp - 0x1c), dx);    /* mov [ebp-0x1c], dx */
    II(0x10077833, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10077836, 0x5)   calld(0x100763a0, -0x149b);           /* call 0x100763a0 */
    II(0x1007783b, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1007783e, 0x4)   mov(dx, memw_a32(ds, edx + 0x1c));    /* mov dx, [edx+0x1c] */
    II(0x10077842, 0x4)   sub(dx, memw_a32(ds, eax + 0x1c));    /* sub dx, [eax+0x1c] */
    II(0x10077846, 0x4)   mov(memw_a32(ss, ebp - 0x1a), dx);    /* mov [ebp-0x1a], dx */
    II(0x1007784a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1a)); /* movsx edx, word [ebp-0x1a] */
    II(0x1007784e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1a)); /* movsx eax, word [ebp-0x1a] */
    II(0x10077852, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x10077855, 0x2)   mov(ebx, edx);                        /* mov ebx, edx */
    II(0x10077857, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x1007785b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x1007785f, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x10077862, 0x2)   add(ebx, eax);                        /* add ebx, eax */
    II(0x10077864, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x10077868, 0x2)   cmp(ebx, eax);                        /* cmp ebx, eax */
    II(0x1007786a, 0x2)   jgd(0x1007787c, 0x10);                /* jg 0x1007787c */
    II(0x1007786c, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0x1);   /* mov byte [ebp-0x10], 0x1 */
    II(0x10077870, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10077872, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10077875, 0x5)   calld(0x10075f6c, -0x190e);           /* call 0x10075f6c */
    II(0x1007787a, 0x2)   jmpd(0x1007789b, 0x1f);               /* jmp 0x1007789b */
l_0x1007787c:
    II(0x1007787c, 0x5)   jmpd(0x100777ed, -0x94);              /* jmp 0x100777ed */
l_0x10077881:
    II(0x10077881, 0x4)   mov(memb_a32(ss, ebp - 0x10), 0);     /* mov byte [ebp-0x10], 0x0 */
    II(0x10077885, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10077887, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1007788a, 0x5)   calld(0x10075f6c, -0x1923);           /* call 0x10075f6c */
    II(0x1007788f, 0x2)   jmpd(0x1007789b, 0xa);                /* jmp 0x1007789b */
//  II(0x10077891, 0xa)   /* Недостижимый код. */
l_0x1007789b:
    II(0x1007789b, 0x3)   mov(al, memb_a32(ss, ebp - 0x10));    /* mov al, [ebp-0x10] */
    II(0x1007789e, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100778a0, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100778a1, 0x1)   popd(edi);                            /* pop edi */
    II(0x100778a2, 0x1)   popd(esi);                            /* pop esi */
    II(0x100778a3, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100778a4, 0x1)   retd();                               /* ret */
FUNC_END

