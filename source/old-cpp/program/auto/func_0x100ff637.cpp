FUNC_BEGIN(0x100ff637, 0x40ae6eadf8a1b739, 0x20, ({0x68, 0xcc, 0, 0, 0, 0xe8, 0x11, 0x67, 0x6, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xa4, 0, 0, 0, 0x89, 0x45, 0xfc, 0x80, 0x3d, 0x19, 0x39, 0x1c, 0x10, 0, 0xf, 0x84, 0x8, 0x4, 0, 0, 0x31, 0xd2, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x6, 0xb7, 0x3, 0, 0x84, 0xc0, 0x74, 0x11, 0x8b, 0x55, 0xfc, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x70, 0xbe, 0xf8, 0xff, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0x30, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xe8, 0x6e, 0xf7, 0xff, 0xe8, 0x17, 0xa9, 0x4, 0, 0xe8, 0x62, 0x35, 0, 0, 0x31, 0xc9, 0x88, 0xc1, 0x31, 0xdb, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0x5a, 0x6f, 0xf7, 0xff, 0x89, 0xc2, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0xe, 0xdf, 0x3, 0, 0xe8, 0x2d, 0x5b, 0xfd, 0xff, 0x25, 0xff, 0, 0, 0, 0x89, 0x45, 0xe4, 0x83, 0x7d, 0xfc, 0, 0x74, 0x13, 0x8b, 0x45, 0xfc, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x74, 0x2, 0xeb, 0x6, 0xc6, 0x45, 0xe8, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xe8, 0, 0x31, 0xd2, 0x8a, 0x55, 0xe8, 0xa1, 0x3c, 0x39, 0x1c, 0x10, 0x8b, 0x5d, 0xe4, 0xe8, 0x86, 0x3, 0xfd, 0xff, 0x83, 0x3d, 0x40, 0x39, 0x1c, 0x10, 0, 0x74, 0x33, 0xa1, 0x40, 0x39, 0x1c, 0x10, 0x89, 0x45, 0xe0, 0x83, 0x7d, 0xe0, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xe0, 0xe8, 0xc0, 0xb9, 0xfe, 0xff, 0xe8, 0x48, 0x68, 0x6, 0, 0x89, 0x45, 0xdc, 0xeb, 0x7, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0xc7, 0x5, 0x40, 0x39, 0x1c, 0x10, 0, 0, 0, 0, 0x83, 0x7d, 0xfc, 0, 0x75, 0x3f, 0xe8, 0xf8, 0xb0, 0xff, 0xff, 0xbb, 0x1, 0, 0, 0, 0x31, 0xd2, 0xb8, 0x6, 0, 0, 0, 0xe8, 0x55, 0x5, 0, 0, 0xbb, 0x1, 0, 0, 0, 0x31, 0xd2, 0xb8, 0x9, 0, 0, 0, 0xe8, 0x44, 0x5, 0, 0, 0x31, 0xc0, 0xe8, 0x26, 0x4d, 0xff, 0xff, 0x31, 0xd2, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xbe, 0x6e, 0xf7, 0xff, 0xe9, 0xf0, 0x2, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x6b, 0xd0, 0x33, 0xb8, 0xc0, 0x81, 0x1c, 0x10, 0x1, 0xd0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x55, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x56, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x57, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x67, 0x13, 0xf7, 0xff, 0xa2, 0x12, 0x39, 0x1c, 0x10, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x74, 0x1f, 0x80, 0x3d, 0x1e, 0x39, 0x1c, 0x10, 0x8, 0x75, 0x6, 0xc6, 0x45, 0xd8, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xd8, 0, 0x31, 0xc0, 0x8a, 0x45, 0xd8, 0xe8, 0xcb, 0x57, 0xff, 0xff, 0xeb, 0x31, 0x31, 0xc0, 0xa0, 0xc8, 0x37, 0x1c, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x75, 0x6, 0xc6, 0x45, 0xd4, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xd4, 0, 0x31, 0xc0, 0x8a, 0x45, 0xd4, 0xe8, 0x98, 0x57, 0xff, 0xff, 0xe8, 0x26, 0xb0, 0xff, 0xff, 0xb8, 0x6, 0, 0, 0, 0xe8, 0x24, 0x90, 0xfe, 0xff, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xd0, 0x66, 0x8b, 0, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xd0, 0x66, 0x8b, 0x40, 0x4, 0x89, 0x45, 0xf0, 0x31, 0xc0, 0xe8, 0x7, 0x90, 0xfe, 0xff, 0x89, 0x45, 0xd0, 0x31, 0xc0, 0x50, 0xb8, 0x2, 0, 0, 0, 0x50, 0xf, 0xbf, 0x45, 0xf0, 0x50, 0xf, 0xbf, 0x4d, 0xf4, 0xbb, 0x80, 0x2, 0, 0, 0x8b, 0x55, 0xd0, 0x8b, 0x45, 0xec, 0x8b, 0x40, 0x8, 0xc1, 0xf8, 0x10, 0xe8, 0x77, 0xc, 0xff, 0xff, 0xa3, 0xe0, 0x37, 0x1c, 0x10, 0x8d, 0x95, 0x6c, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0xcf, 0x1, 0x5, 0, 0xb8, 0x6, 0, 0, 0, 0xe8, 0xbf, 0x8f, 0xfe, 0xff, 0x89, 0x45, 0xd0, 0xb8, 0x2, 0, 0, 0, 0xe8, 0xc1, 0xa9, 0x6, 0, 0x68, 0x2, 0, 0, 0x5, 0x8b, 0x45, 0xd0, 0xff, 0x70, 0x4, 0x8b, 0x45, 0xd0, 0x8b, 0x8, 0xbb, 0x80, 0, 0, 0, 0x8d, 0x95, 0x6c, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xd0, 0x8b, 0x40, 0x12, 0xe8, 0xc3, 0x74, 0x6, 0, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x42, 0xf, 0x85, 0x2, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xa2, 0xa, 0x5, 0, 0x89, 0x85, 0x68, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x68, 0xff, 0xff, 0xff, 0x85, 0xc0, 0x7f, 0x15, 0xba, 0xfb, 0x2a, 0x1a, 0x10, 0x8d, 0x85, 0x6c, 0xff, 0xff, 0xff, 0xe8, 0xe7, 0x65, 0x6, 0, 0xe9, 0x6a, 0, 0, 0, 0xf, 0xbf, 0x85, 0x68, 0xff, 0xff, 0xff, 0x83, 0xf8, 0x2, 0x7f, 0x12, 0xba, 0x2, 0x2b, 0x1a, 0x10, 0x8d, 0x85, 0x6c, 0xff, 0xff, 0xff, 0xe8, 0xc6, 0x65, 0x6, 0, 0xeb, 0x4c, 0xf, 0xbf, 0x85, 0x68, 0xff, 0xff, 0xff, 0x83, 0xf8, 0x5, 0x7f, 0x12, 0xba, 0xa, 0x2b, 0x1a, 0x10, 0x8d, 0x85, 0x6c, 0xff, 0xff, 0xff, 0xe8, 0xa8, 0x65, 0x6, 0, 0xeb, 0x2e, 0xf, 0xbf, 0x85, 0x68, 0xff, 0xff, 0xff, 0x83, 0xf8, 0xa, 0x7f, 0x12, 0xba, 0x12, 0x2b, 0x1a, 0x10, 0x8d, 0x85, 0x6c, 0xff, 0xff, 0xff, 0xe8, 0x8a, 0x65, 0x6, 0, 0xeb, 0x10, 0xba, 0x18, 0x2b, 0x1a, 0x10, 0x8d, 0x85, 0x6c, 0xff, 0xff, 0xff, 0xe8, 0x78, 0x65, 0x6, 0, 0xf, 0xbf, 0x85, 0x68, 0xff, 0xff, 0xff, 0x85, 0xc0, 0x7e, 0x2e, 0xf, 0xbf, 0x85, 0x68, 0xff, 0xff, 0xff, 0x50, 0xb8, 0x1e, 0x2b, 0x1a, 0x10, 0x50, 0x8d, 0x85, 0x5c, 0xff, 0xff, 0xff, 0x50, 0xe8, 0x85, 0x65, 0x6, 0, 0x83, 0xc4, 0xc, 0x8d, 0x95, 0x5c, 0xff, 0xff, 0xff, 0x8d, 0x85, 0x6c, 0xff, 0xff, 0xff, 0xe8, 0xa1, 0x65, 0x6, 0, 0x68, 0x2, 0, 0, 0x5, 0xff, 0x15, 0xf0, 0xdd, 0x1b, 0x10, 0x1, 0xc0, 0x89, 0xc2, 0x8b, 0x45, 0xd0, 0x3, 0x50, 0x4, 0x52, 0x8b, 0x45, 0xd0, 0x8b, 0x8, 0xbb, 0x80, 0, 0, 0, 0x8d, 0x95, 0x6c, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xd0, 0x8b, 0x40, 0x12, 0xe8, 0xb3, 0x73, 0x6, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x84, 0xf, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xd7, 0xa5, 0x4, 0, 0xc6, 0x45, 0xf8, 0x1, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0x4, 0x75, 0x14, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3e, 0xb, 0x74, 0x9, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3e, 0x1, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x6, 0xc6, 0x45, 0xf8, 0x8, 0xeb, 0x32, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0xb, 0x75, 0x9, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3e, 0x5, 0x74, 0x2, 0xeb, 0x6, 0xc6, 0x45, 0xf8, 0x8, 0xeb, 0x18, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0x7, 0x75, 0x9, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3e, 0x1, 0x74, 0x2, 0xeb, 0x4, 0xc6, 0x45, 0xf8, 0x8, 0xe8, 0xc7, 0x31, 0, 0, 0x31, 0xc9, 0x88, 0xc1, 0xf, 0xbe, 0x5d, 0xf8, 0x8b, 0x55, 0xfc, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0x7a, 0xdb, 0x3, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x86, 0x67, 0xf7, 0xff, 0x85, 0xc0, 0x74, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0x24, 0xbd, 0x4, 0, 0x8b, 0x55, 0xfc, 0xb8, 0xbc, 0x37, 0x1c, 0x10, 0xe8, 0xc9, 0x6b, 0xf7, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100ff637, 0x5)   pushd(0xcc);                          /* push dword 0xcc */
    II(0x100ff63c, 0x5)   calld(sys_check_available_stack_size, 0x66711); /* call 0x10165d52 */
    II(0x100ff641, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100ff642, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100ff643, 0x1)   pushd(edx);                           /* push edx */
    II(0x100ff644, 0x1)   pushd(esi);                           /* push esi */
    II(0x100ff645, 0x1)   pushd(edi);                           /* push edi */
    II(0x100ff646, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100ff647, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100ff649, 0x6)   sub(esp, 0xa4);                       /* sub esp, 0xa4 */
    II(0x100ff64f, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100ff652, 0x7)   cmp(memb_a32(ds, 0x101c3919), 0);     /* cmp byte [0x101c3919], 0x0 */
    II(0x100ff659, 0x6)   jzd(0x100ffa67, 0x408);               /* jz dword 0x100ffa67 */
    II(0x100ff65f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ff661, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100ff666, 0x5)   calld(0x1013ad71, 0x3b706);           /* call 0x1013ad71 */
    II(0x100ff66b, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ff66d, 0x2)   jzd(0x100ff680, 0x11);                /* jz 0x100ff680 */
    II(0x100ff66f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100ff672, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100ff677, 0x5)   calld(0x1008b4ec, -0x74190);          /* call 0x1008b4ec */
    II(0x100ff67c, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ff67e, 0x2)   jnzd(0x100ff682, 0x2);                /* jnz 0x100ff682 */
l_0x100ff680:
    II(0x100ff680, 0x2)   jmpd(0x100ff6b2, 0x30);               /* jmp 0x100ff6b2 */
l_0x100ff682:
    II(0x100ff682, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100ff687, 0x5)   calld(0x10076574, -0x89118);          /* call 0x10076574 */
    II(0x100ff68c, 0x5)   calld(0x10149fa8, 0x4a917);           /* call 0x10149fa8 */
    II(0x100ff691, 0x5)   calld(0x10102bf8, 0x3562);            /* call 0x10102bf8 */
    II(0x100ff696, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100ff698, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x100ff69a, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100ff69c, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100ff6a1, 0x5)   calld(0x10076600, -0x890a6);          /* call 0x10076600 */
    II(0x100ff6a6, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ff6a8, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100ff6ad, 0x5)   calld(0x1013d5c0, 0x3df0e);           /* call 0x1013d5c0 */
l_0x100ff6b2:
    II(0x100ff6b2, 0x5)   calld(0x100d51e4, -0x2a4d3);          /* call 0x100d51e4 */
    II(0x100ff6b7, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ff6bc, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100ff6bf, 0x4)   cmp(memd_a32(ss, ebp - 0x4), 0);      /* cmp dword [ebp-0x4], 0x0 */
    II(0x100ff6c3, 0x2)   jzd(0x100ff6d8, 0x13);                /* jz 0x100ff6d8 */
    II(0x100ff6c5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ff6c8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ff6ca, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100ff6cd, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ff6cf, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100ff6d4, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100ff6d6, 0x2)   jzd(0x100ff6da, 0x2);                 /* jz 0x100ff6da */
l_0x100ff6d8:
    II(0x100ff6d8, 0x2)   jmpd(0x100ff6e0, 0x6);                /* jmp 0x100ff6e0 */
l_0x100ff6da:
    II(0x100ff6da, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0x1);   /* mov byte [ebp-0x18], 0x1 */
    II(0x100ff6de, 0x2)   jmpd(0x100ff6e4, 0x4);                /* jmp 0x100ff6e4 */
l_0x100ff6e0:
    II(0x100ff6e0, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0);     /* mov byte [ebp-0x18], 0x0 */
l_0x100ff6e4:
    II(0x100ff6e4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ff6e6, 0x3)   mov(dl, memb_a32(ss, ebp - 0x18));    /* mov dl, [ebp-0x18] */
    II(0x100ff6e9, 0x5)   mov(eax, memd_a32(ds, 0x101c393c));   /* mov eax, [0x101c393c] */
    II(0x100ff6ee, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x1c));   /* mov ebx, [ebp-0x1c] */
    II(0x100ff6f1, 0x5)   calld(0x100cfa7c, -0x2fc7a);          /* call 0x100cfa7c */
    II(0x100ff6f6, 0x7)   cmp(memd_a32(ds, 0x101c3940), 0);     /* cmp dword [0x101c3940], 0x0 */
    II(0x100ff6fd, 0x2)   jzd(0x100ff732, 0x33);                /* jz 0x100ff732 */
    II(0x100ff6ff, 0x5)   mov(eax, memd_a32(ds, 0x101c3940));   /* mov eax, [0x101c3940] */
    II(0x100ff704, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100ff707, 0x4)   cmp(memd_a32(ss, ebp - 0x20), 0);     /* cmp dword [ebp-0x20], 0x0 */
    II(0x100ff70b, 0x2)   jzd(0x100ff721, 0x14);                /* jz 0x100ff721 */
    II(0x100ff70d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ff70f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100ff712, 0x5)   calld(my_dtor_d6, -0x14640);          /* call 0x100eb0d7 */
    II(0x100ff717, 0x5)   calld(sys_delete, 0x66848);           /* call 0x10165f64 */
    II(0x100ff71c, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100ff71f, 0x2)   jmpd(0x100ff728, 0x7);                /* jmp 0x100ff728 */
l_0x100ff721:
    II(0x100ff721, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
l_0x100ff728:
    II(0x100ff728, 0xa)   mov(memd_a32(ds, 0x101c3940), 0);     /* mov dword [0x101c3940], 0x0 */
l_0x100ff732:
    II(0x100ff732, 0x4)   cmp(memd_a32(ss, ebp - 0x4), 0);      /* cmp dword [ebp-0x4], 0x0 */
    II(0x100ff736, 0x2)   jnzd(0x100ff777, 0x3f);               /* jnz 0x100ff777 */
    II(0x100ff738, 0x5)   calld(0x100fa835, -0x4f08);           /* call 0x100fa835 */
    II(0x100ff73d, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100ff742, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ff744, 0x5)   mov(eax, 0x6);                        /* mov eax, 0x6 */
    II(0x100ff749, 0x5)   calld(0x100ffca3, 0x555);             /* call 0x100ffca3 */
    II(0x100ff74e, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100ff753, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ff755, 0x5)   mov(eax, 0x9);                        /* mov eax, 0x9 */
    II(0x100ff75a, 0x5)   calld(0x100ffca3, 0x544);             /* call 0x100ffca3 */
    II(0x100ff75f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ff761, 0x5)   calld(0x100f448c, -0xb2da);           /* call 0x100f448c */
    II(0x100ff766, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100ff768, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100ff76d, 0x5)   calld(0x10076630, -0x89142);          /* call 0x10076630 */
    II(0x100ff772, 0x5)   jmpd(0x100ffa67, 0x2f0);              /* jmp 0x100ffa67 */
l_0x100ff777:
    II(0x100ff777, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ff77a, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100ff77d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ff780, 0x3)   imul(edx, eax, 0x33);                 /* imul edx, eax, 0x33 */
    II(0x100ff783, 0x5)   mov(eax, 0x101c81c0);                 /* mov eax, 0x101c81c0 */
    II(0x100ff788, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100ff78a, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100ff78d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ff790, 0x4)   mov(memb_a32(ds, eax + 0x55), 0);     /* mov byte [eax+0x55], 0x0 */
    II(0x100ff794, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ff797, 0x4)   mov(memb_a32(ds, eax + 0x56), 0);     /* mov byte [eax+0x56], 0x0 */
    II(0x100ff79b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ff79e, 0x4)   mov(memb_a32(ds, eax + 0x57), 0);     /* mov byte [eax+0x57], 0x0 */
    II(0x100ff7a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ff7a5, 0x5)   calld(0x10070b11, -0x8ec99);          /* call 0x10070b11 */
    II(0x100ff7aa, 0x5)   mov(memb_a32(ds, 0x101c3912), al);    /* mov [0x101c3912], al */
    II(0x100ff7af, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ff7b1, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x100ff7b6, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ff7b8, 0x2)   jzd(0x100ff7d9, 0x1f);                /* jz 0x100ff7d9 */
    II(0x100ff7ba, 0x7)   cmp(memb_a32(ds, 0x101c391e), 0x8);   /* cmp byte [0x101c391e], 0x8 */
    II(0x100ff7c1, 0x2)   jnzd(0x100ff7c9, 0x6);                /* jnz 0x100ff7c9 */
    II(0x100ff7c3, 0x4)   mov(memb_a32(ss, ebp - 0x28), 0x1);   /* mov byte [ebp-0x28], 0x1 */
    II(0x100ff7c7, 0x2)   jmpd(0x100ff7cd, 0x4);                /* jmp 0x100ff7cd */
l_0x100ff7c9:
    II(0x100ff7c9, 0x4)   mov(memb_a32(ss, ebp - 0x28), 0);     /* mov byte [ebp-0x28], 0x0 */
l_0x100ff7cd:
    II(0x100ff7cd, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ff7cf, 0x3)   mov(al, memb_a32(ss, ebp - 0x28));    /* mov al, [ebp-0x28] */
    II(0x100ff7d2, 0x5)   calld(0x100f4fa2, -0xa835);           /* call 0x100f4fa2 */
    II(0x100ff7d7, 0x2)   jmpd(0x100ff80a, 0x31);               /* jmp 0x100ff80a */
l_0x100ff7d9:
    II(0x100ff7d9, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ff7db, 0x5)   mov(al, memb_a32(ds, 0x101c37c8));    /* mov al, [0x101c37c8] */
    II(0x100ff7e0, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100ff7e6, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100ff7ec, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100ff7f1, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100ff7f4, 0x2)   jnzd(0x100ff7fc, 0x6);                /* jnz 0x100ff7fc */
    II(0x100ff7f6, 0x4)   mov(memb_a32(ss, ebp - 0x2c), 0x1);   /* mov byte [ebp-0x2c], 0x1 */
    II(0x100ff7fa, 0x2)   jmpd(0x100ff800, 0x4);                /* jmp 0x100ff800 */
l_0x100ff7fc:
    II(0x100ff7fc, 0x4)   mov(memb_a32(ss, ebp - 0x2c), 0);     /* mov byte [ebp-0x2c], 0x0 */
l_0x100ff800:
    II(0x100ff800, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ff802, 0x3)   mov(al, memb_a32(ss, ebp - 0x2c));    /* mov al, [ebp-0x2c] */
    II(0x100ff805, 0x5)   calld(0x100f4fa2, -0xa868);           /* call 0x100f4fa2 */
l_0x100ff80a:
    II(0x100ff80a, 0x5)   calld(0x100fa835, -0x4fda);           /* call 0x100fa835 */
    II(0x100ff80f, 0x5)   mov(eax, 0x6);                        /* mov eax, 0x6 */
    II(0x100ff814, 0x5)   calld(0x100e883d, -0x16fdc);          /* call 0x100e883d */
    II(0x100ff819, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
//    II(0x100ff81c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100ff81f, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100ff822, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100ff825, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100ff828, 0x4)   mov(ax, memw_a32(ds, eax + 0x4));     /* mov ax, [eax+0x4] */
    II(0x100ff82c, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100ff82f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ff831, 0x5)   calld(0x100e883d, -0x16ff9);          /* call 0x100e883d */
    II(0x100ff836, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100ff839, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100ff83b, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ff83c, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x100ff841, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ff842, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100ff846, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ff847, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0xc));  /* movsx ecx, word [ebp-0xc] */
    II(0x100ff84b, 0x5)   mov(ebx, 0x280);                      /* mov ebx, 0x280 */
    II(0x100ff850, 0x3)   mov(edx, memd_a32(ss, ebp - 0x30));   /* mov edx, [ebp-0x30] */
    II(0x100ff853, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100ff856, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x100ff859, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100ff85c, 0x5)   calld(0x100f04d8, -0xf389);           /* call 0x100f04d8 */
    II(0x100ff861, 0x5)   mov(memd_a32(ds, 0x101c37e0), eax);   /* mov [0x101c37e0], eax */
    II(0x100ff866, 0x6)   lea(edx, ebp - 0x94);                 /* lea edx, [ebp+0xffffff6c] */
    II(0x100ff86c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ff86f, 0x5)   calld(0x1014fa43, 0x501cf);           /* call 0x1014fa43 */
    II(0x100ff874, 0x5)   mov(eax, 0x6);                        /* mov eax, 0x6 */
    II(0x100ff879, 0x5)   calld(0x100e883d, -0x17041);          /* call 0x100e883d */
    II(0x100ff87e, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100ff881, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x100ff886, 0x5)   calld(/* sys */ 0x1016a24c, 0x6a9c1); /* call 0x1016a24c */
    II(0x100ff88b, 0x5)   pushd(0x5000002);                     /* push dword 0x5000002 */
    II(0x100ff890, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100ff893, 0x3)   pushd(memd_a32(ds, eax + 0x4));       /* push dword [eax+0x4] */
    II(0x100ff896, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100ff899, 0x2)   mov(ecx, memd_a32(ds, eax));          /* mov ecx, [eax] */
    II(0x100ff89b, 0x5)   mov(ebx, 0x80);                       /* mov ebx, 0x80 */
    II(0x100ff8a0, 0x6)   lea(edx, ebp - 0x94);                 /* lea edx, [ebp+0xffffff6c] */
    II(0x100ff8a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100ff8a9, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x100ff8ac, 0x5)   calld(/* sys */ 0x10166d74, 0x674c3); /* call 0x10166d74 */
    II(0x100ff8b1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ff8b4, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x100ff8b9, 0x6)   jnzd(0x100ff9c1, 0x102);              /* jnz dword 0x100ff9c1 */
    II(0x100ff8bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ff8c2, 0x5)   calld(0x10150369, 0x50aa2);           /* call 0x10150369 */
    II(0x100ff8c7, 0x6)   mov(memd_a32(ss, ebp - 0x98), eax);   /* mov [ebp+0xffffff68], eax */
    II(0x100ff8cd, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x98)); /* movsx eax, word [ebp+0xffffff68] */
    II(0x100ff8d4, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ff8d6, 0x2)   jgd(0x100ff8ed, 0x15);                /* jg 0x100ff8ed */
    II(0x100ff8d8, 0x5)   mov(edx, 0x101a2afb);                 /* mov edx, 0x101a2afb */ /* "Rookie" */
    II(0x100ff8dd, 0x6)   lea(eax, ebp - 0x94);                 /* lea eax, [ebp+0xffffff6c] */
    II(0x100ff8e3, 0x5)   calld(sys_strcpy, 0x665e7);           /* call 0x10165ecf */
    II(0x100ff8e8, 0x5)   jmpd(0x100ff957, 0x6a);               /* jmp 0x100ff957 */
l_0x100ff8ed:
    II(0x100ff8ed, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x98)); /* movsx eax, word [ebp+0xffffff68] */
    II(0x100ff8f4, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100ff8f7, 0x2)   jgd(0x100ff90b, 0x12);                /* jg 0x100ff90b */
    II(0x100ff8f9, 0x5)   mov(edx, 0x101a2b02);                 /* mov edx, 0x101a2b02 */ /* "Average" */
    II(0x100ff8fe, 0x6)   lea(eax, ebp - 0x94);                 /* lea eax, [ebp+0xffffff6c] */
    II(0x100ff904, 0x5)   calld(sys_strcpy, 0x665c6);           /* call 0x10165ecf */
    II(0x100ff909, 0x2)   jmpd(0x100ff957, 0x4c);               /* jmp 0x100ff957 */
l_0x100ff90b:
    II(0x100ff90b, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x98)); /* movsx eax, word [ebp+0xffffff68] */
    II(0x100ff912, 0x3)   cmp(eax, 0x5);                        /* cmp eax, 0x5 */
    II(0x100ff915, 0x2)   jgd(0x100ff929, 0x12);                /* jg 0x100ff929 */
    II(0x100ff917, 0x5)   mov(edx, 0x101a2b0a);                 /* mov edx, 0x101a2b0a */ /* "Veteran" */
    II(0x100ff91c, 0x6)   lea(eax, ebp - 0x94);                 /* lea eax, [ebp+0xffffff6c] */
    II(0x100ff922, 0x5)   calld(sys_strcpy, 0x665a8);           /* call 0x10165ecf */
    II(0x100ff927, 0x2)   jmpd(0x100ff957, 0x2e);               /* jmp 0x100ff957 */
l_0x100ff929:
    II(0x100ff929, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x98)); /* movsx eax, word [ebp+0xffffff68] */
    II(0x100ff930, 0x3)   cmp(eax, 0xa);                        /* cmp eax, 0xa */
    II(0x100ff933, 0x2)   jgd(0x100ff947, 0x12);                /* jg 0x100ff947 */
    II(0x100ff935, 0x5)   mov(edx, 0x101a2b12);                 /* mov edx, 0x101a2b12 */ /* "Crack" */
    II(0x100ff93a, 0x6)   lea(eax, ebp - 0x94);                 /* lea eax, [ebp+0xffffff6c] */
    II(0x100ff940, 0x5)   calld(sys_strcpy, 0x6658a);           /* call 0x10165ecf */
    II(0x100ff945, 0x2)   jmpd(0x100ff957, 0x10);               /* jmp 0x100ff957 */
l_0x100ff947:
    II(0x100ff947, 0x5)   mov(edx, 0x101a2b18);                 /* mov edx, 0x101a2b18 */ /* "Elite" */
    II(0x100ff94c, 0x6)   lea(eax, ebp - 0x94);                 /* lea eax, [ebp+0xffffff6c] */
    II(0x100ff952, 0x5)   calld(sys_strcpy, 0x66578);           /* call 0x10165ecf */
l_0x100ff957:
    II(0x100ff957, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x98)); /* movsx eax, word [ebp+0xffffff68] */
    II(0x100ff95e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ff960, 0x2)   jled(0x100ff990, 0x2e);               /* jle 0x100ff990 */
    II(0x100ff962, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x98)); /* movsx eax, word [ebp+0xffffff68] */
    II(0x100ff969, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ff96a, 0x5)   mov(eax, 0x101a2b1e);                 /* mov eax, 0x101a2b1e */ /* " (+%i)" */
    II(0x100ff96f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ff970, 0x6)   lea(eax, ebp - 0xa4);                 /* lea eax, [ebp+0xffffff5c] */
    II(0x100ff976, 0x1)   pushd(eax);                           /* push eax */
    II(0x100ff977, 0x5)   calld(sys_sprintf, 0x66585);          /* call 0x10165f01 */
    II(0x100ff97c, 0x3)   add(esp, 0xc);                        /* add esp, 0xc */
    II(0x100ff97f, 0x6)   lea(edx, ebp - 0xa4);                 /* lea edx, [ebp+0xffffff5c] */
    II(0x100ff985, 0x6)   lea(eax, ebp - 0x94);                 /* lea eax, [ebp+0xffffff6c] */
    II(0x100ff98b, 0x5)   calld(sys_strcat, 0x665a1);           /* call 0x10165f31 */
l_0x100ff990:
    II(0x100ff990, 0x5)   pushd(0x5000002);                     /* push dword 0x5000002 */
    II(0x100ff995, 0x6)   calld_abs(memd_a32(ds, 0x101bddf0));  /* call dword near [0x101bddf0] */
    II(0x100ff99b, 0x2)   add(eax, eax);                        /* add eax, eax */
    II(0x100ff99d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100ff99f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100ff9a2, 0x3)   add(edx, memd_a32(ds, eax + 0x4));    /* add edx, [eax+0x4] */
    II(0x100ff9a5, 0x1)   pushd(edx);                           /* push edx */
    II(0x100ff9a6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100ff9a9, 0x2)   mov(ecx, memd_a32(ds, eax));          /* mov ecx, [eax] */
    II(0x100ff9ab, 0x5)   mov(ebx, 0x80);                       /* mov ebx, 0x80 */
    II(0x100ff9b0, 0x6)   lea(edx, ebp - 0x94);                 /* lea edx, [ebp+0xffffff6c] */
    II(0x100ff9b6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100ff9b9, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x100ff9bc, 0x5)   calld(/* sys */ 0x10166d74, 0x673b3); /* call 0x10166d74 */
l_0x100ff9c1:
    II(0x100ff9c1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ff9c4, 0x5)   calld(0x1010094d, 0xf84);             /* call 0x1010094d */
    II(0x100ff9c9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ff9cc, 0x5)   calld(0x10149fa8, 0x4a5d7);           /* call 0x10149fa8 */
    II(0x100ff9d1, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x100ff9d5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ff9d8, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x4);   /* cmp byte [eax+0x3d], 0x4 */
    II(0x100ff9dc, 0x2)   jnzd(0x100ff9f2, 0x14);               /* jnz 0x100ff9f2 */
    II(0x100ff9de, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ff9e1, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0xb);   /* cmp byte [eax+0x3e], 0xb */
    II(0x100ff9e5, 0x2)   jzd(0x100ff9f0, 0x9);                 /* jz 0x100ff9f0 */
    II(0x100ff9e7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ff9ea, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1);   /* cmp byte [eax+0x3e], 0x1 */
    II(0x100ff9ee, 0x2)   jnzd(0x100ff9f2, 0x2);                /* jnz 0x100ff9f2 */
l_0x100ff9f0:
    II(0x100ff9f0, 0x2)   jmpd(0x100ff9f4, 0x2);                /* jmp 0x100ff9f4 */
l_0x100ff9f2:
    II(0x100ff9f2, 0x2)   jmpd(0x100ff9fa, 0x6);                /* jmp 0x100ff9fa */
l_0x100ff9f4:
    II(0x100ff9f4, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x8);    /* mov byte [ebp-0x8], 0x8 */
    II(0x100ff9f8, 0x2)   jmpd(0x100ffa2c, 0x32);               /* jmp 0x100ffa2c */
l_0x100ff9fa:
    II(0x100ff9fa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ff9fd, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0xb);   /* cmp byte [eax+0x3d], 0xb */
    II(0x100ffa01, 0x2)   jnzd(0x100ffa0c, 0x9);                /* jnz 0x100ffa0c */
    II(0x100ffa03, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ffa06, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x5);   /* cmp byte [eax+0x3e], 0x5 */
    II(0x100ffa0a, 0x2)   jzd(0x100ffa0e, 0x2);                 /* jz 0x100ffa0e */
l_0x100ffa0c:
    II(0x100ffa0c, 0x2)   jmpd(0x100ffa14, 0x6);                /* jmp 0x100ffa14 */
l_0x100ffa0e:
    II(0x100ffa0e, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x8);    /* mov byte [ebp-0x8], 0x8 */
    II(0x100ffa12, 0x2)   jmpd(0x100ffa2c, 0x18);               /* jmp 0x100ffa2c */
l_0x100ffa14:
    II(0x100ffa14, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ffa17, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x7);   /* cmp byte [eax+0x3d], 0x7 */
    II(0x100ffa1b, 0x2)   jnzd(0x100ffa26, 0x9);                /* jnz 0x100ffa26 */
    II(0x100ffa1d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ffa20, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0x1);   /* cmp byte [eax+0x3e], 0x1 */
    II(0x100ffa24, 0x2)   jzd(0x100ffa28, 0x2);                 /* jz 0x100ffa28 */
l_0x100ffa26:
    II(0x100ffa26, 0x2)   jmpd(0x100ffa2c, 0x4);                /* jmp 0x100ffa2c */
l_0x100ffa28:
    II(0x100ffa28, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x8);    /* mov byte [ebp-0x8], 0x8 */
l_0x100ffa2c:
    II(0x100ffa2c, 0x5)   calld(0x10102bf8, 0x31c7);            /* call 0x10102bf8 */
    II(0x100ffa31, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100ffa33, 0x2)   mov(cl, al);                          /* mov cl, al */
    II(0x100ffa35, 0x4)   movsx(ebx, memb_a32(ss, ebp - 0x8));  /* movsx ebx, byte [ebp-0x8] */
    II(0x100ffa39, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100ffa3c, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x100ffa41, 0x5)   calld(0x1013d5c0, 0x3db7a);           /* call 0x1013d5c0 */
    II(0x100ffa46, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ffa49, 0x5)   calld(0x100761d4, -0x8987a);          /* call 0x100761d4 */
    II(0x100ffa4e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100ffa50, 0x2)   jzd(0x100ffa5a, 0x8);                 /* jz 0x100ffa5a */
    II(0x100ffa52, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ffa55, 0x5)   calld(0x1014b77e, 0x4bd24);           /* call 0x1014b77e */
l_0x100ffa5a:
    II(0x100ffa5a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100ffa5d, 0x5)   mov(eax, 0x101c37bc);                 /* mov eax, 0x101c37bc */
    II(0x100ffa62, 0x5)   calld(0x10076630, -0x89437);          /* call 0x10076630 */
l_0x100ffa67:
    II(0x100ffa67, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ffa69, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ffa6a, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ffa6b, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ffa6c, 0x1)   popd(edx);                            /* pop edx */
    II(0x100ffa6d, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ffa6e, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ffa6f, 0x1)   retd();                               /* ret */
FUNC_END

