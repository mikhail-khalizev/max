FUNC_BEGIN(0x1015944a, 0xe64430fba1a9bbf7, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0xfe, 0xc8, 0, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x18, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xec, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x15, 0xb0, 0xf9, 0xff, 0xe8, 0x97, 0x67, 0xfa, 0xff, 0x8b, 0x45, 0xec, 0xe8, 0x98, 0xcc, 0xf1, 0xff, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xec, 0x66, 0x8b, 0x40, 0x1a, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xec, 0x66, 0x8b, 0x40, 0x1c, 0x89, 0x45, 0xf4, 0x31, 0xc0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8d, 0x4d, 0xf4, 0x8d, 0x5d, 0xf0, 0x8b, 0x55, 0xe8, 0x8b, 0x45, 0xe8, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x39, 0x7a, 0xf1, 0xff, 0x66, 0x85, 0xc0, 0x75, 0x2d, 0xe8, 0x35, 0x15, 0xf7, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x4a, 0x15, 0xf7, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0xba, 0x1, 0, 0, 0, 0xb8, 0xb1, 0x25, 0x1b, 0x10, 0xe8, 0x3a, 0xc8, 0xfb, 0xff, 0x8b, 0x45, 0xec, 0xe8, 0x7f, 0x65, 0xfa, 0xff, 0xeb, 0x32, 0x8b, 0x45, 0xe8, 0xe8, 0x30, 0x5c, 0xff, 0xff, 0xe8, 0, 0x15, 0xf7, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x15, 0x15, 0xf7, 0xff, 0x31, 0xdb, 0x31, 0xd2, 0xbe, 0xd7, 0x25, 0x1b, 0x10, 0x89, 0xc1, 0x89, 0xf0, 0xe8, 0x6, 0xc8, 0xfb, 0xff, 0x8b, 0x45, 0xe8, 0xe8, 0x4b, 0x65, 0xfa, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1015944a, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x1015944f, 0x5)   calld(sys_check_available_stack_size, 0xc8fe); /* call 0x10165d52 */
    II(0x10159454, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10159455, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10159456, 0x1)   pushd(esi);                           /* push esi */
    II(0x10159457, 0x1)   pushd(edi);                           /* push edi */
    II(0x10159458, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10159459, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1015945b, 0x6)   sub(esp, 0x18);                       /* sub esp, 0x18 */
    II(0x10159461, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10159464, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x10159467, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015946a, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1015946d, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10159472, 0x5)   calld(0x100f448c, -0x64feb);          /* call 0x100f448c */
    II(0x10159477, 0x5)   calld(0x100ffc13, -0x59869);          /* call 0x100ffc13 */
    II(0x1015947c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1015947f, 0x5)   calld(0x1007611c, -0xe3368);          /* call 0x1007611c */
    II(0x10159484, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10159487, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1015948a, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x1015948e, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10159491, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10159494, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x10159498, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1015949b, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015949d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1015949e, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101594a3, 0x1)   pushd(eax);                           /* push eax */
    II(0x101594a4, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101594a9, 0x1)   pushd(eax);                           /* push eax */
    II(0x101594aa, 0x3)   lea(ecx, ebp - 0xc);                  /* lea ecx, [ebp-0xc] */
    II(0x101594ad, 0x3)   lea(ebx, ebp - 0x10);                 /* lea ebx, [ebp-0x10] */
    II(0x101594b0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x18));   /* mov edx, [ebp-0x18] */
    II(0x101594b3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x101594b6, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x101594b9, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x101594bc, 0x5)   calld(0x10070efa, -0xe85c7);          /* call 0x10070efa */
    II(0x101594c1, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x101594c4, 0x2)   jnzd(0x101594f3, 0x2d);               /* jnz 0x101594f3 */
    II(0x101594c6, 0x5)   calld(0x100caa00, -0x8eacb);          /* call 0x100caa00 */
    II(0x101594cb, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101594d0, 0x1)   pushd(eax);                           /* push eax */
    II(0x101594d1, 0x5)   calld(0x100caa20, -0x8eab6);          /* call 0x100caa20 */
    II(0x101594d6, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x101594d8, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101594da, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x101594df, 0x5)   mov(eax, 0x101b25b1);                 /* mov eax, 0x101b25b1 */ /* "Unable to activate unit at this site." */
    II(0x101594e4, 0x5)   calld(0x10115d23, -0x437c6);          /* call 0x10115d23 */
    II(0x101594e9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x101594ec, 0x5)   calld(0x100ffa70, -0x59a81);          /* call 0x100ffa70 */
    II(0x101594f1, 0x2)   jmpd(0x10159525, 0x32);               /* jmp 0x10159525 */
l_0x101594f3:
    II(0x101594f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x101594f6, 0x5)   calld(0x1014f12b, -0xa3d0);           /* call 0x1014f12b */
    II(0x101594fb, 0x5)   calld(0x100caa00, -0x8eb00);          /* call 0x100caa00 */
    II(0x10159500, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10159505, 0x1)   pushd(eax);                           /* push eax */
    II(0x10159506, 0x5)   calld(0x100caa20, -0x8eaeb);          /* call 0x100caa20 */
    II(0x1015950b, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1015950d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015950f, 0x5)   mov(esi, 0x101b25d7);                 /* mov esi, 0x101b25d7 */ /* "Select an open square to place unit." */
    II(0x10159514, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x10159516, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x10159518, 0x5)   calld(0x10115d23, -0x437fa);          /* call 0x10115d23 */
    II(0x1015951d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10159520, 0x5)   calld(0x100ffa70, -0x59ab5);          /* call 0x100ffa70 */
l_0x10159525:
    II(0x10159525, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10159527, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10159528, 0x1)   popd(edi);                            /* pop edi */
    II(0x10159529, 0x1)   popd(esi);                            /* pop esi */
    II(0x1015952a, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1015952b, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1015952c, 0x1)   retd();                               /* ret */
FUNC_END

