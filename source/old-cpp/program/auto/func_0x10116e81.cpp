FUNC_BEGIN(0x10116e81, 0xa6ff6cdb117a4a72, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0xc7, 0xee, 0x4, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xf7, 0x45, 0xfc, 0x4, 0, 0, 0, 0x74, 0x17, 0xba, 0x8, 0x67, 0x1b, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0x4, 0xf1, 0x4, 0, 0xe8, 0x1f, 0xf1, 0x4, 0, 0xe9, 0x84, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xc7, 0x40, 0x13, 0x3c, 0x67, 0x1b, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x33, 0x89, 0x45, 0xe4, 0x83, 0x7d, 0xe4, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xe4, 0xe8, 0x57, 0x76, 0xfb, 0xff, 0xe8, 0x7e, 0xf0, 0x4, 0, 0x89, 0x45, 0xec, 0xeb, 0x7, 0xc7, 0x45, 0xec, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x37, 0x89, 0x45, 0xe8, 0x83, 0x7d, 0xe8, 0, 0x74, 0x14, 0x31, 0xd2, 0x8b, 0x45, 0xe8, 0xe8, 0x2d, 0x76, 0xfb, 0xff, 0xe8, 0x54, 0xf0, 0x4, 0, 0x89, 0x45, 0xf0, 0xeb, 0x7, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xe8, 0xe2, 0x39, 0xfd, 0xff, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x6b, 0xfa, 0xfb, 0xff, 0x89, 0x45, 0xf8, 0xf7, 0x45, 0xfc, 0x2, 0, 0, 0, 0x74, 0x8, 0x8b, 0x45, 0xf8, 0xe8, 0x22, 0xf0, 0x4, 0, 0x8b, 0x45, 0xf8, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10116e81, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x10116e86, 0x5)   calld(sys_check_available_stack_size, 0x4eec7); /* call 0x10165d52 */
    II(0x10116e8b, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10116e8c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10116e8d, 0x1)   pushd(esi);                           /* push esi */
    II(0x10116e8e, 0x1)   pushd(edi);                           /* push edi */
    II(0x10116e8f, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10116e90, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10116e92, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x10116e98, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10116e9b, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x10116e9e, 0x7)   test(memd_a32(ss, ebp - 0x4), 0x4);   /* test dword [ebp-0x4], 0x4 */
    II(0x10116ea5, 0x2)   jzd(0x10116ebe, 0x17);                /* jz 0x10116ebe */
    II(0x10116ea7, 0x5)   mov(edx, 0x101b6708);                 /* mov edx, 0x101b6708 */
    II(0x10116eac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10116eaf, 0x5)   calld(sys_call_dtor_arr, 0x4f104);    /* call 0x10165fb8 */
    II(0x10116eb4, 0x5)   calld(sys_delete_arr, 0x4f11f);       /* call 0x10165fd8 */
    II(0x10116eb9, 0x5)   jmpd(0x10116f42, 0x84);               /* jmp 0x10116f42 */
l_0x10116ebe:
    II(0x10116ebe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10116ec1, 0x7)   mov(memd_a32(ds, eax + 0x13), 0x101b673c); /* mov dword [eax+0x13], 0x101b673c */
    II(0x10116ec8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10116ecb, 0x3)   mov(eax, memd_a32(ds, eax + 0x33));   /* mov eax, [eax+0x33] */
    II(0x10116ece, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10116ed1, 0x4)   cmp(memd_a32(ss, ebp - 0x1c), 0);     /* cmp dword [ebp-0x1c], 0x0 */
    II(0x10116ed5, 0x2)   jzd(0x10116eeb, 0x14);                /* jz 0x10116eeb */
    II(0x10116ed7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10116ed9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x10116edc, 0x5)   calld(my_dtor_d2, -0x489a9);          /* call 0x100ce538 */
    II(0x10116ee1, 0x5)   calld(sys_delete, 0x4f07e);           /* call 0x10165f64 */
    II(0x10116ee6, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10116ee9, 0x2)   jmpd(0x10116ef2, 0x7);                /* jmp 0x10116ef2 */
l_0x10116eeb:
    II(0x10116eeb, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0);     /* mov dword [ebp-0x14], 0x0 */
l_0x10116ef2:
    II(0x10116ef2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10116ef5, 0x3)   mov(eax, memd_a32(ds, eax + 0x37));   /* mov eax, [eax+0x37] */
    II(0x10116ef8, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10116efb, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0);     /* cmp dword [ebp-0x18], 0x0 */
    II(0x10116eff, 0x2)   jzd(0x10116f15, 0x14);                /* jz 0x10116f15 */
    II(0x10116f01, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10116f03, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10116f06, 0x5)   calld(my_dtor_d2, -0x489d3);          /* call 0x100ce538 */
    II(0x10116f0b, 0x5)   calld(sys_delete, 0x4f054);           /* call 0x10165f64 */
    II(0x10116f10, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10116f13, 0x2)   jmpd(0x10116f1c, 0x7);                /* jmp 0x10116f1c */
l_0x10116f15:
    II(0x10116f15, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
l_0x10116f1c:
    II(0x10116f1c, 0x5)   calld(0x100ea903, -0x2c61e);          /* call 0x100ea903 */
    II(0x10116f21, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10116f26, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10116f29, 0x5)   calld(0x100d6999, -0x40595);          /* call 0x100d6999 */
    II(0x10116f2e, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10116f31, 0x7)   test(memd_a32(ss, ebp - 0x4), 0x2);   /* test dword [ebp-0x4], 0x2 */
    II(0x10116f38, 0x2)   jzd(0x10116f42, 0x8);                 /* jz 0x10116f42 */
    II(0x10116f3a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10116f3d, 0x5)   calld(sys_delete, 0x4f022);           /* call 0x10165f64 */
l_0x10116f42:
    II(0x10116f42, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10116f45, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x10116f48, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10116f4b, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10116f4d, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10116f4e, 0x1)   popd(edi);                            /* pop edi */
    II(0x10116f4f, 0x1)   popd(esi);                            /* pop esi */
    II(0x10116f50, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10116f51, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10116f52, 0x1)   retd();                               /* ret */
FUNC_END

