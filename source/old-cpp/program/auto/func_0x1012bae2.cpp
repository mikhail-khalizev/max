FUNC_BEGIN(0x1012bae2, 0x7d4110e8f5560313, 0x20, ({0x68, 0x70, 0, 0, 0, 0xe8, 0x66, 0xa2, 0x3, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x48, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xfc, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x8, 0x8b, 0x55, 0xf8, 0x66, 0x2b, 0x2, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0xc, 0x8b, 0x55, 0xf8, 0x66, 0x2b, 0x42, 0x4, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xde, 0x8b, 0x45, 0xf4, 0xe8, 0xa, 0xc3, 0x3, 0, 0x66, 0x89, 0x45, 0xdc, 0xf, 0xbf, 0x55, 0xdc, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x4, 0xf, 0xaf, 0xda, 0x8b, 0x45, 0xf4, 0xe8, 0x89, 0xc2, 0x3, 0, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x3, 0x10, 0x1, 0xda, 0x89, 0x55, 0xe2, 0x8d, 0x7d, 0xcc, 0x8b, 0x75, 0xf8, 0xa5, 0xa5, 0xa5, 0xa5, 0x80, 0x7d, 0x20, 0, 0x74, 0x1f, 0x6a, 0x3c, 0xf, 0xbf, 0x45, 0xe8, 0x50, 0xf, 0xbf, 0x45, 0xec, 0x48, 0x50, 0xf, 0xbf, 0x4d, 0xe8, 0x31, 0xdb, 0xf, 0xbf, 0x55, 0xdc, 0x8b, 0x45, 0xe2, 0xe8, 0x1a, 0xea, 0x3, 0, 0xf, 0xbf, 0x45, 0x18, 0x85, 0xc0, 0xf, 0x84, 0x9f, 0x1, 0, 0, 0xf, 0xbf, 0x55, 0x18, 0xf, 0xbf, 0x45, 0x14, 0xe8, 0xe5, 0xdb, 0xf5, 0xff, 0x89, 0x45, 0x14, 0xf, 0xbf, 0x45, 0x18, 0xc1, 0xf8, 0x2, 0xf, 0xbf, 0x55, 0x14, 0x39, 0xc2, 0x7f, 0x1f, 0x66, 0x81, 0x7d, 0xfc, 0x76, 0x2, 0x75, 0xe, 0xc7, 0x45, 0xfc, 0x7a, 0x2, 0, 0, 0xc7, 0x45, 0x10, 0x7b, 0x2, 0, 0, 0xc7, 0x45, 0xc8, 0x1, 0, 0, 0, 0xeb, 0x34, 0xf, 0xbf, 0x45, 0x18, 0xd1, 0xf8, 0xf, 0xbf, 0x55, 0x14, 0x39, 0xc2, 0x7f, 0x1f, 0x66, 0x81, 0x7d, 0xfc, 0x76, 0x2, 0x75, 0xe, 0xc7, 0x45, 0xfc, 0x78, 0x2, 0, 0, 0xc7, 0x45, 0x10, 0x79, 0x2, 0, 0, 0xc7, 0x45, 0xc8, 0x4, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xc8, 0x2, 0, 0, 0, 0xb8, 0x2, 0, 0, 0, 0xe8, 0x3e, 0xe6, 0x3, 0, 0xf, 0xbf, 0x45, 0x18, 0x50, 0xf, 0xbf, 0x45, 0x14, 0x50, 0xb8, 0xd7, 0x86, 0x1a, 0x10, 0x50, 0x8d, 0x45, 0xbc, 0x50, 0xe8, 0xda, 0xa2, 0x3, 0, 0x83, 0xc4, 0x10, 0xc7, 0x45, 0xb8, 0x19, 0, 0, 0, 0x66, 0x81, 0x7d, 0xfc, 0x80, 0x2, 0x74, 0x8, 0x66, 0x81, 0x7d, 0xfc, 0x82, 0x2, 0x75, 0x7, 0xc7, 0x45, 0xb8, 0x14, 0, 0, 0, 0xf, 0xbf, 0x45, 0x18, 0xf, 0xbf, 0x55, 0x1c, 0x1, 0xc2, 0xf, 0xbf, 0x5d, 0x1c, 0x4a, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0xf, 0xbf, 0x55, 0xb8, 0x39, 0xd0, 0x7e, 0x19, 0xf, 0xbf, 0x55, 0x18, 0xf, 0xbf, 0x45, 0xb8, 0x1, 0xc2, 0xf, 0xbf, 0x5d, 0xb8, 0x4a, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0x1c, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8b, 0x45, 0xc8, 0x50, 0xf, 0xbf, 0x45, 0xe8, 0x50, 0xb8, 0x2d, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0x31, 0xc9, 0x8d, 0x5d, 0xbc, 0xf, 0xbf, 0x55, 0xdc, 0x8b, 0x45, 0xe2, 0xe8, 0x37, 0xde, 0xfb, 0xff, 0xf, 0xbf, 0x55, 0x14, 0xf, 0xbf, 0x45, 0x1c, 0x1, 0xc2, 0xf, 0xbf, 0x5d, 0x1c, 0x4a, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0x14, 0xf, 0xbf, 0x55, 0x18, 0xf, 0xbf, 0x45, 0x1c, 0x1, 0xc2, 0xf, 0xbf, 0x5d, 0x1c, 0x4a, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0x18, 0xb8, 0x1, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0x68, 0xa2, 0, 0, 0, 0xf, 0xbf, 0x45, 0xe8, 0x50, 0xb8, 0x1e, 0, 0, 0, 0x50, 0x31, 0xc0, 0x50, 0xb9, 0x2d, 0, 0, 0, 0x8b, 0x5d, 0xf0, 0xf, 0xbf, 0x55, 0xdc, 0x8b, 0x45, 0xe2, 0xe8, 0xd5, 0xdd, 0xfb, 0xff, 0x83, 0x45, 0xe2, 0x4b, 0x83, 0x45, 0xcc, 0x4b, 0xf, 0xbf, 0x45, 0x18, 0x50, 0xf, 0xbf, 0x4d, 0x14, 0xf, 0xbf, 0x5d, 0x10, 0xf, 0xbf, 0x55, 0xfc, 0x8d, 0x45, 0xcc, 0xe8, 0x4c, 0xfb, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x14, 0}))
    II(0x1012bae2, 0x5)   pushd(0x70);                          /* push dword 0x70 */
    II(0x1012bae7, 0x5)   calld(sys_check_available_stack_size, 0x3a266); /* call 0x10165d52 */
    II(0x1012baec, 0x1)   pushd(esi);                           /* push esi */
    II(0x1012baed, 0x1)   pushd(edi);                           /* push edi */
    II(0x1012baee, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1012baef, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1012baf1, 0x6)   sub(esp, 0x48);                       /* sub esp, 0x48 */
    II(0x1012baf7, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1012bafa, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x1012bafd, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x1012bb00, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x1012bb03, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012bb06, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x1012bb0a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1012bb0d, 0x3)   sub(ax, memw_a32(ds, edx));           /* sub ax, [edx] */
    II(0x1012bb10, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1012bb13, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012bb16, 0x4)   mov(ax, memw_a32(ds, eax + 0xc));     /* mov ax, [eax+0xc] */
    II(0x1012bb1a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1012bb1d, 0x4)   sub(ax, memw_a32(ds, edx + 0x4));     /* sub ax, [edx+0x4] */
    II(0x1012bb21, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1012bb24, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012bb27, 0x3)   mov(memd_a32(ss, ebp - 0x22), eax);   /* mov [ebp-0x22], eax */
//    II(0x1012bb2a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012bb2d, 0x5)   calld(/* sys */ 0x10167e3c, 0x3c30a); /* call 0x10167e3c */
    II(0x1012bb32, 0x4)   mov(memw_a32(ss, ebp - 0x24), ax);    /* mov [ebp-0x24], ax */
    II(0x1012bb36, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x1012bb3a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012bb3d, 0x3)   mov(ebx, memd_a32(ds, eax + 0x4));    /* mov ebx, [eax+0x4] */
    II(0x1012bb40, 0x3)   imul(ebx, edx);                       /* imul ebx, edx */
    II(0x1012bb43, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1012bb46, 0x5)   calld(/* sys */ 0x10167dd4, 0x3c289); /* call 0x10167dd4 */
    II(0x1012bb4b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1012bb4d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012bb50, 0x2)   add(edx, memd_a32(ds, eax));          /* add edx, [eax] */
    II(0x1012bb52, 0x2)   add(edx, ebx);                        /* add edx, ebx */
    II(0x1012bb54, 0x3)   mov(memd_a32(ss, ebp - 0x1e), edx);   /* mov [ebp-0x1e], edx */
    II(0x1012bb57, 0x3)   lea(edi, ebp - 0x34);                 /* lea edi, [ebp-0x34] */
    II(0x1012bb5a, 0x3)   mov(esi, memd_a32(ss, ebp - 0x8));    /* mov esi, [ebp-0x8] */
    II(0x1012bb5d, 0x1)   movsd_a32();                          /* movsd */
    II(0x1012bb5e, 0x1)   movsd_a32();                          /* movsd */
    II(0x1012bb5f, 0x1)   movsd_a32();                          /* movsd */
    II(0x1012bb60, 0x1)   movsd_a32();                          /* movsd */
    II(0x1012bb61, 0x4)   cmp(memb_a32(ss, ebp + 0x20), 0);     /* cmp byte [ebp+0x20], 0x0 */
    II(0x1012bb65, 0x2)   jzd(0x1012bb86, 0x1f);                /* jz 0x1012bb86 */
    II(0x1012bb67, 0x2)   pushd(0x3c);                          /* push 0x3c */
    II(0x1012bb69, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1012bb6d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bb6e, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x1012bb72, 0x1)   dec(eax);                             /* dec eax */
    II(0x1012bb73, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bb74, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x18)); /* movsx ecx, word [ebp-0x18] */
    II(0x1012bb78, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1012bb7a, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x1012bb7e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1e));   /* mov eax, [ebp-0x1e] */
    II(0x1012bb81, 0x5)   calld(/* sys */ 0x1016a5a0, 0x3ea1a); /* call 0x1016a5a0 */
l_0x1012bb86:
    II(0x1012bb86, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x18)); /* movsx eax, word [ebp+0x18] */
    II(0x1012bb8a, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1012bb8c, 0x6)   jzd(0x1012bd31, 0x19f);               /* jz dword 0x1012bd31 */
    II(0x1012bb92, 0x4)   movsx(edx, memw_a32(ss, ebp + 0x18)); /* movsx edx, word [ebp+0x18] */
    II(0x1012bb96, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x14)); /* movsx eax, word [ebp+0x14] */
    II(0x1012bb9a, 0x5)   calld(my_min, -0xa241b);              /* call 0x10089784 */
    II(0x1012bb9f, 0x3)   mov(memd_a32(ss, ebp + 0x14), eax);   /* mov [ebp+0x14], eax */
    II(0x1012bba2, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x18)); /* movsx eax, word [ebp+0x18] */
    II(0x1012bba6, 0x3)   sar(eax, 0x2);                        /* sar eax, 0x2 */
    II(0x1012bba9, 0x4)   movsx(edx, memw_a32(ss, ebp + 0x14)); /* movsx edx, word [ebp+0x14] */
    II(0x1012bbad, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1012bbaf, 0x2)   jgd(0x1012bbd0, 0x1f);                /* jg 0x1012bbd0 */
    II(0x1012bbb1, 0x6)   cmp(memw_a32(ss, ebp - 0x4), 0x276);  /* cmp word [ebp-0x4], 0x276 */
    II(0x1012bbb7, 0x2)   jnzd(0x1012bbc7, 0xe);                /* jnz 0x1012bbc7 */
    II(0x1012bbb9, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0x27a);  /* mov dword [ebp-0x4], 0x27a */
    II(0x1012bbc0, 0x7)   mov(memd_a32(ss, ebp + 0x10), 0x27b); /* mov dword [ebp+0x10], 0x27b */
l_0x1012bbc7:
    II(0x1012bbc7, 0x7)   mov(memd_a32(ss, ebp - 0x38), 0x1);   /* mov dword [ebp-0x38], 0x1 */
    II(0x1012bbce, 0x2)   jmpd(0x1012bc04, 0x34);               /* jmp 0x1012bc04 */
l_0x1012bbd0:
    II(0x1012bbd0, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x18)); /* movsx eax, word [ebp+0x18] */
    II(0x1012bbd4, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x1012bbd6, 0x4)   movsx(edx, memw_a32(ss, ebp + 0x14)); /* movsx edx, word [ebp+0x14] */
    II(0x1012bbda, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1012bbdc, 0x2)   jgd(0x1012bbfd, 0x1f);                /* jg 0x1012bbfd */
    II(0x1012bbde, 0x6)   cmp(memw_a32(ss, ebp - 0x4), 0x276);  /* cmp word [ebp-0x4], 0x276 */
    II(0x1012bbe4, 0x2)   jnzd(0x1012bbf4, 0xe);                /* jnz 0x1012bbf4 */
    II(0x1012bbe6, 0x7)   mov(memd_a32(ss, ebp - 0x4), 0x278);  /* mov dword [ebp-0x4], 0x278 */
    II(0x1012bbed, 0x7)   mov(memd_a32(ss, ebp + 0x10), 0x279); /* mov dword [ebp+0x10], 0x279 */
l_0x1012bbf4:
    II(0x1012bbf4, 0x7)   mov(memd_a32(ss, ebp - 0x38), 0x4);   /* mov dword [ebp-0x38], 0x4 */
    II(0x1012bbfb, 0x2)   jmpd(0x1012bc04, 0x7);                /* jmp 0x1012bc04 */
l_0x1012bbfd:
    II(0x1012bbfd, 0x7)   mov(memd_a32(ss, ebp - 0x38), 0x2);   /* mov dword [ebp-0x38], 0x2 */
l_0x1012bc04:
    II(0x1012bc04, 0x5)   mov(eax, 0x2);                        /* mov eax, 0x2 */
    II(0x1012bc09, 0x5)   calld(/* sys */ 0x1016a24c, 0x3e63e); /* call 0x1016a24c */
    II(0x1012bc0e, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x18)); /* movsx eax, word [ebp+0x18] */
    II(0x1012bc12, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bc13, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x14)); /* movsx eax, word [ebp+0x14] */
    II(0x1012bc17, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bc18, 0x5)   mov(eax, 0x101a86d7);                 /* mov eax, 0x101a86d7 */ /* "%i/%i" */
    II(0x1012bc1d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bc1e, 0x3)   lea(eax, ebp - 0x44);                 /* lea eax, [ebp-0x44] */
    II(0x1012bc21, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bc22, 0x5)   calld(sys_sprintf, 0x3a2da);          /* call 0x10165f01 */
    II(0x1012bc27, 0x3)   add(esp, 0x10);                       /* add esp, 0x10 */
    II(0x1012bc2a, 0x7)   mov(memd_a32(ss, ebp - 0x48), 0x19);  /* mov dword [ebp-0x48], 0x19 */
    II(0x1012bc31, 0x6)   cmp(memw_a32(ss, ebp - 0x4), 0x280);  /* cmp word [ebp-0x4], 0x280 */
    II(0x1012bc37, 0x2)   jzd(0x1012bc41, 0x8);                 /* jz 0x1012bc41 */
    II(0x1012bc39, 0x6)   cmp(memw_a32(ss, ebp - 0x4), 0x282);  /* cmp word [ebp-0x4], 0x282 */
    II(0x1012bc3f, 0x2)   jnzd(0x1012bc48, 0x7);                /* jnz 0x1012bc48 */
l_0x1012bc41:
    II(0x1012bc41, 0x7)   mov(memd_a32(ss, ebp - 0x48), 0x14);  /* mov dword [ebp-0x48], 0x14 */
l_0x1012bc48:
    II(0x1012bc48, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x18)); /* movsx eax, word [ebp+0x18] */
    II(0x1012bc4c, 0x4)   movsx(edx, memw_a32(ss, ebp + 0x1c)); /* movsx edx, word [ebp+0x1c] */
    II(0x1012bc50, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1012bc52, 0x4)   movsx(ebx, memw_a32(ss, ebp + 0x1c)); /* movsx ebx, word [ebp+0x1c] */
    II(0x1012bc56, 0x1)   dec(edx);                             /* dec edx */
    II(0x1012bc57, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012bc59, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1012bc5c, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1012bc5e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x48)); /* movsx edx, word [ebp-0x48] */
    II(0x1012bc62, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x1012bc64, 0x2)   jled(0x1012bc7f, 0x19);               /* jle 0x1012bc7f */
    II(0x1012bc66, 0x4)   movsx(edx, memw_a32(ss, ebp + 0x18)); /* movsx edx, word [ebp+0x18] */
    II(0x1012bc6a, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x48)); /* movsx eax, word [ebp-0x48] */
    II(0x1012bc6e, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1012bc70, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x48)); /* movsx ebx, word [ebp-0x48] */
    II(0x1012bc74, 0x1)   dec(edx);                             /* dec edx */
    II(0x1012bc75, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012bc77, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1012bc7a, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1012bc7c, 0x3)   mov(memd_a32(ss, ebp + 0x1c), eax);   /* mov [ebp+0x1c], eax */
l_0x1012bc7f:
    II(0x1012bc7f, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1012bc84, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bc85, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1012bc8a, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bc8b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x1012bc8e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bc8f, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1012bc93, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bc94, 0x5)   mov(eax, 0x2d);                       /* mov eax, 0x2d */
    II(0x1012bc99, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bc9a, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012bc9c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bc9d, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x1012bc9f, 0x3)   lea(ebx, ebp - 0x44);                 /* lea ebx, [ebp-0x44] */
    II(0x1012bca2, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x1012bca6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1e));   /* mov eax, [ebp-0x1e] */
    II(0x1012bca9, 0x5)   calld(0x100e9ae5, -0x421c9);          /* call 0x100e9ae5 */
    II(0x1012bcae, 0x4)   movsx(edx, memw_a32(ss, ebp + 0x14)); /* movsx edx, word [ebp+0x14] */
    II(0x1012bcb2, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x1c)); /* movsx eax, word [ebp+0x1c] */
    II(0x1012bcb6, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1012bcb8, 0x4)   movsx(ebx, memw_a32(ss, ebp + 0x1c)); /* movsx ebx, word [ebp+0x1c] */
    II(0x1012bcbc, 0x1)   dec(edx);                             /* dec edx */
    II(0x1012bcbd, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012bcbf, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1012bcc2, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1012bcc4, 0x3)   mov(memd_a32(ss, ebp + 0x14), eax);   /* mov [ebp+0x14], eax */
    II(0x1012bcc7, 0x4)   movsx(edx, memw_a32(ss, ebp + 0x18)); /* movsx edx, word [ebp+0x18] */
    II(0x1012bccb, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x1c)); /* movsx eax, word [ebp+0x1c] */
    II(0x1012bccf, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1012bcd1, 0x4)   movsx(ebx, memw_a32(ss, ebp + 0x1c)); /* movsx ebx, word [ebp+0x1c] */
    II(0x1012bcd5, 0x1)   dec(edx);                             /* dec edx */
    II(0x1012bcd6, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1012bcd8, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1012bcdb, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1012bcdd, 0x3)   mov(memd_a32(ss, ebp + 0x18), eax);   /* mov [ebp+0x18], eax */
    II(0x1012bce0, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1012bce5, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bce6, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012bce8, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bce9, 0x5)   pushd(0xa2);                          /* push dword 0xa2 */
    II(0x1012bcee, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1012bcf2, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bcf3, 0x5)   mov(eax, 0x1e);                       /* mov eax, 0x1e */
    II(0x1012bcf8, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bcf9, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1012bcfb, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bcfc, 0x5)   mov(ecx, 0x2d);                       /* mov ecx, 0x2d */
    II(0x1012bd01, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x10));   /* mov ebx, [ebp-0x10] */
    II(0x1012bd04, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x1012bd08, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1e));   /* mov eax, [ebp-0x1e] */
    II(0x1012bd0b, 0x5)   calld(0x100e9ae5, -0x4222b);          /* call 0x100e9ae5 */
    II(0x1012bd10, 0x4)   add(memd_a32(ss, ebp - 0x1e), 0x4b);  /* add dword [ebp-0x1e], 0x4b */
    II(0x1012bd14, 0x4)   add(memd_a32(ss, ebp - 0x34), 0x4b);  /* add dword [ebp-0x34], 0x4b */
    II(0x1012bd18, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x18)); /* movsx eax, word [ebp+0x18] */
    II(0x1012bd1c, 0x1)   pushd(eax);                           /* push eax */
    II(0x1012bd1d, 0x4)   movsx(ecx, memw_a32(ss, ebp + 0x14)); /* movsx ecx, word [ebp+0x14] */
    II(0x1012bd21, 0x4)   movsx(ebx, memw_a32(ss, ebp + 0x10)); /* movsx ebx, word [ebp+0x10] */
    II(0x1012bd25, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x1012bd29, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x1012bd2c, 0x5)   calld(0x1012b87d, -0x4b4);            /* call 0x1012b87d */
l_0x1012bd31:
    II(0x1012bd31, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1012bd33, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1012bd34, 0x1)   popd(edi);                            /* pop edi */
    II(0x1012bd35, 0x1)   popd(esi);                            /* pop esi */
    II(0x1012bd36, 0x3)   retd(0x14);                           /* ret 0x14 */
FUNC_END

