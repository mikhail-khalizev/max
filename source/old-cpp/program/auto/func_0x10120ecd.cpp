FUNC_BEGIN(0x10120ecd, 0xe464447fa1aab21a, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0x7b, 0x4e, 0x4, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x88, 0x4d, 0xfc, 0xf, 0xbe, 0x45, 0xfc, 0x6b, 0xc0, 0x16, 0xba, 0x8c, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xec, 0x8b, 0x45, 0xec, 0x66, 0x8b, 0x40, 0xc, 0x5, 0xf, 0, 0, 0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0xec, 0x66, 0x8b, 0x40, 0x8, 0x83, 0xe8, 0x12, 0x89, 0x45, 0xe4, 0xf, 0xbf, 0x55, 0xe4, 0x8b, 0x45, 0xec, 0x8b, 0x40, 0x12, 0x8d, 0x1c, 0x10, 0xf, 0xbf, 0x55, 0xe8, 0x8b, 0x45, 0xec, 0xf, 0xaf, 0x10, 0x1, 0xd3, 0x89, 0x5d, 0xe0, 0x66, 0x83, 0x7d, 0xf8, 0, 0x75, 0x2a, 0x8b, 0x45, 0xec, 0x8b, 0x40, 0x12, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x50, 0x8b, 0x45, 0xec, 0x8b, 0x8, 0xbb, 0x5, 0, 0, 0, 0xba, 0x25, 0, 0, 0, 0x8b, 0x45, 0xe0, 0xe8, 0x15, 0x9e, 0x4, 0, 0xe9, 0xa, 0x1, 0, 0, 0x8b, 0x45, 0xf4, 0x66, 0x3b, 0x45, 0xf0, 0x7e, 0x6, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x29, 0x45, 0xf0, 0xf, 0xbf, 0x55, 0xf4, 0xf, 0xbf, 0x45, 0xf0, 0x1, 0xd0, 0x6b, 0xd0, 0x23, 0xf, 0xbf, 0x5d, 0xf8, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xf4, 0xf, 0xbf, 0x55, 0xf0, 0x6b, 0xd2, 0x23, 0xf, 0xbf, 0x5d, 0xf8, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x29, 0x45, 0xf4, 0x6a, 0, 0x6a, 0x4, 0x6a, 0x24, 0x31, 0xc9, 0x31, 0xdb, 0x8b, 0x55, 0xec, 0x8b, 0x12, 0x8b, 0x45, 0xe0, 0xe8, 0xc2, 0x96, 0x4, 0, 0x66, 0x83, 0x7d, 0xf0, 0, 0x74, 0x20, 0x6a, 0x2, 0x8b, 0x45, 0xec, 0x8b, 0x8, 0xbb, 0x3, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf0, 0x8b, 0x75, 0xe0, 0x46, 0x8b, 0x45, 0xec, 0x8b, 0, 0x1, 0xf0, 0xe8, 0x87, 0x9d, 0x4, 0, 0x66, 0x83, 0x7d, 0xf4, 0, 0x74, 0x24, 0x6a, 0x1, 0x8b, 0x45, 0xec, 0x8b, 0x8, 0xbb, 0x3, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf4, 0x8b, 0x75, 0xe0, 0x46, 0x8b, 0x45, 0xec, 0x3, 0x30, 0xf, 0xbf, 0x45, 0xf0, 0x1, 0xf0, 0xe8, 0x5c, 0x9d, 0x4, 0, 0xf, 0xbf, 0x55, 0xf4, 0xf, 0xbf, 0x45, 0xf0, 0x1, 0xd0, 0x83, 0xf8, 0x23, 0x7d, 0x47, 0x8b, 0x45, 0xec, 0x8b, 0x40, 0x12, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x50, 0x8b, 0x45, 0xec, 0x8b, 0x8, 0xbb, 0x3, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf4, 0xba, 0x23, 0, 0, 0, 0x29, 0xc2, 0x89, 0xd0, 0xf, 0xbf, 0x55, 0xf0, 0x29, 0xd0, 0x89, 0xc2, 0x8b, 0x75, 0xe0, 0x46, 0x8b, 0x45, 0xec, 0x3, 0x30, 0xf, 0xbf, 0x45, 0xf0, 0x1, 0xc6, 0xf, 0xbf, 0x45, 0xf4, 0x1, 0xf0, 0xe8, 0x6, 0x9d, 0x4, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x10120ecd, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x10120ed2, 0x5)   calld(sys_check_available_stack_size, 0x44e7b); /* call 0x10165d52 */
    II(0x10120ed7, 0x1)   pushd(esi);                           /* push esi */
    II(0x10120ed8, 0x1)   pushd(edi);                           /* push edi */
    II(0x10120ed9, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10120eda, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10120edc, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x10120ee2, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10120ee5, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10120ee8, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x10120eeb, 0x3)   mov(memb_a32(ss, ebp - 0x4), cl);     /* mov [ebp-0x4], cl */
    II(0x10120eee, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x4));  /* movsx eax, byte [ebp-0x4] */
    II(0x10120ef2, 0x3)   imul(eax, eax, 0x16);                 /* imul eax, eax, 0x16 */
    II(0x10120ef5, 0x5)   mov(edx, 0x101c538c);                 /* mov edx, 0x101c538c */
    II(0x10120efa, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10120efc, 0x3)   mov(memd_a32(ss, ebp - 0x14), edx);   /* mov [ebp-0x14], edx */
    II(0x10120eff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10120f02, 0x4)   mov(ax, memw_a32(ds, eax + 0xc));     /* mov ax, [eax+0xc] */
    II(0x10120f06, 0x5)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x10120f0b, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10120f0e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10120f11, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x10120f15, 0x3)   sub(eax, 0x12);                       /* sub eax, 0x12 */
    II(0x10120f18, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x10120f1b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x10120f1f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10120f22, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x10120f25, 0x3)   lea(ebx, eax + edx);                  /* lea ebx, [eax+edx] */
    II(0x10120f28, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x18)); /* movsx edx, word [ebp-0x18] */
    II(0x10120f2c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10120f2f, 0x3)   imul(edx, memd_a32(ds, eax));         /* imul edx, [eax] */
    II(0x10120f32, 0x2)   add(ebx, edx);                        /* add ebx, edx */
    II(0x10120f34, 0x3)   mov(memd_a32(ss, ebp - 0x20), ebx);   /* mov [ebp-0x20], ebx */
    II(0x10120f37, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0);      /* cmp word [ebp-0x8], 0x0 */
    II(0x10120f3c, 0x2)   jnzd(0x10120f68, 0x2a);               /* jnz 0x10120f68 */
    II(0x10120f3e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10120f41, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x10120f44, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10120f46, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10120f4b, 0x1)   pushd(eax);                           /* push eax */
    II(0x10120f4c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10120f4f, 0x2)   mov(ecx, memd_a32(ds, eax));          /* mov ecx, [eax] */
    II(0x10120f51, 0x5)   mov(ebx, 0x5);                        /* mov ebx, 0x5 */
    II(0x10120f56, 0x5)   mov(edx, 0x25);                       /* mov edx, 0x25 */
    II(0x10120f5b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10120f5e, 0x5)   calld(/* sys */ 0x1016ad78, 0x49e15); /* call 0x1016ad78 */
    II(0x10120f63, 0x5)   jmpd(0x10121072, 0x10a);              /* jmp 0x10121072 */
l_0x10120f68:
    II(0x10120f68, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10120f6b, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x10120f6f, 0x2)   jled(0x10120f77, 0x6);                /* jle 0x10120f77 */
    II(0x10120f71, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10120f74, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
l_0x10120f77:
    II(0x10120f77, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10120f7a, 0x3)   sub(memd_a32(ss, ebp - 0x10), eax);   /* sub [ebp-0x10], eax */
    II(0x10120f7d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x10120f81, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10120f85, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10120f87, 0x3)   imul(edx, eax, 0x23);                 /* imul edx, eax, 0x23 */
    II(0x10120f8a, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x10120f8e, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10120f90, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10120f93, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10120f95, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10120f98, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x10120f9c, 0x3)   imul(edx, edx, 0x23);                 /* imul edx, edx, 0x23 */
    II(0x10120f9f, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x8));  /* movsx ebx, word [ebp-0x8] */
    II(0x10120fa3, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10120fa5, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10120fa8, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10120faa, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x10120fad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10120fb0, 0x3)   sub(memd_a32(ss, ebp - 0xc), eax);    /* sub [ebp-0xc], eax */
    II(0x10120fb3, 0x2)   pushd(0);                             /* push 0x0 */
    II(0x10120fb5, 0x2)   pushd(0x4);                           /* push 0x4 */
    II(0x10120fb7, 0x2)   pushd(0x24);                          /* push 0x24 */
    II(0x10120fb9, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10120fbb, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10120fbd, 0x3)   mov(edx, memd_a32(ss, ebp - 0x14));   /* mov edx, [ebp-0x14] */
    II(0x10120fc0, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x10120fc2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x10120fc5, 0x5)   calld(/* sys */ 0x1016a68c, 0x496c2); /* call 0x1016a68c */
    II(0x10120fca, 0x5)   cmp(memw_a32(ss, ebp - 0x10), 0);     /* cmp word [ebp-0x10], 0x0 */
    II(0x10120fcf, 0x2)   jzd(0x10120ff1, 0x20);                /* jz 0x10120ff1 */
    II(0x10120fd1, 0x2)   pushd(0x2);                           /* push 0x2 */
    II(0x10120fd3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10120fd6, 0x2)   mov(ecx, memd_a32(ds, eax));          /* mov ecx, [eax] */
    II(0x10120fd8, 0x5)   mov(ebx, 0x3);                        /* mov ebx, 0x3 */
    II(0x10120fdd, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x10120fe1, 0x3)   mov(esi, memd_a32(ss, ebp - 0x20));   /* mov esi, [ebp-0x20] */
    II(0x10120fe4, 0x1)   inc(esi);                             /* inc esi */
    II(0x10120fe5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10120fe8, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10120fea, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x10120fec, 0x5)   calld(/* sys */ 0x1016ad78, 0x49d87); /* call 0x1016ad78 */
l_0x10120ff1:
    II(0x10120ff1, 0x5)   cmp(memw_a32(ss, ebp - 0xc), 0);      /* cmp word [ebp-0xc], 0x0 */
    II(0x10120ff6, 0x2)   jzd(0x1012101c, 0x24);                /* jz 0x1012101c */
    II(0x10120ff8, 0x2)   pushd(0x1);                           /* push 0x1 */
    II(0x10120ffa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10120ffd, 0x2)   mov(ecx, memd_a32(ds, eax));          /* mov ecx, [eax] */
    II(0x10120fff, 0x5)   mov(ebx, 0x3);                        /* mov ebx, 0x3 */
    II(0x10121004, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x10121008, 0x3)   mov(esi, memd_a32(ss, ebp - 0x20));   /* mov esi, [ebp-0x20] */
    II(0x1012100b, 0x1)   inc(esi);                             /* inc esi */
    II(0x1012100c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1012100f, 0x2)   add(esi, memd_a32(ds, eax));          /* add esi, [eax] */
    II(0x10121011, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10121015, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x10121017, 0x5)   calld(/* sys */ 0x1016ad78, 0x49d5c); /* call 0x1016ad78 */
l_0x1012101c:
    II(0x1012101c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x10121020, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10121024, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10121026, 0x3)   cmp(eax, 0x23);                       /* cmp eax, 0x23 */
    II(0x10121029, 0x2)   jged(0x10121072, 0x47);               /* jge 0x10121072 */
    II(0x1012102b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1012102e, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x10121031, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10121033, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10121038, 0x1)   pushd(eax);                           /* push eax */
    II(0x10121039, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1012103c, 0x2)   mov(ecx, memd_a32(ds, eax));          /* mov ecx, [eax] */
    II(0x1012103e, 0x5)   mov(ebx, 0x3);                        /* mov ebx, 0x3 */
    II(0x10121043, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10121047, 0x5)   mov(edx, 0x23);                       /* mov edx, 0x23 */
    II(0x1012104c, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x1012104e, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10121050, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x10)); /* movsx edx, word [ebp-0x10] */
    II(0x10121054, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x10121056, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10121058, 0x3)   mov(esi, memd_a32(ss, ebp - 0x20));   /* mov esi, [ebp-0x20] */
    II(0x1012105b, 0x1)   inc(esi);                             /* inc esi */
    II(0x1012105c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1012105f, 0x2)   add(esi, memd_a32(ds, eax));          /* add esi, [eax] */
    II(0x10121061, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10121065, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x10121067, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1012106b, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x1012106d, 0x5)   calld(/* sys */ 0x1016ad78, 0x49d06); /* call 0x1016ad78 */
l_0x10121072:
    II(0x10121072, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10121074, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10121075, 0x1)   popd(edi);                            /* pop edi */
    II(0x10121076, 0x1)   popd(esi);                            /* pop esi */
    II(0x10121077, 0x1)   retd();                               /* ret */
FUNC_END

