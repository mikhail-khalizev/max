FUNC_BEGIN(0x10124890, 0xc3d6eb8dd19f5172, 0x20, ({0x68, 0x60, 0x2, 0, 0, 0xe8, 0xb8, 0x14, 0x4, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x48, 0x2, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x88, 0x5d, 0xfc, 0x31, 0xc0, 0xa0, 0xbb, 0x59, 0x1c, 0x10, 0x3d, 0xff, 0, 0, 0, 0x75, 0x47, 0x8b, 0x15, 0x78, 0x58, 0x1c, 0x10, 0xa1, 0x7c, 0x58, 0x1c, 0x10, 0x8b, 0x12, 0x3b, 0x10, 0x74, 0xc, 0xa1, 0x78, 0x58, 0x1c, 0x10, 0x8b, 0, 0x89, 0x45, 0xf0, 0xeb, 0xe3, 0xfa, 0x31, 0xc0, 0xa0, 0xba, 0x59, 0x1c, 0x10, 0xc1, 0xe0, 0x2, 0x8b, 0x15, 0x7c, 0x58, 0x1c, 0x10, 0x8b, 0x80, 0x80, 0x58, 0x1c, 0x10, 0x89, 0x2, 0xa1, 0x7c, 0x58, 0x1c, 0x10, 0x8b, 0x15, 0x78, 0x58, 0x1c, 0x10, 0x8b, 0, 0x89, 0x2, 0xfb, 0xfc, 0xa1, 0x78, 0x58, 0x1c, 0x10, 0x8b, 0, 0x89, 0x45, 0xf0, 0x66, 0xc7, 0x5, 0xb4, 0x59, 0x1c, 0x10, 0, 0, 0x8d, 0x85, 0xc3, 0xfd, 0xff, 0xff, 0x89, 0x85, 0xbc, 0xfd, 0xff, 0xff, 0xc7, 0x85, 0xb8, 0xfd, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0xb8, 0xfd, 0xff, 0xff, 0xff, 0x85, 0xb8, 0xfd, 0xff, 0xff, 0x8b, 0x85, 0xb8, 0xfd, 0xff, 0xff, 0x3b, 0x45, 0xf8, 0x7d, 0x27, 0x8b, 0x45, 0xf4, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0xe8, 0x3a, 0x94, 0xfa, 0xff, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0x8b, 0x95, 0xbc, 0xfd, 0xff, 0xff, 0xff, 0x85, 0xbc, 0xfd, 0xff, 0xff, 0x8a, 0, 0x88, 0x2, 0xeb, 0xc2, 0x80, 0x7d, 0xfc, 0, 0xf, 0x84, 0x99, 0, 0, 0, 0x31, 0xd2, 0x8a, 0x15, 0xba, 0x59, 0x1c, 0x10, 0xc1, 0xe2, 0x2, 0x8b, 0x45, 0xf0, 0x89, 0x82, 0x80, 0x58, 0x1c, 0x10, 0xa0, 0xba, 0x59, 0x1c, 0x10, 0x88, 0x85, 0xc0, 0xfd, 0xff, 0xff, 0x31, 0xc0, 0xe8, 0xf2, 0x93, 0xfa, 0xff, 0x25, 0xff, 0, 0, 0, 0xe8, 0xe8, 0x93, 0xfa, 0xff, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x85, 0xc1, 0xfd, 0xff, 0xff, 0x8a, 0x15, 0xb4, 0x59, 0x1c, 0x10, 0x8b, 0x85, 0xbc, 0xfd, 0xff, 0xff, 0xff, 0x85, 0xbc, 0xfd, 0xff, 0xff, 0x88, 0x10, 0x31, 0xc0, 0x66, 0xa1, 0xb4, 0x59, 0x1c, 0x10, 0xc1, 0xf8, 0x8, 0x25, 0xff, 0, 0, 0, 0x88, 0xc2, 0x8b, 0x85, 0xbc, 0xfd, 0xff, 0xff, 0xff, 0x85, 0xbc, 0xfd, 0xff, 0xff, 0x88, 0x10, 0x8a, 0x85, 0xc3, 0xfd, 0xff, 0xff, 0xa2, 0xbb, 0x59, 0x1c, 0x10, 0x31, 0xc0, 0xa0, 0xbb, 0x59, 0x1c, 0x10, 0x3d, 0xff, 0, 0, 0, 0x74, 0xe, 0xa0, 0xba, 0x59, 0x1c, 0x10, 0xfe, 0xc0, 0x24, 0x3f, 0xa2, 0xba, 0x59, 0x1c, 0x10, 0x83, 0x45, 0xf8, 0x5, 0x8b, 0x45, 0xf8, 0x89, 0x85, 0xb8, 0xfd, 0xff, 0xff, 0x80, 0x7d, 0xfc, 0, 0x74, 0xe, 0x8d, 0x85, 0xc0, 0xfd, 0xff, 0xff, 0x89, 0x85, 0xbc, 0xfd, 0xff, 0xff, 0xeb, 0xc, 0x8d, 0x85, 0xc3, 0xfd, 0xff, 0xff, 0x89, 0x85, 0xbc, 0xfd, 0xff, 0xff, 0x8b, 0x15, 0x7c, 0x58, 0x1c, 0x10, 0x8b, 0x45, 0xf0, 0x3b, 0x2, 0xf, 0x8c, 0x7e, 0, 0, 0, 0xb8, 0, 0x4, 0, 0, 0x2b, 0x45, 0xf0, 0x89, 0x85, 0xb8, 0xfd, 0xff, 0xff, 0x8b, 0x85, 0xb8, 0xfd, 0xff, 0xff, 0x3b, 0x45, 0xf8, 0x7e, 0x9, 0x8b, 0x45, 0xf8, 0x89, 0x85, 0xb8, 0xfd, 0xff, 0xff, 0x8b, 0x85, 0xb8, 0xfd, 0xff, 0xff, 0x50, 0x8c, 0xdb, 0x8b, 0x95, 0xbc, 0xfd, 0xff, 0xff, 0xa1, 0x84, 0x59, 0x1c, 0x10, 0x8b, 0x75, 0xf0, 0x1, 0xc6, 0x8c, 0xd8, 0x89, 0xd9, 0x89, 0xd3, 0x89, 0xc2, 0x89, 0xf0, 0xe8, 0x36, 0x8a, 0x5, 0, 0x8b, 0x85, 0xb8, 0xfd, 0xff, 0xff, 0x1, 0x85, 0xbc, 0xfd, 0xff, 0xff, 0x8b, 0x85, 0xb8, 0xfd, 0xff, 0xff, 0x1, 0x45, 0xf0, 0x81, 0x7d, 0xf0, 0, 0x4, 0, 0, 0x75, 0x7, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x2b, 0x85, 0xb8, 0xfd, 0xff, 0xff, 0x89, 0x85, 0xb8, 0xfd, 0xff, 0xff, 0x8b, 0x85, 0xb8, 0xfd, 0xff, 0xff, 0x50, 0x8c, 0xdb, 0x8b, 0x85, 0xbc, 0xfd, 0xff, 0xff, 0x8b, 0x3d, 0x84, 0x59, 0x1c, 0x10, 0x3, 0x7d, 0xf0, 0x8c, 0xde, 0x89, 0xd9, 0x89, 0xc3, 0x89, 0xf2, 0x89, 0xf8, 0xe8, 0xdb, 0x89, 0x5, 0, 0xfa, 0x8b, 0x55, 0xf0, 0x3, 0x95, 0xb8, 0xfd, 0xff, 0xff, 0xa1, 0x78, 0x58, 0x1c, 0x10, 0x89, 0x10, 0xfb, 0xfc, 0xb8, 0xf, 0, 0, 0, 0x31, 0xd2, 0x66, 0x8b, 0x15, 0x5c, 0xb4, 0x1b, 0x10, 0x42, 0xee, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x10124890, 0x5)   pushd(0x260);                         /* push dword 0x260 */
    II(0x10124895, 0x5)   calld(sys_check_available_stack_size, 0x414b8); /* call 0x10165d52 */
    II(0x1012489a, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1012489b, 0x1)   pushd(esi);                           /* push esi */
    II(0x1012489c, 0x1)   pushd(edi);                           /* push edi */
    II(0x1012489d, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1012489e, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101248a0, 0x6)   sub(esp, 0x248);                      /* sub esp, 0x248 */
    II(0x101248a6, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x101248a9, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x101248ac, 0x3)   mov(memb_a32(ss, ebp - 0x4), bl);     /* mov [ebp-0x4], bl */
    II(0x101248af, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101248b1, 0x5)   mov(al, memb_a32(ds, 0x101c59bb));    /* mov al, [0x101c59bb] */
    II(0x101248b6, 0x5)   cmp(eax, 0xff);                       /* cmp eax, 0xff */
    II(0x101248bb, 0x2)   jnzd(0x10124904, 0x47);               /* jnz 0x10124904 */
l_0x101248bd:
    II(0x101248bd, 0x6)   mov(edx, memd_a32(ds, 0x101c5878));   /* mov edx, [0x101c5878] */
    II(0x101248c3, 0x5)   mov(eax, memd_a32(ds, 0x101c587c));   /* mov eax, [0x101c587c] */
    II(0x101248c8, 0x2)   mov(edx, memd_a32(ds, edx));          /* mov edx, [edx] */
    II(0x101248ca, 0x2)   cmp(edx, memd_a32(ds, eax));          /* cmp edx, [eax] */
    II(0x101248cc, 0x2)   jzd(0x101248da, 0xc);                 /* jz 0x101248da */
    II(0x101248ce, 0x5)   mov(eax, memd_a32(ds, 0x101c5878));   /* mov eax, [0x101c5878] */
    II(0x101248d3, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x101248d5, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x101248d8, 0x2)   jmpd(0x101248bd, -0x1d);              /* jmp 0x101248bd */
l_0x101248da:
    II(0x101248da, 0x1)   cli();                                /* cli */
    II(0x101248db, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101248dd, 0x5)   mov(al, memb_a32(ds, 0x101c59ba));    /* mov al, [0x101c59ba] */
    II(0x101248e2, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x101248e5, 0x6)   mov(edx, memd_a32(ds, 0x101c587c));   /* mov edx, [0x101c587c] */
    II(0x101248eb, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c5880)); /* mov eax, [eax+0x101c5880] */
    II(0x101248f1, 0x2)   mov(memd_a32(ds, edx), eax);          /* mov [edx], eax */
    II(0x101248f3, 0x5)   mov(eax, memd_a32(ds, 0x101c587c));   /* mov eax, [0x101c587c] */
    II(0x101248f8, 0x6)   mov(edx, memd_a32(ds, 0x101c5878));   /* mov edx, [0x101c5878] */
    II(0x101248fe, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x10124900, 0x2)   mov(memd_a32(ds, edx), eax);          /* mov [edx], eax */
    II(0x10124902, 0x1)   sti();                                /* sti */
    II(0x10124903, 0x1)   cld();                                /* cld */
l_0x10124904:
    II(0x10124904, 0x5)   mov(eax, memd_a32(ds, 0x101c5878));   /* mov eax, [0x101c5878] */
    II(0x10124909, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x1012490b, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1012490e, 0x9)   mov(memw_a32(ds, 0x101c59b4), 0);     /* mov word [0x101c59b4], 0x0 */
    II(0x10124917, 0x6)   lea(eax, ebp - 0x23d);                /* lea eax, [ebp+0xfffffdc3] */
    II(0x1012491d, 0x6)   mov(memd_a32(ss, ebp - 0x244), eax);  /* mov [ebp+0xfffffdbc], eax */
    II(0x10124923, 0xa)   mov(memd_a32(ss, ebp - 0x248), 0);    /* mov dword [ebp+0xfffffdb8], 0x0 */
    II(0x1012492d, 0x2)   jmpd(0x1012493b, 0xc);                /* jmp 0x1012493b */
l_0x1012492f:
    II(0x1012492f, 0x6)   mov(eax, memd_a32(ss, ebp - 0x248));  /* mov eax, [ebp+0xfffffdb8] */
    II(0x10124935, 0x6)   inc(memd_a32(ss, ebp - 0x248));       /* inc dword [ebp+0xfffffdb8] */
l_0x1012493b:
    II(0x1012493b, 0x6)   mov(eax, memd_a32(ss, ebp - 0x248));  /* mov eax, [ebp+0xfffffdb8] */
    II(0x10124941, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x8));    /* cmp eax, [ebp-0x8] */
    II(0x10124944, 0x2)   jged(0x1012496d, 0x27);               /* jge 0x1012496d */
    II(0x10124946, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10124949, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x1012494b, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10124950, 0x5)   calld(0x100cdd8f, -0x56bc6);          /* call 0x100cdd8f */
    II(0x10124955, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10124958, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
    II(0x1012495b, 0x6)   mov(edx, memd_a32(ss, ebp - 0x244));  /* mov edx, [ebp+0xfffffdbc] */
    II(0x10124961, 0x6)   inc(memd_a32(ss, ebp - 0x244));       /* inc dword [ebp+0xfffffdbc] */
    II(0x10124967, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10124969, 0x2)   mov(memb_a32(ds, edx), al);           /* mov [edx], al */
    II(0x1012496b, 0x2)   jmpd(0x1012492f, -0x3e);              /* jmp 0x1012492f */
l_0x1012496d:
    II(0x1012496d, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x10124971, 0x6)   jzd(0x10124a10, 0x99);                /* jz dword 0x10124a10 */
    II(0x10124977, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10124979, 0x6)   mov(dl, memb_a32(ds, 0x101c59ba));    /* mov dl, [0x101c59ba] */
    II(0x1012497f, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x10124982, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10124985, 0x6)   mov(memd_a32(ds, edx + 0x101c5880), eax); /* mov [edx+0x101c5880], eax */
    II(0x1012498b, 0x5)   mov(al, memb_a32(ds, 0x101c59ba));    /* mov al, [0x101c59ba] */
    II(0x10124990, 0x6)   mov(memb_a32(ss, ebp - 0x240), al);   /* mov [ebp+0xfffffdc0], al */
    II(0x10124996, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10124998, 0x5)   calld(0x100cdd8f, -0x56c0e);          /* call 0x100cdd8f */
    II(0x1012499d, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101249a2, 0x5)   calld(0x100cdd8f, -0x56c18);          /* call 0x100cdd8f */
    II(0x101249a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101249aa, 0x7)   mov(memw_a32(ss, ebp - 0x23f), ax);   /* mov [ebp+0xfffffdc1], ax */
    II(0x101249b1, 0x6)   mov(dl, memb_a32(ds, 0x101c59b4));    /* mov dl, [0x101c59b4] */
    II(0x101249b7, 0x6)   mov(eax, memd_a32(ss, ebp - 0x244));  /* mov eax, [ebp+0xfffffdbc] */
    II(0x101249bd, 0x6)   inc(memd_a32(ss, ebp - 0x244));       /* inc dword [ebp+0xfffffdbc] */
    II(0x101249c3, 0x2)   mov(memb_a32(ds, eax), dl);           /* mov [eax], dl */
    II(0x101249c5, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101249c7, 0x6)   mov(ax, memw_a32(ds, 0x101c59b4));    /* mov ax, [0x101c59b4] */
    II(0x101249cd, 0x3)   sar(eax, 0x8);                        /* sar eax, 0x8 */
    II(0x101249d0, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101249d5, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x101249d7, 0x6)   mov(eax, memd_a32(ss, ebp - 0x244));  /* mov eax, [ebp+0xfffffdbc] */
    II(0x101249dd, 0x6)   inc(memd_a32(ss, ebp - 0x244));       /* inc dword [ebp+0xfffffdbc] */
    II(0x101249e3, 0x2)   mov(memb_a32(ds, eax), dl);           /* mov [eax], dl */
    II(0x101249e5, 0x6)   mov(al, memb_a32(ss, ebp - 0x23d));   /* mov al, [ebp+0xfffffdc3] */
    II(0x101249eb, 0x5)   mov(memb_a32(ds, 0x101c59bb), al);    /* mov [0x101c59bb], al */
    II(0x101249f0, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101249f2, 0x5)   mov(al, memb_a32(ds, 0x101c59bb));    /* mov al, [0x101c59bb] */
    II(0x101249f7, 0x5)   cmp(eax, 0xff);                       /* cmp eax, 0xff */
    II(0x101249fc, 0x2)   jzd(0x10124a0c, 0xe);                 /* jz 0x10124a0c */
    II(0x101249fe, 0x5)   mov(al, memb_a32(ds, 0x101c59ba));    /* mov al, [0x101c59ba] */
    II(0x10124a03, 0x2)   inc(al);                              /* inc al */
    II(0x10124a05, 0x2)   and_(al, 0x3f);                       /* and al, 0x3f */
    II(0x10124a07, 0x5)   mov(memb_a32(ds, 0x101c59ba), al);    /* mov [0x101c59ba], al */
l_0x10124a0c:
    II(0x10124a0c, 0x4)   add(memd_a32(ss, ebp - 0x8), 0x5);    /* add dword [ebp-0x8], 0x5 */
l_0x10124a10:
    II(0x10124a10, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10124a13, 0x6)   mov(memd_a32(ss, ebp - 0x248), eax);  /* mov [ebp+0xfffffdb8], eax */
    II(0x10124a19, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x10124a1d, 0x2)   jzd(0x10124a2d, 0xe);                 /* jz 0x10124a2d */
    II(0x10124a1f, 0x6)   lea(eax, ebp - 0x240);                /* lea eax, [ebp+0xfffffdc0] */
    II(0x10124a25, 0x6)   mov(memd_a32(ss, ebp - 0x244), eax);  /* mov [ebp+0xfffffdbc], eax */
    II(0x10124a2b, 0x2)   jmpd(0x10124a39, 0xc);                /* jmp 0x10124a39 */
l_0x10124a2d:
    II(0x10124a2d, 0x6)   lea(eax, ebp - 0x23d);                /* lea eax, [ebp+0xfffffdc3] */
    II(0x10124a33, 0x6)   mov(memd_a32(ss, ebp - 0x244), eax);  /* mov [ebp+0xfffffdbc], eax */
l_0x10124a39:
    II(0x10124a39, 0x6)   mov(edx, memd_a32(ds, 0x101c587c));   /* mov edx, [0x101c587c] */
    II(0x10124a3f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10124a42, 0x2)   cmp(eax, memd_a32(ds, edx));          /* cmp eax, [edx] */
    II(0x10124a44, 0x6)   jld(0x10124ac8, 0x7e);                /* jl dword 0x10124ac8 */
    II(0x10124a4a, 0x5)   mov(eax, 0x400);                      /* mov eax, 0x400 */
    II(0x10124a4f, 0x3)   sub(eax, memd_a32(ss, ebp - 0x10));   /* sub eax, [ebp-0x10] */
    II(0x10124a52, 0x6)   mov(memd_a32(ss, ebp - 0x248), eax);  /* mov [ebp+0xfffffdb8], eax */
//    II(0x10124a58, 0x6)   mov(eax, memd_a32(ss, ebp - 0x248));  /* mov eax, [ebp+0xfffffdb8] */
    II(0x10124a5e, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x8));    /* cmp eax, [ebp-0x8] */
    II(0x10124a61, 0x2)   jled(0x10124a6c, 0x9);                /* jle 0x10124a6c */
    II(0x10124a63, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10124a66, 0x6)   mov(memd_a32(ss, ebp - 0x248), eax);  /* mov [ebp+0xfffffdb8], eax */
l_0x10124a6c:
    II(0x10124a6c, 0x6)   mov(eax, memd_a32(ss, ebp - 0x248));  /* mov eax, [ebp+0xfffffdb8] */
    II(0x10124a72, 0x1)   pushd(eax);                           /* push eax */
    II(0x10124a73, 0x2)   mov(ebx, ds);                         /* mov ebx, ds */
    II(0x10124a75, 0x6)   mov(edx, memd_a32(ss, ebp - 0x244));  /* mov edx, [ebp+0xfffffdbc] */
    II(0x10124a7b, 0x5)   mov(eax, memd_a32(ds, 0x101c5984));   /* mov eax, [0x101c5984] */
    II(0x10124a80, 0x3)   mov(esi, memd_a32(ss, ebp - 0x10));   /* mov esi, [ebp-0x10] */
    II(0x10124a83, 0x2)   add(esi, eax);                        /* add esi, eax */
    II(0x10124a85, 0x2)   mov(eax, ds);                         /* mov eax, ds */
    II(0x10124a87, 0x2)   mov(ecx, ebx);                        /* mov ecx, ebx */
    II(0x10124a89, 0x2)   mov(ebx, edx);                        /* mov ebx, edx */
    II(0x10124a8b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10124a8d, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x10124a8f, 0x5)   calld(/* sys */ 0x1017d4ca, 0x58a36); /* call 0x1017d4ca */
    II(0x10124a94, 0x6)   mov(eax, memd_a32(ss, ebp - 0x248));  /* mov eax, [ebp+0xfffffdb8] */
    II(0x10124a9a, 0x6)   add(memd_a32(ss, ebp - 0x244), eax);  /* add [ebp+0xfffffdbc], eax */
    II(0x10124aa0, 0x6)   mov(eax, memd_a32(ss, ebp - 0x248));  /* mov eax, [ebp+0xfffffdb8] */
    II(0x10124aa6, 0x3)   add(memd_a32(ss, ebp - 0x10), eax);   /* add [ebp-0x10], eax */
    II(0x10124aa9, 0x7)   cmp(memd_a32(ss, ebp - 0x10), 0x400); /* cmp dword [ebp-0x10], 0x400 */
    II(0x10124ab0, 0x2)   jnzd(0x10124ab9, 0x7);                /* jnz 0x10124ab9 */
    II(0x10124ab2, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
l_0x10124ab9:
    II(0x10124ab9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10124abc, 0x6)   sub(eax, memd_a32(ss, ebp - 0x248));  /* sub eax, [ebp+0xfffffdb8] */
    II(0x10124ac2, 0x6)   mov(memd_a32(ss, ebp - 0x248), eax);  /* mov [ebp+0xfffffdb8], eax */
l_0x10124ac8:
    II(0x10124ac8, 0x6)   mov(eax, memd_a32(ss, ebp - 0x248));  /* mov eax, [ebp+0xfffffdb8] */
    II(0x10124ace, 0x1)   pushd(eax);                           /* push eax */
    II(0x10124acf, 0x2)   mov(ebx, ds);                         /* mov ebx, ds */
    II(0x10124ad1, 0x6)   mov(eax, memd_a32(ss, ebp - 0x244));  /* mov eax, [ebp+0xfffffdbc] */
    II(0x10124ad7, 0x6)   mov(edi, memd_a32(ds, 0x101c5984));   /* mov edi, [0x101c5984] */
    II(0x10124add, 0x3)   add(edi, memd_a32(ss, ebp - 0x10));   /* add edi, [ebp-0x10] */
    II(0x10124ae0, 0x2)   mov(esi, ds);                         /* mov esi, ds */
    II(0x10124ae2, 0x2)   mov(ecx, ebx);                        /* mov ecx, ebx */
    II(0x10124ae4, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10124ae6, 0x2)   mov(edx, esi);                        /* mov edx, esi */
    II(0x10124ae8, 0x2)   mov(eax, edi);                        /* mov eax, edi */
    II(0x10124aea, 0x5)   calld(/* sys */ 0x1017d4ca, 0x589db); /* call 0x1017d4ca */
    II(0x10124aef, 0x1)   cli();                                /* cli */
    II(0x10124af0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10124af3, 0x6)   add(edx, memd_a32(ss, ebp - 0x248));  /* add edx, [ebp+0xfffffdb8] */
    II(0x10124af9, 0x5)   mov(eax, memd_a32(ds, 0x101c5878));   /* mov eax, [0x101c5878] */
    II(0x10124afe, 0x2)   mov(memd_a32(ds, eax), edx);          /* mov [eax], edx */
    II(0x10124b00, 0x1)   sti();                                /* sti */
    II(0x10124b01, 0x1)   cld();                                /* cld */
    II(0x10124b02, 0x5)   mov(eax, 0xf);                        /* mov eax, 0xf */
    II(0x10124b07, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10124b09, 0x7)   mov(dx, memw_a32(ds, 0x101bb45c));    /* mov dx, [0x101bb45c] */
    II(0x10124b10, 0x1)   inc(edx);                             /* inc edx */
    II(0x10124b11, 0x1)   outb(dx, al);                         /* out dx, al */
    II(0x10124b12, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10124b14, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10124b15, 0x1)   popd(edi);                            /* pop edi */
    II(0x10124b16, 0x1)   popd(esi);                            /* pop esi */
    II(0x10124b17, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10124b18, 0x1)   retd();                               /* ret */
FUNC_END

