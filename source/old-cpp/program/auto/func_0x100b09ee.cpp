FUNC_BEGIN(0x100b09ee, 0x80b42f25e774dadf, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x5a, 0x53, 0xb, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x19, 0xe8, 0x30, 0x72, 0, 0, 0x8d, 0x5d, 0xf8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x8, 0x71, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xf8, 0xe8, 0xce, 0x61, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x3d, 0xa3, 0x8, 0, 0x84, 0xc0, 0x74, 0x28, 0x8d, 0x45, 0xf8, 0xe8, 0xd4, 0x6f, 0, 0, 0xe8, 0x23, 0x73, 0, 0, 0x85, 0xc0, 0x74, 0x15, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xf8, 0xe8, 0xc0, 0x6f, 0, 0, 0xe8, 0xf, 0x73, 0, 0, 0xe8, 0x5a, 0x1d, 0xa, 0, 0xeb, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x19, 0xe8, 0x89, 0x9c, 0x8, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0xf9, 0xa2, 0x8, 0, 0x84, 0xc0, 0x74, 0x20, 0xe8, 0x1b, 0x9d, 0xfd, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0x40, 0x5b, 0xfc, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x10, 0x49, 0xff, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x27, 0xe8, 0xc8, 0xa2, 0x8, 0, 0x84, 0xc0, 0x74, 0x1a, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x27, 0xe8, 0x24, 0x9d, 0xfd, 0xff, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xf4, 0xff, 0x52, 0x48, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0x5c, 0x5b, 0xfc, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x23, 0xe8, 0x1b, 0x72, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x27, 0xe8, 0xaa, 0x9d, 0xfd, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xf, 0xe8, 0xe9, 0xa4, 0xfd, 0xff, 0x8b, 0x55, 0xfc, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x1f, 0x53, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf8, 0xe8, 0x3e, 0x6b, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100b09ee, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x100b09f3, 0x5)   calld(sys_check_available_stack_size, 0xb535a); /* call 0x10165d52 */
    II(0x100b09f8, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100b09f9, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100b09fa, 0x1)   pushd(edx);                           /* push edx */
    II(0x100b09fb, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b09fc, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b09fd, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b09fe, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b0a00, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x100b0a06, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100b0a09, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0a0c, 0x3)   add(eax, 0x19);                       /* add eax, 0x19 */
    II(0x100b0a0f, 0x5)   calld(0x100b7c44, 0x7230);            /* call 0x100b7c44 */
    II(0x100b0a14, 0x3)   lea(ebx, ebp - 0x8);                  /* lea ebx, [ebp-0x8] */
    II(0x100b0a17, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b0a19, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100b0a1b, 0x5)   calld(0x100b7b28, 0x7108);            /* call 0x100b7b28 */
    II(0x100b0a20, 0x2)   jmpd(0x100b0a2a, 0x8);                /* jmp 0x100b0a2a */
l_0x100b0a22:
    II(0x100b0a22, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100b0a25, 0x5)   calld(0x10076bf8, -0x39e32);          /* call 0x10076bf8 */
l_0x100b0a2a:
    II(0x100b0a2a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b0a2c, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100b0a2f, 0x5)   calld(0x1013ad71, 0x8a33d);           /* call 0x1013ad71 */
    II(0x100b0a34, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b0a36, 0x2)   jzd(0x100b0a60, 0x28);                /* jz 0x100b0a60 */
    II(0x100b0a38, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100b0a3b, 0x5)   calld(0x100b7a14, 0x6fd4);            /* call 0x100b7a14 */
    II(0x100b0a40, 0x5)   calld(0x100b7d68, 0x7323);            /* call 0x100b7d68 */
    II(0x100b0a45, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b0a47, 0x2)   jzd(0x100b0a5e, 0x15);                /* jz 0x100b0a5e */
    II(0x100b0a49, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b0a4c, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100b0a4f, 0x5)   calld(0x100b7a14, 0x6fc0);            /* call 0x100b7a14 */
    II(0x100b0a54, 0x5)   calld(0x100b7d68, 0x730f);            /* call 0x100b7d68 */
    II(0x100b0a59, 0x5)   calld(0x101527b8, 0xa1d5a);           /* call 0x101527b8 */
l_0x100b0a5e:
    II(0x100b0a5e, 0x2)   jmpd(0x100b0a22, -0x3e);              /* jmp 0x100b0a22 */
l_0x100b0a60:
    II(0x100b0a60, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0a63, 0x3)   add(eax, 0x19);                       /* add eax, 0x19 */
    II(0x100b0a66, 0x5)   calld(0x1013a6f4, 0x89c89);           /* call 0x1013a6f4 */
    II(0x100b0a6b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b0a6d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0a70, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b0a73, 0x5)   calld(0x1013ad71, 0x8a2f9);           /* call 0x1013ad71 */
    II(0x100b0a78, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b0a7a, 0x2)   jzd(0x100b0a9c, 0x20);                /* jz 0x100b0a9c */
    II(0x100b0a7c, 0x5)   calld(0x1008a79c, -0x262e5);          /* call 0x1008a79c */
    II(0x100b0a81, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100b0a83, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100b0a85, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0a88, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b0a8b, 0x5)   calld(0x100765d0, -0x3a4c0);          /* call 0x100765d0 */
    II(0x100b0a90, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b0a92, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100b0a97, 0x5)   calld(0x100a53ac, -0xb6f0);           /* call 0x100a53ac */
l_0x100b0a9c:
    II(0x100b0a9c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b0a9e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0aa1, 0x3)   add(eax, 0x27);                       /* add eax, 0x27 */
    II(0x100b0aa4, 0x5)   calld(0x1013ad71, 0x8a2c8);           /* call 0x1013ad71 */
    II(0x100b0aa9, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b0aab, 0x2)   jzd(0x100b0ac7, 0x1a);                /* jz 0x100b0ac7 */
    II(0x100b0aad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0ab0, 0x3)   add(eax, 0x27);                       /* add eax, 0x27 */
    II(0x100b0ab3, 0x5)   calld(0x1008a7dc, -0x262dc);          /* call 0x1008a7dc */
    II(0x100b0ab8, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x100b0abb, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b0abe, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100b0ac1, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100b0ac4, 0x3)   calld_abs(memd_a32(ds, edx + 0x48));  /* call dword near [edx+0x48] */
l_0x100b0ac7:
    II(0x100b0ac7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b0ac9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0acc, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b0acf, 0x5)   calld(0x10076630, -0x3a4a4);          /* call 0x10076630 */
    II(0x100b0ad4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b0ad6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0ad9, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x100b0adc, 0x5)   calld(0x100b7cfc, 0x721b);            /* call 0x100b7cfc */
    II(0x100b0ae1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b0ae3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0ae6, 0x3)   add(eax, 0x27);                       /* add eax, 0x27 */
    II(0x100b0ae9, 0x5)   calld(0x1008a898, -0x26256);          /* call 0x1008a898 */
    II(0x100b0aee, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b0af0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0af3, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x100b0af6, 0x5)   calld(0x1008afe4, -0x25b17);          /* call 0x1008afe4 */
    II(0x100b0afb, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b0afe, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100b0b03, 0x5)   calld(0x100a5e27, -0xace1);           /* call 0x100a5e27 */
    II(0x100b0b08, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b0b0a, 0x3)   lea(eax, ebp - 0x8);                  /* lea eax, [ebp-0x8] */
    II(0x100b0b0d, 0x5)   calld(0x100b7650, 0x6b3e);            /* call 0x100b7650 */
    II(0x100b0b12, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100b0b14, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100b0b15, 0x1)   popd(edi);                            /* pop edi */
    II(0x100b0b16, 0x1)   popd(esi);                            /* pop esi */
    II(0x100b0b17, 0x1)   popd(edx);                            /* pop edx */
    II(0x100b0b18, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100b0b19, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100b0b1a, 0x1)   retd();                               /* ret */
FUNC_END

