FUNC_BEGIN(0x100b1e09, 0x531706e1957ac6fb, 0x20, ({0x68, 0x9c, 0, 0, 0, 0xe8, 0x3f, 0x3f, 0xb, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x7c, 0, 0, 0, 0x89, 0x45, 0xfc, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0xe0, 0x8e, 0x8, 0, 0x84, 0xc0, 0x74, 0x9, 0xc6, 0x45, 0xf8, 0, 0xe9, 0x42, 0x5, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0x2b, 0x47, 0xfc, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0x1a, 0x47, 0xfc, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xe4, 0xe8, 0x44, 0x4c, 0xfc, 0xff, 0x8d, 0x45, 0xe8, 0xe8, 0x80, 0x4c, 0xfc, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x23, 0xe8, 0x7f, 0x5e, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0xec, 0x46, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0xdf, 0x46, 0xfc, 0xff, 0xe8, 0xa2, 0x43, 0xfc, 0xff, 0x66, 0x8b, 0x52, 0x52, 0x66, 0x3b, 0x50, 0x19, 0xf, 0x8d, 0x11, 0x3, 0, 0, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0x86, 0x44, 0xfc, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xd4, 0xe8, 0xfc, 0x45, 0xfc, 0xff, 0x80, 0x4d, 0xf4, 0x1, 0xe8, 0xf, 0x88, 0xfd, 0xff, 0x98, 0x89, 0x45, 0xd0, 0xff, 0x75, 0xd0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0x9d, 0x46, 0xfc, 0xff, 0x66, 0x83, 0x78, 0x8, 0x41, 0x75, 0x6, 0xc6, 0x45, 0xd8, 0x2, 0xeb, 0x4, 0xc6, 0x45, 0xd8, 0x3, 0x8b, 0x4d, 0xd5, 0xc1, 0xf9, 0x18, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0xd2, 0x46, 0xfc, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xc0, 0xe8, 0xb9, 0xdf, 0x6, 0, 0x89, 0x45, 0xbc, 0x80, 0x65, 0xf4, 0xfe, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x19, 0xe8, 0x76, 0x4c, 0xfc, 0xff, 0x98, 0x85, 0xc0, 0xf, 0x84, 0x19, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x19, 0xe8, 0x16, 0x5d, 0, 0, 0x8d, 0x5d, 0xb8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xee, 0x5b, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xb8, 0xe8, 0xb4, 0x4c, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0x23, 0x8e, 0x8, 0, 0x84, 0xc0, 0xf, 0x84, 0xdc, 0, 0, 0, 0x8d, 0x45, 0xb8, 0xe8, 0xb6, 0x5a, 0, 0, 0xe8, 0x5, 0x5e, 0, 0, 0x85, 0xc0, 0x74, 0x13, 0x8d, 0x45, 0xb8, 0xe8, 0xa5, 0x5a, 0, 0, 0xe8, 0xf4, 0x5d, 0, 0, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x2, 0xeb, 0x13, 0x8d, 0x45, 0xb8, 0xe8, 0x90, 0x5a, 0, 0, 0xe8, 0x4f, 0x5e, 0, 0, 0x66, 0x3d, 0xff, 0xff, 0x75, 0x3f, 0x8d, 0x45, 0xb8, 0xe8, 0x7d, 0x5a, 0, 0, 0xe8, 0xcc, 0x5d, 0, 0, 0x85, 0xc0, 0x74, 0x15, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xb8, 0xe8, 0x69, 0x5a, 0, 0, 0xe8, 0xb8, 0x5d, 0, 0, 0xe8, 0x3, 0x8, 0xa, 0, 0x8d, 0x45, 0xb8, 0xe8, 0xbf, 0x5a, 0, 0, 0x8b, 0x5d, 0xfc, 0x83, 0xc3, 0x19, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x18, 0x5c, 0, 0, 0xeb, 0x5f, 0x8d, 0x45, 0xb8, 0xe8, 0x3e, 0x5a, 0, 0, 0xe8, 0x8d, 0x5d, 0, 0, 0x89, 0x45, 0xdc, 0x8d, 0x55, 0xe4, 0x8d, 0x45, 0xb4, 0xe8, 0x7b, 0x3e, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xdc, 0xe8, 0xae, 0xec, 0xfb, 0xff, 0x89, 0x45, 0xf0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x23, 0xe8, 0xe, 0x8d, 0x8, 0, 0x84, 0xc0, 0x75, 0x9, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x45, 0xec, 0x7d, 0x1d, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x8d, 0x45, 0xb8, 0xe8, 0x2a, 0x5a, 0, 0, 0x8b, 0x5d, 0xfc, 0x83, 0xc3, 0x23, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xcf, 0x5c, 0, 0, 0xe9, 0xa, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xb8, 0xe8, 0x14, 0x56, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0xd4, 0xe8, 0xb2, 0x4b, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0x21, 0x8d, 0x8, 0, 0x84, 0xc0, 0xf, 0x84, 0x4d, 0x1, 0, 0, 0x8d, 0x45, 0xd4, 0xe8, 0x40, 0x43, 0xfc, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x39, 0xc2, 0x75, 0xe, 0x8d, 0x45, 0xd4, 0xe8, 0x26, 0x43, 0xfc, 0xff, 0xf6, 0x40, 0x13, 0x1, 0x75, 0x2, 0xeb, 0xf, 0x8d, 0x45, 0xd4, 0xe8, 0x16, 0x43, 0xfc, 0xff, 0x66, 0x83, 0x78, 0x8, 0x39, 0x75, 0x2, 0xeb, 0x11, 0x8d, 0x45, 0xd4, 0xe8, 0x5, 0x43, 0xfc, 0xff, 0xe8, 0xc, 0x6, 0xa, 0, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x20, 0x8d, 0x45, 0xd4, 0xe8, 0xf2, 0x42, 0xfc, 0xff, 0xe8, 0xf9, 0x5, 0xa, 0, 0x89, 0x45, 0xb0, 0x8b, 0x45, 0xb0, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xb0, 0xff, 0x52, 0x20, 0x3c, 0x17, 0x74, 0x2, 0xeb, 0x11, 0x8d, 0x45, 0xd4, 0xe8, 0x4, 0x43, 0xfc, 0xff, 0xe8, 0x6, 0xe, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x5, 0xe9, 0xc2, 0, 0, 0, 0x8d, 0x45, 0xd4, 0xe8, 0xba, 0x42, 0xfc, 0xff, 0xe8, 0xc1, 0x5, 0xa, 0, 0x89, 0x45, 0xac, 0x8d, 0x45, 0xd4, 0xe8, 0xaa, 0x42, 0xfc, 0xff, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x12, 0x8b, 0x45, 0xac, 0xe8, 0xce, 0x5c, 0, 0, 0x66, 0x3d, 0xff, 0xff, 0xf, 0x84, 0x8c, 0, 0, 0, 0x8d, 0x55, 0xe4, 0x8d, 0x45, 0xa8, 0xe8, 0x45, 0x3d, 0xfc, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xd4, 0xe8, 0xab, 0x42, 0xfc, 0xff, 0xe8, 0x73, 0xeb, 0xfb, 0xff, 0x89, 0x45, 0xf0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x23, 0xe8, 0xd3, 0x8b, 0x8, 0, 0x84, 0xc0, 0x75, 0x9, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x45, 0xec, 0x7d, 0x55, 0x8d, 0x5d, 0xc0, 0x8d, 0x45, 0xd4, 0xe8, 0x7e, 0x42, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0x6d, 0x44, 0xfc, 0xff, 0xe8, 0x8a, 0xfa, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x34, 0x8b, 0x55, 0xac, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x23, 0xe8, 0x82, 0x5b, 0, 0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x8d, 0x45, 0xd4, 0xe8, 0x18, 0x42, 0xfc, 0xff, 0x66, 0x8b, 0x40, 0x1a, 0x66, 0x89, 0x45, 0xe8, 0x8d, 0x45, 0xd4, 0xe8, 0x8, 0x42, 0xfc, 0xff, 0x66, 0x8b, 0x40, 0x1c, 0x66, 0x89, 0x45, 0xea, 0xe9, 0x99, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc0, 0xe8, 0x4d, 0x6b, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0xb3, 0x3d, 0xfc, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0xb0, 0x43, 0xfc, 0xff, 0x8b, 0x40, 0x50, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0xf, 0x8e, 0xfd, 0, 0, 0, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0x9c, 0xe8, 0xde, 0x5a, 0, 0, 0x89, 0x45, 0x98, 0x80, 0x65, 0xf4, 0xfe, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0x94, 0xe8, 0x7b, 0x59, 0, 0, 0x89, 0x45, 0x90, 0x80, 0x65, 0xf4, 0xfe, 0x8d, 0x55, 0x9c, 0x8b, 0x45, 0xfc, 0xe8, 0xa, 0xed, 0xff, 0xff, 0x8d, 0x45, 0x9c, 0xe8, 0x39, 0x5a, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0x94, 0xe8, 0x97, 0x58, 0, 0, 0xeb, 0x8, 0x8d, 0x45, 0x94, 0xe8, 0xd9, 0x49, 0xfc, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0x94, 0xe8, 0x48, 0x8b, 0x8, 0, 0x84, 0xc0, 0xf, 0x84, 0x8a, 0, 0, 0, 0x8d, 0x45, 0x94, 0xe8, 0xdb, 0x57, 0, 0, 0xe8, 0x2a, 0x5b, 0, 0, 0x85, 0xc0, 0x75, 0x16, 0x8d, 0x45, 0x94, 0xe8, 0x32, 0x58, 0, 0, 0x8d, 0x5d, 0x9c, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x8e, 0x59, 0, 0, 0xeb, 0x5e, 0x8d, 0x55, 0x8c, 0x8d, 0x45, 0x94, 0xe8, 0xb1, 0x57, 0, 0, 0xe8, 0x38, 0x5b, 0, 0, 0x89, 0xc3, 0x8d, 0x55, 0xe4, 0x8d, 0x45, 0x88, 0xe8, 0xef, 0x3b, 0xfc, 0xff, 0x89, 0xda, 0xe8, 0xd5, 0xe9, 0xfb, 0xff, 0x89, 0x45, 0xf0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x23, 0xe8, 0x85, 0x8a, 0x8, 0, 0x84, 0xc0, 0x75, 0x9, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x45, 0xec, 0x7d, 0x1d, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xec, 0x8d, 0x45, 0x94, 0xe8, 0xa1, 0x57, 0, 0, 0x8b, 0x5d, 0xfc, 0x83, 0xc3, 0x23, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x46, 0x5a, 0, 0, 0xe9, 0x5c, 0xff, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0x94, 0xe8, 0x8b, 0x53, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0x9c, 0xe8, 0x41, 0x53, 0, 0, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x23, 0xe8, 0x95, 0x8a, 0x8, 0, 0x84, 0xc0, 0x74, 0x9, 0xc6, 0x45, 0xf8, 0x1, 0xe9, 0x97, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xe0, 0xe8, 0x6c, 0x8d, 0xfd, 0xff, 0xe8, 0xa3, 0x84, 0xfd, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0xc8, 0x42, 0xfc, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x98, 0x30, 0xff, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0xf, 0x43, 0xfc, 0xff, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x27, 0xe8, 0x43, 0x8a, 0x8, 0, 0x84, 0xc0, 0x74, 0x27, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x27, 0xe8, 0x9f, 0x84, 0xfd, 0xff, 0x89, 0x45, 0x84, 0x8b, 0x45, 0x84, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0x84, 0xff, 0x52, 0x48, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x27, 0xe8, 0x3f, 0x85, 0xfd, 0xff, 0x8b, 0x55, 0xfc, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xc1, 0x3a, 0xff, 0xff, 0xc6, 0x45, 0xf8, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0x8, 0x68, 0xfd, 0xff, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xe0, 0xe8, 0xfc, 0x67, 0xfd, 0xff, 0x8a, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100b1e09, 0x5)   pushd(0x9c);                          /* push dword 0x9c */
    II(0x100b1e0e, 0x5)   calld(sys_check_available_stack_size, 0xb3f3f); /* call 0x10165d52 */
    II(0x100b1e13, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100b1e14, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100b1e15, 0x1)   pushd(edx);                           /* push edx */
    II(0x100b1e16, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b1e17, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b1e18, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b1e19, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b1e1b, 0x6)   sub(esp, 0x7c);                       /* sub esp, 0x7c */
    II(0x100b1e21, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100b1e24, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b1e26, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b1e29, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b1e2c, 0x5)   calld(0x1013ad11, 0x88ee0);           /* call 0x1013ad11 */
    II(0x100b1e31, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b1e33, 0x2)   jzd(0x100b1e3e, 0x9);                 /* jz 0x100b1e3e */
    II(0x100b1e35, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100b1e39, 0x5)   jmpd(0x100b2380, 0x542);              /* jmp 0x100b2380 */
l_0x100b1e3e:
    II(0x100b1e3e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b1e41, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b1e44, 0x5)   calld(0x10076574, -0x3b8d5);          /* call 0x10076574 */
    II(0x100b1e49, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100b1e4c, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100b1e4f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b1e52, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b1e55, 0x5)   calld(0x10076574, -0x3b8e6);          /* call 0x10076574 */
    II(0x100b1e5a, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100b1e5d, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100b1e60, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100b1e63, 0x5)   calld(0x10076aac, -0x3b3bc);          /* call 0x10076aac */
    II(0x100b1e68, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x100b1e6b, 0x5)   calld(my_ctor_0x101b4184, -0x3b380);  /* call 0x10076af0 */
    II(0x100b1e70, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b1e72, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b1e75, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x100b1e78, 0x5)   calld(0x100b7cfc, 0x5e7f);            /* call 0x100b7cfc */
    II(0x100b1e7d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b1e80, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b1e83, 0x5)   calld(0x10076574, -0x3b914);          /* call 0x10076574 */
    II(0x100b1e88, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b1e8a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b1e8d, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b1e90, 0x5)   calld(0x10076574, -0x3b921);          /* call 0x10076574 */
    II(0x100b1e95, 0x5)   calld(0x1007623c, -0x3bc5e);          /* call 0x1007623c */
    II(0x100b1e9a, 0x4)   mov(dx, memw_a32(ds, edx + 0x52));    /* mov dx, [edx+0x52] */
    II(0x100b1e9e, 0x4)   cmp(dx, memw_a32(ds, eax + 0x19));    /* cmp dx, [eax+0x19] */
    II(0x100b1ea2, 0x6)   jged(0x100b21b9, 0x311);              /* jge dword 0x100b21b9 */
    II(0x100b1ea8, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100b1ead, 0x5)   calld(0x10076338, -0x3bb7a);          /* call 0x10076338 */
    II(0x100b1eb2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b1eb4, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b1eb7, 0x5)   calld(0x100764b8, -0x3ba04);          /* call 0x100764b8 */
    II(0x100b1ebc, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100b1ec0, 0x5)   calld(0x1008a6d4, -0x277f1);          /* call 0x1008a6d4 */
    II(0x100b1ec5, 0x1)   cwde();                               /* cwde */
    II(0x100b1ec6, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100b1ec9, 0x3)   pushd(memd_a32(ss, ebp - 0x30));      /* push dword [ebp-0x30] */
    II(0x100b1ecc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b1ecf, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b1ed2, 0x5)   calld(0x10076574, -0x3b963);          /* call 0x10076574 */
    II(0x100b1ed7, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x41);   /* cmp word [eax+0x8], 0x41 */
    II(0x100b1edc, 0x2)   jnzd(0x100b1ee4, 0x6);                /* jnz 0x100b1ee4 */
    II(0x100b1ede, 0x4)   mov(memb_a32(ss, ebp - 0x28), 0x2);   /* mov byte [ebp-0x28], 0x2 */
    II(0x100b1ee2, 0x2)   jmpd(0x100b1ee8, 0x4);                /* jmp 0x100b1ee8 */
l_0x100b1ee4:
    II(0x100b1ee4, 0x4)   mov(memb_a32(ss, ebp - 0x28), 0x3);   /* mov byte [ebp-0x28], 0x3 */
l_0x100b1ee8:
    II(0x100b1ee8, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x2b));   /* mov ecx, [ebp-0x2b] */
    II(0x100b1eeb, 0x3)   sar(ecx, 0x18);                       /* sar ecx, 0x18 */
    II(0x100b1eee, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100b1ef3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b1ef6, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b1ef9, 0x5)   calld(0x100765d0, -0x3b92e);          /* call 0x100765d0 */
    II(0x100b1efe, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b1f00, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x100b1f03, 0x5)   calld(0x1011fec1, 0x6dfb9);           /* call 0x1011fec1 */
    II(0x100b1f08, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x100b1f0b, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x100b1f0f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b1f12, 0x3)   add(eax, 0x19);                       /* add eax, 0x19 */
    II(0x100b1f15, 0x5)   calld(0x10076b90, -0x3b38a);          /* call 0x10076b90 */
    II(0x100b1f1a, 0x1)   cwde();                               /* cwde */
    II(0x100b1f1b, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b1f1d, 0x6)   jzd(0x100b203c, 0x119);               /* jz dword 0x100b203c */
    II(0x100b1f23, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b1f26, 0x3)   add(eax, 0x19);                       /* add eax, 0x19 */
    II(0x100b1f29, 0x5)   calld(0x100b7c44, 0x5d16);            /* call 0x100b7c44 */
    II(0x100b1f2e, 0x3)   lea(ebx, ebp - 0x48);                 /* lea ebx, [ebp-0x48] */
    II(0x100b1f31, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b1f33, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100b1f35, 0x5)   calld(0x100b7b28, 0x5bee);            /* call 0x100b7b28 */
    II(0x100b1f3a, 0x2)   jmpd(0x100b1f44, 0x8);                /* jmp 0x100b1f44 */
l_0x100b1f3c:
    II(0x100b1f3c, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100b1f3f, 0x5)   calld(0x10076bf8, -0x3b34c);          /* call 0x10076bf8 */
l_0x100b1f44:
    II(0x100b1f44, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b1f46, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100b1f49, 0x5)   calld(0x1013ad71, 0x88e23);           /* call 0x1013ad71 */
    II(0x100b1f4e, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b1f50, 0x6)   jzd(0x100b2032, 0xdc);                /* jz dword 0x100b2032 */
    II(0x100b1f56, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100b1f59, 0x5)   calld(0x100b7a14, 0x5ab6);            /* call 0x100b7a14 */
    II(0x100b1f5e, 0x5)   calld(0x100b7d68, 0x5e05);            /* call 0x100b7d68 */
    II(0x100b1f63, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b1f65, 0x2)   jzd(0x100b1f7a, 0x13);                /* jz 0x100b1f7a */
    II(0x100b1f67, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100b1f6a, 0x5)   calld(0x100b7a14, 0x5aa5);            /* call 0x100b7a14 */
    II(0x100b1f6f, 0x5)   calld(0x100b7d68, 0x5df4);            /* call 0x100b7d68 */
    II(0x100b1f74, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x100b1f78, 0x2)   jnzd(0x100b1f7c, 0x2);                /* jnz 0x100b1f7c */
l_0x100b1f7a:
    II(0x100b1f7a, 0x2)   jmpd(0x100b1f8f, 0x13);               /* jmp 0x100b1f8f */
l_0x100b1f7c:
    II(0x100b1f7c, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100b1f7f, 0x5)   calld(0x100b7a14, 0x5a90);            /* call 0x100b7a14 */
    II(0x100b1f84, 0x5)   calld(0x100b7dd8, 0x5e4f);            /* call 0x100b7dd8 */
    II(0x100b1f89, 0x4)   cmp(ax, 0xffff);                      /* cmp ax, 0xffff */
    II(0x100b1f8d, 0x2)   jnzd(0x100b1fce, 0x3f);               /* jnz 0x100b1fce */
l_0x100b1f8f:
    II(0x100b1f8f, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100b1f92, 0x5)   calld(0x100b7a14, 0x5a7d);            /* call 0x100b7a14 */
    II(0x100b1f97, 0x5)   calld(0x100b7d68, 0x5dcc);            /* call 0x100b7d68 */
    II(0x100b1f9c, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b1f9e, 0x2)   jzd(0x100b1fb5, 0x15);                /* jz 0x100b1fb5 */
    II(0x100b1fa0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b1fa3, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100b1fa6, 0x5)   calld(0x100b7a14, 0x5a69);            /* call 0x100b7a14 */
    II(0x100b1fab, 0x5)   calld(0x100b7d68, 0x5db8);            /* call 0x100b7d68 */
    II(0x100b1fb0, 0x5)   calld(0x101527b8, 0xa0803);           /* call 0x101527b8 */
l_0x100b1fb5:
    II(0x100b1fb5, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100b1fb8, 0x5)   calld(0x100b7a7c, 0x5abf);            /* call 0x100b7a7c */
    II(0x100b1fbd, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100b1fc0, 0x3)   add(ebx, 0x19);                       /* add ebx, 0x19 */
    II(0x100b1fc3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b1fc5, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100b1fc7, 0x5)   calld(0x100b7be4, 0x5c18);            /* call 0x100b7be4 */
    II(0x100b1fcc, 0x2)   jmpd(0x100b202d, 0x5f);               /* jmp 0x100b202d */
l_0x100b1fce:
    II(0x100b1fce, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100b1fd1, 0x5)   calld(0x100b7a14, 0x5a3e);            /* call 0x100b7a14 */
    II(0x100b1fd6, 0x5)   calld(0x100b7d68, 0x5d8d);            /* call 0x100b7d68 */
    II(0x100b1fdb, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100b1fde, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x100b1fe1, 0x3)   lea(eax, ebp - 0x4c);                 /* lea eax, [ebp-0x4c] */
    II(0x100b1fe4, 0x5)   calld(0x10075e64, -0x3c185);          /* call 0x10075e64 */
    II(0x100b1fe9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b1feb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100b1fee, 0x5)   calld(0x10070ca1, -0x41352);          /* call 0x10070ca1 */
    II(0x100b1ff3, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100b1ff6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b1ff8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b1ffb, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x100b1ffe, 0x5)   calld(0x1013ad11, 0x88d0e);           /* call 0x1013ad11 */
    II(0x100b2003, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b2005, 0x2)   jnzd(0x100b2010, 0x9);                /* jnz 0x100b2010 */
    II(0x100b2007, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b200a, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x100b200e, 0x2)   jged(0x100b202d, 0x1d);               /* jge 0x100b202d */
l_0x100b2010:
    II(0x100b2010, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b2013, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100b2016, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100b2019, 0x5)   calld(0x100b7a48, 0x5a2a);            /* call 0x100b7a48 */
    II(0x100b201e, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100b2021, 0x3)   add(ebx, 0x23);                       /* add ebx, 0x23 */
    II(0x100b2024, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b2026, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100b2028, 0x5)   calld(0x100b7cfc, 0x5ccf);            /* call 0x100b7cfc */
l_0x100b202d:
    II(0x100b202d, 0x5)   jmpd(0x100b1f3c, -0xf6);              /* jmp 0x100b1f3c */
l_0x100b2032:
    II(0x100b2032, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b2034, 0x3)   lea(eax, ebp - 0x48);                 /* lea eax, [ebp-0x48] */
    II(0x100b2037, 0x5)   calld(0x100b7650, 0x5614);            /* call 0x100b7650 */
l_0x100b203c:
    II(0x100b203c, 0x2)   jmpd(0x100b2046, 0x8);                /* jmp 0x100b2046 */
l_0x100b203e:
    II(0x100b203e, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b2041, 0x5)   calld(0x10076bf8, -0x3b44e);          /* call 0x10076bf8 */
l_0x100b2046:
    II(0x100b2046, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b2048, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b204b, 0x5)   calld(0x1013ad71, 0x88d21);           /* call 0x1013ad71 */
    II(0x100b2050, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b2052, 0x6)   jzd(0x100b21a5, 0x14d);               /* jz dword 0x100b21a5 */
    II(0x100b2058, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b205b, 0x5)   calld(0x100763a0, -0x3bcc0);          /* call 0x100763a0 */
    II(0x100b2060, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b2062, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100b2065, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b2068, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100b206b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b206e, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100b2070, 0x2)   jnzd(0x100b2080, 0xe);                /* jnz 0x100b2080 */
    II(0x100b2072, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b2075, 0x5)   calld(0x100763a0, -0x3bcda);          /* call 0x100763a0 */
    II(0x100b207a, 0x4)   test(memb_a32(ds, eax + 0x13), 0x1);  /* test byte [eax+0x13], 0x1 */
    II(0x100b207e, 0x2)   jnzd(0x100b2082, 0x2);                /* jnz 0x100b2082 */
l_0x100b2080:
    II(0x100b2080, 0x2)   jmpd(0x100b2091, 0xf);                /* jmp 0x100b2091 */
l_0x100b2082:
    II(0x100b2082, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b2085, 0x5)   calld(0x100763a0, -0x3bcea);          /* call 0x100763a0 */
    II(0x100b208a, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x39);   /* cmp word [eax+0x8], 0x39 */
    II(0x100b208f, 0x2)   jnzd(0x100b2093, 0x2);                /* jnz 0x100b2093 */
l_0x100b2091:
    II(0x100b2091, 0x2)   jmpd(0x100b20a4, 0x11);               /* jmp 0x100b20a4 */
l_0x100b2093:
    II(0x100b2093, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b2096, 0x5)   calld(0x100763a0, -0x3bcfb);          /* call 0x100763a0 */
    II(0x100b209b, 0x5)   calld(0x101526ac, 0xa060c);           /* call 0x101526ac */
    II(0x100b20a0, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b20a2, 0x2)   jnzd(0x100b20a6, 0x2);                /* jnz 0x100b20a6 */
l_0x100b20a4:
    II(0x100b20a4, 0x2)   jmpd(0x100b20c6, 0x20);               /* jmp 0x100b20c6 */
l_0x100b20a6:
    II(0x100b20a6, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b20a9, 0x5)   calld(0x100763a0, -0x3bd0e);          /* call 0x100763a0 */
    II(0x100b20ae, 0x5)   calld(0x101526ac, 0xa05f9);           /* call 0x101526ac */
    II(0x100b20b3, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
//    II(0x100b20b6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x100b20b9, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100b20bc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x100b20bf, 0x3)   calld_abs(memd_a32(ds, edx + 0x20));  /* call dword near [edx+0x20] */
    II(0x100b20c2, 0x2)   cmp(al, 0x17);                        /* cmp al, 0x17 */
    II(0x100b20c4, 0x2)   jzd(0x100b20c8, 0x2);                 /* jz 0x100b20c8 */
l_0x100b20c6:
    II(0x100b20c6, 0x2)   jmpd(0x100b20d9, 0x11);               /* jmp 0x100b20d9 */
l_0x100b20c8:
    II(0x100b20c8, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b20cb, 0x5)   calld(0x100763d4, -0x3bcfc);          /* call 0x100763d4 */
    II(0x100b20d0, 0x5)   calld(0x100a2edb, -0xf1fa);           /* call 0x100a2edb */
    II(0x100b20d5, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b20d7, 0x2)   jnzd(0x100b20de, 0x5);                /* jnz 0x100b20de */
l_0x100b20d9:
    II(0x100b20d9, 0x5)   jmpd(0x100b21a0, 0xc2);               /* jmp 0x100b21a0 */
l_0x100b20de:
    II(0x100b20de, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b20e1, 0x5)   calld(0x100763a0, -0x3bd46);          /* call 0x100763a0 */
    II(0x100b20e6, 0x5)   calld(0x101526ac, 0xa05c1);           /* call 0x101526ac */
    II(0x100b20eb, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x100b20ee, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b20f1, 0x5)   calld(0x100763a0, -0x3bd56);          /* call 0x100763a0 */
    II(0x100b20f6, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x100b20f9, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100b20fe, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b2100, 0x2)   jzd(0x100b2114, 0x12);                /* jz 0x100b2114 */
    II(0x100b2102, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x100b2105, 0x5)   calld(0x100b7dd8, 0x5cce);            /* call 0x100b7dd8 */
    II(0x100b210a, 0x4)   cmp(ax, 0xffff);                      /* cmp ax, 0xffff */
    II(0x100b210e, 0x6)   jzd(0x100b21a0, 0x8c);                /* jz dword 0x100b21a0 */
l_0x100b2114:
    II(0x100b2114, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x100b2117, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x100b211a, 0x5)   calld(0x10075e64, -0x3c2bb);          /* call 0x10075e64 */
    II(0x100b211f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b2121, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b2124, 0x5)   calld(0x100763d4, -0x3bd55);          /* call 0x100763d4 */
    II(0x100b2129, 0x5)   calld(0x10070ca1, -0x4148d);          /* call 0x10070ca1 */
    II(0x100b212e, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100b2131, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b2133, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b2136, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x100b2139, 0x5)   calld(0x1013ad11, 0x88bd3);           /* call 0x1013ad11 */
    II(0x100b213e, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b2140, 0x2)   jnzd(0x100b214b, 0x9);                /* jnz 0x100b214b */
    II(0x100b2142, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b2145, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x100b2149, 0x2)   jged(0x100b21a0, 0x55);               /* jge 0x100b21a0 */
l_0x100b214b:
    II(0x100b214b, 0x3)   lea(ebx, ebp - 0x40);                 /* lea ebx, [ebp-0x40] */
    II(0x100b214e, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b2151, 0x5)   calld(0x100763d4, -0x3bd82);          /* call 0x100763d4 */
    II(0x100b2156, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b2158, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b215b, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b215e, 0x5)   calld(0x100765d0, -0x3bb93);          /* call 0x100765d0 */
    II(0x100b2163, 0x5)   calld(0x100b1bf2, -0x576);            /* call 0x100b1bf2 */
    II(0x100b2168, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b216a, 0x2)   jzd(0x100b21a0, 0x34);                /* jz 0x100b21a0 */
    II(0x100b216c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x54));   /* mov edx, [ebp-0x54] */
    II(0x100b216f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b2172, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x100b2175, 0x5)   calld(0x100b7cfc, 0x5b82);            /* call 0x100b7cfc */
    II(0x100b217a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b217d, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100b2180, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b2183, 0x5)   calld(0x100763a0, -0x3bde8);          /* call 0x100763a0 */
    II(0x100b2188, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x100b218c, 0x4)   mov(memw_a32(ss, ebp - 0x18), ax);    /* mov [ebp-0x18], ax */
    II(0x100b2190, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b2193, 0x5)   calld(0x100763a0, -0x3bdf8);          /* call 0x100763a0 */
    II(0x100b2198, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x100b219c, 0x4)   mov(memw_a32(ss, ebp - 0x16), ax);    /* mov [ebp-0x16], ax */
l_0x100b21a0:
    II(0x100b21a0, 0x5)   jmpd(0x100b203e, -0x167);             /* jmp 0x100b203e */
l_0x100b21a5:
    II(0x100b21a5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b21a7, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x100b21aa, 0x5)   calld(my_dtor_d1, -0x294b3);          /* call 0x10088cfc */
    II(0x100b21af, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b21b1, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b21b4, 0x5)   calld(0x10075f6c, -0x3c24d);          /* call 0x10075f6c */
l_0x100b21b9:
    II(0x100b21b9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b21bc, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b21bf, 0x5)   calld(0x10076574, -0x3bc50);          /* call 0x10076574 */
    II(0x100b21c4, 0x3)   mov(eax, memd_a32(ds, eax + 0x50));   /* mov eax, [eax+0x50] */
    II(0x100b21c7, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b21ca, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b21cc, 0x6)   jled(0x100b22cf, 0xfd);               /* jle dword 0x100b22cf */
    II(0x100b21d2, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100b21d6, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100b21d9, 0x5)   calld(0x100b7cbc, 0x5ade);            /* call 0x100b7cbc */
    II(0x100b21de, 0x3)   mov(memd_a32(ss, ebp - 0x68), eax);   /* mov [ebp-0x68], eax */
    II(0x100b21e1, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x100b21e5, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x100b21e9, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x100b21ec, 0x5)   calld(0x100b7b6c, 0x597b);            /* call 0x100b7b6c */
    II(0x100b21f1, 0x3)   mov(memd_a32(ss, ebp - 0x70), eax);   /* mov [ebp-0x70], eax */
    II(0x100b21f4, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x100b21f8, 0x3)   lea(edx, ebp - 0x64);                 /* lea edx, [ebp-0x64] */
    II(0x100b21fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b21fe, 0x5)   calld(0x100b0f0d, -0x12f6);           /* call 0x100b0f0d */
    II(0x100b2203, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100b2206, 0x5)   calld(0x100b7c44, 0x5a39);            /* call 0x100b7c44 */
    II(0x100b220b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b220d, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x100b2210, 0x5)   calld(0x100b7aac, 0x5897);            /* call 0x100b7aac */
    II(0x100b2215, 0x2)   jmpd(0x100b221f, 0x8);                /* jmp 0x100b221f */
l_0x100b2217:
    II(0x100b2217, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x100b221a, 0x5)   calld(0x10076bf8, -0x3b627);          /* call 0x10076bf8 */
l_0x100b221f:
    II(0x100b221f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b2221, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x100b2224, 0x5)   calld(0x1013ad71, 0x88b48);           /* call 0x1013ad71 */
    II(0x100b2229, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b222b, 0x6)   jzd(0x100b22bb, 0x8a);                /* jz dword 0x100b22bb */
    II(0x100b2231, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x100b2234, 0x5)   calld(0x100b7a14, 0x57db);            /* call 0x100b7a14 */
    II(0x100b2239, 0x5)   calld(0x100b7d68, 0x5b2a);            /* call 0x100b7d68 */
    II(0x100b223e, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b2240, 0x2)   jnzd(0x100b2258, 0x16);               /* jnz 0x100b2258 */
    II(0x100b2242, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x100b2245, 0x5)   calld(0x100b7a7c, 0x5832);            /* call 0x100b7a7c */
    II(0x100b224a, 0x3)   lea(ebx, ebp - 0x64);                 /* lea ebx, [ebp-0x64] */
    II(0x100b224d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b224f, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100b2251, 0x5)   calld(0x100b7be4, 0x598e);            /* call 0x100b7be4 */
    II(0x100b2256, 0x2)   jmpd(0x100b22b6, 0x5e);               /* jmp 0x100b22b6 */
l_0x100b2258:
    II(0x100b2258, 0x3)   lea(edx, ebp - 0x74);                 /* lea edx, [ebp-0x74] */
    II(0x100b225b, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x100b225e, 0x5)   calld(0x100b7a14, 0x57b1);            /* call 0x100b7a14 */
    II(0x100b2263, 0x5)   calld(0x100b7da0, 0x5b38);            /* call 0x100b7da0 */
    II(0x100b2268, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100b226a, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x100b226d, 0x3)   lea(eax, ebp - 0x78);                 /* lea eax, [ebp-0x78] */
    II(0x100b2270, 0x5)   calld(0x10075e64, -0x3c411);          /* call 0x10075e64 */
    II(0x100b2275, 0x2)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x100b2277, 0x5)   calld(0x10070c51, -0x4162b);          /* call 0x10070c51 */
    II(0x100b227c, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100b227f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b2281, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b2284, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x100b2287, 0x5)   calld(0x1013ad11, 0x88a85);           /* call 0x1013ad11 */
    II(0x100b228c, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b228e, 0x2)   jnzd(0x100b2299, 0x9);                /* jnz 0x100b2299 */
    II(0x100b2290, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b2293, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x14));    /* cmp ax, [ebp-0x14] */
    II(0x100b2297, 0x2)   jged(0x100b22b6, 0x1d);               /* jge 0x100b22b6 */
l_0x100b2299:
    II(0x100b2299, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100b229c, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100b229f, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x100b22a2, 0x5)   calld(0x100b7a48, 0x57a1);            /* call 0x100b7a48 */
    II(0x100b22a7, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100b22aa, 0x3)   add(ebx, 0x23);                       /* add ebx, 0x23 */
    II(0x100b22ad, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b22af, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100b22b1, 0x5)   calld(0x100b7cfc, 0x5a46);            /* call 0x100b7cfc */
l_0x100b22b6:
    II(0x100b22b6, 0x5)   jmpd(0x100b2217, -0xa4);              /* jmp 0x100b2217 */
l_0x100b22bb:
    II(0x100b22bb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b22bd, 0x3)   lea(eax, ebp - 0x6c);                 /* lea eax, [ebp-0x6c] */
    II(0x100b22c0, 0x5)   calld(0x100b7650, 0x538b);            /* call 0x100b7650 */
    II(0x100b22c5, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b22c7, 0x3)   lea(eax, ebp - 0x64);                 /* lea eax, [ebp-0x64] */
    II(0x100b22ca, 0x5)   calld(0x100b7610, 0x5341);            /* call 0x100b7610 */
l_0x100b22cf:
    II(0x100b22cf, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b22d1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b22d4, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x100b22d7, 0x5)   calld(0x1013ad71, 0x88a95);           /* call 0x1013ad71 */
    II(0x100b22dc, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b22de, 0x2)   jzd(0x100b22e9, 0x9);                 /* jz 0x100b22e9 */
    II(0x100b22e0, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0x1);    /* mov byte [ebp-0x8], 0x1 */
    II(0x100b22e4, 0x5)   jmpd(0x100b2380, 0x97);               /* jmp 0x100b2380 */
l_0x100b22e9:
    II(0x100b22e9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b22ec, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100b22ef, 0x5)   calld(0x1008b060, -0x27294);          /* call 0x1008b060 */
    II(0x100b22f4, 0x5)   calld(0x1008a79c, -0x27b5d);          /* call 0x1008a79c */
    II(0x100b22f9, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100b22fb, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100b22fd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b2300, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b2303, 0x5)   calld(0x100765d0, -0x3bd38);          /* call 0x100765d0 */
    II(0x100b2308, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b230a, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100b230f, 0x5)   calld(0x100a53ac, -0xcf68);           /* call 0x100a53ac */
    II(0x100b2314, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b2316, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b2319, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b231c, 0x5)   calld(0x10076630, -0x3bcf1);          /* call 0x10076630 */
    II(0x100b2321, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b2323, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b2326, 0x3)   add(eax, 0x27);                       /* add eax, 0x27 */
    II(0x100b2329, 0x5)   calld(0x1013ad71, 0x88a43);           /* call 0x1013ad71 */
    II(0x100b232e, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b2330, 0x2)   jzd(0x100b2359, 0x27);                /* jz 0x100b2359 */
    II(0x100b2332, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b2335, 0x3)   add(eax, 0x27);                       /* add eax, 0x27 */
    II(0x100b2338, 0x5)   calld(0x1008a7dc, -0x27b61);          /* call 0x1008a7dc */
    II(0x100b233d, 0x3)   mov(memd_a32(ss, ebp - 0x7c), eax);   /* mov [ebp-0x7c], eax */
//    II(0x100b2340, 0x3)   mov(eax, memd_a32(ss, ebp - 0x7c));   /* mov eax, [ebp-0x7c] */
    II(0x100b2343, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100b2346, 0x3)   mov(eax, memd_a32(ss, ebp - 0x7c));   /* mov eax, [ebp-0x7c] */
    II(0x100b2349, 0x3)   calld_abs(memd_a32(ds, edx + 0x48));  /* call dword near [edx+0x48] */
    II(0x100b234c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b234e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b2351, 0x3)   add(eax, 0x27);                       /* add eax, 0x27 */
    II(0x100b2354, 0x5)   calld(0x1008a898, -0x27ac1);          /* call 0x1008a898 */
l_0x100b2359:
    II(0x100b2359, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b235c, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100b2361, 0x5)   calld(0x100a5e27, -0xc53f);           /* call 0x100a5e27 */
    II(0x100b2366, 0x4)   mov(memb_a32(ss, ebp - 0x8), 0);      /* mov byte [ebp-0x8], 0x0 */
    II(0x100b236a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b236c, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100b236f, 0x5)   calld(0x10088b7c, -0x297f8);          /* call 0x10088b7c */
    II(0x100b2374, 0x2)   jmpd(0x100b2380, 0xa);                /* jmp 0x100b2380 */
//  II(0x100b2376, 0xa)   /* Недостижимый код. */
l_0x100b2380:
    II(0x100b2380, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x100b2383, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100b2385, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100b2386, 0x1)   popd(edi);                            /* pop edi */
    II(0x100b2387, 0x1)   popd(esi);                            /* pop esi */
    II(0x100b2388, 0x1)   popd(edx);                            /* pop edx */
    II(0x100b2389, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100b238a, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100b238b, 0x1)   retd();                               /* ret */
FUNC_END

