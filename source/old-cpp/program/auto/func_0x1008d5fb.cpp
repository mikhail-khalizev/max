FUNC_BEGIN(0x1008d5fb, 0x137894202ff1aedc, 0x20, ({0x68, 0x20, 0, 0, 0, 0xe8, 0x4d, 0x87, 0xd, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x4, 0, 0, 0, 0x89, 0x45, 0xfc, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x1f, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0x48, 0x8f, 0xfe, 0xff, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x31, 0xd2, 0x8a, 0x15, 0xc8, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x6d, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x83, 0xf8, 0x2, 0x74, 0x61, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0x19, 0x8f, 0xfe, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0xc, 0x8f, 0xfe, 0xff, 0x66, 0x8b, 0x52, 0x1a, 0x66, 0x89, 0x50, 0x41, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0xf9, 0x8e, 0xfe, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0xec, 0x8e, 0xfe, 0xff, 0x66, 0x8b, 0x52, 0x1c, 0x66, 0x89, 0x50, 0x43, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x25, 0x7, 0xbb, 0xd, 0, 0, 0, 0xba, 0x4, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x15, 0xe8, 0x24, 0x8f, 0xfe, 0xff, 0xe8, 0xa2, 0x59, 0xd, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1008d5fb, 0x5)   pushd(0x20);                          /* push dword 0x20 */
    II(0x1008d600, 0x5)   calld(sys_check_available_stack_size, 0xd874d); /* call 0x10165d52 */
    II(0x1008d605, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1008d606, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1008d607, 0x1)   pushd(edx);                           /* push edx */
    II(0x1008d608, 0x1)   pushd(esi);                           /* push esi */
    II(0x1008d609, 0x1)   pushd(edi);                           /* push edi */
    II(0x1008d60a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1008d60b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1008d60d, 0x6)   sub(esp, 0x4);                        /* sub esp, 0x4 */
    II(0x1008d613, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1008d616, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1008d618, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x1008d61d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1008d61f, 0x2)   jnzd(0x1008d640, 0x1f);               /* jnz 0x1008d640 */
    II(0x1008d621, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008d624, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x1008d627, 0x5)   calld(0x10076574, -0x170b8);          /* call 0x10076574 */
    II(0x1008d62c, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1008d62f, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1008d634, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008d636, 0x6)   mov(dl, memb_a32(ds, 0x101c37c8));    /* mov dl, [0x101c37c8] */
    II(0x1008d63c, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1008d63e, 0x2)   jnzd(0x1008d642, 0x2);                /* jnz 0x1008d642 */
l_0x1008d640:
    II(0x1008d640, 0x2)   jmpd(0x1008d644, 0x2);                /* jmp 0x1008d644 */
l_0x1008d642:
    II(0x1008d642, 0x2)   jmpd(0x1008d6b1, 0x6d);               /* jmp 0x1008d6b1 */
l_0x1008d644:
    II(0x1008d644, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1008d646, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x1008d64b, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x1008d64e, 0x2)   jzd(0x1008d6b1, 0x61);                /* jz 0x1008d6b1 */
    II(0x1008d650, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008d653, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x1008d656, 0x5)   calld(0x10076574, -0x170e7);          /* call 0x10076574 */
    II(0x1008d65b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008d65d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008d660, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x1008d663, 0x5)   calld(0x10076574, -0x170f4);          /* call 0x10076574 */
    II(0x1008d668, 0x4)   mov(dx, memw_a32(ds, edx + 0x1a));    /* mov dx, [edx+0x1a] */
    II(0x1008d66c, 0x4)   mov(memw_a32(ds, eax + 0x41), dx);    /* mov [eax+0x41], dx */
    II(0x1008d670, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008d673, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x1008d676, 0x5)   calld(0x10076574, -0x17107);          /* call 0x10076574 */
    II(0x1008d67b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008d67d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008d680, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x1008d683, 0x5)   calld(0x10076574, -0x17114);          /* call 0x10076574 */
    II(0x1008d688, 0x4)   mov(dx, memw_a32(ds, edx + 0x1c));    /* mov dx, [edx+0x1c] */
    II(0x1008d68c, 0x4)   mov(memw_a32(ds, eax + 0x43), dx);    /* mov [eax+0x43], dx */
    II(0x1008d690, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008d693, 0x4)   mov(memb_a32(ds, eax + 0x25), 0x7);   /* mov byte [eax+0x25], 0x7 */
    II(0x1008d697, 0x5)   mov(ebx, 0xd);                        /* mov ebx, 0xd */
    II(0x1008d69c, 0x5)   mov(edx, 0x4);                        /* mov edx, 0x4 */
    II(0x1008d6a1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008d6a4, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x1008d6a7, 0x5)   calld(0x100765d0, -0x170dc);          /* call 0x100765d0 */
    II(0x1008d6ac, 0x5)   calld(0x10163053, 0xd59a2);           /* call 0x10163053 */
l_0x1008d6b1:
    II(0x1008d6b1, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1008d6b3, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1008d6b4, 0x1)   popd(edi);                            /* pop edi */
    II(0x1008d6b5, 0x1)   popd(esi);                            /* pop esi */
    II(0x1008d6b6, 0x1)   popd(edx);                            /* pop edx */
    II(0x1008d6b7, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1008d6b8, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1008d6b9, 0x1)   retd();                               /* ret */
FUNC_END

