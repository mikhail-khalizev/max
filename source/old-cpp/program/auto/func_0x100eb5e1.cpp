FUNC_BEGIN(0x100eb5e1, 0xadd6840d34968b68, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x67, 0xa7, 0x7, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xf8, 0x88, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x31, 0xc1, 0xf8, 0x10, 0xe8, 0x40, 0xec, 0x7, 0, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x1b, 0xe8, 0x52, 0xc9, 0xfe, 0xff, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x1a, 0, 0x74, 0x9, 0x8b, 0x45, 0xf8, 0x80, 0x78, 0x32, 0, 0x75, 0x2, 0xeb, 0x9, 0xc7, 0x45, 0xf4, 0xff, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x2e, 0xc1, 0xf8, 0x10, 0x89, 0x45, 0xf4, 0xff, 0x75, 0xf4, 0x8b, 0x45, 0xf8, 0x8b, 0x48, 0xe, 0xc1, 0xf9, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x8, 0x8b, 0x55, 0xf8, 0x2b, 0x2, 0x89, 0xc3, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x23, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x16, 0xff, 0x15, 0xec, 0xdd, 0x1b, 0x10, 0x80, 0x7d, 0xfc, 0, 0x74, 0xe, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x12, 0xe8, 0x26, 0xbe, 0x7, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100eb5e1, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x100eb5e6, 0x5)   calld(sys_check_available_stack_size, 0x7a767); /* call 0x10165d52 */
    II(0x100eb5eb, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100eb5ec, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100eb5ed, 0x1)   pushd(esi);                           /* push esi */
    II(0x100eb5ee, 0x1)   pushd(edi);                           /* push edi */
    II(0x100eb5ef, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100eb5f0, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100eb5f2, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x100eb5f8, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100eb5fb, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x100eb5fe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eb601, 0x3)   mov(eax, memd_a32(ds, eax + 0x31));   /* mov eax, [eax+0x31] */
    II(0x100eb604, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100eb607, 0x5)   calld(/* sys */ 0x1016a24c, 0x7ec40); /* call 0x1016a24c */
    II(0x100eb60c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100eb60f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eb612, 0x3)   mov(eax, memd_a32(ds, eax + 0x1b));   /* mov eax, [eax+0x1b] */
    II(0x100eb615, 0x5)   calld(0x100d7f6c, -0x136ae);          /* call 0x100d7f6c */
    II(0x100eb61a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eb61d, 0x4)   cmp(memb_a32(ds, eax + 0x1a), 0);     /* cmp byte [eax+0x1a], 0x0 */
    II(0x100eb621, 0x2)   jzd(0x100eb62c, 0x9);                 /* jz 0x100eb62c */
    II(0x100eb623, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eb626, 0x4)   cmp(memb_a32(ds, eax + 0x32), 0);     /* cmp byte [eax+0x32], 0x0 */
    II(0x100eb62a, 0x2)   jnzd(0x100eb62e, 0x2);                /* jnz 0x100eb62e */
l_0x100eb62c:
    II(0x100eb62c, 0x2)   jmpd(0x100eb637, 0x9);                /* jmp 0x100eb637 */
l_0x100eb62e:
    II(0x100eb62e, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0xff);   /* mov dword [ebp-0xc], 0xff */
    II(0x100eb635, 0x2)   jmpd(0x100eb643, 0xc);                /* jmp 0x100eb643 */
l_0x100eb637:
    II(0x100eb637, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eb63a, 0x3)   mov(eax, memd_a32(ds, eax + 0x2e));   /* mov eax, [eax+0x2e] */
    II(0x100eb63d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100eb640, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
l_0x100eb643:
    II(0x100eb643, 0x3)   pushd(memd_a32(ss, ebp - 0xc));       /* push dword [ebp-0xc] */
    II(0x100eb646, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eb649, 0x3)   mov(ecx, memd_a32(ds, eax + 0xe));    /* mov ecx, [eax+0xe] */
    II(0x100eb64c, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100eb64f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eb652, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x100eb655, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100eb658, 0x2)   sub(eax, memd_a32(ds, edx));          /* sub eax, [edx] */
    II(0x100eb65a, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100eb65c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eb65f, 0x3)   mov(edx, memd_a32(ds, eax + 0x23));   /* mov edx, [eax+0x23] */
//    II(0x100eb662, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eb665, 0x3)   mov(eax, memd_a32(ds, eax + 0x16));   /* mov eax, [eax+0x16] */
    II(0x100eb668, 0x6)   calld_abs(memd_a32(ds, 0x101bddec));  /* call dword near [0x101bddec] */
    II(0x100eb66e, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x100eb672, 0x2)   jzd(0x100eb682, 0xe);                 /* jz 0x100eb682 */
    II(0x100eb674, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100eb677, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100eb67a, 0x3)   mov(eax, memd_a32(ds, eax + 0x12));   /* mov eax, [eax+0x12] */
    II(0x100eb67d, 0x5)   calld(sys_display_draw_1, 0x7be26);   /* call 0x101674a8 */
l_0x100eb682:
    II(0x100eb682, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100eb684, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100eb685, 0x1)   popd(edi);                            /* pop edi */
    II(0x100eb686, 0x1)   popd(esi);                            /* pop esi */
    II(0x100eb687, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100eb688, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100eb689, 0x1)   retd();                               /* ret */
FUNC_END

