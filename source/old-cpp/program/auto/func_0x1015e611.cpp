FUNC_BEGIN(0x1015e611, 0x1eb128fb58a1b063, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0x37, 0x77, 0, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0x64, 0x30, 0xfe, 0xff, 0x89, 0x45, 0xec, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xf0, 0xe8, 0xad, 0x80, 0xf1, 0xff, 0x89, 0x45, 0xf4, 0x80, 0x65, 0xf8, 0xfe, 0x8b, 0x45, 0xfc, 0xe8, 0xbc, 0x5a, 0xff, 0xff, 0x84, 0xc0, 0x75, 0xf, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0xcc, 0x78, 0xf1, 0xff, 0xe9, 0x7f, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0xaf, 0x7a, 0xf1, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0xb9, 0x7f, 0xf1, 0xff, 0x8d, 0x45, 0xf0, 0xe8, 0xf5, 0x7e, 0xf1, 0xff, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0xe, 0x8d, 0x45, 0xf0, 0xe8, 0xe1, 0x7e, 0xf1, 0xff, 0x80, 0x78, 0x3d, 0x3, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf0, 0xe8, 0xd1, 0x7e, 0xf1, 0xff, 0x80, 0x78, 0x3d, 0x9, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf0, 0xe8, 0xc1, 0x7e, 0xf1, 0xff, 0x80, 0x78, 0x3e, 0xe, 0x75, 0x5, 0xe9, 0xf5, 0, 0, 0, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xcd, 0x86, 0xf1, 0xff, 0x84, 0xc0, 0x74, 0x17, 0xb9, 0x1, 0, 0, 0, 0xbb, 0xf, 0, 0, 0, 0x8b, 0x55, 0xfc, 0xb8, 0x78, 0x72, 0x1c, 0x10, 0xe8, 0xda, 0xee, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x84, 0x7e, 0xf1, 0xff, 0x83, 0xc0, 0x65, 0xe8, 0x3c, 0x83, 0xf1, 0xff, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xf0, 0xe8, 0x71, 0x7e, 0xf1, 0xff, 0xe8, 0x90, 0xc2, 0xf2, 0xff, 0x8d, 0x45, 0xf0, 0xe8, 0xc0, 0x7e, 0xf1, 0xff, 0x89, 0xc2, 0xb8, 0xb8, 0x39, 0x1c, 0x10, 0xe8, 0x36, 0x50, 0xfa, 0xff, 0x8d, 0x45, 0xf0, 0xe8, 0x50, 0x7e, 0xf1, 0xff, 0x80, 0x78, 0x3d, 0x1a, 0x74, 0x18, 0x8d, 0x45, 0xf0, 0xe8, 0x42, 0x7e, 0xf1, 0xff, 0xc6, 0x40, 0x3d, 0, 0x8d, 0x45, 0xf0, 0xe8, 0x36, 0x7e, 0xf1, 0xff, 0xc6, 0x40, 0x3e, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x84, 0x7e, 0xf1, 0xff, 0xe8, 0xe7, 0x30, 0xf1, 0xff, 0xbb, 0x4, 0, 0, 0, 0xba, 0x10, 0, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0x6d, 0x7e, 0xf1, 0xff, 0xe8, 0x2e, 0x48, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0x4, 0x7e, 0xf1, 0xff, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x75, 0x7, 0xc6, 0x5, 0x1b, 0x39, 0x1c, 0x10, 0x1, 0x8b, 0x45, 0xfc, 0x66, 0xff, 0x40, 0x52, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x52, 0x8b, 0x45, 0xec, 0x66, 0x3b, 0x50, 0x19, 0x75, 0x7, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x57, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x5e, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x3e, 0x10, 0xba, 0xbc, 0x37, 0x1c, 0x10, 0x8b, 0x45, 0xfc, 0xe8, 0xca, 0x85, 0xf1, 0xff, 0x84, 0xc0, 0x74, 0x8, 0x8b, 0x45, 0xfc, 0xe8, 0x73, 0x21, 0xfa, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x48, 0x77, 0xf1, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1015e611, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x1015e616, 0x5)   calld(sys_check_available_stack_size, 0x7737); /* call 0x10165d52 */
    II(0x1015e61b, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1015e61c, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1015e61d, 0x1)   pushd(edx);                           /* push edx */
    II(0x1015e61e, 0x1)   pushd(esi);                           /* push esi */
    II(0x1015e61f, 0x1)   pushd(edi);                           /* push edi */
    II(0x1015e620, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1015e621, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1015e623, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x1015e629, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1015e62c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e62f, 0x5)   calld(0x10141698, -0x1cf9c);          /* call 0x10141698 */
    II(0x1015e634, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1015e637, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x1015e63b, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015e63e, 0x5)   calld(my_ctor_0x101b38f8, -0xe7f53);  /* call 0x100766f0 */
    II(0x1015e643, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1015e646, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x1015e64a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e64d, 0x5)   calld(0x1015410e, -0xa544);           /* call 0x1015410e */
    II(0x1015e652, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015e654, 0x2)   jnzd(0x1015e665, 0xf);                /* jnz 0x1015e665 */
    II(0x1015e656, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015e658, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015e65b, 0x5)   calld(0x10075f2c, -0xe8734);          /* call 0x10075f2c */
    II(0x1015e660, 0x5)   jmpd(0x1015e7e4, 0x17f);              /* jmp 0x1015e7e4 */
l_0x1015e665:
    II(0x1015e665, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e668, 0x5)   calld(0x1007611c, -0xe8551);          /* call 0x1007611c */
    II(0x1015e66d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015e66f, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015e672, 0x5)   calld(0x10076630, -0xe8047);          /* call 0x10076630 */
    II(0x1015e677, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015e67a, 0x5)   calld(0x10076574, -0xe810b);          /* call 0x10076574 */
    II(0x1015e67f, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x1015e682, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015e687, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1015e689, 0x2)   jzd(0x1015e699, 0xe);                 /* jz 0x1015e699 */
    II(0x1015e68b, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015e68e, 0x5)   calld(0x10076574, -0xe811f);          /* call 0x10076574 */
    II(0x1015e693, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x3);   /* cmp byte [eax+0x3d], 0x3 */
    II(0x1015e697, 0x2)   jnzd(0x1015e69b, 0x2);                /* jnz 0x1015e69b */
l_0x1015e699:
    II(0x1015e699, 0x2)   jmpd(0x1015e6a9, 0xe);                /* jmp 0x1015e6a9 */
l_0x1015e69b:
    II(0x1015e69b, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015e69e, 0x5)   calld(0x10076574, -0xe812f);          /* call 0x10076574 */
    II(0x1015e6a3, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x9);   /* cmp byte [eax+0x3d], 0x9 */
    II(0x1015e6a7, 0x2)   jnzd(0x1015e6ab, 0x2);                /* jnz 0x1015e6ab */
l_0x1015e6a9:
    II(0x1015e6a9, 0x2)   jmpd(0x1015e6b9, 0xe);                /* jmp 0x1015e6b9 */
l_0x1015e6ab:
    II(0x1015e6ab, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015e6ae, 0x5)   calld(0x10076574, -0xe813f);          /* call 0x10076574 */
    II(0x1015e6b3, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0xe);   /* cmp byte [eax+0x3e], 0xe */
    II(0x1015e6b7, 0x2)   jnzd(0x1015e6be, 0x5);                /* jnz 0x1015e6be */
l_0x1015e6b9:
    II(0x1015e6b9, 0x5)   jmpd(0x1015e7b3, 0xf5);               /* jmp 0x1015e7b3 */
l_0x1015e6be:
    II(0x1015e6be, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x1015e6c3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e6c6, 0x5)   calld(0x10076d98, -0xe7933);          /* call 0x10076d98 */
    II(0x1015e6cb, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015e6cd, 0x2)   jzd(0x1015e6e6, 0x17);                /* jz 0x1015e6e6 */
    II(0x1015e6cf, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1015e6d4, 0x5)   mov(ebx, 0xf);                        /* mov ebx, 0xf */
    II(0x1015e6d9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1015e6dc, 0x5)   mov(eax, 0x101c7278);                 /* mov eax, 0x101c7278 */
    II(0x1015e6e1, 0x5)   calld(0x1013d5c0, -0x21126);          /* call 0x1013d5c0 */
l_0x1015e6e6:
    II(0x1015e6e6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015e6e8, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015e6eb, 0x5)   calld(0x10076574, -0xe817c);          /* call 0x10076574 */
    II(0x1015e6f0, 0x3)   add(eax, 0x65);                       /* add eax, 0x65 */
    II(0x1015e6f3, 0x5)   calld(0x10076a34, -0xe7cc4);          /* call 0x10076a34 */
    II(0x1015e6f8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1015e6fb, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015e6fe, 0x5)   calld(0x10076574, -0xe818f);          /* call 0x10076574 */
    II(0x1015e703, 0x5)   calld(0x1008a998, -0xd3d70);          /* call 0x1008a998 */
    II(0x1015e708, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015e70b, 0x5)   calld(0x100765d0, -0xe8140);          /* call 0x100765d0 */
    II(0x1015e710, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1015e712, 0x5)   mov(eax, 0x101c39b8);                 /* mov eax, 0x101c39b8 */
    II(0x1015e717, 0x5)   calld(0x10103752, -0x5afca);          /* call 0x10103752 */
    II(0x1015e71c, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015e71f, 0x5)   calld(0x10076574, -0xe81b0);          /* call 0x10076574 */
    II(0x1015e724, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1a);  /* cmp byte [eax+0x3d], 0x1a */
    II(0x1015e728, 0x2)   jzd(0x1015e742, 0x18);                /* jz 0x1015e742 */
    II(0x1015e72a, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015e72d, 0x5)   calld(0x10076574, -0xe81be);          /* call 0x10076574 */
    II(0x1015e732, 0x4)   mov(memb_a32(ds, eax + 0x3d), 0);     /* mov byte [eax+0x3d], 0x0 */
    II(0x1015e736, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015e739, 0x5)   calld(0x10076574, -0xe81ca);          /* call 0x10076574 */
    II(0x1015e73e, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x1);   /* mov byte [eax+0x3e], 0x1 */
l_0x1015e742:
    II(0x1015e742, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015e744, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015e747, 0x5)   calld(0x100765d0, -0xe817c);          /* call 0x100765d0 */
    II(0x1015e74c, 0x5)   calld(0x10071838, -0xecf19);          /* call 0x10071838 */
    II(0x1015e751, 0x5)   mov(ebx, 0x4);                        /* mov ebx, 0x4 */
    II(0x1015e756, 0x5)   mov(edx, 0x10);                       /* mov edx, 0x10 */
    II(0x1015e75b, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015e75e, 0x5)   calld(0x100765d0, -0xe8193);          /* call 0x100765d0 */
    II(0x1015e763, 0x5)   calld(0x10162f96, 0x482e);            /* call 0x10162f96 */
    II(0x1015e768, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015e76b, 0x5)   calld(0x10076574, -0xe81fc);          /* call 0x10076574 */
    II(0x1015e770, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1015e773, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015e778, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1015e77e, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x1015e784, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1015e789, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x1015e78c, 0x2)   jnzd(0x1015e795, 0x7);                /* jnz 0x1015e795 */
    II(0x1015e78e, 0x7)   mov(memb_a32(ds, 0x101c391b), 0x1);   /* mov byte [0x101c391b], 0x1 */
l_0x1015e795:
    II(0x1015e795, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e798, 0x4)   inc(memw_a32(ds, eax + 0x52));        /* inc word [eax+0x52] */
    II(0x1015e79c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e79f, 0x4)   mov(dx, memw_a32(ds, eax + 0x52));    /* mov dx, [eax+0x52] */
    II(0x1015e7a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1015e7a6, 0x4)   cmp(dx, memw_a32(ds, eax + 0x19));    /* cmp dx, [eax+0x19] */
    II(0x1015e7aa, 0x2)   jnzd(0x1015e7b3, 0x7);                /* jnz 0x1015e7b3 */
    II(0x1015e7ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e7af, 0x4)   mov(memb_a32(ds, eax + 0x57), 0);     /* mov byte [eax+0x57], 0x0 */
l_0x1015e7b3:
    II(0x1015e7b3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e7b6, 0x4)   mov(memb_a32(ds, eax + 0x5e), 0);     /* mov byte [eax+0x5e], 0x0 */
    II(0x1015e7ba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e7bd, 0x4)   mov(memb_a32(ds, eax + 0x3e), 0x10);  /* mov byte [eax+0x3e], 0x10 */
    II(0x1015e7c1, 0x5)   mov(edx, 0x101c37bc);                 /* mov edx, 0x101c37bc */
    II(0x1015e7c6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e7c9, 0x5)   calld(0x10076d98, -0xe7a36);          /* call 0x10076d98 */
    II(0x1015e7ce, 0x2)   test(al, al);                         /* test al, al */
    II(0x1015e7d0, 0x2)   jzd(0x1015e7da, 0x8);                 /* jz 0x1015e7da */
    II(0x1015e7d2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015e7d5, 0x5)   calld(0x1010094d, -0x5de8d);          /* call 0x1010094d */
l_0x1015e7da:
    II(0x1015e7da, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1015e7dc, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015e7df, 0x5)   calld(0x10075f2c, -0xe88b8);          /* call 0x10075f2c */
l_0x1015e7e4:
    II(0x1015e7e4, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1015e7e6, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1015e7e7, 0x1)   popd(edi);                            /* pop edi */
    II(0x1015e7e8, 0x1)   popd(esi);                            /* pop esi */
    II(0x1015e7e9, 0x1)   popd(edx);                            /* pop edx */
    II(0x1015e7ea, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1015e7eb, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1015e7ec, 0x1)   retd();                               /* ret */
FUNC_END

