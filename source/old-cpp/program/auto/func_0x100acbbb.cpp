FUNC_BEGIN(0x100acbbb, 0xc479ca76403af8c6, 0x20, ({0x68, 0x64, 0, 0, 0, 0xe8, 0x8d, 0x91, 0xb, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x48, 0, 0, 0, 0x89, 0x45, 0xf8, 0x88, 0x55, 0xfc, 0x8d, 0x45, 0xf4, 0xe8, 0x10, 0x9f, 0xfc, 0xff, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x89, 0x99, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x22, 0x66, 0x2b, 0x42, 0x1a, 0x66, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x6d, 0x99, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x24, 0x66, 0x2b, 0x42, 0x1c, 0x66, 0x89, 0x45, 0xf6, 0xf, 0xbf, 0x55, 0xf6, 0xf, 0xbf, 0x45, 0xf6, 0xf, 0xaf, 0xd0, 0x89, 0xd3, 0xf, 0xbf, 0x55, 0xf4, 0xf, 0xbf, 0x45, 0xf4, 0xf, 0xaf, 0xc2, 0x1, 0xc3, 0x8b, 0x45, 0xf8, 0x8b, 0x40, 0x15, 0xc1, 0xf8, 0x10, 0x39, 0xc3, 0x7f, 0x12, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0xe1, 0x3, 0, 0, 0xe9, 0x79, 0x1, 0, 0, 0x80, 0x4d, 0xf0, 0x1, 0x8d, 0x45, 0xec, 0xe8, 0x47, 0xe4, 0xfd, 0xff, 0x89, 0x45, 0xe8, 0x80, 0x65, 0xf0, 0xfe, 0xb8, 0x20, 0, 0, 0, 0xe8, 0x92, 0x91, 0xb, 0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xe0, 0x83, 0x7d, 0xe0, 0, 0x74, 0x35, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x22, 0x8d, 0x45, 0xdc, 0xe8, 0xd9, 0x91, 0xfc, 0xff, 0x89, 0xc1, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x33, 0x99, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xe4, 0xe8, 0x44, 0xf2, 0xff, 0xff, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xd4, 0xeb, 0x6, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xd4, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xf8, 0xc6, 0x40, 0x47, 0, 0xf, 0xbf, 0x55, 0xf6, 0xf, 0xbf, 0x45, 0xf4, 0xe8, 0x93, 0x92, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0x2b, 0xc2, 0xd1, 0xf8, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x15, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xd0, 0xe8, 0x6b, 0xb, 0x7, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x13, 0xe8, 0x77, 0x98, 0xfc, 0xff, 0xe8, 0x3a, 0x95, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xcc, 0x66, 0x3b, 0x42, 0x10, 0x7c, 0xa, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x26, 0xff, 0x74, 0x13, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x16, 0xc1, 0xfa, 0x18, 0x8b, 0x45, 0xd0, 0xe8, 0xd9, 0xa, 0x7, 0, 0xeb, 0xd, 0xba, 0x3, 0, 0, 0, 0x8b, 0x45, 0xd0, 0xe8, 0xca, 0xa, 0x7, 0, 0x80, 0x7d, 0xfc, 0, 0x74, 0x21, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x26, 0xff, 0x75, 0x6, 0xc6, 0x45, 0xc8, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xc8, 0, 0x31, 0xd2, 0x8a, 0x55, 0xc8, 0x8b, 0x45, 0xd0, 0xe8, 0x5, 0xf4, 0xff, 0xff, 0xb8, 0x1f, 0, 0, 0, 0xe8, 0x98, 0x90, 0xb, 0, 0x89, 0x45, 0xc4, 0x8b, 0x45, 0xc4, 0x89, 0x45, 0xc0, 0x83, 0x7d, 0xc0, 0, 0x74, 0x24, 0xb8, 0x95, 0xd9, 0xa, 0x10, 0x50, 0xb9, 0xcc, 0xd2, 0xa, 0x10, 0x8b, 0x5d, 0xd0, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xc4, 0xe8, 0xe2, 0xec, 0xff, 0xff, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xbc, 0x89, 0x45, 0xb8, 0xeb, 0x6, 0x8b, 0x45, 0xc0, 0x89, 0x45, 0xb8, 0x8b, 0x55, 0xb8, 0x8d, 0x45, 0xec, 0xe8, 0x38, 0xe2, 0xfd, 0xff, 0x8d, 0x45, 0xec, 0xe8, 0xd0, 0xe1, 0xfd, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x90, 0x7f, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xb2, 0xbd, 0xfd, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100acbbb, 0x5)   pushd(0x64);                          /* push dword 0x64 */
    II(0x100acbc0, 0x5)   calld(sys_check_available_stack_size, 0xb918d); /* call 0x10165d52 */
    II(0x100acbc5, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100acbc6, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100acbc7, 0x1)   pushd(esi);                           /* push esi */
    II(0x100acbc8, 0x1)   pushd(edi);                           /* push edi */
    II(0x100acbc9, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100acbca, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100acbcc, 0x6)   sub(esp, 0x48);                       /* sub esp, 0x48 */
    II(0x100acbd2, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100acbd5, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x100acbd8, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x100acbdb, 0x5)   calld(my_ctor_0x101b4184, -0x360f0);  /* call 0x10076af0 */
    II(0x100acbe0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100acbe3, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100acbe6, 0x5)   calld(0x10076574, -0x36677);          /* call 0x10076574 */
    II(0x100acbeb, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100acbed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100acbf0, 0x4)   mov(ax, memw_a32(ds, eax + 0x22));    /* mov ax, [eax+0x22] */
    II(0x100acbf4, 0x4)   sub(ax, memw_a32(ds, edx + 0x1a));    /* sub ax, [edx+0x1a] */
    II(0x100acbf8, 0x4)   mov(memw_a32(ss, ebp - 0xc), ax);     /* mov [ebp-0xc], ax */
    II(0x100acbfc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100acbff, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100acc02, 0x5)   calld(0x10076574, -0x36693);          /* call 0x10076574 */
    II(0x100acc07, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100acc09, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100acc0c, 0x4)   mov(ax, memw_a32(ds, eax + 0x24));    /* mov ax, [eax+0x24] */
    II(0x100acc10, 0x4)   sub(ax, memw_a32(ds, edx + 0x1c));    /* sub ax, [edx+0x1c] */
    II(0x100acc14, 0x4)   mov(memw_a32(ss, ebp - 0xa), ax);     /* mov [ebp-0xa], ax */
    II(0x100acc18, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xa));  /* movsx edx, word [ebp-0xa] */
    II(0x100acc1c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xa));  /* movsx eax, word [ebp-0xa] */
    II(0x100acc20, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100acc23, 0x2)   mov(ebx, edx);                        /* mov ebx, edx */
    II(0x100acc25, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100acc29, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100acc2d, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100acc30, 0x2)   add(ebx, eax);                        /* add ebx, eax */
    II(0x100acc32, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100acc35, 0x3)   mov(eax, memd_a32(ds, eax + 0x15));   /* mov eax, [eax+0x15] */
    II(0x100acc38, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100acc3b, 0x2)   cmp(ebx, eax);                        /* cmp ebx, eax */
    II(0x100acc3d, 0x2)   jgd(0x100acc51, 0x12);                /* jg 0x100acc51 */
    II(0x100acc3f, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100acc44, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100acc47, 0x5)   calld(0x100ad02d, 0x3e1);             /* call 0x100ad02d */
    II(0x100acc4c, 0x5)   jmpd(0x100acdca, 0x179);              /* jmp 0x100acdca */
l_0x100acc51:
    II(0x100acc51, 0x4)   or_(memb_a32(ss, ebp - 0x10), 0x1);   /* or byte [ebp-0x10], 0x1 */
    II(0x100acc55, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100acc58, 0x5)   calld(my_ctor_0x101b3b58, -0x21bb9);  /* call 0x1008b0a4 */
    II(0x100acc5d, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x100acc60, 0x4)   and_(memb_a32(ss, ebp - 0x10), -0x2 /* 0xfe */); /* and byte [ebp-0x10], 0xfe */
    II(0x100acc64, 0x5)   mov(eax, 0x20);                       /* mov eax, 0x20 */
    II(0x100acc69, 0x5)   calld(sys_new, 0xb9192);              /* call 0x10165e00 */
    II(0x100acc6e, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x100acc71, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100acc74, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x100acc77, 0x4)   cmp(memd_a32(ss, ebp - 0x20), 0);     /* cmp dword [ebp-0x20], 0x0 */
    II(0x100acc7b, 0x2)   jzd(0x100accb2, 0x35);                /* jz 0x100accb2 */
    II(0x100acc7d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100acc80, 0x3)   add(edx, 0x22);                       /* add edx, 0x22 */
    II(0x100acc83, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100acc86, 0x5)   calld(0x10075e64, -0x36e27);          /* call 0x10075e64 */
    II(0x100acc8b, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100acc8d, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100acc92, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100acc95, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100acc98, 0x5)   calld(0x100765d0, -0x366cd);          /* call 0x100765d0 */
    II(0x100acc9d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100acc9f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100acca2, 0x5)   calld(0x100abeeb, -0xdbc);            /* call 0x100abeeb */
    II(0x100acca7, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
//    II(0x100accaa, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100accad, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x100accb0, 0x2)   jmpd(0x100accb8, 0x6);                /* jmp 0x100accb8 */
l_0x100accb2:
    II(0x100accb2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100accb5, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
l_0x100accb8:
    II(0x100accb8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100accbb, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100accbe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100accc1, 0x4)   mov(memb_a32(ds, eax + 0x47), 0);     /* mov byte [eax+0x47], 0x0 */
    II(0x100accc5, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xa));  /* movsx edx, word [ebp-0xa] */
    II(0x100accc9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x100acccd, 0x5)   calld(0x100a5f65, -0x6d6d);           /* call 0x100a5f65 */
    II(0x100accd2, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100accd5, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100accd7, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100accda, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x100accdc, 0x2)   sar(eax, 0x1);                        /* sar eax, 1 */
    II(0x100accde, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100acce1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100acce4, 0x3)   mov(edx, memd_a32(ds, eax + 0x15));   /* mov edx, [eax+0x15] */
    II(0x100acce7, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100accea, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100acced, 0x5)   calld(0x1011d85d, 0x70b6b);           /* call 0x1011d85d */
    II(0x100accf2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100accf5, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100accf8, 0x5)   calld(0x10076574, -0x36789);          /* call 0x10076574 */
    II(0x100accfd, 0x5)   calld(0x1007623c, -0x36ac6);          /* call 0x1007623c */
    II(0x100acd02, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100acd04, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100acd07, 0x4)   cmp(ax, memw_a32(ds, edx + 0x10));    /* cmp ax, [edx+0x10] */
    II(0x100acd0b, 0x2)   jld(0x100acd17, 0xa);                 /* jl 0x100acd17 */
    II(0x100acd0d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100acd10, 0x5)   cmp(memw_a32(ds, eax + 0x26), -0x1 /* 0xff */); /* cmp word [eax+0x26], 0xff */
    II(0x100acd15, 0x2)   jzd(0x100acd2a, 0x13);                /* jz 0x100acd2a */
l_0x100acd17:
    II(0x100acd17, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100acd1a, 0x3)   mov(edx, memd_a32(ds, eax + 0x16));   /* mov edx, [eax+0x16] */
    II(0x100acd1d, 0x3)   sar(edx, 0x18);                       /* sar edx, 0x18 */
    II(0x100acd20, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100acd23, 0x5)   calld(0x1011d801, 0x70ad9);           /* call 0x1011d801 */
    II(0x100acd28, 0x2)   jmpd(0x100acd37, 0xd);                /* jmp 0x100acd37 */
l_0x100acd2a:
    II(0x100acd2a, 0x5)   mov(edx, 0x3);                        /* mov edx, 0x3 */
    II(0x100acd2f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100acd32, 0x5)   calld(0x1011d801, 0x70aca);           /* call 0x1011d801 */
l_0x100acd37:
    II(0x100acd37, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x100acd3b, 0x2)   jzd(0x100acd5e, 0x21);                /* jz 0x100acd5e */
    II(0x100acd3d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100acd40, 0x5)   cmp(memw_a32(ds, eax + 0x26), -0x1 /* 0xff */); /* cmp word [eax+0x26], 0xff */
    II(0x100acd45, 0x2)   jnzd(0x100acd4d, 0x6);                /* jnz 0x100acd4d */
    II(0x100acd47, 0x4)   mov(memb_a32(ss, ebp - 0x38), 0x1);   /* mov byte [ebp-0x38], 0x1 */
    II(0x100acd4b, 0x2)   jmpd(0x100acd51, 0x4);                /* jmp 0x100acd51 */
l_0x100acd4d:
    II(0x100acd4d, 0x4)   mov(memb_a32(ss, ebp - 0x38), 0);     /* mov byte [ebp-0x38], 0x0 */
l_0x100acd51:
    II(0x100acd51, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100acd53, 0x3)   mov(dl, memb_a32(ss, ebp - 0x38));    /* mov dl, [ebp-0x38] */
    II(0x100acd56, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100acd59, 0x5)   calld(0x100ac163, -0xbfb);            /* call 0x100ac163 */
l_0x100acd5e:
    II(0x100acd5e, 0x5)   mov(eax, 0x1f);                       /* mov eax, 0x1f */
    II(0x100acd63, 0x5)   calld(sys_new, 0xb9098);              /* call 0x10165e00 */
    II(0x100acd68, 0x3)   mov(memd_a32(ss, ebp - 0x3c), eax);   /* mov [ebp-0x3c], eax */
//    II(0x100acd6b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x100acd6e, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x100acd71, 0x4)   cmp(memd_a32(ss, ebp - 0x40), 0);     /* cmp dword [ebp-0x40], 0x0 */
    II(0x100acd75, 0x2)   jzd(0x100acd9b, 0x24);                /* jz 0x100acd9b */
    II(0x100acd77, 0x5)   mov(eax, 0x100ad995);                 /* mov eax, 0x100ad995 */
    II(0x100acd7c, 0x1)   pushd(eax);                           /* push eax */
    II(0x100acd7d, 0x5)   mov(ecx, 0x100ad2cc);                 /* mov ecx, 0x100ad2cc */
    II(0x100acd82, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x30));   /* mov ebx, [ebp-0x30] */
    II(0x100acd85, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100acd88, 0x3)   mov(eax, memd_a32(ss, ebp - 0x3c));   /* mov eax, [ebp-0x3c] */
    II(0x100acd8b, 0x5)   calld(0x100aba72, -0x131e);           /* call 0x100aba72 */
    II(0x100acd90, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
//    II(0x100acd93, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x100acd96, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x100acd99, 0x2)   jmpd(0x100acda1, 0x6);                /* jmp 0x100acda1 */
l_0x100acd9b:
    II(0x100acd9b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100acd9e, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
l_0x100acda1:
    II(0x100acda1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x48));   /* mov edx, [ebp-0x48] */
    II(0x100acda4, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100acda7, 0x5)   calld(0x1008afe4, -0x21dc8);          /* call 0x1008afe4 */
    II(0x100acdac, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100acdaf, 0x5)   calld(0x1008af84, -0x21e30);          /* call 0x1008af84 */
    II(0x100acdb4, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100acdb6, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100acdbb, 0x5)   calld(0x100a4d50, -0x8070);           /* call 0x100a4d50 */
    II(0x100acdc0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100acdc2, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100acdc5, 0x5)   calld(0x10088b7c, -0x2424e);          /* call 0x10088b7c */
l_0x100acdca:
    II(0x100acdca, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100acdcc, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100acdcd, 0x1)   popd(edi);                            /* pop edi */
    II(0x100acdce, 0x1)   popd(esi);                            /* pop esi */
    II(0x100acdcf, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100acdd0, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100acdd1, 0x1)   retd();                               /* ret */
FUNC_END

