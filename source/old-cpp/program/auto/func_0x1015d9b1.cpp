FUNC_BEGIN(0x1015d9b1, 0xc2a8d19afcbd2449, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0x97, 0x83, 0, 0, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x20, 0, 0, 0, 0x89, 0x45, 0xf4, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xfc, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x31, 0x75, 0x9, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x3d, 0x4, 0x74, 0x2, 0xeb, 0x2f, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0x98, 0xe8, 0x43, 0x65, 0xf1, 0xff, 0x89, 0x45, 0xec, 0x83, 0x7d, 0xec, 0, 0x74, 0x6, 0x8b, 0x45, 0xec, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xf0, 0xe8, 0x7e, 0x90, 0xf1, 0xff, 0x8b, 0x45, 0xfc, 0xf6, 0x40, 0x12, 0x10, 0xf, 0x84, 0xbe, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x1a, 0x66, 0x3b, 0x45, 0xf0, 0x7e, 0x7, 0x8b, 0x45, 0xf0, 0x66, 0xff, 0x45, 0xf0, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x1c, 0x66, 0x3b, 0x45, 0xf2, 0x7e, 0x7, 0x8b, 0x45, 0xf2, 0x66, 0xff, 0x45, 0xf2, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x47, 0x74, 0xe, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x8, 0x45, 0xf, 0x85, 0x7e, 0, 0, 0, 0xc7, 0x45, 0xe8, 0x4, 0, 0, 0, 0xf, 0xbf, 0x45, 0xe8, 0x85, 0xc0, 0xf, 0x8c, 0x6b, 0, 0, 0, 0xf, 0xbf, 0x55, 0xf2, 0xf, 0xbf, 0x45, 0xf0, 0xe8, 0x62, 0x62, 0xf1, 0xff, 0x89, 0x45, 0xe4, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xe4, 0x83, 0xf8, 0x2, 0x74, 0xb, 0x31, 0xc0, 0x66, 0x8b, 0x45, 0xe4, 0x83, 0xf8, 0x4, 0x75, 0x2, 0xeb, 0x43, 0x8b, 0x55, 0xe8, 0x83, 0xe2, 0x1, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1a, 0x1, 0xd0, 0x66, 0x89, 0x45, 0xf0, 0x66, 0xf7, 0x45, 0xe8, 0x2, 0, 0x74, 0x9, 0xc7, 0x45, 0xe0, 0x1, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1a, 0xc1, 0xf8, 0x10, 0x3, 0x45, 0xe0, 0x66, 0x89, 0x45, 0xf2, 0x8b, 0x45, 0xe8, 0xff, 0x4d, 0xe8, 0xeb, 0x89, 0x8d, 0x55, 0xf0, 0x8b, 0x45, 0xf4, 0xe8, 0x60, 0x83, 0xf1, 0xff, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0xc3}))
    II(0x1015d9b1, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x1015d9b6, 0x5)   calld(sys_check_available_stack_size, 0x8397); /* call 0x10165d52 */
    II(0x1015d9bb, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1015d9bc, 0x1)   pushd(esi);                           /* push esi */
    II(0x1015d9bd, 0x1)   pushd(edi);                           /* push edi */
    II(0x1015d9be, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1015d9bf, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1015d9c1, 0x6)   sub(esp, 0x20);                       /* sub esp, 0x20 */
    II(0x1015d9c7, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1015d9ca, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x1015d9cd, 0x3)   mov(memd_a32(ss, ebp - 0x4), ebx);    /* mov [ebp-0x4], ebx */
    II(0x1015d9d0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015d9d3, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x31);   /* cmp word [eax+0x8], 0x31 */
    II(0x1015d9d8, 0x2)   jnzd(0x1015d9e3, 0x9);                /* jnz 0x1015d9e3 */
    II(0x1015d9da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015d9dd, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x4);   /* cmp byte [eax+0x3d], 0x4 */
    II(0x1015d9e1, 0x2)   jzd(0x1015d9e5, 0x2);                 /* jz 0x1015d9e5 */
l_0x1015d9e3:
    II(0x1015d9e3, 0x2)   jmpd(0x1015da14, 0x2f);               /* jmp 0x1015da14 */
l_0x1015d9e5:
    II(0x1015d9e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015d9e8, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x1015d9eb, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1015d9ee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015d9f1, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x1015d9f4, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1015d9f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015d9fa, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1015d9fd, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1015d9ff, 0x1)   cwde();                               /* cwde */
    II(0x1015da00, 0x5)   calld(0x10073f48, -0xe9abd);          /* call 0x10073f48 */
    II(0x1015da05, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1015da08, 0x4)   cmp(memd_a32(ss, ebp - 0x14), 0);     /* cmp dword [ebp-0x14], 0x0 */
    II(0x1015da0c, 0x2)   jzd(0x1015da14, 0x6);                 /* jz 0x1015da14 */
    II(0x1015da0e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1015da11, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
l_0x1015da14:
    II(0x1015da14, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015da17, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x1015da1a, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1015da1d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015da20, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x1015da23, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1015da26, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1015da29, 0x5)   calld(0x10076aac, -0xe6f82);          /* call 0x10076aac */
    II(0x1015da2e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015da31, 0x4)   test(memb_a32(ds, eax + 0x12), 0x10); /* test byte [eax+0x12], 0x10 */
    II(0x1015da35, 0x6)   jzd(0x1015daf9, 0xbe);                /* jz dword 0x1015daf9 */
    II(0x1015da3b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015da3e, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x1015da42, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x1015da46, 0x2)   jled(0x1015da4f, 0x7);                /* jle 0x1015da4f */
    II(0x1015da48, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1015da4b, 0x4)   inc(memw_a32(ss, ebp - 0x10));        /* inc word [ebp-0x10] */
l_0x1015da4f:
    II(0x1015da4f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015da52, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x1015da56, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xe));     /* cmp ax, [ebp-0xe] */
    II(0x1015da5a, 0x2)   jled(0x1015da63, 0x7);                /* jle 0x1015da63 */
    II(0x1015da5c, 0x3)   mov(eax, memd_a32(ss, ebp - 0xe));    /* mov eax, [ebp-0xe] */
    II(0x1015da5f, 0x4)   inc(memw_a32(ss, ebp - 0xe));         /* inc word [ebp-0xe] */
l_0x1015da63:
    II(0x1015da63, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015da66, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x47);   /* cmp word [eax+0x8], 0x47 */
    II(0x1015da6b, 0x2)   jzd(0x1015da7b, 0xe);                 /* jz 0x1015da7b */
    II(0x1015da6d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015da70, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x45);   /* cmp word [eax+0x8], 0x45 */
    II(0x1015da75, 0x6)   jnzd(0x1015daf9, 0x7e);               /* jnz dword 0x1015daf9 */
l_0x1015da7b:
    II(0x1015da7b, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x4);   /* mov dword [ebp-0x18], 0x4 */
l_0x1015da82:
    II(0x1015da82, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1015da86, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1015da88, 0x6)   jld(0x1015daf9, 0x6b);                /* jl dword 0x1015daf9 */
    II(0x1015da8e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xe));  /* movsx edx, word [ebp-0xe] */
    II(0x1015da92, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1015da96, 0x5)   calld(0x10073cfd, -0xe9d9e);          /* call 0x10073cfd */
    II(0x1015da9b, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1015da9e, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015daa0, 0x4)   mov(ax, memw_a32(ss, ebp - 0x1c));    /* mov ax, [ebp-0x1c] */
    II(0x1015daa4, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x1015daa7, 0x2)   jzd(0x1015dab4, 0xb);                 /* jz 0x1015dab4 */
    II(0x1015daa9, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1015daab, 0x4)   mov(ax, memw_a32(ss, ebp - 0x1c));    /* mov ax, [ebp-0x1c] */
    II(0x1015daaf, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x1015dab2, 0x2)   jnzd(0x1015dab6, 0x2);                /* jnz 0x1015dab6 */
l_0x1015dab4:
    II(0x1015dab4, 0x2)   jmpd(0x1015daf9, 0x43);               /* jmp 0x1015daf9 */
l_0x1015dab6:
    II(0x1015dab6, 0x3)   mov(edx, memd_a32(ss, ebp - 0x18));   /* mov edx, [ebp-0x18] */
    II(0x1015dab9, 0x3)   and_(edx, 0x1);                       /* and edx, 0x1 */
    II(0x1015dabc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015dabf, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x1015dac3, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1015dac5, 0x4)   mov(memw_a32(ss, ebp - 0x10), ax);    /* mov [ebp-0x10], ax */
    II(0x1015dac9, 0x6)   test(memw_a32(ss, ebp - 0x18), 0x2);  /* test word [ebp-0x18], 0x2 */
    II(0x1015dacf, 0x2)   jzd(0x1015dada, 0x9);                 /* jz 0x1015dada */
    II(0x1015dad1, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0x1);   /* mov dword [ebp-0x20], 0x1 */
    II(0x1015dad8, 0x2)   jmpd(0x1015dae1, 0x7);                /* jmp 0x1015dae1 */
l_0x1015dada:
    II(0x1015dada, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
l_0x1015dae1:
    II(0x1015dae1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1015dae4, 0x3)   mov(eax, memd_a32(ds, eax + 0x1a));   /* mov eax, [eax+0x1a] */
    II(0x1015dae7, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015daea, 0x3)   add(eax, memd_a32(ss, ebp - 0x20));   /* add eax, [ebp-0x20] */
    II(0x1015daed, 0x4)   mov(memw_a32(ss, ebp - 0xe), ax);     /* mov [ebp-0xe], ax */
    II(0x1015daf1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x1015daf4, 0x3)   dec(memd_a32(ss, ebp - 0x18));        /* dec dword [ebp-0x18] */
    II(0x1015daf7, 0x2)   jmpd(0x1015da82, -0x77);              /* jmp 0x1015da82 */
l_0x1015daf9:
    II(0x1015daf9, 0x3)   lea(edx, ebp - 0x10);                 /* lea edx, [ebp-0x10] */
    II(0x1015dafc, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015daff, 0x5)   calld(0x10075e64, -0xe7ca0);          /* call 0x10075e64 */
    II(0x1015db04, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015db07, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1015db09, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1015db0a, 0x1)   popd(edi);                            /* pop edi */
    II(0x1015db0b, 0x1)   popd(esi);                            /* pop esi */
    II(0x1015db0c, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1015db0d, 0x1)   retd();                               /* ret */
FUNC_END

