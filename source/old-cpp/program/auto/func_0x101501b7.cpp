FUNC_BEGIN(0x101501b7, 0x2b6ba0c4fda41ee1, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x91, 0x5b, 0x1, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x6c, 0xe8, 0x51, 0x65, 0xf2, 0xff, 0x8b, 0x55, 0xf8, 0x8a, 0x52, 0x4d, 0x30, 0xf6, 0x66, 0x8b, 0x40, 0xa, 0x29, 0xd0, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf8, 0xe8, 0x35, 0xff, 0xff, 0xff, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x66, 0x3b, 0x45, 0xfc, 0x7e, 0x7a, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x6c, 0xe8, 0x21, 0x65, 0xf2, 0xff, 0x8b, 0x50, 0x8, 0xc1, 0xfa, 0x10, 0xc1, 0xe2, 0x2, 0xf, 0xbf, 0x45, 0xfc, 0xf, 0xaf, 0xd0, 0x8b, 0x45, 0xf8, 0xe8, 0x7f, 0x7, 0, 0, 0xf, 0xbf, 0xd8, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x6c, 0xe8, 0xf1, 0x64, 0xf2, 0xff, 0x8b, 0x58, 0x8, 0xc1, 0xfb, 0x10, 0xc1, 0xe3, 0x2, 0x8b, 0x45, 0xf8, 0xe8, 0x56, 0x7, 0, 0, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xec, 0xf, 0xaf, 0xc2, 0x8d, 0x14, 0x18, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x6c, 0xe8, 0xc8, 0x64, 0xf2, 0xff, 0x8b, 0x40, 0x8, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x89, 0xc3, 0x4a, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xf0, 0x8a, 0x45, 0xec, 0x8b, 0x55, 0xf8, 0, 0x42, 0x4d, 0x8b, 0x45, 0xf8, 0xe8, 0x3a, 0x13, 0x1, 0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x101501b7, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x101501bc, 0x5)   calld(sys_check_available_stack_size, 0x15b91); /* call 0x10165d52 */
    II(0x101501c1, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101501c2, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101501c3, 0x1)   pushd(esi);                           /* push esi */
    II(0x101501c4, 0x1)   pushd(edi);                           /* push edi */
    II(0x101501c5, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101501c6, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101501c8, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x101501ce, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x101501d1, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x101501d4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101501d7, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x101501da, 0x5)   calld(0x10076730, -0xd9aaf);          /* call 0x10076730 */
    II(0x101501df, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x101501e2, 0x3)   mov(dl, memb_a32(ds, edx + 0x4d));    /* mov dl, [edx+0x4d] */
    II(0x101501e5, 0x2)   xor_(dh, dh);                         /* xor dh, dh */
    II(0x101501e7, 0x4)   mov(ax, memw_a32(ds, eax + 0xa));     /* mov ax, [eax+0xa] */
    II(0x101501eb, 0x2)   sub(eax, edx);                        /* sub eax, edx */
    II(0x101501ed, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x101501f0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101501f3, 0x5)   calld(0x1015012d, -0xcb);             /* call 0x1015012d */
    II(0x101501f8, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x101501fb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x101501fe, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4));     /* cmp ax, [ebp-0x4] */
    II(0x10150202, 0x2)   jled(0x1015027e, 0x7a);               /* jle 0x1015027e */
    II(0x10150204, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10150207, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x1015020a, 0x5)   calld(0x10076730, -0xd9adf);          /* call 0x10076730 */
    II(0x1015020f, 0x3)   mov(edx, memd_a32(ds, eax + 0x8));    /* mov edx, [eax+0x8] */
    II(0x10150212, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x10150215, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x10150218, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1015021c, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x1015021f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10150222, 0x5)   calld(0x101509a6, 0x77f);             /* call 0x101509a6 */
    II(0x10150227, 0x3)   movsx(ebx, ax);                       /* movsx ebx, ax */
    II(0x1015022a, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1015022c, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1015022f, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10150231, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10150234, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10150237, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x1015023a, 0x5)   calld(0x10076730, -0xd9b0f);          /* call 0x10076730 */
    II(0x1015023f, 0x3)   mov(ebx, memd_a32(ds, eax + 0x8));    /* mov ebx, [eax+0x8] */
    II(0x10150242, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x10150245, 0x3)   shl(ebx, 0x2);                        /* shl ebx, 0x2 */
    II(0x10150248, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015024b, 0x5)   calld(0x101509a6, 0x756);             /* call 0x101509a6 */
    II(0x10150250, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10150253, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10150257, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x1015025a, 0x3)   lea(edx, eax + ebx);                  /* lea edx, [eax+ebx] */
    II(0x1015025d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10150260, 0x3)   add(eax, 0x6c);                       /* add eax, 0x6c */
    II(0x10150263, 0x5)   calld(0x10076730, -0xd9b38);          /* call 0x10076730 */
    II(0x10150268, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x1015026b, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015026e, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x10150271, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x10150273, 0x1)   dec(edx);                             /* dec edx */
    II(0x10150274, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10150276, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10150279, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1015027b, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x1015027e:
    II(0x1015027e, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x10150281, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x10150284, 0x3)   add(memb_a32(ds, edx + 0x4d), al);    /* add [edx+0x4d], al */
    II(0x10150287, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1015028a, 0x5)   calld(0x101615c9, 0x1133a);           /* call 0x101615c9 */
    II(0x1015028f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10150292, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x10150295, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10150298, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1015029a, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1015029b, 0x1)   popd(edi);                            /* pop edi */
    II(0x1015029c, 0x1)   popd(esi);                            /* pop esi */
    II(0x1015029d, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1015029e, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1015029f, 0x1)   retd();                               /* ret */
FUNC_END

