FUNC_BEGIN(my_ctor_c21, 0xea8f2fe6ee5aef4f, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x7c, 0x46, 0x2, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0xb8, 0, 0xd7, 0x1b, 0x10, 0xe8, 0x31, 0x4a, 0x2, 0, 0x31, 0xd2, 0xb8, 0x14, 0x81, 0x1c, 0x10, 0xe8, 0xd6, 0x2, 0, 0, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xf8, 0xc7, 0x5, 0x8, 0xd7, 0x1b, 0x10, 0x1, 0, 0, 0, 0xb8, 0x18, 0x81, 0x1c, 0x10, 0xe8, 0xd1, 0x3, 0, 0, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf4, 0x89, 0x45, 0xfc, 0xc7, 0x5, 0x8, 0xd7, 0x1b, 0x10, 0x2, 0, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x101416cc, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x101416d1, 0x5)   calld(sys_check_available_stack_size, 0x2467c); /* call 0x10165d52 */
    II(0x101416d6, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x101416d7, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x101416d8, 0x1)   pushd(edx);                           /* push edx */
    II(0x101416d9, 0x1)   pushd(esi);                           /* push esi */
    II(0x101416da, 0x1)   pushd(edi);                           /* push edi */
    II(0x101416db, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x101416dc, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x101416de, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x101416e4, 0x5)   mov(eax, 0x101bd700);                 /* mov eax, 0x101bd700 */
    II(0x101416e9, 0x5)   calld(/* sys */ 0x1016611f, 0x24a31); /* call 0x1016611f */
    II(0x101416ee, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101416f0, 0x5)   mov(eax, 0x101c8114);                 /* mov eax, 0x101c8114 */
    II(0x101416f5, 0x5)   calld(my_string_ctor_capaticy, 0x2d6); /* call 0x101419d0 */
    II(0x101416fa, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x101416fd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10141700, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10141703, 0xa)   mov(memd_a32(ds, 0x101bd708), 0x1);   /* mov dword [0x101bd708], 0x1 */
    II(0x1014170d, 0x5)   mov(eax, 0x101c8118);                 /* mov eax, 0x101c8118 */
    II(0x10141712, 0x5)   calld(my_string_ctor, 0x3d1);         /* call 0x10141ae8 */
    II(0x10141717, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
//    II(0x1014171a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1014171d, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10141720, 0xa)   mov(memd_a32(ds, 0x101bd708), 0x2);   /* mov dword [0x101bd708], 0x2 */
    II(0x1014172a, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1014172c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1014172d, 0x1)   popd(edi);                            /* pop edi */
    II(0x1014172e, 0x1)   popd(esi);                            /* pop esi */
    II(0x1014172f, 0x1)   popd(edx);                            /* pop edx */
    II(0x10141730, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10141731, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10141732, 0x1)   retd();                               /* ret */
FUNC_END

