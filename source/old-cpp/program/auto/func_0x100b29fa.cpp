FUNC_BEGIN(0x100b29fa, 0x4d6008404405103d, 0x20, ({0x68, 0x7c, 0, 0, 0, 0xe8, 0x4e, 0x33, 0xb, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x58, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x55, 0xf8, 0x83, 0xc2, 0x15, 0x8b, 0x45, 0xfc, 0xe8, 0x8f, 0x8a, 0xfd, 0xff, 0x84, 0xc0, 0x74, 0x9, 0xc6, 0x45, 0xf4, 0, 0xe9, 0xbe, 0x3, 0, 0, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0xe8, 0x15, 0, 0xa, 0, 0x84, 0xc0, 0x75, 0x9, 0xc6, 0x45, 0xf4, 0, 0xe9, 0xa6, 0x3, 0, 0, 0xbb, 0x3, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0xe8, 0x17, 0xc, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x9, 0xc6, 0x45, 0xf4, 0x1, 0xe9, 0x89, 0x3, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0x9a, 0xf3, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x9, 0xc6, 0x45, 0xf4, 0, 0xe9, 0x74, 0x3, 0, 0, 0x8b, 0x45, 0xf8, 0x66, 0x83, 0x78, 0x13, 0x4e, 0x75, 0x9, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xf0, 0x3, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x23, 0xe8, 0x7f, 0x7a, 0xfd, 0xff, 0xe8, 0xc2, 0x52, 0, 0, 0x80, 0x78, 0x3d, 0x10, 0xf, 0x84, 0xeb, 0x1, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x23, 0xe8, 0x65, 0x7a, 0xfd, 0xff, 0xe8, 0xa8, 0x52, 0, 0, 0x8d, 0x5d, 0xec, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xe0, 0x3b, 0xfc, 0xff, 0x8d, 0x55, 0xe8, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x23, 0xe8, 0x46, 0x7a, 0xfd, 0xff, 0xe8, 0x55, 0x9f, 0xff, 0xff, 0x8d, 0x45, 0xe4, 0xe8, 0x9, 0x40, 0xfc, 0xff, 0x8d, 0x45, 0xec, 0xe8, 0xe1, 0x3a, 0xfc, 0xff, 0xe8, 0xe7, 0x3, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x13, 0xc6, 0x45, 0xf4, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x26, 0x34, 0xfc, 0xff, 0xe9, 0xe5, 0x2, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0xa9, 0x80, 0xfd, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0x9c, 0x80, 0xfd, 0xff, 0xe8, 0xf5, 0x34, 0xff, 0xff, 0x66, 0x3b, 0x45, 0xf0, 0x7f, 0x2d, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x23, 0xe8, 0xea, 0x79, 0xfd, 0xff, 0xe8, 0x2d, 0x52, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0xff, 0xf8, 0xff, 0xff, 0xc6, 0x45, 0xf4, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xd9, 0x33, 0xfc, 0xff, 0xe9, 0x98, 0x2, 0, 0, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0x11, 0x3a, 0xfc, 0xff, 0x66, 0x83, 0x78, 0x8, 0x4e, 0x74, 0x12, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0xff, 0x39, 0xfc, 0xff, 0x66, 0x83, 0x78, 0x8, 0x41, 0x75, 0x20, 0x8d, 0x45, 0xec, 0xe8, 0xf0, 0x39, 0xfc, 0xff, 0x66, 0x8b, 0x40, 0x1a, 0x66, 0x89, 0x45, 0xe8, 0x8d, 0x45, 0xec, 0xe8, 0xe0, 0x39, 0xfc, 0xff, 0x66, 0x8b, 0x40, 0x1c, 0x66, 0x89, 0x45, 0xea, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0xcd, 0x39, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xe8, 0x66, 0x2b, 0x42, 0x1a, 0x66, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0xb5, 0x39, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xea, 0x66, 0x2b, 0x42, 0x1c, 0x66, 0x89, 0x45, 0xe6, 0xf, 0xbf, 0x55, 0xe6, 0xf, 0xbf, 0x45, 0xe6, 0xf, 0xaf, 0xd0, 0x89, 0xd3, 0xf, 0xbf, 0x55, 0xe4, 0xf, 0xbf, 0x45, 0xe4, 0xf, 0xaf, 0xc2, 0x1, 0xc3, 0xf, 0xbf, 0x45, 0xf0, 0x39, 0xc3, 0x7f, 0x13, 0xc6, 0x45, 0xf4, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x30, 0x33, 0xfc, 0xff, 0xe9, 0xef, 0x1, 0, 0, 0xb8, 0x49, 0, 0, 0, 0xe8, 0xf5, 0x31, 0xb, 0, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xdc, 0x83, 0x7d, 0xdc, 0, 0x74, 0x3f, 0xb8, 0xfb, 0x2d, 0xb, 0x10, 0x50, 0x8d, 0x55, 0xe8, 0x8d, 0x45, 0xd8, 0xe8, 0x39, 0x32, 0xfc, 0xff, 0x50, 0xb8, 0x3, 0, 0, 0, 0x50, 0xf, 0xbf, 0x4d, 0xf0, 0x8b, 0x5d, 0xf8, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0x8c, 0x39, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xe0, 0xe8, 0xd2, 0x95, 0xff, 0xff, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xd4, 0x89, 0x45, 0xd0, 0xeb, 0x6, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xd0, 0x8b, 0x55, 0xd0, 0x8d, 0x45, 0xcc, 0xe8, 0xf6, 0x83, 0xfd, 0xff, 0x8d, 0x45, 0xcc, 0xe8, 0x12, 0x83, 0xfd, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xd2, 0x20, 0xff, 0xff, 0xc6, 0x45, 0xf4, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xcc, 0xe8, 0xf0, 0x5e, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x96, 0x32, 0xfc, 0xff, 0xe9, 0x55, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x50, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0x16, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x23, 0xe8, 0x6d, 0x78, 0xfd, 0xff, 0xe8, 0xb0, 0x50, 0, 0, 0x80, 0x78, 0x3d, 0x10, 0x74, 0x5, 0xe9, 0x29, 0x1, 0, 0, 0x8d, 0x55, 0xc8, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x23, 0xe8, 0x4f, 0x78, 0xfd, 0xff, 0xe8, 0xca, 0x50, 0, 0, 0xf, 0xbf, 0, 0x85, 0xc0, 0x7d, 0x9, 0xc6, 0x45, 0xf4, 0, 0xe9, 0xa, 0x1, 0, 0, 0x8d, 0x55, 0xc4, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x23, 0xe8, 0x2c, 0x78, 0xfd, 0xff, 0xe8, 0xa7, 0x50, 0, 0, 0x89, 0xc1, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0x6e, 0x38, 0xfc, 0xff, 0x8b, 0x58, 0x1a, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0x5d, 0x38, 0xfc, 0xff, 0x8b, 0x50, 0x18, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xc0, 0xe8, 0x87, 0x3d, 0xfc, 0xff, 0x89, 0xca, 0xe8, 0x9e, 0x32, 0xff, 0xff, 0x66, 0x3b, 0x45, 0xf0, 0x7f, 0x23, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x23, 0xe8, 0xe3, 0x77, 0xfd, 0xff, 0xe8, 0x26, 0x50, 0, 0, 0x89, 0xc2, 0x8b, 0x45, 0xf8, 0xe8, 0x33, 0xfa, 0xff, 0xff, 0xc6, 0x45, 0xf4, 0x1, 0xe9, 0x9b, 0, 0, 0, 0xb8, 0x49, 0, 0, 0, 0xe8, 0xa1, 0x30, 0xb, 0, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xbc, 0x89, 0x45, 0xb8, 0x83, 0x7d, 0xb8, 0, 0x74, 0x49, 0xb8, 0x78, 0x2e, 0xb, 0x10, 0x50, 0x8d, 0x55, 0xb4, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x23, 0xe8, 0x9e, 0x77, 0xfd, 0xff, 0xe8, 0x19, 0x50, 0, 0, 0x50, 0xb8, 0x3, 0, 0, 0, 0x50, 0xf, 0xbf, 0x4d, 0xf0, 0x8b, 0x5d, 0xf8, 0x8b, 0x45, 0xf8, 0x83, 0xc0, 0x15, 0xe8, 0x30, 0x38, 0xfc, 0xff, 0x8b, 0x75, 0xbc, 0x89, 0xc2, 0x89, 0xf0, 0xe8, 0x74, 0x94, 0xff, 0xff, 0x89, 0x45, 0xb0, 0x8b, 0x45, 0xb0, 0x89, 0x45, 0xac, 0xeb, 0x6, 0x8b, 0x45, 0xb8, 0x89, 0x45, 0xac, 0x8b, 0x55, 0xac, 0x8d, 0x45, 0xa8, 0xe8, 0x98, 0x82, 0xfd, 0xff, 0x8d, 0x45, 0xa8, 0xe8, 0xb4, 0x81, 0xfd, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x74, 0x1f, 0xff, 0xff, 0xc6, 0x45, 0xf4, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xa8, 0xe8, 0x92, 0x5d, 0xfd, 0xff, 0xeb, 0x4, 0xc6, 0x45, 0xf4, 0, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100b29fa, 0x5)   pushd(0x7c);                          /* push dword 0x7c */
    II(0x100b29ff, 0x5)   calld(sys_check_available_stack_size, 0xb334e); /* call 0x10165d52 */
    II(0x100b2a04, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100b2a05, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100b2a06, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b2a07, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b2a08, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b2a09, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b2a0b, 0x6)   sub(esp, 0x58);                       /* sub esp, 0x58 */
    II(0x100b2a11, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100b2a14, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100b2a17, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100b2a1a, 0x3)   add(edx, 0x15);                       /* add edx, 0x15 */
    II(0x100b2a1d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b2a20, 0x5)   calld(0x1008b4b4, -0x27571);          /* call 0x1008b4b4 */
    II(0x100b2a25, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b2a27, 0x2)   jzd(0x100b2a32, 0x9);                 /* jz 0x100b2a32 */
    II(0x100b2a29, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100b2a2d, 0x5)   jmpd(0x100b2df0, 0x3be);              /* jmp 0x100b2df0 */
l_0x100b2a32:
    II(0x100b2a32, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x100b2a35, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b2a38, 0x5)   calld(0x10152a52, 0xa0015);           /* call 0x10152a52 */
    II(0x100b2a3d, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b2a3f, 0x2)   jnzd(0x100b2a4a, 0x9);                /* jnz 0x100b2a4a */
    II(0x100b2a41, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100b2a45, 0x5)   jmpd(0x100b2df0, 0x3a6);              /* jmp 0x100b2df0 */
l_0x100b2a4a:
    II(0x100b2a4a, 0x5)   mov(ebx, 0x3);                        /* mov ebx, 0x3 */
    II(0x100b2a4f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b2a52, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2a55, 0x5)   calld(0x100a3671, -0xf3e9);           /* call 0x100a3671 */
    II(0x100b2a5a, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b2a5c, 0x2)   jzd(0x100b2a67, 0x9);                 /* jz 0x100b2a67 */
    II(0x100b2a5e, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100b2a62, 0x5)   jmpd(0x100b2df0, 0x389);              /* jmp 0x100b2df0 */
l_0x100b2a67:
    II(0x100b2a67, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2a6a, 0x5)   calld(0x100b1e09, -0xc66);            /* call 0x100b1e09 */
    II(0x100b2a6f, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b2a71, 0x2)   jnzd(0x100b2a7c, 0x9);                /* jnz 0x100b2a7c */
    II(0x100b2a73, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100b2a77, 0x5)   jmpd(0x100b2df0, 0x374);              /* jmp 0x100b2df0 */
l_0x100b2a7c:
    II(0x100b2a7c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2a7f, 0x5)   cmp(memw_a32(ds, eax + 0x13), 0x4e);  /* cmp word [eax+0x13], 0x4e */
    II(0x100b2a84, 0x2)   jnzd(0x100b2a8f, 0x9);                /* jnz 0x100b2a8f */
    II(0x100b2a86, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100b2a8d, 0x2)   jmpd(0x100b2a96, 0x7);                /* jmp 0x100b2a96 */
l_0x100b2a8f:
    II(0x100b2a8f, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0x3);   /* mov dword [ebp-0x10], 0x3 */
l_0x100b2a96:
    II(0x100b2a96, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2a99, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x100b2a9c, 0x5)   calld(0x1008a520, -0x28581);          /* call 0x1008a520 */
    II(0x100b2aa1, 0x5)   calld(0x100b7d68, 0x52c2);            /* call 0x100b7d68 */
    II(0x100b2aa6, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x100b2aaa, 0x6)   jzd(0x100b2c9b, 0x1eb);               /* jz dword 0x100b2c9b */
    II(0x100b2ab0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2ab3, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x100b2ab6, 0x5)   calld(0x1008a520, -0x2859b);          /* call 0x1008a520 */
    II(0x100b2abb, 0x5)   calld(0x100b7d68, 0x52a8);            /* call 0x100b7d68 */
    II(0x100b2ac0, 0x3)   lea(ebx, ebp - 0x14);                 /* lea ebx, [ebp-0x14] */
    II(0x100b2ac3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b2ac5, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100b2ac7, 0x5)   calld(0x100766ac, -0x3c420);          /* call 0x100766ac */
    II(0x100b2acc, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x100b2acf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2ad2, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x100b2ad5, 0x5)   calld(0x1008a520, -0x285ba);          /* call 0x1008a520 */
    II(0x100b2ada, 0x5)   calld(0x100aca34, -0x60ab);           /* call 0x100aca34 */
    II(0x100b2adf, 0x3)   lea(eax, ebp - 0x1c);                 /* lea eax, [ebp-0x1c] */
    II(0x100b2ae2, 0x5)   calld(my_ctor_0x101b4184, -0x3bff7);  /* call 0x10076af0 */
    II(0x100b2ae7, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b2aea, 0x5)   calld(0x100765d0, -0x3c51f);          /* call 0x100765d0 */
    II(0x100b2aef, 0x5)   calld(0x100a2edb, -0xfc19);           /* call 0x100a2edb */
    II(0x100b2af4, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b2af6, 0x2)   jnzd(0x100b2b0b, 0x13);               /* jnz 0x100b2b0b */
    II(0x100b2af8, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100b2afc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b2afe, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b2b01, 0x5)   calld(0x10075f2c, -0x3cbda);          /* call 0x10075f2c */
    II(0x100b2b06, 0x5)   jmpd(0x100b2df0, 0x2e5);              /* jmp 0x100b2df0 */
l_0x100b2b0b:
    II(0x100b2b0b, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b2b0e, 0x5)   calld(0x1008abbc, -0x27f57);          /* call 0x1008abbc */
    II(0x100b2b13, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b2b15, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2b18, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b2b1b, 0x5)   calld(0x1008abbc, -0x27f64);          /* call 0x1008abbc */
    II(0x100b2b20, 0x5)   calld(0x100a601a, -0xcb0b);           /* call 0x100a601a */
    II(0x100b2b25, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x100b2b29, 0x2)   jgd(0x100b2b58, 0x2d);                /* jg 0x100b2b58 */
    II(0x100b2b2b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2b2e, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x100b2b31, 0x5)   calld(0x1008a520, -0x28616);          /* call 0x1008a520 */
    II(0x100b2b36, 0x5)   calld(0x100b7d68, 0x522d);            /* call 0x100b7d68 */
    II(0x100b2b3b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b2b3d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2b40, 0x5)   calld(0x100b2444, -0x701);            /* call 0x100b2444 */
    II(0x100b2b45, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100b2b49, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b2b4b, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b2b4e, 0x5)   calld(0x10075f2c, -0x3cc27);          /* call 0x10075f2c */
    II(0x100b2b53, 0x5)   jmpd(0x100b2df0, 0x298);              /* jmp 0x100b2df0 */
l_0x100b2b58:
    II(0x100b2b58, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2b5b, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b2b5e, 0x5)   calld(0x10076574, -0x3c5ef);          /* call 0x10076574 */
    II(0x100b2b63, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x4e);   /* cmp word [eax+0x8], 0x4e */
    II(0x100b2b68, 0x2)   jzd(0x100b2b7c, 0x12);                /* jz 0x100b2b7c */
    II(0x100b2b6a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2b6d, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b2b70, 0x5)   calld(0x10076574, -0x3c601);          /* call 0x10076574 */
    II(0x100b2b75, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x41);   /* cmp word [eax+0x8], 0x41 */
    II(0x100b2b7a, 0x2)   jnzd(0x100b2b9c, 0x20);               /* jnz 0x100b2b9c */
l_0x100b2b7c:
    II(0x100b2b7c, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b2b7f, 0x5)   calld(0x10076574, -0x3c610);          /* call 0x10076574 */
    II(0x100b2b84, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x100b2b88, 0x4)   mov(memw_a32(ss, ebp - 0x18), ax);    /* mov [ebp-0x18], ax */
    II(0x100b2b8c, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b2b8f, 0x5)   calld(0x10076574, -0x3c620);          /* call 0x10076574 */
    II(0x100b2b94, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x100b2b98, 0x4)   mov(memw_a32(ss, ebp - 0x16), ax);    /* mov [ebp-0x16], ax */
l_0x100b2b9c:
    II(0x100b2b9c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2b9f, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b2ba2, 0x5)   calld(0x10076574, -0x3c633);          /* call 0x10076574 */
    II(0x100b2ba7, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b2ba9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x100b2bac, 0x4)   sub(ax, memw_a32(ds, edx + 0x1a));    /* sub ax, [edx+0x1a] */
    II(0x100b2bb0, 0x4)   mov(memw_a32(ss, ebp - 0x1c), ax);    /* mov [ebp-0x1c], ax */
    II(0x100b2bb4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2bb7, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b2bba, 0x5)   calld(0x10076574, -0x3c64b);          /* call 0x10076574 */
    II(0x100b2bbf, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b2bc1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x16));   /* mov eax, [ebp-0x16] */
    II(0x100b2bc4, 0x4)   sub(ax, memw_a32(ds, edx + 0x1c));    /* sub ax, [edx+0x1c] */
    II(0x100b2bc8, 0x4)   mov(memw_a32(ss, ebp - 0x1a), ax);    /* mov [ebp-0x1a], ax */
    II(0x100b2bcc, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1a)); /* movsx edx, word [ebp-0x1a] */
    II(0x100b2bd0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1a)); /* movsx eax, word [ebp-0x1a] */
    II(0x100b2bd4, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100b2bd7, 0x2)   mov(ebx, edx);                        /* mov ebx, edx */
    II(0x100b2bd9, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x100b2bdd, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x100b2be1, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x100b2be4, 0x2)   add(ebx, eax);                        /* add ebx, eax */
    II(0x100b2be6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x100b2bea, 0x2)   cmp(ebx, eax);                        /* cmp ebx, eax */
    II(0x100b2bec, 0x2)   jgd(0x100b2c01, 0x13);                /* jg 0x100b2c01 */
    II(0x100b2bee, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100b2bf2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b2bf4, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b2bf7, 0x5)   calld(0x10075f2c, -0x3ccd0);          /* call 0x10075f2c */
    II(0x100b2bfc, 0x5)   jmpd(0x100b2df0, 0x1ef);              /* jmp 0x100b2df0 */
l_0x100b2c01:
    II(0x100b2c01, 0x5)   mov(eax, 0x49);                       /* mov eax, 0x49 */
    II(0x100b2c06, 0x5)   calld(sys_new, 0xb31f5);              /* call 0x10165e00 */
    II(0x100b2c0b, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
//    II(0x100b2c0e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100b2c11, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100b2c14, 0x4)   cmp(memd_a32(ss, ebp - 0x24), 0);     /* cmp dword [ebp-0x24], 0x0 */
    II(0x100b2c18, 0x2)   jzd(0x100b2c59, 0x3f);                /* jz 0x100b2c59 */
    II(0x100b2c1a, 0x5)   mov(eax, 0x100b2dfb);                 /* mov eax, 0x100b2dfb */
    II(0x100b2c1f, 0x1)   pushd(eax);                           /* push eax */
    II(0x100b2c20, 0x3)   lea(edx, ebp - 0x18);                 /* lea edx, [ebp-0x18] */
    II(0x100b2c23, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b2c26, 0x5)   calld(0x10075e64, -0x3cdc7);          /* call 0x10075e64 */
    II(0x100b2c2b, 0x1)   pushd(eax);                           /* push eax */
    II(0x100b2c2c, 0x5)   mov(eax, 0x3);                        /* mov eax, 0x3 */
    II(0x100b2c31, 0x1)   pushd(eax);                           /* push eax */
    II(0x100b2c32, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x10)); /* movsx ecx, word [ebp-0x10] */
    II(0x100b2c36, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x100b2c39, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2c3c, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b2c3f, 0x5)   calld(0x100765d0, -0x3c674);          /* call 0x100765d0 */
    II(0x100b2c44, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b2c46, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100b2c49, 0x5)   calld(0x100ac220, -0x6a2e);           /* call 0x100ac220 */
    II(0x100b2c4e, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
//    II(0x100b2c51, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100b2c54, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100b2c57, 0x2)   jmpd(0x100b2c5f, 0x6);                /* jmp 0x100b2c5f */
l_0x100b2c59:
    II(0x100b2c59, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100b2c5c, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
l_0x100b2c5f:
    II(0x100b2c5f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x30));   /* mov edx, [ebp-0x30] */
    II(0x100b2c62, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100b2c65, 0x5)   calld(0x1008b060, -0x27c0a);          /* call 0x1008b060 */
    II(0x100b2c6a, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100b2c6d, 0x5)   calld(0x1008af84, -0x27cee);          /* call 0x1008af84 */
    II(0x100b2c72, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b2c74, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100b2c79, 0x5)   calld(0x100a4d50, -0xdf2e);           /* call 0x100a4d50 */
    II(0x100b2c7e, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100b2c82, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b2c84, 0x3)   lea(eax, ebp - 0x34);                 /* lea eax, [ebp-0x34] */
    II(0x100b2c87, 0x5)   calld(0x10088b7c, -0x2a110);          /* call 0x10088b7c */
    II(0x100b2c8c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b2c8e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b2c91, 0x5)   calld(0x10075f2c, -0x3cd6a);          /* call 0x10075f2c */
    II(0x100b2c96, 0x5)   jmpd(0x100b2df0, 0x155);              /* jmp 0x100b2df0 */
l_0x100b2c9b:
    II(0x100b2c9b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b2c9e, 0x3)   mov(eax, memd_a32(ds, eax + 0x50));   /* mov eax, [eax+0x50] */
    II(0x100b2ca1, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b2ca4, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b2ca6, 0x2)   jled(0x100b2cbe, 0x16);               /* jle 0x100b2cbe */
    II(0x100b2ca8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2cab, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x100b2cae, 0x5)   calld(0x1008a520, -0x28793);          /* call 0x1008a520 */
    II(0x100b2cb3, 0x5)   calld(0x100b7d68, 0x50b0);            /* call 0x100b7d68 */
    II(0x100b2cb8, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x100b2cbc, 0x2)   jzd(0x100b2cc3, 0x5);                 /* jz 0x100b2cc3 */
l_0x100b2cbe:
    II(0x100b2cbe, 0x5)   jmpd(0x100b2dec, 0x129);              /* jmp 0x100b2dec */
l_0x100b2cc3:
    II(0x100b2cc3, 0x3)   lea(edx, ebp - 0x38);                 /* lea edx, [ebp-0x38] */
    II(0x100b2cc6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2cc9, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x100b2ccc, 0x5)   calld(0x1008a520, -0x287b1);          /* call 0x1008a520 */
    II(0x100b2cd1, 0x5)   calld(0x100b7da0, 0x50ca);            /* call 0x100b7da0 */
    II(0x100b2cd6, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100b2cd9, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b2cdb, 0x2)   jged(0x100b2ce6, 0x9);                /* jge 0x100b2ce6 */
    II(0x100b2cdd, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100b2ce1, 0x5)   jmpd(0x100b2df0, 0x10a);              /* jmp 0x100b2df0 */
l_0x100b2ce6:
    II(0x100b2ce6, 0x3)   lea(edx, ebp - 0x3c);                 /* lea edx, [ebp-0x3c] */
    II(0x100b2ce9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2cec, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x100b2cef, 0x5)   calld(0x1008a520, -0x287d4);          /* call 0x1008a520 */
    II(0x100b2cf4, 0x5)   calld(0x100b7da0, 0x50a7);            /* call 0x100b7da0 */
    II(0x100b2cf9, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100b2cfb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2cfe, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b2d01, 0x5)   calld(0x10076574, -0x3c792);          /* call 0x10076574 */
    II(0x100b2d06, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1a));   /* mov ebx, [eax+0x1a] */
    II(0x100b2d09, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100b2d0c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2d0f, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b2d12, 0x5)   calld(0x10076574, -0x3c7a3);          /* call 0x10076574 */
    II(0x100b2d17, 0x3)   mov(edx, memd_a32(ds, eax + 0x18));   /* mov edx, [eax+0x18] */
    II(0x100b2d1a, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100b2d1d, 0x3)   lea(eax, ebp - 0x40);                 /* lea eax, [ebp-0x40] */
    II(0x100b2d20, 0x5)   calld(0x10076aac, -0x3c279);          /* call 0x10076aac */
    II(0x100b2d25, 0x2)   mov(edx, ecx);                        /* mov edx, ecx */
    II(0x100b2d27, 0x5)   calld(0x100a5fca, -0xcd62);           /* call 0x100a5fca */
    II(0x100b2d2c, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x10));    /* cmp ax, [ebp-0x10] */
    II(0x100b2d30, 0x2)   jgd(0x100b2d55, 0x23);                /* jg 0x100b2d55 */
    II(0x100b2d32, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2d35, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x100b2d38, 0x5)   calld(0x1008a520, -0x2881d);          /* call 0x1008a520 */
    II(0x100b2d3d, 0x5)   calld(0x100b7d68, 0x5026);            /* call 0x100b7d68 */
    II(0x100b2d42, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b2d44, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2d47, 0x5)   calld(0x100b277f, -0x5cd);            /* call 0x100b277f */
    II(0x100b2d4c, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100b2d50, 0x5)   jmpd(0x100b2df0, 0x9b);               /* jmp 0x100b2df0 */
l_0x100b2d55:
    II(0x100b2d55, 0x5)   mov(eax, 0x49);                       /* mov eax, 0x49 */
    II(0x100b2d5a, 0x5)   calld(sys_new, 0xb30a1);              /* call 0x10165e00 */
    II(0x100b2d5f, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
//    II(0x100b2d62, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x100b2d65, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x100b2d68, 0x4)   cmp(memd_a32(ss, ebp - 0x48), 0);     /* cmp dword [ebp-0x48], 0x0 */
    II(0x100b2d6c, 0x2)   jzd(0x100b2db7, 0x49);                /* jz 0x100b2db7 */
    II(0x100b2d6e, 0x5)   mov(eax, 0x100b2e78);                 /* mov eax, 0x100b2e78 */
    II(0x100b2d73, 0x1)   pushd(eax);                           /* push eax */
    II(0x100b2d74, 0x3)   lea(edx, ebp - 0x4c);                 /* lea edx, [ebp-0x4c] */
    II(0x100b2d77, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2d7a, 0x3)   add(eax, 0x23);                       /* add eax, 0x23 */
    II(0x100b2d7d, 0x5)   calld(0x1008a520, -0x28862);          /* call 0x1008a520 */
    II(0x100b2d82, 0x5)   calld(0x100b7da0, 0x5019);            /* call 0x100b7da0 */
    II(0x100b2d87, 0x1)   pushd(eax);                           /* push eax */
    II(0x100b2d88, 0x5)   mov(eax, 0x3);                        /* mov eax, 0x3 */
    II(0x100b2d8d, 0x1)   pushd(eax);                           /* push eax */
    II(0x100b2d8e, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x10)); /* movsx ecx, word [ebp-0x10] */
    II(0x100b2d92, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x8));    /* mov ebx, [ebp-0x8] */
    II(0x100b2d95, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100b2d98, 0x3)   add(eax, 0x15);                       /* add eax, 0x15 */
    II(0x100b2d9b, 0x5)   calld(0x100765d0, -0x3c7d0);          /* call 0x100765d0 */
    II(0x100b2da0, 0x3)   mov(esi, memd_a32(ss, ebp - 0x44));   /* mov esi, [ebp-0x44] */
    II(0x100b2da3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b2da5, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x100b2da7, 0x5)   calld(0x100ac220, -0x6b8c);           /* call 0x100ac220 */
    II(0x100b2dac, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
//    II(0x100b2daf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x100b2db2, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x100b2db5, 0x2)   jmpd(0x100b2dbd, 0x6);                /* jmp 0x100b2dbd */
l_0x100b2db7:
    II(0x100b2db7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100b2dba, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
l_0x100b2dbd:
    II(0x100b2dbd, 0x3)   mov(edx, memd_a32(ss, ebp - 0x54));   /* mov edx, [ebp-0x54] */
    II(0x100b2dc0, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x100b2dc3, 0x5)   calld(0x1008b060, -0x27d68);          /* call 0x1008b060 */
    II(0x100b2dc8, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x100b2dcb, 0x5)   calld(0x1008af84, -0x27e4c);          /* call 0x1008af84 */
    II(0x100b2dd0, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b2dd2, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100b2dd7, 0x5)   calld(0x100a4d50, -0xe08c);           /* call 0x100a4d50 */
    II(0x100b2ddc, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100b2de0, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b2de2, 0x3)   lea(eax, ebp - 0x58);                 /* lea eax, [ebp-0x58] */
    II(0x100b2de5, 0x5)   calld(0x10088b7c, -0x2a26e);          /* call 0x10088b7c */
    II(0x100b2dea, 0x2)   jmpd(0x100b2df0, 0x4);                /* jmp 0x100b2df0 */
l_0x100b2dec:
    II(0x100b2dec, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
l_0x100b2df0:
    II(0x100b2df0, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100b2df3, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100b2df5, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100b2df6, 0x1)   popd(edi);                            /* pop edi */
    II(0x100b2df7, 0x1)   popd(esi);                            /* pop esi */
    II(0x100b2df8, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100b2df9, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100b2dfa, 0x1)   retd();                               /* ret */
FUNC_END

