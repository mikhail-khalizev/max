FUNC_BEGIN(0x100cc90c, 0xb535dd7707e74485, 0x20, ({0x68, 0x54, 0, 0, 0, 0xe8, 0x3c, 0x94, 0x9, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x38, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x42, 0x9c, 0xfa, 0xff, 0xe8, 0x75, 0x5d, 0x8, 0, 0x3b, 0x45, 0xfc, 0x74, 0x13, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0x2d, 0x9c, 0xfa, 0xff, 0x66, 0xf7, 0x40, 0x12, 0xc0, 0x1, 0x75, 0x2, 0xeb, 0x5, 0xe9, 0x61, 0x1, 0, 0, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x83, 0xf8, 0x2, 0xf, 0x84, 0x51, 0x1, 0, 0, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x15, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x31, 0xd2, 0x8a, 0x15, 0xc8, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0x2, 0xeb, 0x5, 0xe9, 0x2a, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0xdc, 0x9b, 0xfa, 0xff, 0xf6, 0x40, 0x13, 0x2, 0x74, 0x3c, 0x8d, 0x45, 0xec, 0xe8, 0xb, 0x57, 0xfa, 0xff, 0x8d, 0x45, 0xe0, 0xe8, 0x3, 0x57, 0xfa, 0xff, 0x8d, 0x5d, 0xe0, 0x8d, 0x55, 0xec, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0xb5, 0x9b, 0xfa, 0xff, 0xe8, 0x40, 0x98, 0xfa, 0xff, 0xe8, 0x4d, 0x6c, 0x7, 0, 0xf, 0xbf, 0x45, 0xee, 0x85, 0xc0, 0xf, 0x84, 0xe2, 0, 0, 0, 0xe9, 0xb4, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0x8f, 0x9b, 0xfa, 0xff, 0x8b, 0x40, 0x50, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0xf, 0x8f, 0x9b, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0x76, 0x9b, 0xfa, 0xff, 0xe8, 0xa9, 0x5c, 0x8, 0, 0x3b, 0x45, 0xfc, 0xf, 0x85, 0x80, 0, 0, 0, 0xb8, 0x21, 0, 0, 0, 0xe8, 0xea, 0x93, 0x9, 0, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xd8, 0x83, 0x7d, 0xd8, 0, 0x74, 0x38, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xd4, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xd4, 0xff, 0x52, 0x74, 0xf, 0xbf, 0xc8, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0x8b, 0x9b, 0xfa, 0xff, 0x89, 0xc3, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xdc, 0xe8, 0xb9, 0xf2, 0xfb, 0xff, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xcc, 0xeb, 0x6, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xcc, 0x8b, 0x55, 0xcc, 0x8d, 0x45, 0xc8, 0xe8, 0xf2, 0xe5, 0xfb, 0xff, 0x8d, 0x45, 0xc8, 0xe8, 0xe, 0xe5, 0xfb, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xce, 0x82, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xc8, 0xe8, 0xf0, 0xc0, 0xfb, 0xff, 0xeb, 0x29, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0x37, 0x9b, 0xfa, 0xff, 0xe8, 0x3d, 0x64, 0xfd, 0xff, 0x84, 0xc0, 0x74, 0x15, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xf8, 0xff, 0x92, 0x80, 0, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100cc90c, 0x5)   pushd(0x54);                          /* push dword 0x54 */
    II(0x100cc911, 0x5)   calld(sys_check_available_stack_size, 0x9943c); /* call 0x10165d52 */
    II(0x100cc916, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100cc917, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100cc918, 0x1)   pushd(edx);                           /* push edx */
    II(0x100cc919, 0x1)   pushd(esi);                           /* push esi */
    II(0x100cc91a, 0x1)   pushd(edi);                           /* push edi */
    II(0x100cc91b, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100cc91c, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100cc91e, 0x6)   sub(esp, 0x38);                       /* sub esp, 0x38 */
    II(0x100cc924, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100cc927, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cc92a, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100cc92d, 0x5)   calld(0x10076574, -0x563be);          /* call 0x10076574 */
    II(0x100cc932, 0x5)   calld(0x101526ac, 0x85d75);           /* call 0x101526ac */
    II(0x100cc937, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x4));    /* cmp eax, [ebp-0x4] */
    II(0x100cc93a, 0x2)   jzd(0x100cc94f, 0x13);                /* jz 0x100cc94f */
    II(0x100cc93c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cc93f, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100cc942, 0x5)   calld(0x10076574, -0x563d3);          /* call 0x10076574 */
    II(0x100cc947, 0x6)   test(memw_a32(ds, eax + 0x12), 0x1c0); /* test word [eax+0x12], 0x1c0 */
    II(0x100cc94d, 0x2)   jnzd(0x100cc951, 0x2);                /* jnz 0x100cc951 */
l_0x100cc94f:
    II(0x100cc94f, 0x2)   jmpd(0x100cc956, 0x5);                /* jmp 0x100cc956 */
l_0x100cc951:
    II(0x100cc951, 0x5)   jmpd(0x100ccab7, 0x161);              /* jmp 0x100ccab7 */
l_0x100cc956:
    II(0x100cc956, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100cc958, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x100cc95d, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x100cc960, 0x6)   jzd(0x100ccab7, 0x151);               /* jz dword 0x100ccab7 */
    II(0x100cc966, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100cc968, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x100cc96d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100cc96f, 0x2)   jnzd(0x100cc986, 0x15);               /* jnz 0x100cc986 */
    II(0x100cc971, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cc974, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x100cc977, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100cc97a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cc97c, 0x6)   mov(dl, memb_a32(ds, 0x101c37c8));    /* mov dl, [0x101c37c8] */
    II(0x100cc982, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100cc984, 0x2)   jnzd(0x100cc988, 0x2);                /* jnz 0x100cc988 */
l_0x100cc986:
    II(0x100cc986, 0x2)   jmpd(0x100cc98d, 0x5);                /* jmp 0x100cc98d */
l_0x100cc988:
    II(0x100cc988, 0x5)   jmpd(0x100ccab7, 0x12a);              /* jmp 0x100ccab7 */
l_0x100cc98d:
    II(0x100cc98d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cc990, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100cc993, 0x5)   calld(0x10076574, -0x56424);          /* call 0x10076574 */
    II(0x100cc998, 0x4)   test(memb_a32(ds, eax + 0x13), 0x2);  /* test byte [eax+0x13], 0x2 */
    II(0x100cc99c, 0x2)   jzd(0x100cc9da, 0x3c);                /* jz 0x100cc9da */
    II(0x100cc99e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100cc9a1, 0x5)   calld(0x100720b1, -0x5a8f5);          /* call 0x100720b1 */
    II(0x100cc9a6, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100cc9a9, 0x5)   calld(0x100720b1, -0x5a8fd);          /* call 0x100720b1 */
    II(0x100cc9ae, 0x3)   lea(ebx, ebp - 0x20);                 /* lea ebx, [ebp-0x20] */
    II(0x100cc9b1, 0x3)   lea(edx, ebp - 0x14);                 /* lea edx, [ebp-0x14] */
    II(0x100cc9b4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cc9b7, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100cc9ba, 0x5)   calld(0x10076574, -0x5644b);          /* call 0x10076574 */
    II(0x100cc9bf, 0x5)   calld(0x10076204, -0x567c0);          /* call 0x10076204 */
    II(0x100cc9c4, 0x5)   calld(0x10143616, 0x76c4d);           /* call 0x10143616 */
    II(0x100cc9c9, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x12)); /* movsx eax, word [ebp-0x12] */
    II(0x100cc9cd, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100cc9cf, 0x6)   jzd(0x100ccab7, 0xe2);                /* jz dword 0x100ccab7 */
    II(0x100cc9d5, 0x5)   jmpd(0x100cca8e, 0xb4);               /* jmp 0x100cca8e */
l_0x100cc9da:
    II(0x100cc9da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cc9dd, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100cc9e0, 0x5)   calld(0x10076574, -0x56471);          /* call 0x10076574 */
    II(0x100cc9e5, 0x3)   mov(eax, memd_a32(ds, eax + 0x50));   /* mov eax, [eax+0x50] */
    II(0x100cc9e8, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100cc9eb, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100cc9ed, 0x6)   jgd(0x100cca8e, 0x9b);                /* jg dword 0x100cca8e */
    II(0x100cc9f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cc9f6, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100cc9f9, 0x5)   calld(0x10076574, -0x5648a);          /* call 0x10076574 */
    II(0x100cc9fe, 0x5)   calld(0x101526ac, 0x85ca9);           /* call 0x101526ac */
    II(0x100cca03, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x4));    /* cmp eax, [ebp-0x4] */
    II(0x100cca06, 0x6)   jnzd(0x100cca8c, 0x80);               /* jnz dword 0x100cca8c */
    II(0x100cca0c, 0x5)   mov(eax, 0x21);                       /* mov eax, 0x21 */
    II(0x100cca11, 0x5)   calld(sys_new, 0x993ea);              /* call 0x10165e00 */
    II(0x100cca16, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
//    II(0x100cca19, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100cca1c, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x100cca1f, 0x4)   cmp(memd_a32(ss, ebp - 0x28), 0);     /* cmp dword [ebp-0x28], 0x0 */
    II(0x100cca23, 0x2)   jzd(0x100cca5d, 0x38);                /* jz 0x100cca5d */
    II(0x100cca25, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cca28, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
//    II(0x100cca2b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100cca2e, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100cca31, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x100cca34, 0x3)   calld_abs(memd_a32(ds, edx + 0x74));  /* call dword near [edx+0x74] */
    II(0x100cca37, 0x3)   movsx(ecx, ax);                       /* movsx ecx, ax */
    II(0x100cca3a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cca3d, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100cca40, 0x5)   calld(0x100765d0, -0x56475);          /* call 0x100765d0 */
    II(0x100cca45, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100cca47, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100cca4a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x100cca4d, 0x5)   calld(0x1008bd0b, -0x40d47);          /* call 0x1008bd0b */
    II(0x100cca52, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
//    II(0x100cca55, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x100cca58, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100cca5b, 0x2)   jmpd(0x100cca63, 0x6);                /* jmp 0x100cca63 */
l_0x100cca5d:
    II(0x100cca5d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x100cca60, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
l_0x100cca63:
    II(0x100cca63, 0x3)   mov(edx, memd_a32(ss, ebp - 0x34));   /* mov edx, [ebp-0x34] */
    II(0x100cca66, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100cca69, 0x5)   calld(0x1008b060, -0x41a0e);          /* call 0x1008b060 */
    II(0x100cca6e, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100cca71, 0x5)   calld(0x1008af84, -0x41af2);          /* call 0x1008af84 */
    II(0x100cca76, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100cca78, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100cca7d, 0x5)   calld(0x100a4d50, -0x27d32);          /* call 0x100a4d50 */
    II(0x100cca82, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100cca84, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x100cca87, 0x5)   calld(0x10088b7c, -0x43f10);          /* call 0x10088b7c */
l_0x100cca8c:
    II(0x100cca8c, 0x2)   jmpd(0x100ccab7, 0x29);               /* jmp 0x100ccab7 */
l_0x100cca8e:
    II(0x100cca8e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100cca91, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100cca94, 0x5)   calld(0x100765d0, -0x564c9);          /* call 0x100765d0 */
    II(0x100cca99, 0x5)   calld(0x100a2edb, -0x29bc3);          /* call 0x100a2edb */
    II(0x100cca9e, 0x2)   test(al, al);                         /* test al, al */
    II(0x100ccaa0, 0x2)   jzd(0x100ccab7, 0x15);                /* jz 0x100ccab7 */
    II(0x100ccaa2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100ccaa5, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
//    II(0x100ccaa8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ccaab, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x100ccaae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100ccab1, 0x6)   calld_abs(memd_a32(ds, edx + 0x80));  /* call dword near [edx+0x80] */
l_0x100ccab7:
    II(0x100ccab7, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100ccab9, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100ccaba, 0x1)   popd(edi);                            /* pop edi */
    II(0x100ccabb, 0x1)   popd(esi);                            /* pop esi */
    II(0x100ccabc, 0x1)   popd(edx);                            /* pop edx */
    II(0x100ccabd, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100ccabe, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100ccabf, 0x1)   retd();                               /* ret */
FUNC_END

