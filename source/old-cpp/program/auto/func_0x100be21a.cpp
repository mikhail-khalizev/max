FUNC_BEGIN(0x100be21a, 0x20ea2cddd277a378, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x2e, 0x7b, 0xa, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xfc, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xf0, 0xe8, 0xbb, 0x82, 0xfb, 0xff, 0x89, 0x45, 0xf4, 0x80, 0x65, 0xf8, 0xfe, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0xe6, 0x80, 0xfb, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xf0, 0xe8, 0xe0, 0x81, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0x92, 0x89, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x1, 0xcb, 0x7, 0, 0x84, 0xc0, 0xf, 0x84, 0xbd, 0, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0x20, 0x81, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0x75, 0x11, 0x8d, 0x45, 0xf0, 0xe8, 0x9, 0x81, 0xfb, 0xff, 0xe8, 0x10, 0x44, 0x9, 0, 0x85, 0xc0, 0x74, 0x5, 0xe9, 0x6c, 0, 0, 0, 0x8d, 0x45, 0xf0, 0xe8, 0xf3, 0x80, 0xfb, 0xff, 0xe8, 0x8a, 0x7f, 0xfb, 0xff, 0x8b, 0x40, 0x19, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7f, 0xf, 0x8d, 0x45, 0xf0, 0xe8, 0xdc, 0x80, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x18, 0x75, 0x2, 0xeb, 0xf, 0x8d, 0x45, 0xf0, 0xe8, 0xcb, 0x80, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x19, 0x75, 0x2, 0xeb, 0xf, 0x8d, 0x45, 0xf0, 0xe8, 0xba, 0x80, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x17, 0x75, 0x2, 0xeb, 0xf, 0x8d, 0x45, 0xf0, 0xe8, 0xa9, 0x80, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x1b, 0x75, 0x2, 0xeb, 0xf, 0x8d, 0x45, 0xf0, 0xe8, 0x98, 0x80, 0xfb, 0xff, 0x66, 0x83, 0x78, 0x8, 0x20, 0x75, 0x2, 0xeb, 0x2, 0xeb, 0x1d, 0xe8, 0x84, 0xc4, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8d, 0x45, 0xf0, 0xe8, 0xb0, 0x80, 0xfb, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x7c, 0x70, 0xfe, 0xff, 0xe9, 0x29, 0xff, 0xff, 0xff, 0xb8, 0x84, 0x81, 0x1c, 0x10, 0xe8, 0xf9, 0x7f, 0xfb, 0xff, 0x8d, 0x5d, 0xf0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xf1, 0x80, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0xa3, 0x88, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x12, 0xca, 0x7, 0, 0x84, 0xc0, 0x74, 0x49, 0x8d, 0x45, 0xf0, 0xe8, 0x35, 0x80, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0x75, 0x11, 0x8d, 0x45, 0xf0, 0xe8, 0x1e, 0x80, 0xfb, 0xff, 0xe8, 0x25, 0x43, 0x9, 0, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x1d, 0xe8, 0xa, 0xc4, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8d, 0x45, 0xf0, 0xe8, 0x36, 0x80, 0xfb, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x2, 0x70, 0xfe, 0xff, 0xeb, 0xa1, 0xb8, 0xa8, 0x81, 0x1c, 0x10, 0xe8, 0x82, 0x7f, 0xfb, 0xff, 0x8d, 0x5d, 0xf0, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x7a, 0x80, 0xfb, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xf0, 0xe8, 0x2c, 0x88, 0xfb, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x9b, 0xc9, 0x7, 0, 0x84, 0xc0, 0x74, 0x49, 0x8d, 0x45, 0xf0, 0xe8, 0xbe, 0x7f, 0xfb, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x26, 0x8b, 0x45, 0xfc, 0xf, 0xbf, 0, 0x39, 0xc2, 0x75, 0x11, 0x8d, 0x45, 0xf0, 0xe8, 0xa7, 0x7f, 0xfb, 0xff, 0xe8, 0xae, 0x42, 0x9, 0, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x1d, 0xe8, 0x93, 0xc3, 0xfc, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0x8d, 0x45, 0xf0, 0xe8, 0xbf, 0x7f, 0xfb, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x8b, 0x6f, 0xfe, 0xff, 0xeb, 0xa1, 0x31, 0xd2, 0x8d, 0x45, 0xf0, 0xe8, 0x3f, 0x7b, 0xfb, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100be21a, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x100be21f, 0x5)   calld(sys_check_available_stack_size, 0xa7b2e); /* call 0x10165d52 */
    II(0x100be224, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100be225, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100be226, 0x1)   pushd(edx);                           /* push edx */
    II(0x100be227, 0x1)   pushd(esi);                           /* push esi */
    II(0x100be228, 0x1)   pushd(edi);                           /* push edi */
    II(0x100be229, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100be22a, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100be22c, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x100be232, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100be235, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x100be239, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100be23c, 0x5)   calld(0x100764fc, -0x47d45);          /* call 0x100764fc */
    II(0x100be241, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100be244, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x100be248, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x100be24d, 0x5)   calld(0x10076338, -0x47f1a);          /* call 0x10076338 */
    II(0x100be252, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100be254, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100be257, 0x5)   calld(0x1007643c, -0x47e20);          /* call 0x1007643c */
    II(0x100be25c, 0x2)   jmpd(0x100be266, 0x8);                /* jmp 0x100be266 */
l_0x100be25e:
    II(0x100be25e, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100be261, 0x5)   calld(0x10076bf8, -0x4766e);          /* call 0x10076bf8 */
l_0x100be266:
    II(0x100be266, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100be268, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100be26b, 0x5)   calld(0x1013ad71, 0x7cb01);           /* call 0x1013ad71 */
    II(0x100be270, 0x2)   test(al, al);                         /* test al, al */
    II(0x100be272, 0x6)   jzd(0x100be335, 0xbd);                /* jz dword 0x100be335 */
    II(0x100be278, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100be27b, 0x5)   calld(0x100763a0, -0x47ee0);          /* call 0x100763a0 */
    II(0x100be280, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100be282, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100be285, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100be288, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100be28b, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100be28d, 0x2)   jnzd(0x100be2a0, 0x11);               /* jnz 0x100be2a0 */
    II(0x100be28f, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100be292, 0x5)   calld(0x100763a0, -0x47ef7);          /* call 0x100763a0 */
    II(0x100be297, 0x5)   calld(0x101526ac, 0x94410);           /* call 0x101526ac */
    II(0x100be29c, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100be29e, 0x2)   jzd(0x100be2a5, 0x5);                 /* jz 0x100be2a5 */
l_0x100be2a0:
    II(0x100be2a0, 0x5)   jmpd(0x100be311, 0x6c);               /* jmp 0x100be311 */
l_0x100be2a5:
    II(0x100be2a5, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100be2a8, 0x5)   calld(0x100763a0, -0x47f0d);          /* call 0x100763a0 */
    II(0x100be2ad, 0x5)   calld(0x1007623c, -0x48076);          /* call 0x1007623c */
    II(0x100be2b2, 0x3)   mov(eax, memd_a32(ds, eax + 0x19));   /* mov eax, [eax+0x19] */
    II(0x100be2b5, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100be2b8, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100be2ba, 0x2)   jgd(0x100be2cb, 0xf);                 /* jg 0x100be2cb */
    II(0x100be2bc, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100be2bf, 0x5)   calld(0x100763a0, -0x47f24);          /* call 0x100763a0 */
    II(0x100be2c4, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x18);   /* cmp word [eax+0x8], 0x18 */
    II(0x100be2c9, 0x2)   jnzd(0x100be2cd, 0x2);                /* jnz 0x100be2cd */
l_0x100be2cb:
    II(0x100be2cb, 0x2)   jmpd(0x100be2dc, 0xf);                /* jmp 0x100be2dc */
l_0x100be2cd:
    II(0x100be2cd, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100be2d0, 0x5)   calld(0x100763a0, -0x47f35);          /* call 0x100763a0 */
    II(0x100be2d5, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x19);   /* cmp word [eax+0x8], 0x19 */
    II(0x100be2da, 0x2)   jnzd(0x100be2de, 0x2);                /* jnz 0x100be2de */
l_0x100be2dc:
    II(0x100be2dc, 0x2)   jmpd(0x100be2ed, 0xf);                /* jmp 0x100be2ed */
l_0x100be2de:
    II(0x100be2de, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100be2e1, 0x5)   calld(0x100763a0, -0x47f46);          /* call 0x100763a0 */
    II(0x100be2e6, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x17);   /* cmp word [eax+0x8], 0x17 */
    II(0x100be2eb, 0x2)   jnzd(0x100be2ef, 0x2);                /* jnz 0x100be2ef */
l_0x100be2ed:
    II(0x100be2ed, 0x2)   jmpd(0x100be2fe, 0xf);                /* jmp 0x100be2fe */
l_0x100be2ef:
    II(0x100be2ef, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100be2f2, 0x5)   calld(0x100763a0, -0x47f57);          /* call 0x100763a0 */
    II(0x100be2f7, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x1b);   /* cmp word [eax+0x8], 0x1b */
    II(0x100be2fc, 0x2)   jnzd(0x100be300, 0x2);                /* jnz 0x100be300 */
l_0x100be2fe:
    II(0x100be2fe, 0x2)   jmpd(0x100be30f, 0xf);                /* jmp 0x100be30f */
l_0x100be300:
    II(0x100be300, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100be303, 0x5)   calld(0x100763a0, -0x47f68);          /* call 0x100763a0 */
    II(0x100be308, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x20);   /* cmp word [eax+0x8], 0x20 */
    II(0x100be30d, 0x2)   jnzd(0x100be311, 0x2);                /* jnz 0x100be311 */
l_0x100be30f:
    II(0x100be30f, 0x2)   jmpd(0x100be313, 0x2);                /* jmp 0x100be313 */
l_0x100be311:
    II(0x100be311, 0x2)   jmpd(0x100be330, 0x1d);               /* jmp 0x100be330 */
l_0x100be313:
    II(0x100be313, 0x5)   calld(0x1008a79c, -0x33b7c);          /* call 0x1008a79c */
    II(0x100be318, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100be31a, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100be31c, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100be31f, 0x5)   calld(0x100763d4, -0x47f50);          /* call 0x100763d4 */
    II(0x100be324, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100be326, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100be32b, 0x5)   calld(0x100a53ac, -0x18f84);          /* call 0x100a53ac */
l_0x100be330:
    II(0x100be330, 0x5)   jmpd(0x100be25e, -0xd7);              /* jmp 0x100be25e */
l_0x100be335:
    II(0x100be335, 0x5)   mov(eax, 0x101c8184);                 /* mov eax, 0x101c8184 */
    II(0x100be33a, 0x5)   calld(0x10076338, -0x48007);          /* call 0x10076338 */
    II(0x100be33f, 0x3)   lea(ebx, ebp - 0x10);                 /* lea ebx, [ebp-0x10] */
    II(0x100be342, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100be344, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100be346, 0x5)   calld(0x1007643c, -0x47f0f);          /* call 0x1007643c */
    II(0x100be34b, 0x2)   jmpd(0x100be355, 0x8);                /* jmp 0x100be355 */
l_0x100be34d:
    II(0x100be34d, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100be350, 0x5)   calld(0x10076bf8, -0x4775d);          /* call 0x10076bf8 */
l_0x100be355:
    II(0x100be355, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100be357, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100be35a, 0x5)   calld(0x1013ad71, 0x7ca12);           /* call 0x1013ad71 */
    II(0x100be35f, 0x2)   test(al, al);                         /* test al, al */
    II(0x100be361, 0x2)   jzd(0x100be3ac, 0x49);                /* jz 0x100be3ac */
    II(0x100be363, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100be366, 0x5)   calld(0x100763a0, -0x47fcb);          /* call 0x100763a0 */
    II(0x100be36b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100be36d, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100be370, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100be373, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100be376, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100be378, 0x2)   jnzd(0x100be38b, 0x11);               /* jnz 0x100be38b */
    II(0x100be37a, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100be37d, 0x5)   calld(0x100763a0, -0x47fe2);          /* call 0x100763a0 */
    II(0x100be382, 0x5)   calld(0x101526ac, 0x94325);           /* call 0x101526ac */
    II(0x100be387, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100be389, 0x2)   jzd(0x100be38d, 0x2);                 /* jz 0x100be38d */
l_0x100be38b:
    II(0x100be38b, 0x2)   jmpd(0x100be3aa, 0x1d);               /* jmp 0x100be3aa */
l_0x100be38d:
    II(0x100be38d, 0x5)   calld(0x1008a79c, -0x33bf6);          /* call 0x1008a79c */
    II(0x100be392, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100be394, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100be396, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100be399, 0x5)   calld(0x100763d4, -0x47fca);          /* call 0x100763d4 */
    II(0x100be39e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100be3a0, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100be3a5, 0x5)   calld(0x100a53ac, -0x18ffe);          /* call 0x100a53ac */
l_0x100be3aa:
    II(0x100be3aa, 0x2)   jmpd(0x100be34d, -0x5f);              /* jmp 0x100be34d */
l_0x100be3ac:
    II(0x100be3ac, 0x5)   mov(eax, 0x101c81a8);                 /* mov eax, 0x101c81a8 */
    II(0x100be3b1, 0x5)   calld(0x10076338, -0x4807e);          /* call 0x10076338 */
    II(0x100be3b6, 0x3)   lea(ebx, ebp - 0x10);                 /* lea ebx, [ebp-0x10] */
    II(0x100be3b9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100be3bb, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100be3bd, 0x5)   calld(0x1007643c, -0x47f86);          /* call 0x1007643c */
    II(0x100be3c2, 0x2)   jmpd(0x100be3cc, 0x8);                /* jmp 0x100be3cc */
l_0x100be3c4:
    II(0x100be3c4, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100be3c7, 0x5)   calld(0x10076bf8, -0x477d4);          /* call 0x10076bf8 */
l_0x100be3cc:
    II(0x100be3cc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100be3ce, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100be3d1, 0x5)   calld(0x1013ad71, 0x7c99b);           /* call 0x1013ad71 */
    II(0x100be3d6, 0x2)   test(al, al);                         /* test al, al */
    II(0x100be3d8, 0x2)   jzd(0x100be423, 0x49);                /* jz 0x100be423 */
    II(0x100be3da, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100be3dd, 0x5)   calld(0x100763a0, -0x48042);          /* call 0x100763a0 */
    II(0x100be3e2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100be3e4, 0x3)   mov(dl, memb_a32(ds, eax + 0x26));    /* mov dl, [eax+0x26] */
    II(0x100be3e7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100be3ea, 0x3)   movsx(eax, memw_a32(ds, eax));        /* movsx eax, word [eax] */
    II(0x100be3ed, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100be3ef, 0x2)   jnzd(0x100be402, 0x11);               /* jnz 0x100be402 */
    II(0x100be3f1, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100be3f4, 0x5)   calld(0x100763a0, -0x48059);          /* call 0x100763a0 */
    II(0x100be3f9, 0x5)   calld(0x101526ac, 0x942ae);           /* call 0x101526ac */
    II(0x100be3fe, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100be400, 0x2)   jzd(0x100be404, 0x2);                 /* jz 0x100be404 */
l_0x100be402:
    II(0x100be402, 0x2)   jmpd(0x100be421, 0x1d);               /* jmp 0x100be421 */
l_0x100be404:
    II(0x100be404, 0x5)   calld(0x1008a79c, -0x33c6d);          /* call 0x1008a79c */
    II(0x100be409, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100be40b, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100be40d, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100be410, 0x5)   calld(0x100763d4, -0x48041);          /* call 0x100763d4 */
    II(0x100be415, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100be417, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100be41c, 0x5)   calld(0x100a53ac, -0x19075);          /* call 0x100a53ac */
l_0x100be421:
    II(0x100be421, 0x2)   jmpd(0x100be3c4, -0x5f);              /* jmp 0x100be3c4 */
l_0x100be423:
    II(0x100be423, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100be425, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x100be428, 0x5)   calld(0x10075f6c, -0x484c1);          /* call 0x10075f6c */
    II(0x100be42d, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100be42f, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100be430, 0x1)   popd(edi);                            /* pop edi */
    II(0x100be431, 0x1)   popd(esi);                            /* pop esi */
    II(0x100be432, 0x1)   popd(edx);                            /* pop edx */
    II(0x100be433, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100be434, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100be435, 0x1)   retd();                               /* ret */
FUNC_END

