FUNC_BEGIN(0x1012b6af, 0x575a3ef546674868, 0x20, ({0x68, 0x48, 0, 0, 0, 0xe8, 0x99, 0xa6, 0x3, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x38, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf8, 0x89, 0x5d, 0xf4, 0x89, 0x4d, 0xfc, 0xf, 0xbf, 0x45, 0xf4, 0x6b, 0xc0, 0x33, 0xf6, 0x80, 0xc1, 0x81, 0x1c, 0x10, 0x2, 0x74, 0x8, 0x66, 0xc7, 0x45, 0xc8, 0x2, 0, 0xeb, 0x6, 0x66, 0xc7, 0x45, 0xc8, 0x1, 0, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xd2, 0x8b, 0x45, 0xf8, 0x66, 0x89, 0x45, 0xd6, 0x66, 0xc7, 0x45, 0xec, 0, 0, 0x66, 0xc7, 0x45, 0xce, 0xff, 0, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0x8b, 0x40, 0x2, 0x89, 0x45, 0xca, 0xf, 0xbf, 0x45, 0xf4, 0x6b, 0xc0, 0x33, 0x66, 0x8b, 0x80, 0xce, 0x81, 0x1c, 0x10, 0x66, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0x10, 0x66, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0x14, 0x66, 0x89, 0x45, 0xea, 0xf, 0xbf, 0x45, 0x10, 0x83, 0xe8, 0x10, 0x89, 0x45, 0xd8, 0xf, 0xbf, 0x45, 0x14, 0x83, 0xe8, 0x10, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xd8, 0x83, 0xc0, 0x20, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0xdc, 0x83, 0xc0, 0x20, 0x89, 0x45, 0xe4, 0x8d, 0x45, 0xc8, 0xe8, 0x81, 0xda, 0xfb, 0xff, 0xf, 0xbf, 0x45, 0xf4, 0x6b, 0xc0, 0x33, 0xf6, 0x80, 0xc3, 0x81, 0x1c, 0x10, 0xa, 0x74, 0x59, 0xf, 0xbf, 0x45, 0xf4, 0x6b, 0xc0, 0x33, 0x8b, 0x80, 0xc6, 0x81, 0x1c, 0x10, 0x8b, 0x40, 0x9, 0xc1, 0xf8, 0x18, 0xf, 0xbf, 0x4d, 0xc8, 0xd3, 0xf8, 0x89, 0xc1, 0xf, 0xbf, 0x45, 0xe8, 0x1, 0xc8, 0x66, 0x89, 0x45, 0xe8, 0xf, 0xbf, 0x45, 0xf4, 0x6b, 0xc0, 0x33, 0x8b, 0x80, 0xc6, 0x81, 0x1c, 0x10, 0x8b, 0x40, 0xa, 0xc1, 0xf8, 0x18, 0xf, 0xbf, 0x4d, 0xc8, 0xd3, 0xf8, 0x89, 0xc1, 0xf, 0xbf, 0x45, 0xea, 0x1, 0xc8, 0x66, 0x89, 0x45, 0xea, 0x8b, 0x45, 0xec, 0x66, 0xff, 0x45, 0xec, 0x8d, 0x45, 0xc8, 0xe8, 0x18, 0xda, 0xfb, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x8, 0}))
    II(0x1012b6af, 0x5)   pushd(0x48);                          /* push dword 0x48 */
    II(0x1012b6b4, 0x5)   calld(sys_check_available_stack_size, 0x3a699); /* call 0x10165d52 */
    II(0x1012b6b9, 0x1)   pushd(esi);                           /* push esi */
    II(0x1012b6ba, 0x1)   pushd(edi);                           /* push edi */
    II(0x1012b6bb, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1012b6bc, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1012b6be, 0x6)   sub(esp, 0x38);                       /* sub esp, 0x38 */
    II(0x1012b6c4, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1012b6c7, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x1012b6ca, 0x3)   mov(memd_a32(ss, ebp - 0xc), ebx);    /* mov [ebp-0xc], ebx */
    II(0x1012b6cd, 0x3)   mov(memd_a32(ss, ebp - 0x4), ecx);    /* mov [ebp-0x4], ecx */
    II(0x1012b6d0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1012b6d4, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x1012b6d7, 0x7)   test(memb_a32(ds, eax + 0x101c81c1), 0x2); /* test byte [eax+0x101c81c1], 0x2 */
    II(0x1012b6de, 0x2)   jzd(0x1012b6e8, 0x8);                 /* jz 0x1012b6e8 */
    II(0x1012b6e0, 0x6)   mov(memw_a32(ss, ebp - 0x38), 0x2);   /* mov word [ebp-0x38], 0x2 */
    II(0x1012b6e6, 0x2)   jmpd(0x1012b6ee, 0x6);                /* jmp 0x1012b6ee */
l_0x1012b6e8:
    II(0x1012b6e8, 0x6)   mov(memw_a32(ss, ebp - 0x38), 0x1);   /* mov word [ebp-0x38], 0x1 */
l_0x1012b6ee:
    II(0x1012b6ee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1012b6f1, 0x3)   mov(memd_a32(ss, ebp - 0x2e), eax);   /* mov [ebp-0x2e], eax */
    II(0x1012b6f4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012b6f7, 0x4)   mov(memw_a32(ss, ebp - 0x2a), ax);    /* mov [ebp-0x2a], ax */
    II(0x1012b6fb, 0x6)   mov(memw_a32(ss, ebp - 0x14), 0);     /* mov word [ebp-0x14], 0x0 */
    II(0x1012b701, 0x6)   mov(memw_a32(ss, ebp - 0x32), 0xff);  /* mov word [ebp-0x32], 0xff */
    II(0x1012b707, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x1012b70b, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1012b711, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x1012b717, 0x3)   mov(eax, memd_a32(ds, eax + 0x2));    /* mov eax, [eax+0x2] */
    II(0x1012b71a, 0x3)   mov(memd_a32(ss, ebp - 0x36), eax);   /* mov [ebp-0x36], eax */
    II(0x1012b71d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1012b721, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x1012b724, 0x7)   mov(ax, memw_a32(ds, eax + 0x101c81ce)); /* mov ax, [eax+0x101c81ce] */
    II(0x1012b72b, 0x4)   mov(memw_a32(ss, ebp - 0x30), ax);    /* mov [ebp-0x30], ax */
    II(0x1012b72f, 0x3)   mov(eax, memd_a32(ss, ebp + 0x10));   /* mov eax, [ebp+0x10] */
    II(0x1012b732, 0x4)   mov(memw_a32(ss, ebp - 0x18), ax);    /* mov [ebp-0x18], ax */
    II(0x1012b736, 0x3)   mov(eax, memd_a32(ss, ebp + 0x14));   /* mov eax, [ebp+0x14] */
    II(0x1012b739, 0x4)   mov(memw_a32(ss, ebp - 0x16), ax);    /* mov [ebp-0x16], ax */
    II(0x1012b73d, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x10)); /* movsx eax, word [ebp+0x10] */
    II(0x1012b741, 0x3)   sub(eax, 0x10);                       /* sub eax, 0x10 */
    II(0x1012b744, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x1012b747, 0x4)   movsx(eax, memw_a32(ss, ebp + 0x14)); /* movsx eax, word [ebp+0x14] */
    II(0x1012b74b, 0x3)   sub(eax, 0x10);                       /* sub eax, 0x10 */
    II(0x1012b74e, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x1012b751, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1012b754, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x1012b757, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1012b75a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1012b75d, 0x3)   add(eax, 0x20);                       /* add eax, 0x20 */
    II(0x1012b760, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x1012b763, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1012b766, 0x5)   calld(0x100e91ec, -0x4257f);          /* call 0x100e91ec */
    II(0x1012b76b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1012b76f, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x1012b772, 0x7)   test(memb_a32(ds, eax + 0x101c81c3), 0xa); /* test byte [eax+0x101c81c3], 0xa */
    II(0x1012b779, 0x2)   jzd(0x1012b7d4, 0x59);                /* jz 0x1012b7d4 */
    II(0x1012b77b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1012b77f, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x1012b782, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c81c6)); /* mov eax, [eax+0x101c81c6] */
    II(0x1012b788, 0x3)   mov(eax, memd_a32(ds, eax + 0x9));    /* mov eax, [eax+0x9] */
    II(0x1012b78b, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x1012b78e, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x38)); /* movsx ecx, word [ebp-0x38] */
    II(0x1012b792, 0x2)   sar(eax, cl);                         /* sar eax, cl */
    II(0x1012b794, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1012b796, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x18)); /* movsx eax, word [ebp-0x18] */
    II(0x1012b79a, 0x2)   add(eax, ecx);                        /* add eax, ecx */
    II(0x1012b79c, 0x4)   mov(memw_a32(ss, ebp - 0x18), ax);    /* mov [ebp-0x18], ax */
    II(0x1012b7a0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1012b7a4, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x1012b7a7, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c81c6)); /* mov eax, [eax+0x101c81c6] */
    II(0x1012b7ad, 0x3)   mov(eax, memd_a32(ds, eax + 0xa));    /* mov eax, [eax+0xa] */
    II(0x1012b7b0, 0x3)   sar(eax, 0x18);                       /* sar eax, 0x18 */
    II(0x1012b7b3, 0x4)   movsx(ecx, memw_a32(ss, ebp - 0x38)); /* movsx ecx, word [ebp-0x38] */
    II(0x1012b7b7, 0x2)   sar(eax, cl);                         /* sar eax, cl */
    II(0x1012b7b9, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1012b7bb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x16)); /* movsx eax, word [ebp-0x16] */
    II(0x1012b7bf, 0x2)   add(eax, ecx);                        /* add eax, ecx */
    II(0x1012b7c1, 0x4)   mov(memw_a32(ss, ebp - 0x16), ax);    /* mov [ebp-0x16], ax */
    II(0x1012b7c5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x1012b7c8, 0x4)   inc(memw_a32(ss, ebp - 0x14));        /* inc word [ebp-0x14] */
    II(0x1012b7cc, 0x3)   lea(eax, ebp - 0x38);                 /* lea eax, [ebp-0x38] */
    II(0x1012b7cf, 0x5)   calld(0x100e91ec, -0x425e8);          /* call 0x100e91ec */
l_0x1012b7d4:
    II(0x1012b7d4, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1012b7d6, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1012b7d7, 0x1)   popd(edi);                            /* pop edi */
    II(0x1012b7d8, 0x1)   popd(esi);                            /* pop esi */
    II(0x1012b7d9, 0x3)   retd(0x8);                            /* ret 0x8 */
FUNC_END

