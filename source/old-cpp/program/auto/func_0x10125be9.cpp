FUNC_BEGIN(0x10125be9, 0xdf7a98659df49437, 0x20, ({0x68, 0x38, 0, 0, 0, 0xe8, 0x5f, 0x1, 0x4, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x1c, 0, 0, 0, 0x89, 0x45, 0xfc, 0xa1, 0x1d, 0x5c, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x83, 0xc0, 0x5, 0x89, 0x45, 0xf4, 0xa0, 0xc8, 0x59, 0x1c, 0x10, 0x88, 0x45, 0xf8, 0xe9, 0xd3, 0, 0, 0, 0x80, 0x3d, 0xc9, 0x59, 0x1c, 0x10, 0, 0x74, 0x12, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x55, 0xf4, 0xb8, 0x1c, 0x5c, 0x1c, 0x10, 0xe8, 0x56, 0xec, 0xff, 0xff, 0xe9, 0xd7, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xf0, 0xe9, 0x81, 0, 0, 0, 0xc7, 0x45, 0xec, 0x4, 0, 0, 0, 0xff, 0x4d, 0xec, 0x66, 0x83, 0x7d, 0xec, 0xff, 0x74, 0x39, 0xf, 0xbf, 0x45, 0xec, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x3, 0x75, 0x1d, 0x31, 0xc9, 0xf, 0xbf, 0x45, 0xec, 0x6b, 0xc0, 0x6, 0xbb, 0x90, 0x40, 0x1c, 0x10, 0x1, 0xc3, 0x8b, 0x55, 0xf4, 0xb8, 0x1c, 0x5c, 0x1c, 0x10, 0xe8, 0xd8, 0x21, 0xfe, 0xff, 0xeb, 0xbd, 0xeb, 0x58, 0x31, 0xc9, 0xbb, 0, 0x90, 0x1b, 0x10, 0x8b, 0x55, 0xf4, 0xb8, 0x1c, 0x5c, 0x1c, 0x10, 0xe8, 0xc0, 0x21, 0xfe, 0xff, 0xeb, 0x42, 0x31, 0xc9, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x6, 0xbb, 0x90, 0x40, 0x1c, 0x10, 0x1, 0xc3, 0x8b, 0x55, 0xf4, 0xb8, 0x1c, 0x5c, 0x1c, 0x10, 0xe8, 0xa1, 0x21, 0xfe, 0xff, 0xeb, 0x23, 0x8b, 0x45, 0xf0, 0x89, 0x45, 0xe8, 0x66, 0x83, 0x7d, 0xe8, 0x4, 0x72, 0x14, 0x66, 0x83, 0x7d, 0xe8, 0x4, 0xf, 0x86, 0x67, 0xff, 0xff, 0xff, 0x66, 0x83, 0x7d, 0xe8, 0x5, 0x74, 0xac, 0xeb, 0xc0, 0xeb, 0xbe, 0xeb, 0x26, 0xeb, 0x24, 0x8a, 0x45, 0xf8, 0x88, 0x45, 0xe4, 0x80, 0x7d, 0xe4, 0x1, 0x72, 0x16, 0x80, 0x7d, 0xe4, 0x2, 0xf, 0x86, 0x17, 0xff, 0xff, 0xff, 0x80, 0x7d, 0xe4, 0x3, 0xf, 0x84, 0x2d, 0xff, 0xff, 0xff, 0xeb, 0xdc, 0xeb, 0xda, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10125be9, 0x5)   pushd(0x38);                          /* push dword 0x38 */
    II(0x10125bee, 0x5)   calld(sys_check_available_stack_size, 0x4015f); /* call 0x10165d52 */
    II(0x10125bf3, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10125bf4, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10125bf5, 0x1)   pushd(edx);                           /* push edx */
    II(0x10125bf6, 0x1)   pushd(esi);                           /* push esi */
    II(0x10125bf7, 0x1)   pushd(edi);                           /* push edi */
    II(0x10125bf8, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10125bf9, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10125bfb, 0x6)   sub(esp, 0x1c);                       /* sub esp, 0x1c */
    II(0x10125c01, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10125c04, 0x5)   mov(eax, memd_a32(ds, 0x101c5c1d));   /* mov eax, [0x101c5c1d] */
    II(0x10125c09, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10125c0c, 0x3)   add(eax, 0x5);                        /* add eax, 0x5 */
    II(0x10125c0f, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10125c12, 0x5)   mov(al, memb_a32(ds, 0x101c59c8));    /* mov al, [0x101c59c8] */
    II(0x10125c17, 0x3)   mov(memb_a32(ss, ebp - 0x8), al);     /* mov [ebp-0x8], al */
    II(0x10125c1a, 0x5)   jmpd(0x10125cf2, 0xd3);               /* jmp 0x10125cf2 */
l_0x10125c1f:
    II(0x10125c1f, 0x7)   cmp(memb_a32(ds, 0x101c59c9), 0);     /* cmp byte [0x101c59c9], 0x0 */
    II(0x10125c26, 0x2)   jzd(0x10125c3a, 0x12);                /* jz 0x10125c3a */
    II(0x10125c28, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x10125c2d, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10125c30, 0x5)   mov(eax, 0x101c5c1c);                 /* mov eax, 0x101c5c1c */
    II(0x10125c35, 0x5)   calld(0x10124890, -0x13aa);           /* call 0x10124890 */
l_0x10125c3a:
    II(0x10125c3a, 0x5)   jmpd(0x10125d16, 0xd7);               /* jmp 0x10125d16 */
l_0x10125c3f:
    II(0x10125c3f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10125c42, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10125c45, 0x5)   jmpd(0x10125ccb, 0x81);               /* jmp 0x10125ccb */
l_0x10125c4a:
    II(0x10125c4a, 0x7)   mov(memd_a32(ss, ebp - 0x14), 0x4);   /* mov dword [ebp-0x14], 0x4 */
l_0x10125c51:
    II(0x10125c51, 0x3)   dec(memd_a32(ss, ebp - 0x14));        /* dec dword [ebp-0x14] */
    II(0x10125c54, 0x5)   cmp(memw_a32(ss, ebp - 0x14), -0x1 /* 0xff */); /* cmp word [ebp-0x14], 0xff */
    II(0x10125c59, 0x2)   jzd(0x10125c94, 0x39);                /* jz 0x10125c94 */
    II(0x10125c5b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10125c5f, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10125c65, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x10125c6b, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10125c70, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x10125c73, 0x2)   jnzd(0x10125c92, 0x1d);               /* jnz 0x10125c92 */
    II(0x10125c75, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10125c77, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10125c7b, 0x3)   imul(eax, eax, 0x6);                  /* imul eax, eax, 0x6 */
    II(0x10125c7e, 0x5)   mov(ebx, 0x101c4090);                 /* mov ebx, 0x101c4090 */
    II(0x10125c83, 0x2)   add(ebx, eax);                        /* add ebx, eax */
    II(0x10125c85, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10125c88, 0x5)   mov(eax, 0x101c5c1c);                 /* mov eax, 0x101c5c1c */
    II(0x10125c8d, 0x5)   calld(0x10107e6a, -0x1de28);          /* call 0x10107e6a */
l_0x10125c92:
    II(0x10125c92, 0x2)   jmpd(0x10125c51, -0x43);              /* jmp 0x10125c51 */
l_0x10125c94:
    II(0x10125c94, 0x2)   jmpd(0x10125cee, 0x58);               /* jmp 0x10125cee */
l_0x10125c96:
    II(0x10125c96, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10125c98, 0x5)   mov(ebx, 0x101b9000);                 /* mov ebx, 0x101b9000 */
    II(0x10125c9d, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10125ca0, 0x5)   mov(eax, 0x101c5c1c);                 /* mov eax, 0x101c5c1c */
    II(0x10125ca5, 0x5)   calld(0x10107e6a, -0x1de40);          /* call 0x10107e6a */
    II(0x10125caa, 0x2)   jmpd(0x10125cee, 0x42);               /* jmp 0x10125cee */
l_0x10125cac:
    II(0x10125cac, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x10125cae, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10125cb2, 0x3)   imul(eax, eax, 0x6);                  /* imul eax, eax, 0x6 */
    II(0x10125cb5, 0x5)   mov(ebx, 0x101c4090);                 /* mov ebx, 0x101c4090 */
    II(0x10125cba, 0x2)   add(ebx, eax);                        /* add ebx, eax */
    II(0x10125cbc, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x10125cbf, 0x5)   mov(eax, 0x101c5c1c);                 /* mov eax, 0x101c5c1c */
    II(0x10125cc4, 0x5)   calld(0x10107e6a, -0x1de5f);          /* call 0x10107e6a */
    II(0x10125cc9, 0x2)   jmpd(0x10125cee, 0x23);               /* jmp 0x10125cee */
l_0x10125ccb:
    II(0x10125ccb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10125cce, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10125cd1, 0x5)   cmp(memw_a32(ss, ebp - 0x18), 0x4);   /* cmp word [ebp-0x18], 0x4 */
    II(0x10125cd6, 0x2)   jbd(0x10125cec, 0x14);                /* jb 0x10125cec */
    II(0x10125cd8, 0x5)   cmp(memw_a32(ss, ebp - 0x18), 0x4);   /* cmp word [ebp-0x18], 0x4 */
    II(0x10125cdd, 0x6)   jbed(0x10125c4a, -0x99);              /* jbe dword 0x10125c4a */
    II(0x10125ce3, 0x5)   cmp(memw_a32(ss, ebp - 0x18), 0x5);   /* cmp word [ebp-0x18], 0x5 */
    II(0x10125ce8, 0x2)   jzd(0x10125c96, -0x54);               /* jz 0x10125c96 */
    II(0x10125cea, 0x2)   jmpd(0x10125cac, -0x40);              /* jmp 0x10125cac */
l_0x10125cec:
    II(0x10125cec, 0x2)   jmpd(0x10125cac, -0x42);              /* jmp 0x10125cac */
l_0x10125cee:
    II(0x10125cee, 0x2)   jmpd(0x10125d16, 0x26);               /* jmp 0x10125d16 */
l_0x10125cf0:
    II(0x10125cf0, 0x2)   jmpd(0x10125d16, 0x24);               /* jmp 0x10125d16 */
l_0x10125cf2:
    II(0x10125cf2, 0x3)   mov(al, memb_a32(ss, ebp - 0x8));     /* mov al, [ebp-0x8] */
    II(0x10125cf5, 0x3)   mov(memb_a32(ss, ebp - 0x1c), al);    /* mov [ebp-0x1c], al */
    II(0x10125cf8, 0x4)   cmp(memb_a32(ss, ebp - 0x1c), 0x1);   /* cmp byte [ebp-0x1c], 0x1 */
    II(0x10125cfc, 0x2)   jbd(0x10125d14, 0x16);                /* jb 0x10125d14 */
    II(0x10125cfe, 0x4)   cmp(memb_a32(ss, ebp - 0x1c), 0x2);   /* cmp byte [ebp-0x1c], 0x2 */
    II(0x10125d02, 0x6)   jbed(0x10125c1f, -0xe9);              /* jbe dword 0x10125c1f */
    II(0x10125d08, 0x4)   cmp(memb_a32(ss, ebp - 0x1c), 0x3);   /* cmp byte [ebp-0x1c], 0x3 */
    II(0x10125d0c, 0x6)   jzd(0x10125c3f, -0xd3);               /* jz dword 0x10125c3f */
    II(0x10125d12, 0x2)   jmpd(0x10125cf0, -0x24);              /* jmp 0x10125cf0 */
l_0x10125d14:
    II(0x10125d14, 0x2)   jmpd(0x10125cf0, -0x26);              /* jmp 0x10125cf0 */
l_0x10125d16:
    II(0x10125d16, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10125d18, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10125d19, 0x1)   popd(edi);                            /* pop edi */
    II(0x10125d1a, 0x1)   popd(esi);                            /* pop esi */
    II(0x10125d1b, 0x1)   popd(edx);                            /* pop edx */
    II(0x10125d1c, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10125d1d, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10125d1e, 0x1)   retd();                               /* ret */
FUNC_END

