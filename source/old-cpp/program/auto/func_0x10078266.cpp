FUNC_BEGIN(0x10078266, 0xf6baf12759168f71, 0x20, ({0x68, 0x80, 0, 0, 0, 0xe8, 0xe2, 0xda, 0xe, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x70, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x88, 0x4d, 0xfc, 0x8b, 0x45, 0xf0, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0xc5, 0, 0, 0, 0xba, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xd0, 0xe8, 0xf4, 0x1d, 0x4, 0, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0xf6, 0x1e, 0x1, 0, 0xc7, 0x45, 0xe8, 0, 0, 0, 0, 0x8b, 0x45, 0xf0, 0xe8, 0x7f, 0xdf, 0xff, 0xff, 0x89, 0x45, 0xe4, 0xc7, 0x45, 0xe0, 0, 0, 0, 0, 0x31, 0xc0, 0x8b, 0x55, 0xf0, 0x8a, 0x42, 0x26, 0x89, 0x45, 0xdc, 0xc7, 0x45, 0xd8, 0, 0, 0, 0, 0xc7, 0x45, 0xd4, 0, 0x7d, 0, 0, 0x8b, 0x45, 0xe4, 0x66, 0x8b, 0x40, 0x17, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xe4, 0x66, 0x8b, 0x40, 0x12, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x6, 0xc1, 0xfa, 0x10, 0x6b, 0xd2, 0x33, 0x31, 0xc0, 0x8a, 0x82, 0xd4, 0x81, 0x1c, 0x10, 0x89, 0x45, 0xc8, 0x8d, 0x45, 0xc4, 0xe8, 0xdd, 0xe7, 0xff, 0xff, 0x8d, 0x55, 0xbc, 0xf, 0xbf, 0x45, 0xdc, 0xe8, 0x18, 0xfe, 0xff, 0xff, 0xf, 0xbf, 0x55, 0xcc, 0xf, 0xbf, 0x45, 0xd0, 0xe8, 0x58, 0x14, 0x1, 0, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xd0, 0xf, 0xaf, 0x45, 0xd0, 0x89, 0x45, 0xd0, 0x8b, 0x45, 0xcc, 0xf, 0xaf, 0x45, 0xcc, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xf4, 0xf, 0xaf, 0x45, 0xf4, 0x89, 0x45, 0xf4, 0x8b, 0x45, 0xf8, 0xf, 0xaf, 0x45, 0xf8, 0x89, 0x45, 0xf8, 0xeb, 0x8, 0x8d, 0x45, 0xec, 0xe8, 0x97, 0xe8, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x6, 0x2a, 0xc, 0, 0x84, 0xc0, 0xf, 0x84, 0xef, 0x3, 0, 0, 0x8d, 0x45, 0xec, 0xe8, 0x7d, 0x1d, 0x1, 0, 0xe8, 0xf0, 0x1f, 0x1, 0, 0x89, 0x45, 0xb8, 0x8b, 0x45, 0xb8, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x80, 0x7c, 0x28, 0xbc, 0, 0xf, 0x84, 0xc4, 0x3, 0, 0, 0x8b, 0x45, 0xb8, 0x80, 0x78, 0x3d, 0x10, 0x74, 0x9, 0x8b, 0x45, 0xb8, 0x80, 0x78, 0x3e, 0xe, 0x75, 0x2, 0xeb, 0xf, 0x8b, 0x45, 0xb8, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x9, 0x8b, 0x45, 0xb8, 0x80, 0x78, 0x3d, 0x9, 0x75, 0x5, 0xe9, 0x91, 0x3, 0, 0, 0x8d, 0x55, 0xb4, 0x8d, 0x45, 0xec, 0xe8, 0x21, 0x1d, 0x1, 0, 0xe8, 0x87, 0xa, 0x4, 0, 0x89, 0xc2, 0x8d, 0x45, 0xc4, 0xe8, 0x5e, 0x7, 0x1, 0, 0x8d, 0x55, 0xc4, 0x8d, 0x45, 0xb0, 0xe8, 0x73, 0xda, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xf0, 0xe8, 0xa6, 0x88, 0xff, 0xff, 0x89, 0x45, 0xac, 0x8b, 0x45, 0xac, 0x66, 0x3b, 0x45, 0xf4, 0xf, 0x8f, 0x52, 0x3, 0, 0, 0x8b, 0x45, 0xf0, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xb8, 0xe8, 0x56, 0xdc, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x9, 0x8b, 0x45, 0xac, 0x66, 0x3b, 0x45, 0xf8, 0x7f, 0x2, 0xeb, 0x5, 0xe9, 0x2b, 0x3, 0, 0, 0x8b, 0x45, 0xf0, 0x66, 0x83, 0x78, 0x8, 0x42, 0x75, 0x17, 0x8b, 0x45, 0xb8, 0x8a, 0x40, 0x26, 0x30, 0xe4, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf0, 0xe8, 0x25, 0xdc, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x2, 0xeb, 0x2f, 0x8b, 0x55, 0xb8, 0x8b, 0x45, 0xf0, 0xe8, 0x45, 0xf4, 0xff, 0xff, 0x84, 0xc0, 0xf, 0x84, 0xf5, 0x2, 0, 0, 0xbb, 0x19, 0, 0, 0, 0x8b, 0x55, 0xb8, 0x8b, 0x45, 0xf0, 0xe8, 0xe2, 0x42, 0xe, 0, 0x98, 0x83, 0xf8, 0x55, 0xf, 0x8e, 0xdb, 0x2, 0, 0, 0xeb, 0x13, 0x8b, 0x55, 0xb8, 0x8b, 0x45, 0xf0, 0xe8, 0x4f, 0xc7, 0xff, 0xff, 0x84, 0xc0, 0xf, 0x84, 0xc6, 0x2, 0, 0, 0xf, 0xbf, 0x55, 0xdc, 0x8b, 0x45, 0xb8, 0xe8, 0xd1, 0xdb, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x44, 0x8b, 0x45, 0xb8, 0x66, 0x83, 0x78, 0x8, 0x42, 0x75, 0xa, 0x8b, 0x45, 0xf0, 0x66, 0x83, 0x78, 0x8, 0x43, 0x75, 0x2, 0xeb, 0xa, 0x8b, 0x45, 0xf0, 0x66, 0x83, 0x78, 0x8, 0x42, 0x75, 0x2, 0xeb, 0x5, 0xe9, 0x8f, 0x2, 0, 0, 0x8b, 0x45, 0xb8, 0xe8, 0x65, 0xbe, 0xe, 0, 0x84, 0xc0, 0x74, 0xa, 0x8b, 0x45, 0xf0, 0x66, 0x83, 0x78, 0x8, 0x45, 0x75, 0x2, 0xeb, 0x5, 0xe9, 0x72, 0x2, 0, 0, 0x8b, 0x45, 0xb8, 0x80, 0x78, 0x3d, 0x1a, 0x75, 0x9, 0x8b, 0x45, 0xb8, 0xf6, 0x40, 0x13, 0x2, 0x74, 0x2, 0xeb, 0xa, 0x8b, 0x45, 0xf0, 0x66, 0x83, 0x78, 0x8, 0x42, 0x75, 0x2, 0xeb, 0xf, 0xb8, 0x4c, 0, 0, 0, 0xe8, 0xc7, 0xda, 0xff, 0xff, 0x83, 0xf8, 0x3, 0x7d, 0x2, 0xeb, 0x5, 0xe9, 0x3c, 0x2, 0, 0, 0xf, 0xbf, 0x55, 0xdc, 0x8b, 0x45, 0xb8, 0xe8, 0x47, 0xdb, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x33, 0xf, 0xbf, 0x45, 0xc6, 0x8b, 0x15, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0xf, 0xaf, 0xc2, 0xf, 0xbf, 0x55, 0xc4, 0x1, 0xc2, 0xf, 0xbf, 0x45, 0xdc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0xa3, 0xa6, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x27, 0x8d, 0x45, 0xec, 0xe8, 0x8a, 0x1b, 0x1, 0, 0xe8, 0xa0, 0x9, 0x4, 0, 0x8d, 0x55, 0xa8, 0x8d, 0x45, 0xec, 0xe8, 0x7a, 0x1b, 0x1, 0, 0xe8, 0xe0, 0x8, 0x4, 0, 0x89, 0xc2, 0x8d, 0x45, 0xc4, 0xe8, 0xb7, 0x5, 0x1, 0, 0x8b, 0x45, 0xb8, 0x66, 0x83, 0x78, 0x8, 0x29, 0x74, 0xa, 0x8b, 0x45, 0xb8, 0x66, 0x83, 0x78, 0x8, 0x2a, 0x75, 0x22, 0x8b, 0x45, 0xe4, 0x8b, 0x40, 0x1b, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0xe, 0x8b, 0x45, 0xe4, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x6, 0x7d, 0x2, 0xeb, 0x5, 0xe9, 0x9a, 0x1, 0, 0, 0xf, 0xbf, 0x55, 0xdc, 0x8b, 0x45, 0xb8, 0xe8, 0xa5, 0xda, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x21, 0xf, 0xbf, 0x5d, 0xc8, 0x8d, 0x55, 0xc4, 0x8d, 0x45, 0xa4, 0xe8, 0x82, 0xd8, 0xff, 0xff, 0x89, 0xc2, 0xb8, 0xd8, 0x34, 0x1c, 0x10, 0xe8, 0xe8, 0xa, 0x5, 0, 0x66, 0x3b, 0x45, 0xd0, 0x7f, 0x2, 0xeb, 0x5, 0xe9, 0x62, 0x1, 0, 0, 0xf, 0xbf, 0x5d, 0xc8, 0x8d, 0x55, 0xc4, 0x8d, 0x45, 0xa0, 0xe8, 0x5a, 0xd8, 0xff, 0xff, 0x89, 0xc2, 0xb8, 0xd8, 0x34, 0x1c, 0x10, 0xe8, 0xc0, 0xa, 0x5, 0, 0x66, 0x3b, 0x45, 0xcc, 0xf, 0x8f, 0x3d, 0x1, 0, 0, 0x80, 0x7d, 0x10, 0, 0x75, 0x9, 0xc7, 0x45, 0x9c, 0, 0, 0, 0, 0xeb, 0x47, 0x8b, 0x45, 0xb8, 0xe8, 0x49, 0x24, 0x1, 0, 0x89, 0x45, 0x98, 0x8b, 0x45, 0x98, 0x25, 0xfe, 0, 0, 0, 0x89, 0x45, 0x9c, 0xf, 0xbf, 0x45, 0x9c, 0x85, 0xc0, 0x7e, 0x29, 0x81, 0x65, 0x98, 0x1, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x45, 0x9c, 0x83, 0xf8, 0x2, 0x7e, 0xa, 0xf, 0xbf, 0x45, 0x9c, 0x83, 0xe8, 0x2, 0x9, 0x45, 0x98, 0x8b, 0x55, 0x98, 0x8b, 0x45, 0xb8, 0xe8, 0x5e, 0x23, 0x1, 0, 0xc1, 0x65, 0x9c, 0x7, 0xf, 0xbf, 0x5d, 0xdc, 0x8b, 0x55, 0xb8, 0x8b, 0x45, 0xf0, 0xe8, 0x3d, 0x49, 0, 0, 0x9, 0x45, 0x9c, 0x80, 0x7d, 0xfc, 0, 0x7e, 0x6, 0x83, 0x7d, 0xd8, 0, 0x74, 0x2, 0xeb, 0x2c, 0xb9, 0x1, 0, 0, 0, 0xf, 0xbe, 0x5d, 0xfc, 0x8b, 0x55, 0xf0, 0x8b, 0x45, 0xf0, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0xc5, 0, 0, 0, 0xbe, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xf0, 0xe8, 0x15, 0x99, 0x4, 0, 0x89, 0x45, 0xd8, 0x83, 0x7d, 0xd8, 0, 0x75, 0x9, 0xc7, 0x45, 0x94, 0, 0, 0, 0, 0xeb, 0x34, 0xf, 0xbf, 0x45, 0xc4, 0xc1, 0xe0, 0x2, 0x3, 0x45, 0xd8, 0xf, 0xbf, 0x55, 0xc6, 0x1, 0xd2, 0x8b, 0, 0x1, 0xd0, 0x66, 0x8b, 0, 0x89, 0x45, 0x94, 0x8b, 0x45, 0xf0, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0xf, 0xbf, 0x55, 0x94, 0x39, 0xc2, 0x7d, 0x7, 0xc7, 0x45, 0x94, 0, 0, 0, 0, 0x83, 0x7d, 0xe8, 0, 0x74, 0x3b, 0x8b, 0x45, 0x9c, 0x66, 0x3b, 0x45, 0xe0, 0x7f, 0x49, 0x8b, 0x45, 0x9c, 0x66, 0x3b, 0x45, 0xe0, 0x75, 0x29, 0x8b, 0x45, 0x94, 0x66, 0x3b, 0x45, 0xd4, 0x7f, 0x37, 0x8b, 0x45, 0x94, 0x66, 0x3b, 0x45, 0xd4, 0x75, 0x13, 0x8b, 0x45, 0xe8, 0xe8, 0x39, 0x1c, 0x1, 0, 0x8a, 0x50, 0x4d, 0x8b, 0x45, 0xb8, 0x3a, 0x50, 0x4d, 0x72, 0x2, 0xeb, 0x2, 0xeb, 0x17, 0x8d, 0x45, 0xec, 0xe8, 0xde, 0x19, 0x1, 0, 0x89, 0x45, 0xe8, 0x8b, 0x45, 0x9c, 0x89, 0x45, 0xe0, 0x8b, 0x45, 0x94, 0x89, 0x45, 0xd4, 0xe9, 0xf7, 0xfb, 0xff, 0xff, 0x8b, 0x45, 0xe8, 0x89, 0x45, 0x90, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xda, 0x6, 0x1, 0, 0xeb, 0xa, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xce, 0x6, 0x1, 0, 0x8b, 0x45, 0x90, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc2, 0x4, 0}))
    II(0x10078266, 0x5)   pushd(0x80);                          /* push dword 0x80 */
    II(0x1007826b, 0x5)   calld(sys_check_available_stack_size, 0xedae2); /* call 0x10165d52 */
    II(0x10078270, 0x1)   pushd(esi);                           /* push esi */
    II(0x10078271, 0x1)   pushd(edi);                           /* push edi */
    II(0x10078272, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10078273, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10078275, 0x6)   sub(esp, 0x70);                       /* sub esp, 0x70 */
    II(0x1007827b, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1007827e, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10078281, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x10078284, 0x3)   mov(memb_a32(ss, ebp - 0x4), cl);     /* mov [ebp-0x4], cl */
    II(0x10078287, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007828a, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x1007828d, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10078292, 0x6)   imul(eax, eax, 0xc5);                 /* imul eax, eax, 0xc5 */
    II(0x10078298, 0x5)   mov(edx, 0x101c31c4);                 /* mov edx, 0x101c31c4 */
    II(0x1007829d, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1007829f, 0x5)   calld(0x100ba098, 0x41df4);           /* call 0x100ba098 */
    II(0x100782a4, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100782a6, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100782a9, 0x5)   calld(0x1008a1a4, 0x11ef6);           /* call 0x1008a1a4 */
    II(0x100782ae, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0);     /* mov dword [ebp-0x18], 0x0 */
    II(0x100782b5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100782b8, 0x5)   calld(0x1007623c, -0x2081);           /* call 0x1007623c */
    II(0x100782bd, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
    II(0x100782c0, 0x7)   mov(memd_a32(ss, ebp - 0x20), 0);     /* mov dword [ebp-0x20], 0x0 */
    II(0x100782c7, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100782c9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100782cc, 0x3)   mov(al, memb_a32(ds, edx + 0x26));    /* mov al, [edx+0x26] */
    II(0x100782cf, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
    II(0x100782d2, 0x7)   mov(memd_a32(ss, ebp - 0x28), 0);     /* mov dword [ebp-0x28], 0x0 */
    II(0x100782d9, 0x7)   mov(memd_a32(ss, ebp - 0x2c), 0x7d00); /* mov dword [ebp-0x2c], 0x7d00 */
    II(0x100782e0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100782e3, 0x4)   mov(ax, memw_a32(ds, eax + 0x17));    /* mov ax, [eax+0x17] */
    II(0x100782e7, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100782ea, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100782ed, 0x4)   mov(ax, memw_a32(ds, eax + 0x12));    /* mov ax, [eax+0x12] */
    II(0x100782f1, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x100782f4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100782f7, 0x3)   mov(edx, memd_a32(ds, eax + 0x6));    /* mov edx, [eax+0x6] */
    II(0x100782fa, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100782fd, 0x3)   imul(edx, edx, 0x33);                 /* imul edx, edx, 0x33 */
    II(0x10078300, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10078302, 0x6)   mov(al, memb_a32(ds, edx + 0x101c81d4)); /* mov al, [edx+0x101c81d4] */
    II(0x10078308, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x1007830b, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x1007830e, 0x5)   calld(my_ctor_0x101b4184, -0x1823);   /* call 0x10076af0 */
    II(0x10078313, 0x3)   lea(edx, ebp - 0x44);                 /* lea edx, [ebp-0x44] */
    II(0x10078316, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x1007831a, 0x5)   calld(0x10078137, -0x1e8);            /* call 0x10078137 */
    II(0x1007831f, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x34)); /* movsx edx, word [ebp-0x34] */
    II(0x10078323, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x30)); /* movsx eax, word [ebp-0x30] */
    II(0x10078327, 0x5)   calld(my_min, 0x11458);               /* call 0x10089784 */
    II(0x1007832c, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
//    II(0x1007832f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x10078332, 0x4)   imul(eax, memd_a32(ss, ebp - 0x30));  /* imul eax, [ebp-0x30] */
    II(0x10078336, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x10078339, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x1007833c, 0x4)   imul(eax, memd_a32(ss, ebp - 0x34));  /* imul eax, [ebp-0x34] */
    II(0x10078340, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x10078343, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10078346, 0x4)   imul(eax, memd_a32(ss, ebp - 0xc));   /* imul eax, [ebp-0xc] */
    II(0x1007834a, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1007834d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10078350, 0x4)   imul(eax, memd_a32(ss, ebp - 0x8));   /* imul eax, [ebp-0x8] */
    II(0x10078354, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10078357, 0x2)   jmpd(0x10078361, 0x8);                /* jmp 0x10078361 */
l_0x10078359:
    II(0x10078359, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1007835c, 0x5)   calld(0x10076bf8, -0x1769);           /* call 0x10076bf8 */
l_0x10078361:
    II(0x10078361, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10078363, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10078366, 0x5)   calld(0x1013ad71, 0xc2a06);           /* call 0x1013ad71 */
    II(0x1007836b, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007836d, 0x6)   jzd(0x10078762, 0x3ef);               /* jz dword 0x10078762 */
    II(0x10078373, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10078376, 0x5)   calld(0x1008a0f8, 0x11d7d);           /* call 0x1008a0f8 */
    II(0x1007837b, 0x5)   calld(0x1008a370, 0x11ff0);           /* call 0x1008a370 */
    II(0x10078380, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
//    II(0x10078383, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x10078386, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10078389, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1007838e, 0x5)   cmp(memb_a32(ds, eax + ebp - 0x44), 0); /* cmp byte [eax+ebp-0x44], 0x0 */
    II(0x10078393, 0x6)   jzd(0x1007875d, 0x3c4);               /* jz dword 0x1007875d */
    II(0x10078399, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x1007839c, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x100783a0, 0x2)   jzd(0x100783ab, 0x9);                 /* jz 0x100783ab */
    II(0x100783a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100783a5, 0x4)   cmp(memb_a32(ds, eax + 0x3e), 0xe);   /* cmp byte [eax+0x3e], 0xe */
    II(0x100783a9, 0x2)   jnzd(0x100783ad, 0x2);                /* jnz 0x100783ad */
l_0x100783ab:
    II(0x100783ab, 0x2)   jmpd(0x100783bc, 0xf);                /* jmp 0x100783bc */
l_0x100783ad:
    II(0x100783ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100783b0, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x100783b3, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100783b8, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100783ba, 0x2)   jgd(0x100783be, 0x2);                 /* jg 0x100783be */
l_0x100783bc:
    II(0x100783bc, 0x2)   jmpd(0x100783c7, 0x9);                /* jmp 0x100783c7 */
l_0x100783be:
    II(0x100783be, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100783c1, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x9);   /* cmp byte [eax+0x3d], 0x9 */
    II(0x100783c5, 0x2)   jnzd(0x100783cc, 0x5);                /* jnz 0x100783cc */
l_0x100783c7:
    II(0x100783c7, 0x5)   jmpd(0x1007875d, 0x391);              /* jmp 0x1007875d */
l_0x100783cc:
    II(0x100783cc, 0x3)   lea(edx, ebp - 0x4c);                 /* lea edx, [ebp-0x4c] */
    II(0x100783cf, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100783d2, 0x5)   calld(0x1008a0f8, 0x11d21);           /* call 0x1008a0f8 */
    II(0x100783d7, 0x5)   calld(0x100b8e63, 0x40a87);           /* call 0x100b8e63 */
    II(0x100783dc, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100783de, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100783e1, 0x5)   calld(0x10088b44, 0x1075e);           /* call 0x10088b44 */
    II(0x100783e6, 0x3)   lea(edx, ebp - 0x3c);                 /* lea edx, [ebp-0x3c] */
    II(0x100783e9, 0x3)   lea(eax, ebp - 0x50);                 /* lea eax, [ebp-0x50] */
    II(0x100783ec, 0x5)   calld(0x10075e64, -0x258d);           /* call 0x10075e64 */
    II(0x100783f1, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100783f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100783f6, 0x5)   calld(0x10070ca1, -0x775a);           /* call 0x10070ca1 */
    II(0x100783fb, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
//    II(0x100783fe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x10078401, 0x4)   cmp(ax, memw_a32(ss, ebp - 0xc));     /* cmp ax, [ebp-0xc] */
    II(0x10078405, 0x6)   jgd(0x1007875d, 0x352);               /* jg dword 0x1007875d */
    II(0x1007840b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007840e, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10078411, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10078413, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10078416, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x10078419, 0x5)   calld(0x10076074, -0x23aa);           /* call 0x10076074 */
    II(0x1007841e, 0x2)   test(al, al);                         /* test al, al */
    II(0x10078420, 0x2)   jnzd(0x1007842b, 0x9);                /* jnz 0x1007842b */
    II(0x10078422, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x10078425, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x8));     /* cmp ax, [ebp-0x8] */
    II(0x10078429, 0x2)   jgd(0x1007842d, 0x2);                 /* jg 0x1007842d */
l_0x1007842b:
    II(0x1007842b, 0x2)   jmpd(0x10078432, 0x5);                /* jmp 0x10078432 */
l_0x1007842d:
    II(0x1007842d, 0x5)   jmpd(0x1007875d, 0x32b);              /* jmp 0x1007875d */
l_0x10078432:
    II(0x10078432, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10078435, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x1007843a, 0x2)   jnzd(0x10078453, 0x17);               /* jnz 0x10078453 */
    II(0x1007843c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x1007843f, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10078442, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x10078444, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10078447, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007844a, 0x5)   calld(0x10076074, -0x23db);           /* call 0x10076074 */
    II(0x1007844f, 0x2)   test(al, al);                         /* test al, al */
    II(0x10078451, 0x2)   jzd(0x10078455, 0x2);                 /* jz 0x10078455 */
l_0x10078453:
    II(0x10078453, 0x2)   jmpd(0x10078484, 0x2f);               /* jmp 0x10078484 */
l_0x10078455:
    II(0x10078455, 0x3)   mov(edx, memd_a32(ss, ebp - 0x48));   /* mov edx, [ebp-0x48] */
    II(0x10078458, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007845b, 0x5)   calld(0x100778a5, -0xbbb);            /* call 0x100778a5 */
    II(0x10078460, 0x2)   test(al, al);                         /* test al, al */
    II(0x10078462, 0x6)   jzd(0x1007875d, 0x2f5);               /* jz dword 0x1007875d */
    II(0x10078468, 0x5)   mov(ebx, 0x19);                       /* mov ebx, 0x19 */
    II(0x1007846d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x48));   /* mov edx, [ebp-0x48] */
    II(0x10078470, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10078473, 0x5)   calld(0x1015c75a, 0xe42e2);           /* call 0x1015c75a */
    II(0x10078478, 0x1)   cwde();                               /* cwde */
    II(0x10078479, 0x3)   cmp(eax, 0x55);                       /* cmp eax, 0x55 */
    II(0x1007847c, 0x6)   jled(0x1007875d, 0x2db);              /* jle dword 0x1007875d */
    II(0x10078482, 0x2)   jmpd(0x10078497, 0x13);               /* jmp 0x10078497 */
l_0x10078484:
    II(0x10078484, 0x3)   mov(edx, memd_a32(ss, ebp - 0x48));   /* mov edx, [ebp-0x48] */
    II(0x10078487, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007848a, 0x5)   calld(0x10074bde, -0x38b1);           /* call 0x10074bde */
    II(0x1007848f, 0x2)   test(al, al);                         /* test al, al */
    II(0x10078491, 0x6)   jzd(0x1007875d, 0x2c6);               /* jz dword 0x1007875d */
l_0x10078497:
    II(0x10078497, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x1007849b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x1007849e, 0x5)   calld(0x10076074, -0x242f);           /* call 0x10076074 */
    II(0x100784a3, 0x2)   test(al, al);                         /* test al, al */
    II(0x100784a5, 0x2)   jnzd(0x100784eb, 0x44);               /* jnz 0x100784eb */
    II(0x100784a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100784aa, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x100784af, 0x2)   jnzd(0x100784bb, 0xa);                /* jnz 0x100784bb */
    II(0x100784b1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100784b4, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x43);   /* cmp word [eax+0x8], 0x43 */
    II(0x100784b9, 0x2)   jnzd(0x100784bd, 0x2);                /* jnz 0x100784bd */
l_0x100784bb:
    II(0x100784bb, 0x2)   jmpd(0x100784c7, 0xa);                /* jmp 0x100784c7 */
l_0x100784bd:
    II(0x100784bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100784c0, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x100784c5, 0x2)   jnzd(0x100784c9, 0x2);                /* jnz 0x100784c9 */
l_0x100784c7:
    II(0x100784c7, 0x2)   jmpd(0x100784ce, 0x5);                /* jmp 0x100784ce */
l_0x100784c9:
    II(0x100784c9, 0x5)   jmpd(0x1007875d, 0x28f);              /* jmp 0x1007875d */
l_0x100784ce:
    II(0x100784ce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100784d1, 0x5)   calld(0x1016433b, 0xebe65);           /* call 0x1016433b */
    II(0x100784d6, 0x2)   test(al, al);                         /* test al, al */
    II(0x100784d8, 0x2)   jzd(0x100784e4, 0xa);                 /* jz 0x100784e4 */
    II(0x100784da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100784dd, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x45);   /* cmp word [eax+0x8], 0x45 */
    II(0x100784e2, 0x2)   jnzd(0x100784e6, 0x2);                /* jnz 0x100784e6 */
l_0x100784e4:
    II(0x100784e4, 0x2)   jmpd(0x100784eb, 0x5);                /* jmp 0x100784eb */
l_0x100784e6:
    II(0x100784e6, 0x5)   jmpd(0x1007875d, 0x272);              /* jmp 0x1007875d */
l_0x100784eb:
    II(0x100784eb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100784ee, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1a);  /* cmp byte [eax+0x3d], 0x1a */
    II(0x100784f2, 0x2)   jnzd(0x100784fd, 0x9);                /* jnz 0x100784fd */
    II(0x100784f4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100784f7, 0x4)   test(memb_a32(ds, eax + 0x13), 0x2);  /* test byte [eax+0x13], 0x2 */
    II(0x100784fb, 0x2)   jzd(0x100784ff, 0x2);                 /* jz 0x100784ff */
l_0x100784fd:
    II(0x100784fd, 0x2)   jmpd(0x10078509, 0xa);                /* jmp 0x10078509 */
l_0x100784ff:
    II(0x100784ff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10078502, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x10078507, 0x2)   jnzd(0x1007850b, 0x2);                /* jnz 0x1007850b */
l_0x10078509:
    II(0x10078509, 0x2)   jmpd(0x1007851a, 0xf);                /* jmp 0x1007851a */
l_0x1007850b:
    II(0x1007850b, 0x5)   mov(eax, 0x4c);                       /* mov eax, 0x4c */
    II(0x10078510, 0x5)   calld(0x10075fdc, -0x2539);           /* call 0x10075fdc */
    II(0x10078515, 0x3)   cmp(eax, 0x3);                        /* cmp eax, 0x3 */
    II(0x10078518, 0x2)   jged(0x1007851c, 0x2);                /* jge 0x1007851c */
l_0x1007851a:
    II(0x1007851a, 0x2)   jmpd(0x10078521, 0x5);                /* jmp 0x10078521 */
l_0x1007851c:
    II(0x1007851c, 0x5)   jmpd(0x1007875d, 0x23c);              /* jmp 0x1007875d */
l_0x10078521:
    II(0x10078521, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x10078525, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x10078528, 0x5)   calld(0x10076074, -0x24b9);           /* call 0x10076074 */
    II(0x1007852d, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007852f, 0x2)   jnzd(0x10078564, 0x33);               /* jnz 0x10078564 */
    II(0x10078531, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x3a)); /* movsx eax, word [ebp-0x3a] */
    II(0x10078535, 0x6)   mov(edx, memd_a32(ds, 0x101c8170));   /* mov edx, [0x101c8170] */
    II(0x1007853b, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1007853e, 0x3)   imul(eax, edx);                       /* imul eax, edx */
    II(0x10078541, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x3c)); /* movsx edx, word [ebp-0x3c] */
    II(0x10078545, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10078547, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x24)); /* movsx eax, word [ebp-0x24] */
    II(0x1007854b, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10078551, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a3)); /* mov eax, [eax+0x101ca6a3] */
    II(0x10078557, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10078559, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x1007855b, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10078560, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10078562, 0x2)   jnzd(0x10078566, 0x2);                /* jnz 0x10078566 */
l_0x10078564:
    II(0x10078564, 0x2)   jmpd(0x1007858d, 0x27);               /* jmp 0x1007858d */
l_0x10078566:
    II(0x10078566, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10078569, 0x5)   calld(0x1008a0f8, 0x11b8a);           /* call 0x1008a0f8 */
    II(0x1007856e, 0x5)   calld(0x100b8f13, 0x409a0);           /* call 0x100b8f13 */
    II(0x10078573, 0x3)   lea(edx, ebp - 0x58);                 /* lea edx, [ebp-0x58] */
    II(0x10078576, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10078579, 0x5)   calld(0x1008a0f8, 0x11b7a);           /* call 0x1008a0f8 */
    II(0x1007857e, 0x5)   calld(0x100b8e63, 0x408e0);           /* call 0x100b8e63 */
    II(0x10078583, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10078585, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x10078588, 0x5)   calld(0x10088b44, 0x105b7);           /* call 0x10088b44 */
l_0x1007858d:
    II(0x1007858d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x10078590, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x29);   /* cmp word [eax+0x8], 0x29 */
    II(0x10078595, 0x2)   jzd(0x100785a1, 0xa);                 /* jz 0x100785a1 */
    II(0x10078597, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x1007859a, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x2a);   /* cmp word [eax+0x8], 0x2a */
    II(0x1007859f, 0x2)   jnzd(0x100785c3, 0x22);               /* jnz 0x100785c3 */
l_0x100785a1:
    II(0x100785a1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100785a4, 0x3)   mov(eax, memd_a32(ds, eax + 0x1b));   /* mov eax, [eax+0x1b] */
    II(0x100785a7, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100785aa, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100785ac, 0x2)   jnzd(0x100785bc, 0xe);                /* jnz 0x100785bc */
    II(0x100785ae, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100785b1, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100785b4, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100785b7, 0x3)   cmp(eax, 0x6);                        /* cmp eax, 0x6 */
    II(0x100785ba, 0x2)   jged(0x100785be, 0x2);                /* jge 0x100785be */
l_0x100785bc:
    II(0x100785bc, 0x2)   jmpd(0x100785c3, 0x5);                /* jmp 0x100785c3 */
l_0x100785be:
    II(0x100785be, 0x5)   jmpd(0x1007875d, 0x19a);              /* jmp 0x1007875d */
l_0x100785c3:
    II(0x100785c3, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x24)); /* movsx edx, word [ebp-0x24] */
    II(0x100785c7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100785ca, 0x5)   calld(0x10076074, -0x255b);           /* call 0x10076074 */
    II(0x100785cf, 0x2)   test(al, al);                         /* test al, al */
    II(0x100785d1, 0x2)   jnzd(0x100785f4, 0x21);               /* jnz 0x100785f4 */
    II(0x100785d3, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x38)); /* movsx ebx, word [ebp-0x38] */
    II(0x100785d7, 0x3)   lea(edx, ebp - 0x3c);                 /* lea edx, [ebp-0x3c] */
    II(0x100785da, 0x3)   lea(eax, ebp - 0x5c);                 /* lea eax, [ebp-0x5c] */
    II(0x100785dd, 0x5)   calld(0x10075e64, -0x277e);           /* call 0x10075e64 */
    II(0x100785e2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100785e4, 0x5)   mov(eax, 0x101c34d8);                 /* mov eax, 0x101c34d8 */
    II(0x100785e9, 0x5)   calld(0x100c90d6, 0x50ae8);           /* call 0x100c90d6 */
    II(0x100785ee, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x30));    /* cmp ax, [ebp-0x30] */
    II(0x100785f2, 0x2)   jgd(0x100785f6, 0x2);                 /* jg 0x100785f6 */
l_0x100785f4:
    II(0x100785f4, 0x2)   jmpd(0x100785fb, 0x5);                /* jmp 0x100785fb */
l_0x100785f6:
    II(0x100785f6, 0x5)   jmpd(0x1007875d, 0x162);              /* jmp 0x1007875d */
l_0x100785fb:
    II(0x100785fb, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x38)); /* movsx ebx, word [ebp-0x38] */
    II(0x100785ff, 0x3)   lea(edx, ebp - 0x3c);                 /* lea edx, [ebp-0x3c] */
    II(0x10078602, 0x3)   lea(eax, ebp - 0x60);                 /* lea eax, [ebp-0x60] */
    II(0x10078605, 0x5)   calld(0x10075e64, -0x27a6);           /* call 0x10075e64 */
    II(0x1007860a, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007860c, 0x5)   mov(eax, 0x101c34d8);                 /* mov eax, 0x101c34d8 */
    II(0x10078611, 0x5)   calld(0x100c90d6, 0x50ac0);           /* call 0x100c90d6 */
    II(0x10078616, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x34));    /* cmp ax, [ebp-0x34] */
    II(0x1007861a, 0x6)   jgd(0x1007875d, 0x13d);               /* jg dword 0x1007875d */
    II(0x10078620, 0x4)   cmp(memb_a32(ss, ebp + 0x10), 0);     /* cmp byte [ebp+0x10], 0x0 */
    II(0x10078624, 0x2)   jnzd(0x1007862f, 0x9);                /* jnz 0x1007862f */
    II(0x10078626, 0x7)   mov(memd_a32(ss, ebp - 0x64), 0);     /* mov dword [ebp-0x64], 0x0 */
    II(0x1007862d, 0x2)   jmpd(0x10078676, 0x47);               /* jmp 0x10078676 */
l_0x1007862f:
    II(0x1007862f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x10078632, 0x5)   calld(0x1008aa80, 0x12449);           /* call 0x1008aa80 */
    II(0x10078637, 0x3)   mov(memd_a32(ss, ebp - 0x68), eax);   /* mov [ebp-0x68], eax */
//    II(0x1007863a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x1007863d, 0x5)   and_(eax, 0xfe);                      /* and eax, 0xfe */
    II(0x10078642, 0x3)   mov(memd_a32(ss, ebp - 0x64), eax);   /* mov [ebp-0x64], eax */
    II(0x10078645, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x64)); /* movsx eax, word [ebp-0x64] */
    II(0x10078649, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007864b, 0x2)   jled(0x10078676, 0x29);               /* jle 0x10078676 */
    II(0x1007864d, 0x7)   and_(memd_a32(ss, ebp - 0x68), 0xffffff01); /* and dword [ebp-0x68], 0xffffff01 */
    II(0x10078654, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x64)); /* movsx eax, word [ebp-0x64] */
    II(0x10078658, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x1007865b, 0x2)   jled(0x10078667, 0xa);                /* jle 0x10078667 */
    II(0x1007865d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x64)); /* movsx eax, word [ebp-0x64] */
    II(0x10078661, 0x3)   sub(eax, 0x2);                        /* sub eax, 0x2 */
    II(0x10078664, 0x3)   or_(memd_a32(ss, ebp - 0x68), eax);   /* or [ebp-0x68], eax */
l_0x10078667:
    II(0x10078667, 0x3)   mov(edx, memd_a32(ss, ebp - 0x68));   /* mov edx, [ebp-0x68] */
    II(0x1007866a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x1007866d, 0x5)   calld(0x1008a9d0, 0x1235e);           /* call 0x1008a9d0 */
    II(0x10078672, 0x4)   shl(memd_a32(ss, ebp - 0x64), 0x7);   /* shl dword [ebp-0x64], 0x7 */
l_0x10078676:
    II(0x10078676, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x24)); /* movsx ebx, word [ebp-0x24] */
    II(0x1007867a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x48));   /* mov edx, [ebp-0x48] */
    II(0x1007867d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10078680, 0x5)   calld(0x1007cfc2, 0x493d);            /* call 0x1007cfc2 */
    II(0x10078685, 0x3)   or_(memd_a32(ss, ebp - 0x64), eax);   /* or [ebp-0x64], eax */
    II(0x10078688, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x1007868c, 0x2)   jled(0x10078694, 0x6);                /* jle 0x10078694 */
    II(0x1007868e, 0x4)   cmp(memd_a32(ss, ebp - 0x28), 0);     /* cmp dword [ebp-0x28], 0x0 */
    II(0x10078692, 0x2)   jzd(0x10078696, 0x2);                 /* jz 0x10078696 */
l_0x10078694:
    II(0x10078694, 0x2)   jmpd(0x100786c2, 0x2c);               /* jmp 0x100786c2 */
l_0x10078696:
    II(0x10078696, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x1007869b, 0x4)   movsx(ebx, memb_a32(ss, ebp - 0x4));  /* movsx ebx, byte [ebp-0x4] */
    II(0x1007869f, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100786a2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100786a5, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x100786a8, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100786ad, 0x6)   imul(eax, eax, 0xc5);                 /* imul eax, eax, 0xc5 */
    II(0x100786b3, 0x5)   mov(esi, 0x101c31c4);                 /* mov esi, 0x101c31c4 */
    II(0x100786b8, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x100786ba, 0x5)   calld(0x100c1fd4, 0x49915);           /* call 0x100c1fd4 */
    II(0x100786bf, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
l_0x100786c2:
    II(0x100786c2, 0x4)   cmp(memd_a32(ss, ebp - 0x28), 0);     /* cmp dword [ebp-0x28], 0x0 */
    II(0x100786c6, 0x2)   jnzd(0x100786d1, 0x9);                /* jnz 0x100786d1 */
    II(0x100786c8, 0x7)   mov(memd_a32(ss, ebp - 0x6c), 0);     /* mov dword [ebp-0x6c], 0x0 */
    II(0x100786cf, 0x2)   jmpd(0x10078705, 0x34);               /* jmp 0x10078705 */
l_0x100786d1:
    II(0x100786d1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x3c)); /* movsx eax, word [ebp-0x3c] */
    II(0x100786d5, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100786d8, 0x3)   add(eax, memd_a32(ss, ebp - 0x28));   /* add eax, [ebp-0x28] */
    II(0x100786db, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x3a)); /* movsx edx, word [ebp-0x3a] */
    II(0x100786df, 0x2)   add(edx, edx);                        /* add edx, edx */
    II(0x100786e1, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100786e3, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100786e5, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x100786e8, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
    II(0x100786eb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100786ee, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x100786f1, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100786f6, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x6c)); /* movsx edx, word [ebp-0x6c] */
    II(0x100786fa, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100786fc, 0x2)   jged(0x10078705, 0x7);                /* jge 0x10078705 */
    II(0x100786fe, 0x7)   mov(memd_a32(ss, ebp - 0x6c), 0);     /* mov dword [ebp-0x6c], 0x0 */
l_0x10078705:
    II(0x10078705, 0x4)   cmp(memd_a32(ss, ebp - 0x18), 0);     /* cmp dword [ebp-0x18], 0x0 */
    II(0x10078709, 0x2)   jzd(0x10078746, 0x3b);                /* jz 0x10078746 */
    II(0x1007870b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x64));   /* mov eax, [ebp-0x64] */
    II(0x1007870e, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x20));    /* cmp ax, [ebp-0x20] */
    II(0x10078712, 0x2)   jgd(0x1007875d, 0x49);                /* jg 0x1007875d */
    II(0x10078714, 0x3)   mov(eax, memd_a32(ss, ebp - 0x64));   /* mov eax, [ebp-0x64] */
    II(0x10078717, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x20));    /* cmp ax, [ebp-0x20] */
    II(0x1007871b, 0x2)   jnzd(0x10078746, 0x29);               /* jnz 0x10078746 */
    II(0x1007871d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x10078720, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x2c));    /* cmp ax, [ebp-0x2c] */
    II(0x10078724, 0x2)   jgd(0x1007875d, 0x37);                /* jg 0x1007875d */
    II(0x10078726, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x10078729, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x2c));    /* cmp ax, [ebp-0x2c] */
    II(0x1007872d, 0x2)   jnzd(0x10078742, 0x13);               /* jnz 0x10078742 */
    II(0x1007872f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10078732, 0x5)   calld(0x1008a370, 0x11c39);           /* call 0x1008a370 */
    II(0x10078737, 0x3)   mov(dl, memb_a32(ds, eax + 0x4d));    /* mov dl, [eax+0x4d] */
    II(0x1007873a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x1007873d, 0x3)   cmp(dl, memb_a32(ds, eax + 0x4d));    /* cmp dl, [eax+0x4d] */
    II(0x10078740, 0x2)   jbd(0x10078744, 0x2);                 /* jb 0x10078744 */
l_0x10078742:
    II(0x10078742, 0x2)   jmpd(0x10078746, 0x2);                /* jmp 0x10078746 */
l_0x10078744:
    II(0x10078744, 0x2)   jmpd(0x1007875d, 0x17);               /* jmp 0x1007875d */
l_0x10078746:
    II(0x10078746, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x10078749, 0x5)   calld(0x1008a12c, 0x119de);           /* call 0x1008a12c */
    II(0x1007874e, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10078751, 0x3)   mov(eax, memd_a32(ss, ebp - 0x64));   /* mov eax, [ebp-0x64] */
    II(0x10078754, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10078757, 0x3)   mov(eax, memd_a32(ss, ebp - 0x6c));   /* mov eax, [ebp-0x6c] */
    II(0x1007875a, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
l_0x1007875d:
    II(0x1007875d, 0x5)   jmpd(0x10078359, -0x409);             /* jmp 0x10078359 */
l_0x10078762:
    II(0x10078762, 0x3)   mov(eax, memd_a32(ss, ebp - 0x18));   /* mov eax, [ebp-0x18] */
    II(0x10078765, 0x3)   mov(memd_a32(ss, ebp - 0x70), eax);   /* mov [ebp-0x70], eax */
    II(0x10078768, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007876a, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1007876d, 0x5)   calld(0x10088e4c, 0x106da);           /* call 0x10088e4c */
    II(0x10078772, 0x2)   jmpd(0x1007877e, 0xa);                /* jmp 0x1007877e */
//  II(0x10078774, 0xa)   /* Недостижимый код. */
l_0x1007877e:
    II(0x1007877e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x70));   /* mov eax, [ebp-0x70] */
    II(0x10078781, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10078783, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10078784, 0x1)   popd(edi);                            /* pop edi */
    II(0x10078785, 0x1)   popd(esi);                            /* pop esi */
    II(0x10078786, 0x3)   retd(0x4);                            /* ret 0x4 */
FUNC_END

