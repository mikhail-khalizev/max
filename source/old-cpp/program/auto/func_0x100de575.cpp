FUNC_BEGIN(0x100de575, 0x3e2acbc8aec952e5, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0xd3, 0x77, 0x8, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x10, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xbb, 0x3, 0, 0, 0xe8, 0x7a, 0x6a, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x3b, 0x90, 0xe3, 0x3, 0, 0, 0xf, 0x8c, 0x49, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xbb, 0x3, 0, 0, 0xe8, 0x8b, 0x1b, 0xff, 0xff, 0x89, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x8b, 0x55, 0xfc, 0x81, 0xc2, 0xcf, 0x1, 0, 0, 0x1, 0xd0, 0xe8, 0x58, 0x81, 0xf9, 0xff, 0x89, 0xc3, 0xba, 0x1, 0, 0, 0, 0xb8, 0x19, 0, 0, 0, 0xe8, 0x17, 0x38, 0xf9, 0xff, 0x66, 0x8b, 0x53, 0x8, 0xf, 0xaf, 0xd0, 0x8b, 0x45, 0xfc, 0x66, 0x1, 0x50, 0x4f, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xbb, 0x3, 0, 0, 0xe8, 0x13, 0x6a, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xfc, 0x5, 0xb7, 0x3, 0, 0, 0xe8, 0xa7, 0x22, 0, 0, 0xf, 0xbf, 0x10, 0xbb, 0x5, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x4d, 0xc1, 0xf8, 0x10, 0x1, 0xd0, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x42, 0x4f, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xbb, 0x3, 0, 0, 0x89, 0x45, 0xf4, 0x8b, 0x55, 0xf4, 0x8b, 0x52, 0x40, 0x8b, 0x45, 0xf4, 0xff, 0x52, 0x8, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0x45, 0x3, 0, 0, 0xe8, 0xeb, 0x1a, 0xff, 0xff, 0x89, 0x45, 0xf8, 0x8d, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0x5, 0xaf, 0x3, 0, 0, 0xe8, 0xf7, 0xcb, 0xfa, 0xff, 0x98, 0x85, 0xc0, 0x7c, 0x3e, 0xf, 0xbf, 0x45, 0xf8, 0xc1, 0xe0, 0x2, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x5, 0xcf, 0x1, 0, 0, 0x1, 0xd0, 0xe8, 0xa2, 0x80, 0xf9, 0xff, 0x8b, 0x58, 0x6, 0xc1, 0xfb, 0x10, 0xba, 0x1, 0, 0, 0, 0xb8, 0x19, 0, 0, 0, 0xe8, 0x5d, 0x37, 0xf9, 0xff, 0x98, 0xf, 0xaf, 0xd8, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x4d, 0xc1, 0xf8, 0x10, 0x39, 0xc3, 0x7e, 0x2, 0xeb, 0x20, 0xe8, 0x29, 0x6b, 0xff, 0xff, 0x31, 0xdb, 0x88, 0xc3, 0xe8, 0x40, 0x6b, 0xff, 0xff, 0x31, 0xd2, 0x88, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xdb, 0x3, 0, 0, 0xe8, 0xa6, 0x13, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xf0, 0x8b, 0x45, 0xf0, 0x8b, 0x58, 0x13, 0x8b, 0x45, 0xfc, 0x8b, 0x80, 0xbb, 0x3, 0, 0, 0xe8, 0x59, 0x1a, 0xff, 0xff, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf0, 0xff, 0x53, 0x18, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100de575, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x100de57a, 0x5)   calld(sys_check_available_stack_size, 0x877d3); /* call 0x10165d52 */
    II(0x100de57f, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100de580, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100de581, 0x1)   pushd(edx);                           /* push edx */
    II(0x100de582, 0x1)   pushd(esi);                           /* push esi */
    II(0x100de583, 0x1)   pushd(edi);                           /* push edi */
    II(0x100de584, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100de585, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100de587, 0x6)   sub(esp, 0x10);                       /* sub esp, 0x10 */
    II(0x100de58d, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x100de590, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100de593, 0x6)   mov(eax, memd_a32(ds, eax + 0x3bb));  /* mov eax, [eax+0x3bb] */
    II(0x100de599, 0x5)   calld(0x100d5018, -0x9586);           /* call 0x100d5018 */
    II(0x100de59e, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100de5a0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100de5a3, 0x7)   cmp(dx, memw_a32(ds, eax + 0x3e3));   /* cmp dx, [eax+0x3e3] */
    II(0x100de5aa, 0x6)   jld(0x100de6f9, 0x149);               /* jl dword 0x100de6f9 */
    II(0x100de5b0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100de5b3, 0x6)   mov(eax, memd_a32(ds, eax + 0x3bb));  /* mov eax, [eax+0x3bb] */
    II(0x100de5b9, 0x5)   calld(0x100d0149, -0xe475);           /* call 0x100d0149 */
    II(0x100de5be, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100de5c1, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100de5c5, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100de5c8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100de5cb, 0x6)   add(edx, 0x1cf);                      /* add edx, 0x1cf */
    II(0x100de5d1, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100de5d3, 0x5)   calld(0x10076730, -0x67ea8);          /* call 0x10076730 */
    II(0x100de5d8, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x100de5da, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100de5df, 0x5)   mov(eax, 0x19);                       /* mov eax, 0x19 */
    II(0x100de5e4, 0x5)   calld(0x10071e00, -0x6c7e9);          /* call 0x10071e00 */
    II(0x100de5e9, 0x4)   mov(dx, memw_a32(ds, ebx + 0x8));     /* mov dx, [ebx+0x8] */
    II(0x100de5ed, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x100de5f0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100de5f3, 0x4)   add(memw_a32(ds, eax + 0x4f), dx);    /* add [eax+0x4f], dx */
    II(0x100de5f7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100de5fa, 0x6)   mov(eax, memd_a32(ds, eax + 0x3bb));  /* mov eax, [eax+0x3bb] */
    II(0x100de600, 0x5)   calld(0x100d5018, -0x95ed);           /* call 0x100d5018 */
    II(0x100de605, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100de608, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100de60b, 0x5)   add(eax, 0x3b7);                      /* add eax, 0x3b7 */
    II(0x100de610, 0x5)   calld(0x100e08bc, 0x22a7);            /* call 0x100e08bc */
    II(0x100de615, 0x3)   movsx(edx, memw_a32(ds, eax));        /* movsx edx, word [eax] */
    II(0x100de618, 0x5)   mov(ebx, 0x5);                        /* mov ebx, 0x5 */
    II(0x100de61d, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x100de61f, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x100de622, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x100de624, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100de626, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100de629, 0x3)   mov(eax, memd_a32(ds, eax + 0x4d));   /* mov eax, [eax+0x4d] */
    II(0x100de62c, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100de62f, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100de631, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100de634, 0x4)   mov(memw_a32(ds, edx + 0x4f), ax);    /* mov [edx+0x4f], ax */
    II(0x100de638, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100de63b, 0x6)   mov(eax, memd_a32(ds, eax + 0x3bb));  /* mov eax, [eax+0x3bb] */
    II(0x100de641, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x100de644, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x100de647, 0x3)   mov(edx, memd_a32(ds, edx + 0x40));   /* mov edx, [edx+0x40] */
//    II(0x100de64a, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100de64d, 0x3)   calld_abs(memd_a32(ds, edx + 0x8));   /* call dword near [edx+0x8] */
    II(0x100de650, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100de653, 0x6)   mov(eax, memd_a32(ds, eax + 0x345));  /* mov eax, [eax+0x345] */
    II(0x100de659, 0x5)   calld(0x100d0149, -0xe515);           /* call 0x100d0149 */
    II(0x100de65e, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100de661, 0x3)   lea(edx, ebp - 0x8);                  /* lea edx, [ebp-0x8] */
    II(0x100de664, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100de667, 0x5)   add(eax, 0x3af);                      /* add eax, 0x3af */
    II(0x100de66c, 0x5)   calld(0x1008b268, -0x53409);          /* call 0x1008b268 */
    II(0x100de671, 0x1)   cwde();                               /* cwde */
    II(0x100de672, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100de674, 0x2)   jld(0x100de6b4, 0x3e);                /* jl 0x100de6b4 */
    II(0x100de676, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100de67a, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x100de67d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100de67f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100de682, 0x5)   add(eax, 0x1cf);                      /* add eax, 0x1cf */
    II(0x100de687, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100de689, 0x5)   calld(0x10076730, -0x67f5e);          /* call 0x10076730 */
    II(0x100de68e, 0x3)   mov(ebx, memd_a32(ds, eax + 0x6));    /* mov ebx, [eax+0x6] */
    II(0x100de691, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100de694, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100de699, 0x5)   mov(eax, 0x19);                       /* mov eax, 0x19 */
    II(0x100de69e, 0x5)   calld(0x10071e00, -0x6c8a3);          /* call 0x10071e00 */
    II(0x100de6a3, 0x1)   cwde();                               /* cwde */
    II(0x100de6a4, 0x3)   imul(ebx, eax);                       /* imul ebx, eax */
    II(0x100de6a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100de6aa, 0x3)   mov(eax, memd_a32(ds, eax + 0x4d));   /* mov eax, [eax+0x4d] */
    II(0x100de6ad, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100de6b0, 0x2)   cmp(ebx, eax);                        /* cmp ebx, eax */
    II(0x100de6b2, 0x2)   jled(0x100de6b6, 0x2);                /* jle 0x100de6b6 */
l_0x100de6b4:
    II(0x100de6b4, 0x2)   jmpd(0x100de6d6, 0x20);               /* jmp 0x100de6d6 */
l_0x100de6b6:
    II(0x100de6b6, 0x5)   calld(0x100d51e4, -0x94d7);           /* call 0x100d51e4 */
    II(0x100de6bb, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100de6bd, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x100de6bf, 0x5)   calld(0x100d5204, -0x94c0);           /* call 0x100d5204 */
    II(0x100de6c4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100de6c6, 0x2)   mov(dl, al);                          /* mov dl, al */
    II(0x100de6c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100de6cb, 0x6)   mov(eax, memd_a32(ds, eax + 0x3db));  /* mov eax, [eax+0x3db] */
    II(0x100de6d1, 0x5)   calld(0x100cfa7c, -0xec5a);           /* call 0x100cfa7c */
l_0x100de6d6:
    II(0x100de6d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100de6d9, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
//    II(0x100de6dc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100de6df, 0x3)   mov(ebx, memd_a32(ds, eax + 0x13));   /* mov ebx, [eax+0x13] */
//    II(0x100de6e2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100de6e5, 0x6)   mov(eax, memd_a32(ds, eax + 0x3bb));  /* mov eax, [eax+0x3bb] */
    II(0x100de6eb, 0x5)   calld(0x100d0149, -0xe5a7);           /* call 0x100d0149 */
    II(0x100de6f0, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x100de6f3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x100de6f6, 0x3)   calld_abs(memd_a32(ds, ebx + 0x18));  /* call dword near [ebx+0x18] */
l_0x100de6f9:
    II(0x100de6f9, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100de6fb, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100de6fc, 0x1)   popd(edi);                            /* pop edi */
    II(0x100de6fd, 0x1)   popd(esi);                            /* pop esi */
    II(0x100de6fe, 0x1)   popd(edx);                            /* pop edx */
    II(0x100de6ff, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100de700, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100de701, 0x1)   retd();                               /* ret */
FUNC_END

