FUNC_BEGIN(0x100f2ec7, 0x65e5acca0eb186b2, 0x20, ({0x68, 0xec, 0, 0, 0, 0xe8, 0x81, 0x2e, 0x7, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xd0, 0, 0, 0, 0x89, 0x45, 0xfc, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xba, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xc2, 0x89, 0x55, 0xf4, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0x80, 0x7, 0x4, 0, 0xbb, 0xba, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x85, 0x38, 0xff, 0xff, 0xff, 0xe8, 0xcf, 0x2e, 0x7, 0, 0x8d, 0x9d, 0x38, 0xff, 0xff, 0xff, 0xba, 0x78, 0x81, 0x1c, 0x10, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0x4a, 0xfb, 0xff, 0xff, 0x8d, 0x9d, 0x38, 0xff, 0xff, 0xff, 0xba, 0x84, 0x81, 0x1c, 0x10, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0x36, 0xfb, 0xff, 0xff, 0x8d, 0x9d, 0x38, 0xff, 0xff, 0xff, 0xba, 0x9c, 0x81, 0x1c, 0x10, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0x22, 0xfb, 0xff, 0xff, 0x8d, 0x9d, 0x38, 0xff, 0xff, 0xff, 0xba, 0xa8, 0x81, 0x1c, 0x10, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0xe, 0xfb, 0xff, 0xff, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x74, 0xf, 0xf, 0xbf, 0x55, 0xfc, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0x75, 0xb, 0x8d, 0x85, 0x38, 0xff, 0xff, 0xff, 0xe8, 0x5f, 0xfc, 0xff, 0xff, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x85, 0x34, 0xff, 0xff, 0xff, 0xe8, 0x64, 0xd6, 0xfe, 0xff, 0x89, 0x85, 0x30, 0xff, 0xff, 0xff, 0x80, 0x65, 0xf8, 0xfe, 0x8b, 0x45, 0xf4, 0x8b, 0x80, 0xfa, 0, 0, 0, 0xe8, 0x5c, 0xfc, 0, 0, 0x89, 0xc2, 0x8d, 0x85, 0x34, 0xff, 0xff, 0xff, 0xe8, 0x7f, 0xd5, 0xfe, 0xff, 0xeb, 0xb, 0x8d, 0x85, 0x34, 0xff, 0xff, 0xff, 0xe8, 0x22, 0x3c, 0xf8, 0xff, 0x31, 0xd2, 0x8d, 0x85, 0x34, 0xff, 0xff, 0xff, 0xe8, 0x8e, 0x7d, 0x4, 0, 0x84, 0xc0, 0x74, 0x2f, 0x8d, 0x85, 0x34, 0xff, 0xff, 0xff, 0xe8, 0xf2, 0xd4, 0xfe, 0xff, 0xe8, 0xb5, 0x5, 0xf8, 0xff, 0xb9, 0x1, 0, 0, 0, 0x31, 0xdb, 0x8d, 0x85, 0x34, 0xff, 0xff, 0xff, 0xe8, 0x4f, 0xfa, 0, 0, 0x89, 0xc2, 0xf, 0xbf, 0x45, 0xfc, 0xe8, 0xeb, 0xe1, 0, 0, 0xeb, 0xb5, 0xc6, 0x5, 0x1e, 0x39, 0x1c, 0x10, 0x8, 0x31, 0xd2, 0x8d, 0x85, 0x34, 0xff, 0xff, 0xff, 0xe8, 0x12, 0xd4, 0xfe, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100f2ec7, 0x5)   pushd(0xec);                          /* push dword 0xec */
    II(0x100f2ecc, 0x5)   calld(sys_check_available_stack_size, 0x72e81); /* call 0x10165d52 */
    II(0x100f2ed1, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100f2ed2, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100f2ed3, 0x1)   pushd(edx);                           /* push edx */
    II(0x100f2ed4, 0x1)   pushd(esi);                           /* push esi */
    II(0x100f2ed5, 0x1)   pushd(edi);                           /* push edi */
    II(0x100f2ed6, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100f2ed7, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100f2ed9, 0x6)   sub(esp, 0xd0);                       /* sub esp, 0xd0 */
    II(0x100f2edf, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100f2ee2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f2ee6, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100f2eec, 0x5)   mov(edx, 0x101ca468);                 /* mov edx, 0x101ca468 */
    II(0x100f2ef1, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100f2ef3, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x100f2ef6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f2efa, 0x5)   calld(0x1013367f, 0x40780);           /* call 0x1013367f */
    II(0x100f2eff, 0x5)   mov(ebx, 0xba);                       /* mov ebx, 0xba */
    II(0x100f2f04, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f2f06, 0x6)   lea(eax, ebp - 0xc8);                 /* lea eax, [ebp+0xffffff38] */
    II(0x100f2f0c, 0x5)   calld(sys_memset, 0x72ecf);           /* call 0x10165de0 */
    II(0x100f2f11, 0x6)   lea(ebx, ebp - 0xc8);                 /* lea ebx, [ebp+0xffffff38] */
    II(0x100f2f17, 0x5)   mov(edx, 0x101c8178);                 /* mov edx, 0x101c8178 */
    II(0x100f2f1c, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f2f20, 0x5)   calld(0x100f2a6f, -0x4b6);            /* call 0x100f2a6f */
    II(0x100f2f25, 0x6)   lea(ebx, ebp - 0xc8);                 /* lea ebx, [ebp+0xffffff38] */
    II(0x100f2f2b, 0x5)   mov(edx, 0x101c8184);                 /* mov edx, 0x101c8184 */
    II(0x100f2f30, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f2f34, 0x5)   calld(0x100f2a6f, -0x4ca);            /* call 0x100f2a6f */
    II(0x100f2f39, 0x6)   lea(ebx, ebp - 0xc8);                 /* lea ebx, [ebp+0xffffff38] */
    II(0x100f2f3f, 0x5)   mov(edx, 0x101c819c);                 /* mov edx, 0x101c819c */
    II(0x100f2f44, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f2f48, 0x5)   calld(0x100f2a6f, -0x4de);            /* call 0x100f2a6f */
    II(0x100f2f4d, 0x6)   lea(ebx, ebp - 0xc8);                 /* lea ebx, [ebp+0xffffff38] */
    II(0x100f2f53, 0x5)   mov(edx, 0x101c81a8);                 /* mov edx, 0x101c81a8 */
    II(0x100f2f58, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f2f5c, 0x5)   calld(0x100f2a6f, -0x4f2);            /* call 0x100f2a6f */
    II(0x100f2f61, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f2f65, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100f2f6b, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x100f2f71, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100f2f76, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x100f2f79, 0x2)   jzd(0x100f2f8a, 0xf);                 /* jz 0x100f2f8a */
    II(0x100f2f7b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100f2f7f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f2f81, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x100f2f86, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100f2f88, 0x2)   jnzd(0x100f2f95, 0xb);                /* jnz 0x100f2f95 */
l_0x100f2f8a:
    II(0x100f2f8a, 0x6)   lea(eax, ebp - 0xc8);                 /* lea eax, [ebp+0xffffff38] */
    II(0x100f2f90, 0x5)   calld(0x100f2bf4, -0x3a1);            /* call 0x100f2bf4 */
l_0x100f2f95:
    II(0x100f2f95, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x100f2f99, 0x6)   lea(eax, ebp - 0xcc);                 /* lea eax, [ebp+0xffffff34] */
    II(0x100f2f9f, 0x5)   calld(0x100e0608, -0x1299c);          /* call 0x100e0608 */
    II(0x100f2fa4, 0x6)   mov(memd_a32(ss, ebp - 0xd0), eax);   /* mov [ebp+0xffffff30], eax */
    II(0x100f2faa, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x100f2fae, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x100f2fb1, 0x6)   mov(eax, memd_a32(ds, eax + 0xfa));   /* mov eax, [eax+0xfa] */
    II(0x100f2fb7, 0x5)   calld(0x10102c18, 0xfc5c);            /* call 0x10102c18 */
    II(0x100f2fbc, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100f2fbe, 0x6)   lea(eax, ebp - 0xcc);                 /* lea eax, [ebp+0xffffff34] */
    II(0x100f2fc4, 0x5)   calld(0x100e0548, -0x12a81);          /* call 0x100e0548 */
    II(0x100f2fc9, 0x2)   jmpd(0x100f2fd6, 0xb);                /* jmp 0x100f2fd6 */
l_0x100f2fcb:
    II(0x100f2fcb, 0x6)   lea(eax, ebp - 0xcc);                 /* lea eax, [ebp+0xffffff34] */
    II(0x100f2fd1, 0x5)   calld(0x10076bf8, -0x7c3de);          /* call 0x10076bf8 */
l_0x100f2fd6:
    II(0x100f2fd6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f2fd8, 0x6)   lea(eax, ebp - 0xcc);                 /* lea eax, [ebp+0xffffff34] */
    II(0x100f2fde, 0x5)   calld(0x1013ad71, 0x47d8e);           /* call 0x1013ad71 */
    II(0x100f2fe3, 0x2)   test(al, al);                         /* test al, al */
    II(0x100f2fe5, 0x2)   jzd(0x100f3016, 0x2f);                /* jz 0x100f3016 */
    II(0x100f2fe7, 0x6)   lea(eax, ebp - 0xcc);                 /* lea eax, [ebp+0xffffff34] */
    II(0x100f2fed, 0x5)   calld(0x100e04e4, -0x12b0e);          /* call 0x100e04e4 */
    II(0x100f2ff2, 0x5)   calld(0x100735ac, -0x7fa4b);          /* call 0x100735ac */
    II(0x100f2ff7, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x100f2ffc, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100f2ffe, 0x6)   lea(eax, ebp - 0xcc);                 /* lea eax, [ebp+0xffffff34] */
    II(0x100f3004, 0x5)   calld(0x10102a58, 0xfa4f);            /* call 0x10102a58 */
    II(0x100f3009, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100f300b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100f300f, 0x5)   calld(0x101011ff, 0xe1eb);            /* call 0x101011ff */
    II(0x100f3014, 0x2)   jmpd(0x100f2fcb, -0x4b);              /* jmp 0x100f2fcb */
l_0x100f3016:
    II(0x100f3016, 0x7)   mov(memb_a32(ds, 0x101c391e), 0x8);   /* mov byte [0x101c391e], 0x8 */
    II(0x100f301d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100f301f, 0x6)   lea(eax, ebp - 0xcc);                 /* lea eax, [ebp+0xffffff34] */
    II(0x100f3025, 0x5)   calld(0x100e043c, -0x12bee);          /* call 0x100e043c */
    II(0x100f302a, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100f302c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100f302d, 0x1)   popd(edi);                            /* pop edi */
    II(0x100f302e, 0x1)   popd(esi);                            /* pop esi */
    II(0x100f302f, 0x1)   popd(edx);                            /* pop edx */
    II(0x100f3030, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100f3031, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100f3032, 0x1)   retd();                               /* ret */
FUNC_END

