FUNC_BEGIN(0x10141449, 0x5805657c8d956ee6, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xff, 0x48, 0x2, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x8, 0, 0, 0, 0x8b, 0x15, 0xe, 0x81, 0x1c, 0x10, 0xc1, 0xfa, 0x10, 0x42, 0xbb, 0x3, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x66, 0x89, 0x15, 0x10, 0x81, 0x1c, 0x10, 0x66, 0xa1, 0x10, 0x81, 0x1c, 0x10, 0x89, 0x45, 0xfc, 0xeb, 0x6b, 0xe8, 0x72, 0x95, 0xf8, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x87, 0x95, 0xf8, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0x31, 0xd2, 0xb8, 0x61, 0xce, 0x1a, 0x10, 0xe8, 0x7a, 0x48, 0xfd, 0xff, 0xe9, 0x6c, 0, 0, 0, 0xe8, 0x4d, 0x95, 0xf8, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x62, 0x95, 0xf8, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0x31, 0xd2, 0xb8, 0x74, 0xce, 0x1a, 0x10, 0xe8, 0x55, 0x48, 0xfd, 0xff, 0xeb, 0x4a, 0xe8, 0x2b, 0x95, 0xf8, 0xff, 0x25, 0xff, 0, 0, 0, 0x50, 0xe8, 0x40, 0x95, 0xf8, 0xff, 0x89, 0xc1, 0x31, 0xdb, 0x31, 0xd2, 0xb8, 0x88, 0xce, 0x1a, 0x10, 0xe8, 0x33, 0x48, 0xfd, 0xff, 0xeb, 0x28, 0xeb, 0x26, 0x8b, 0x45, 0xfc, 0x89, 0x45, 0xf8, 0x66, 0x83, 0x7d, 0xf8, 0x1, 0x72, 0x10, 0x66, 0x83, 0x7d, 0xf8, 0x1, 0x76, 0x81, 0x66, 0x83, 0x7d, 0xf8, 0x2, 0x74, 0xc1, 0xeb, 0xe1, 0x66, 0x83, 0x7d, 0xf8, 0, 0x74, 0x96, 0xeb, 0xd8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10141449, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x1014144e, 0x5)   calld(sys_check_available_stack_size, 0x248ff); /* call 0x10165d52 */
    II(0x10141453, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10141454, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10141455, 0x1)   pushd(edx);                           /* push edx */
    II(0x10141456, 0x1)   pushd(esi);                           /* push esi */
    II(0x10141457, 0x1)   pushd(edi);                           /* push edi */
    II(0x10141458, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10141459, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1014145b, 0x6)   sub(esp, 0x8);                        /* sub esp, 0x8 */
    II(0x10141461, 0x6)   mov(edx, memd_a32(ds, 0x101c810e));   /* mov edx, [0x101c810e] */
    II(0x10141467, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1014146a, 0x1)   inc(edx);                             /* inc edx */
    II(0x1014146b, 0x5)   mov(ebx, 0x3);                        /* mov ebx, 0x3 */
    II(0x10141470, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10141472, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10141475, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10141477, 0x7)   mov(memw_a32(ds, 0x101c8110), dx);    /* mov [0x101c8110], dx */
    II(0x1014147e, 0x6)   mov(ax, memw_a32(ds, 0x101c8110));    /* mov ax, [0x101c8110] */
    II(0x10141484, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10141487, 0x2)   jmpd(0x101414f4, 0x6b);               /* jmp 0x101414f4 */
l_0x10141489:
    II(0x10141489, 0x5)   calld(0x100caa00, -0x76a8e);          /* call 0x100caa00 */
    II(0x1014148e, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10141493, 0x1)   pushd(eax);                           /* push eax */
    II(0x10141494, 0x5)   calld(0x100caa20, -0x76a79);          /* call 0x100caa20 */
    II(0x10141499, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1014149b, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014149d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014149f, 0x5)   mov(eax, 0x101ace61);                 /* mov eax, 0x101ace61 */ /* "Task Debug info ON" */
    II(0x101414a4, 0x5)   calld(0x10115d23, -0x2b786);          /* call 0x10115d23 */
    II(0x101414a9, 0x5)   jmpd(0x1014151a, 0x6c);               /* jmp 0x1014151a */
l_0x101414ae:
    II(0x101414ae, 0x5)   calld(0x100caa00, -0x76ab3);          /* call 0x100caa00 */
    II(0x101414b3, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101414b8, 0x1)   pushd(eax);                           /* push eax */
    II(0x101414b9, 0x5)   calld(0x100caa20, -0x76a9e);          /* call 0x100caa20 */
    II(0x101414be, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x101414c0, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101414c2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101414c4, 0x5)   mov(eax, 0x101ace74);                 /* mov eax, 0x101ace74 */ /* "Task Debug info OFF" */
    II(0x101414c9, 0x5)   calld(0x10115d23, -0x2b7ab);          /* call 0x10115d23 */
    II(0x101414ce, 0x2)   jmpd(0x1014151a, 0x4a);               /* jmp 0x1014151a */
l_0x101414d0:
    II(0x101414d0, 0x5)   calld(0x100caa00, -0x76ad5);          /* call 0x100caa00 */
    II(0x101414d5, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x101414da, 0x1)   pushd(eax);                           /* push eax */
    II(0x101414db, 0x5)   calld(0x100caa20, -0x76ac0);          /* call 0x100caa20 */
    II(0x101414e0, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x101414e2, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x101414e4, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x101414e6, 0x5)   mov(eax, 0x101ace88);                 /* mov eax, 0x101ace88 */ /* "Task Log ON" */
    II(0x101414eb, 0x5)   calld(0x10115d23, -0x2b7cd);          /* call 0x10115d23 */
    II(0x101414f0, 0x2)   jmpd(0x1014151a, 0x28);               /* jmp 0x1014151a */
l_0x101414f2:
    II(0x101414f2, 0x2)   jmpd(0x1014151a, 0x26);               /* jmp 0x1014151a */
l_0x101414f4:
    II(0x101414f4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x101414f7, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x101414fa, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0x1);    /* cmp word [ebp-0x8], 0x1 */
    II(0x101414ff, 0x2)   jbd(0x10141511, 0x10);                /* jb 0x10141511 */
    II(0x10141501, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0x1);    /* cmp word [ebp-0x8], 0x1 */
    II(0x10141506, 0x2)   jbed(0x10141489, -0x7f);              /* jbe 0x10141489 */
    II(0x10141508, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0x2);    /* cmp word [ebp-0x8], 0x2 */
    II(0x1014150d, 0x2)   jzd(0x101414d0, -0x3f);               /* jz 0x101414d0 */
    II(0x1014150f, 0x2)   jmpd(0x101414f2, -0x1f);              /* jmp 0x101414f2 */
l_0x10141511:
    II(0x10141511, 0x5)   cmp(memw_a32(ss, ebp - 0x8), 0);      /* cmp word [ebp-0x8], 0x0 */
    II(0x10141516, 0x2)   jzd(0x101414ae, -0x6a);               /* jz 0x101414ae */
    II(0x10141518, 0x2)   jmpd(0x101414f2, -0x28);              /* jmp 0x101414f2 */
l_0x1014151a:
    II(0x1014151a, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1014151c, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1014151d, 0x1)   popd(edi);                            /* pop edi */
    II(0x1014151e, 0x1)   popd(esi);                            /* pop esi */
    II(0x1014151f, 0x1)   popd(edx);                            /* pop edx */
    II(0x10141520, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10141521, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10141522, 0x1)   retd();                               /* ret */
FUNC_END

