FUNC_BEGIN(0x1011fd0c, 0xb90ec6ea3506fa8e, 0x20, ({0x68, 0x44, 0, 0, 0, 0xe8, 0x3c, 0x60, 0x4, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x2c, 0, 0, 0, 0x89, 0x45, 0xf8, 0x88, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8b, 0x58, 0x41, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x3f, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xf0, 0xe8, 0x69, 0x6d, 0xf5, 0xff, 0x80, 0x4d, 0xf4, 0x1, 0x8d, 0x45, 0xec, 0xe8, 0x8d, 0x82, 0xf9, 0xff, 0x89, 0x45, 0xe8, 0x80, 0x65, 0xf4, 0xfe, 0xb8, 0x1a, 0, 0, 0, 0xe8, 0xa0, 0x60, 0x4, 0, 0x89, 0x45, 0xe4, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xe0, 0x83, 0x7d, 0xe0, 0, 0x74, 0x27, 0x8d, 0x55, 0xf0, 0x8d, 0x45, 0xdc, 0xe8, 0xea, 0x60, 0xf5, 0xff, 0x89, 0xc1, 0xf, 0xbe, 0x5d, 0xfc, 0x8b, 0x55, 0xf8, 0x8b, 0x45, 0xe4, 0xe8, 0x5f, 0xd3, 0xff, 0xff, 0x89, 0x45, 0xd8, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xd4, 0xeb, 0x6, 0x8b, 0x45, 0xe0, 0x89, 0x45, 0xd4, 0x8b, 0x55, 0xd4, 0x8d, 0x45, 0xec, 0xe8, 0xfd, 0x81, 0xf9, 0xff, 0x8d, 0x45, 0xec, 0xe8, 0xc5, 0x81, 0xf9, 0xff, 0x89, 0xc2, 0xb8, 0x6c, 0x53, 0x1c, 0x10, 0xe8, 0x9b, 0xdf, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xa3, 0x75, 0xf9, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x1011fd0c, 0x5)   pushd(0x44);                          /* push dword 0x44 */
    II(0x1011fd11, 0x5)   calld(sys_check_available_stack_size, 0x4603c); /* call 0x10165d52 */
    II(0x1011fd16, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1011fd17, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1011fd18, 0x1)   pushd(esi);                           /* push esi */
    II(0x1011fd19, 0x1)   pushd(edi);                           /* push edi */
    II(0x1011fd1a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1011fd1b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1011fd1d, 0x6)   sub(esp, 0x2c);                       /* sub esp, 0x2c */
    II(0x1011fd23, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1011fd26, 0x3)   mov(memb_a32(ss, ebp - 0x4), dl);     /* mov [ebp-0x4], dl */
    II(0x1011fd29, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011fd2c, 0x3)   mov(ebx, memd_a32(ds, eax + 0x41));   /* mov ebx, [eax+0x41] */
    II(0x1011fd2f, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1011fd32, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1011fd35, 0x3)   mov(edx, memd_a32(ds, eax + 0x3f));   /* mov edx, [eax+0x3f] */
    II(0x1011fd38, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1011fd3b, 0x3)   lea(eax, ebp - 0x10);                 /* lea eax, [ebp-0x10] */
    II(0x1011fd3e, 0x5)   calld(0x10076aac, -0xa9297);          /* call 0x10076aac */
    II(0x1011fd43, 0x4)   or_(memb_a32(ss, ebp - 0xc), 0x1);    /* or byte [ebp-0xc], 0x1 */
    II(0x1011fd47, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1011fd4a, 0x5)   calld(0x100b7fdc, -0x67d73);          /* call 0x100b7fdc */
    II(0x1011fd4f, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1011fd52, 0x4)   and_(memb_a32(ss, ebp - 0xc), -0x2 /* 0xfe */); /* and byte [ebp-0xc], 0xfe */
    II(0x1011fd56, 0x5)   mov(eax, 0x1a);                       /* mov eax, 0x1a */
    II(0x1011fd5b, 0x5)   calld(sys_new, 0x460a0);              /* call 0x10165e00 */
    II(0x1011fd60, 0x3)   mov(memd_a32(ss, ebp - 0x1c), eax);   /* mov [ebp-0x1c], eax */
//    II(0x1011fd63, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1011fd66, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1011fd69, 0x4)   cmp(memd_a32(ss, ebp - 0x20), 0);     /* cmp dword [ebp-0x20], 0x0 */
    II(0x1011fd6d, 0x2)   jzd(0x1011fd96, 0x27);                /* jz 0x1011fd96 */
    II(0x1011fd6f, 0x3)   lea(edx, ebp - 0x10);                 /* lea edx, [ebp-0x10] */
    II(0x1011fd72, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x1011fd75, 0x5)   calld(0x10075e64, -0xa9f16);          /* call 0x10075e64 */
    II(0x1011fd7a, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x1011fd7c, 0x4)   movsx(ebx, memb_a32(ss, ebp - 0x4));  /* movsx ebx, byte [ebp-0x4] */
    II(0x1011fd80, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1011fd83, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x1011fd86, 0x5)   calld(0x1011d0ea, -0x2ca1);           /* call 0x1011d0ea */
    II(0x1011fd8b, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
//    II(0x1011fd8e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1011fd91, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
    II(0x1011fd94, 0x2)   jmpd(0x1011fd9c, 0x6);                /* jmp 0x1011fd9c */
l_0x1011fd96:
    II(0x1011fd96, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x1011fd99, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
l_0x1011fd9c:
    II(0x1011fd9c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x2c));   /* mov edx, [ebp-0x2c] */
    II(0x1011fd9f, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1011fda2, 0x5)   calld(0x100b7fa4, -0x67e03);          /* call 0x100b7fa4 */
    II(0x1011fda7, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1011fdaa, 0x5)   calld(0x100b7f74, -0x67e3b);          /* call 0x100b7f74 */
    II(0x1011fdaf, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1011fdb1, 0x5)   mov(eax, 0x101c536c);                 /* mov eax, 0x101c536c */
    II(0x1011fdb6, 0x5)   calld(0x1011dd56, -0x2065);           /* call 0x1011dd56 */
    II(0x1011fdbb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1011fdbd, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x1011fdc0, 0x5)   calld(0x100b7368, -0x68a5d);          /* call 0x100b7368 */
    II(0x1011fdc5, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1011fdc7, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1011fdc8, 0x1)   popd(edi);                            /* pop edi */
    II(0x1011fdc9, 0x1)   popd(esi);                            /* pop esi */
    II(0x1011fdca, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1011fdcb, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1011fdcc, 0x1)   retd();                               /* ret */
FUNC_END

