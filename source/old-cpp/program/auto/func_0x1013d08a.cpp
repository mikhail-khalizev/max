FUNC_BEGIN(0x1013d08a, 0x6b8514d97af72eec, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xbe, 0x8c, 0x2, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0xe8, 0x64, 0, 0, 0, 0xc7, 0x45, 0xf8, 0x14, 0, 0, 0, 0xff, 0x4d, 0xf8, 0x66, 0x83, 0x7d, 0xf8, 0xff, 0x74, 0x30, 0xf, 0xbf, 0x45, 0xf8, 0x69, 0xc0, 0x91, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x81, 0xc2, 0x51, 0x2, 0, 0, 0x1, 0xc2, 0x89, 0x55, 0xf4, 0x8b, 0x45, 0xf4, 0x81, 0x38, 0xff, 0xff, 0, 0, 0x74, 0xb, 0x8b, 0x55, 0xf4, 0x8b, 0x45, 0xfc, 0xe8, 0x53, 0xfd, 0xff, 0xff, 0xeb, 0xc6, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x20, 0, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0x4, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0x10, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1013d08a, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x1013d08f, 0x5)   calld(sys_check_available_stack_size, 0x28cbe); /* call 0x10165d52 */
    II(0x1013d094, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1013d095, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1013d096, 0x1)   pushd(edx);                           /* push edx */
    II(0x1013d097, 0x1)   pushd(esi);                           /* push esi */
    II(0x1013d098, 0x1)   pushd(edi);                           /* push edi */
    II(0x1013d099, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1013d09a, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1013d09c, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x1013d0a2, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1013d0a5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013d0a8, 0x5)   calld(0x1013d111, 0x64);              /* call 0x1013d111 */
    II(0x1013d0ad, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x14);   /* mov dword [ebp-0x8], 0x14 */
l_0x1013d0b4:
    II(0x1013d0b4, 0x3)   dec(memd_a32(ss, ebp - 0x8));         /* dec dword [ebp-0x8] */
    II(0x1013d0b7, 0x5)   cmp(memw_a32(ss, ebp - 0x8), -0x1 /* 0xff */); /* cmp word [ebp-0x8], 0xff */
    II(0x1013d0bc, 0x2)   jzd(0x1013d0ee, 0x30);                /* jz 0x1013d0ee */
    II(0x1013d0be, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1013d0c2, 0x6)   imul(eax, eax, 0x91);                 /* imul eax, eax, 0x91 */
    II(0x1013d0c8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1013d0cb, 0x6)   add(edx, 0x251);                      /* add edx, 0x251 */
    II(0x1013d0d1, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1013d0d3, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x1013d0d6, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1013d0d9, 0x6)   cmp(memd_a32(ds, eax), 0xffff);       /* cmp dword [eax], 0xffff */
    II(0x1013d0df, 0x2)   jzd(0x1013d0ec, 0xb);                 /* jz 0x1013d0ec */
    II(0x1013d0e1, 0x3)   mov(edx, memd_a32(ss, ebp - 0xc));    /* mov edx, [ebp-0xc] */
    II(0x1013d0e4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013d0e7, 0x5)   calld(0x1013ce3f, -0x2ad);            /* call 0x1013ce3f */
l_0x1013d0ec:
    II(0x1013d0ec, 0x2)   jmpd(0x1013d0b4, -0x3a);              /* jmp 0x1013d0b4 */
l_0x1013d0ee:
    II(0x1013d0ee, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013d0f1, 0x4)   mov(memb_a32(ds, eax + 0x20), 0);     /* mov byte [eax+0x20], 0x0 */
    II(0x1013d0f5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013d0f8, 0x7)   mov(memd_a32(ds, eax + 0x4), 0);      /* mov dword [eax+0x4], 0x0 */
    II(0x1013d0ff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1013d102, 0x6)   mov(memw_a32(ds, eax + 0x10), 0xffff); /* mov word [eax+0x10], 0xffff */
    II(0x1013d108, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1013d10a, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1013d10b, 0x1)   popd(edi);                            /* pop edi */
    II(0x1013d10c, 0x1)   popd(esi);                            /* pop esi */
    II(0x1013d10d, 0x1)   popd(edx);                            /* pop edx */
    II(0x1013d10e, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1013d10f, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1013d110, 0x1)   retd();                               /* ret */
FUNC_END

