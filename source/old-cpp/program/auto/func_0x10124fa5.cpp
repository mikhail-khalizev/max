FUNC_BEGIN(0x10124fa5, 0x2c6240e27c4c9452, 0x20, ({0x68, 0x30, 0, 0, 0, 0xe8, 0xa3, 0xd, 0x4, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xfc, 0x83, 0x7d, 0xfc, 0, 0x75, 0xc, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xe9, 0x4a, 0x1, 0, 0, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x4, 0x29, 0xc0, 0xec, 0x89, 0x45, 0xec, 0xb8, 0x1f, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x4, 0xee, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x90, 0x85, 0x5, 0, 0xfa, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x6, 0x29, 0xc0, 0xec, 0x89, 0x45, 0xf4, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x6, 0x29, 0xc0, 0xec, 0x89, 0x45, 0xf4, 0xfb, 0xfc, 0x8b, 0x45, 0xf4, 0x83, 0xe0, 0x3f, 0x83, 0xf8, 0x30, 0x74, 0xc, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xe9, 0xf6, 0, 0, 0, 0x8b, 0x45, 0xec, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x4, 0xee, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x4a, 0x85, 0x5, 0, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x7, 0x29, 0xc0, 0xec, 0x89, 0x45, 0xec, 0xb8, 0x55, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x7, 0xee, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x28, 0x85, 0x5, 0, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x7, 0x29, 0xc0, 0xec, 0x83, 0xf8, 0x55, 0x74, 0xc, 0xc7, 0x45, 0xf8, 0x1, 0, 0, 0, 0xe9, 0xa6, 0, 0, 0, 0xb8, 0xaa, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x7, 0xee, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xf8, 0x84, 0x5, 0, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x7, 0x29, 0xc0, 0xec, 0x3d, 0xaa, 0, 0, 0, 0x74, 0xc, 0xc7, 0x45, 0xf8, 0x1, 0, 0, 0, 0xe9, 0x74, 0, 0, 0, 0x8b, 0x45, 0xec, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x7, 0xee, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xc8, 0x84, 0x5, 0, 0xb8, 0x1, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x2, 0xee, 0xb8, 0x1, 0, 0, 0, 0xe8, 0xb2, 0x84, 0x5, 0, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x2, 0x29, 0xc0, 0xec, 0x89, 0x45, 0xf0, 0x31, 0xc0, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x2, 0xee, 0xb8, 0x1, 0, 0, 0, 0xe8, 0x93, 0x84, 0x5, 0, 0xf7, 0x45, 0xf0, 0x80, 0, 0, 0, 0x75, 0x9, 0xc7, 0x45, 0xf8, 0x2, 0, 0, 0, 0xeb, 0x19, 0xf7, 0x45, 0xf0, 0x40, 0, 0, 0, 0x75, 0x9, 0xc7, 0x45, 0xf8, 0x3, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xf8, 0x3, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x10124fa5, 0x5)   pushd(0x30);                          /* push dword 0x30 */
    II(0x10124faa, 0x5)   calld(sys_check_available_stack_size, 0x40da3); /* call 0x10165d52 */
    II(0x10124faf, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10124fb0, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10124fb1, 0x1)   pushd(edx);                           /* push edx */
    II(0x10124fb2, 0x1)   pushd(esi);                           /* push esi */
    II(0x10124fb3, 0x1)   pushd(edi);                           /* push edi */
    II(0x10124fb4, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10124fb5, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10124fb7, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x10124fbd, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10124fc0, 0x4)   cmp(memd_a32(ss, ebp - 0x4), 0);      /* cmp dword [ebp-0x4], 0x0 */
    II(0x10124fc4, 0x2)   jnzd(0x10124fd2, 0xc);                /* jnz 0x10124fd2 */
    II(0x10124fc6, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x10124fcd, 0x5)   jmpd(0x1012511c, 0x14a);              /* jmp 0x1012511c */
l_0x10124fd2:
    II(0x10124fd2, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10124fd5, 0x3)   add(edx, 0x4);                        /* add edx, 0x4 */
    II(0x10124fd8, 0x2)   sub(eax, eax);                        /* sub eax, eax */
    II(0x10124fda, 0x1)   inb(al, dx);                          /* in al, dx */
    II(0x10124fdb, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10124fde, 0x5)   mov(eax, 0x1f);                       /* mov eax, 0x1f */
    II(0x10124fe3, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10124fe6, 0x3)   add(edx, 0x4);                        /* add edx, 0x4 */
    II(0x10124fe9, 0x1)   outb(dx, al);                         /* out dx, al */
    II(0x10124fea, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10124fef, 0x5)   calld(/* sys */ 0x1017d584, 0x58590); /* call 0x1017d584 */
    II(0x10124ff4, 0x1)   cli();                                /* cli */
    II(0x10124ff5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10124ff8, 0x3)   add(edx, 0x6);                        /* add edx, 0x6 */
    II(0x10124ffb, 0x2)   sub(eax, eax);                        /* sub eax, eax */
    II(0x10124ffd, 0x1)   inb(al, dx);                          /* in al, dx */
    II(0x10124ffe, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x10125001, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x10125004, 0x3)   add(edx, 0x6);                        /* add edx, 0x6 */
    II(0x10125007, 0x2)   sub(eax, eax);                        /* sub eax, eax */
    II(0x10125009, 0x1)   inb(al, dx);                          /* in al, dx */
    II(0x1012500a, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1012500d, 0x1)   sti();                                /* sti */
    II(0x1012500e, 0x1)   cld();                                /* cld */
    II(0x1012500f, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10125012, 0x3)   and_(eax, 0x3f);                      /* and eax, 0x3f */
    II(0x10125015, 0x3)   cmp(eax, 0x30);                       /* cmp eax, 0x30 */
    II(0x10125018, 0x2)   jzd(0x10125026, 0xc);                 /* jz 0x10125026 */
    II(0x1012501a, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x10125021, 0x5)   jmpd(0x1012511c, 0xf6);               /* jmp 0x1012511c */
l_0x10125026:
    II(0x10125026, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x10125029, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1012502c, 0x3)   add(edx, 0x4);                        /* add edx, 0x4 */
    II(0x1012502f, 0x1)   outb(dx, al);                         /* out dx, al */
    II(0x10125030, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10125035, 0x5)   calld(/* sys */ 0x1017d584, 0x5854a); /* call 0x1017d584 */
    II(0x1012503a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1012503d, 0x3)   add(edx, 0x7);                        /* add edx, 0x7 */
    II(0x10125040, 0x2)   sub(eax, eax);                        /* sub eax, eax */
    II(0x10125042, 0x1)   inb(al, dx);                          /* in al, dx */
    II(0x10125043, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10125046, 0x5)   mov(eax, 0x55);                       /* mov eax, 0x55 */
    II(0x1012504b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1012504e, 0x3)   add(edx, 0x7);                        /* add edx, 0x7 */
    II(0x10125051, 0x1)   outb(dx, al);                         /* out dx, al */
    II(0x10125052, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10125057, 0x5)   calld(/* sys */ 0x1017d584, 0x58528); /* call 0x1017d584 */
    II(0x1012505c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1012505f, 0x3)   add(edx, 0x7);                        /* add edx, 0x7 */
    II(0x10125062, 0x2)   sub(eax, eax);                        /* sub eax, eax */
    II(0x10125064, 0x1)   inb(al, dx);                          /* in al, dx */
    II(0x10125065, 0x3)   cmp(eax, 0x55);                       /* cmp eax, 0x55 */
    II(0x10125068, 0x2)   jzd(0x10125076, 0xc);                 /* jz 0x10125076 */
    II(0x1012506a, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x1);    /* mov dword [ebp-0x8], 0x1 */
    II(0x10125071, 0x5)   jmpd(0x1012511c, 0xa6);               /* jmp 0x1012511c */
l_0x10125076:
    II(0x10125076, 0x5)   mov(eax, 0xaa);                       /* mov eax, 0xaa */
    II(0x1012507b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1012507e, 0x3)   add(edx, 0x7);                        /* add edx, 0x7 */
    II(0x10125081, 0x1)   outb(dx, al);                         /* out dx, al */
    II(0x10125082, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10125087, 0x5)   calld(/* sys */ 0x1017d584, 0x584f8); /* call 0x1017d584 */
    II(0x1012508c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1012508f, 0x3)   add(edx, 0x7);                        /* add edx, 0x7 */
    II(0x10125092, 0x2)   sub(eax, eax);                        /* sub eax, eax */
    II(0x10125094, 0x1)   inb(al, dx);                          /* in al, dx */
    II(0x10125095, 0x5)   cmp(eax, 0xaa);                       /* cmp eax, 0xaa */
    II(0x1012509a, 0x2)   jzd(0x101250a8, 0xc);                 /* jz 0x101250a8 */
    II(0x1012509c, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x1);    /* mov dword [ebp-0x8], 0x1 */
    II(0x101250a3, 0x5)   jmpd(0x1012511c, 0x74);               /* jmp 0x1012511c */
l_0x101250a8:
    II(0x101250a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x101250ab, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x101250ae, 0x3)   add(edx, 0x7);                        /* add edx, 0x7 */
    II(0x101250b1, 0x1)   outb(dx, al);                         /* out dx, al */
    II(0x101250b2, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101250b7, 0x5)   calld(/* sys */ 0x1017d584, 0x584c8); /* call 0x1017d584 */
    II(0x101250bc, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101250c1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x101250c4, 0x3)   add(edx, 0x2);                        /* add edx, 0x2 */
    II(0x101250c7, 0x1)   outb(dx, al);                         /* out dx, al */
    II(0x101250c8, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101250cd, 0x5)   calld(/* sys */ 0x1017d584, 0x584b2); /* call 0x1017d584 */
    II(0x101250d2, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x101250d5, 0x3)   add(edx, 0x2);                        /* add edx, 0x2 */
    II(0x101250d8, 0x2)   sub(eax, eax);                        /* sub eax, eax */
    II(0x101250da, 0x1)   inb(al, dx);                          /* in al, dx */
    II(0x101250db, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x101250de, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x101250e0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x101250e3, 0x3)   add(edx, 0x2);                        /* add edx, 0x2 */
    II(0x101250e6, 0x1)   outb(dx, al);                         /* out dx, al */
    II(0x101250e7, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x101250ec, 0x5)   calld(/* sys */ 0x1017d584, 0x58493); /* call 0x1017d584 */
    II(0x101250f1, 0x7)   test(memd_a32(ss, ebp - 0x10), 0x80); /* test dword [ebp-0x10], 0x80 */
    II(0x101250f8, 0x2)   jnzd(0x10125103, 0x9);                /* jnz 0x10125103 */
    II(0x101250fa, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x2);    /* mov dword [ebp-0x8], 0x2 */
    II(0x10125101, 0x2)   jmpd(0x1012511c, 0x19);               /* jmp 0x1012511c */
l_0x10125103:
    II(0x10125103, 0x7)   test(memd_a32(ss, ebp - 0x10), 0x40); /* test dword [ebp-0x10], 0x40 */
    II(0x1012510a, 0x2)   jnzd(0x10125115, 0x9);                /* jnz 0x10125115 */
    II(0x1012510c, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x3);    /* mov dword [ebp-0x8], 0x3 */
    II(0x10125113, 0x2)   jmpd(0x1012511c, 0x7);                /* jmp 0x1012511c */
l_0x10125115:
    II(0x10125115, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x3);    /* mov dword [ebp-0x8], 0x3 */
l_0x1012511c:
    II(0x1012511c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1012511f, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10125121, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10125122, 0x1)   popd(edi);                            /* pop edi */
    II(0x10125123, 0x1)   popd(esi);                            /* pop esi */
    II(0x10125124, 0x1)   popd(edx);                            /* pop edx */
    II(0x10125125, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10125126, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10125127, 0x1)   retd();                               /* ret */
FUNC_END

