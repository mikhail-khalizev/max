FUNC_BEGIN(0x10149fe6, 0xa27a18cb2cee566e, 0x20, ({0x68, 0x2c, 0, 0, 0, 0xe8, 0x62, 0xbd, 0x1, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x14, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x29, 0x30, 0xe4, 0x8b, 0x55, 0xfc, 0x29, 0xc2, 0x89, 0x55, 0xf0, 0xf, 0xbf, 0x45, 0xf0, 0x85, 0xc0, 0xf, 0x84, 0xca, 0, 0, 0, 0x31, 0xc0, 0xa0, 0xda, 0x37, 0x1c, 0x10, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0xe8, 0x43, 0xc0, 0xf2, 0xff, 0x84, 0xc0, 0x75, 0x9, 0x80, 0x3d, 0x80, 0x39, 0x1c, 0x10, 0, 0x74, 0x6, 0xc6, 0x45, 0xec, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xec, 0, 0x8a, 0x45, 0xec, 0x88, 0x45, 0xf4, 0x80, 0x7d, 0xf4, 0, 0x74, 0x8, 0x8b, 0x45, 0xf8, 0xe8, 0x4c, 0xff, 0xff, 0xff, 0x8a, 0x45, 0xfc, 0x24, 0x7, 0x8b, 0x55, 0xf8, 0x88, 0x42, 0x29, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x98, 0xd5, 0, 0, 0, 0x81, 0xe3, 0xf8, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x31, 0xd2, 0x8a, 0x50, 0x29, 0x8b, 0x45, 0xf8, 0x1, 0xd3, 0x66, 0x89, 0x98, 0xd5, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xf6, 0x40, 0x15, 0x2, 0x74, 0x3f, 0xe8, 0xab, 0xb0, 0, 0, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x45, 0xf8, 0x8a, 0x40, 0x2e, 0x30, 0xe4, 0x3, 0x45, 0xf0, 0x25, 0x7, 0, 0, 0, 0xf, 0xbf, 0xd0, 0x8b, 0x45, 0xf8, 0xe8, 0xd0, 0x46, 0, 0, 0x8b, 0x45, 0xf8, 0x31, 0xd2, 0x8a, 0x50, 0x2e, 0x8b, 0x45, 0xf8, 0x66, 0x8b, 0x40, 0x35, 0x1, 0xd0, 0x8b, 0x55, 0xf8, 0x66, 0x89, 0x82, 0xd7, 0, 0, 0, 0x8b, 0x45, 0xf8, 0xe8, 0xf6, 0xfb, 0xff, 0xff, 0x80, 0x7d, 0xf4, 0, 0x74, 0x8, 0x8b, 0x45, 0xf8, 0xe8, 0xbf, 0xfe, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10149fe6, 0x5)   pushd(0x2c);                          /* push dword 0x2c */
    II(0x10149feb, 0x5)   calld(sys_check_available_stack_size, 0x1bd62); /* call 0x10165d52 */
    II(0x10149ff0, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10149ff1, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10149ff2, 0x1)   pushd(esi);                           /* push esi */
    II(0x10149ff3, 0x1)   pushd(edi);                           /* push edi */
    II(0x10149ff4, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10149ff5, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10149ff7, 0x6)   sub(esp, 0x14);                       /* sub esp, 0x14 */
    II(0x10149ffd, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x1014a000, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
//    II(0x1014a003, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a006, 0x3)   mov(al, memb_a32(ds, eax + 0x29));    /* mov al, [eax+0x29] */
    II(0x1014a009, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1014a00b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1014a00e, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x1014a010, 0x3)   mov(memd_a32(ss, ebp - 0x10), edx);   /* mov [ebp-0x10], edx */
    II(0x1014a013, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x1014a017, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1014a019, 0x6)   jzd(0x1014a0e9, 0xca);                /* jz dword 0x1014a0e9 */
    II(0x1014a01f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1014a021, 0x5)   mov(al, memb_a32(ds, 0x101c37da));    /* mov al, [0x101c37da] */
    II(0x1014a026, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1014a029, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a02c, 0x5)   calld(0x10076074, -0xd3fbd);          /* call 0x10076074 */
    II(0x1014a031, 0x2)   test(al, al);                         /* test al, al */
    II(0x1014a033, 0x2)   jnzd(0x1014a03e, 0x9);                /* jnz 0x1014a03e */
    II(0x1014a035, 0x7)   cmp(memb_a32(ds, 0x101c3980), 0);     /* cmp byte [0x101c3980], 0x0 */
    II(0x1014a03c, 0x2)   jzd(0x1014a044, 0x6);                 /* jz 0x1014a044 */
l_0x1014a03e:
    II(0x1014a03e, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0x1);   /* mov byte [ebp-0x14], 0x1 */
    II(0x1014a042, 0x2)   jmpd(0x1014a048, 0x4);                /* jmp 0x1014a048 */
l_0x1014a044:
    II(0x1014a044, 0x4)   mov(memb_a32(ss, ebp - 0x14), 0);     /* mov byte [ebp-0x14], 0x0 */
l_0x1014a048:
    II(0x1014a048, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x1014a04b, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x1014a04e, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0);      /* cmp byte [ebp-0xc], 0x0 */
    II(0x1014a052, 0x2)   jzd(0x1014a05c, 0x8);                 /* jz 0x1014a05c */
    II(0x1014a054, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a057, 0x5)   calld(0x10149fa8, -0xb4);             /* call 0x10149fa8 */
l_0x1014a05c:
    II(0x1014a05c, 0x3)   mov(al, memb_a32(ss, ebp - 0x4));     /* mov al, [ebp-0x4] */
    II(0x1014a05f, 0x2)   and_(al, 0x7);                        /* and al, 0x7 */
    II(0x1014a061, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014a064, 0x3)   mov(memb_a32(ds, edx + 0x29), al);    /* mov [edx+0x29], al */
    II(0x1014a067, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a06a, 0x7)   mov(bx, memw_a32(ds, eax + 0xd5));    /* mov bx, [eax+0xd5] */
    II(0x1014a071, 0x6)   and_(ebx, 0xf8);                      /* and ebx, 0xf8 */
    II(0x1014a077, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a07a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014a07c, 0x3)   mov(dl, memb_a32(ds, eax + 0x29));    /* mov dl, [eax+0x29] */
    II(0x1014a07f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a082, 0x2)   add(ebx, edx);                        /* add ebx, edx */
    II(0x1014a084, 0x7)   mov(memw_a32(ds, eax + 0xd5), bx);    /* mov [eax+0xd5], bx */
    II(0x1014a08b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a08e, 0x4)   test(memb_a32(ds, eax + 0x15), 0x2);  /* test byte [eax+0x15], 0x2 */
    II(0x1014a092, 0x2)   jzd(0x1014a0d3, 0x3f);                /* jz 0x1014a0d3 */
    II(0x1014a094, 0x5)   calld(0x10155144, 0xb0ab);            /* call 0x10155144 */
    II(0x1014a099, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1014a09b, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x1014a09d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a0a0, 0x3)   mov(al, memb_a32(ds, eax + 0x2e));    /* mov al, [eax+0x2e] */
    II(0x1014a0a3, 0x2)   xor_(ah, ah);                         /* xor ah, ah */
    II(0x1014a0a5, 0x3)   add(eax, memd_a32(ss, ebp - 0x10));   /* add eax, [ebp-0x10] */
    II(0x1014a0a8, 0x5)   and_(eax, 0x7);                       /* and eax, 0x7 */
    II(0x1014a0ad, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x1014a0b0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a0b3, 0x5)   calld(0x1014e788, 0x46d0);            /* call 0x1014e788 */
    II(0x1014a0b8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a0bb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1014a0bd, 0x3)   mov(dl, memb_a32(ds, eax + 0x2e));    /* mov dl, [eax+0x2e] */
    II(0x1014a0c0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a0c3, 0x4)   mov(ax, memw_a32(ds, eax + 0x35));    /* mov ax, [eax+0x35] */
    II(0x1014a0c7, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1014a0c9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x8));    /* mov edx, [ebp-0x8] */
    II(0x1014a0cc, 0x7)   mov(memw_a32(ds, edx + 0xd7), ax);    /* mov [edx+0xd7], ax */
l_0x1014a0d3:
    II(0x1014a0d3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a0d6, 0x5)   calld(0x10149cd1, -0x40a);            /* call 0x10149cd1 */
    II(0x1014a0db, 0x4)   cmp(memb_a32(ss, ebp - 0xc), 0);      /* cmp byte [ebp-0xc], 0x0 */
    II(0x1014a0df, 0x2)   jzd(0x1014a0e9, 0x8);                 /* jz 0x1014a0e9 */
    II(0x1014a0e1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1014a0e4, 0x5)   calld(0x10149fa8, -0x141);            /* call 0x10149fa8 */
l_0x1014a0e9:
    II(0x1014a0e9, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1014a0eb, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1014a0ec, 0x1)   popd(edi);                            /* pop edi */
    II(0x1014a0ed, 0x1)   popd(esi);                            /* pop esi */
    II(0x1014a0ee, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1014a0ef, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1014a0f0, 0x1)   retd();                               /* ret */
FUNC_END

