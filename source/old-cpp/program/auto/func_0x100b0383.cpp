FUNC_BEGIN(0x100b0383, 0xfc2a6959eae5a670, 0x20, ({0x68, 0x78, 0, 0, 0, 0xe8, 0xc5, 0x59, 0xb, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x58, 0, 0, 0, 0x89, 0x45, 0xfc, 0xa1, 0x72, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0x50, 0x8b, 0xd, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf9, 0x10, 0x31, 0xdb, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x8c, 0xad, 0xfd, 0xff, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xec, 0xe8, 0x28, 0x63, 0xfc, 0xff, 0x89, 0x45, 0xf0, 0x80, 0x65, 0xf8, 0xfe, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0x9a, 0x61, 0xfc, 0xff, 0x66, 0x83, 0x78, 0x8, 0x4e, 0x75, 0x9, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0xeb, 0x7, 0xc7, 0x45, 0xf4, 0x2, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x24, 0xa1, 0xfd, 0xff, 0xe8, 0x67, 0x79, 0, 0, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0x25, 0x62, 0xfc, 0xff, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x1f, 0x8b, 0x45, 0xfc, 0x66, 0xff, 0x48, 0x1f, 0xf, 0xbf, 0xc2, 0x85, 0xc0, 0x7f, 0x5c, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x40, 0x1d, 0x2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x1b, 0xc1, 0xf8, 0x10, 0x83, 0xf8, 0x8, 0x7c, 0x38, 0x8b, 0x45, 0xfc, 0x80, 0x78, 0x25, 0, 0x75, 0x17, 0x8b, 0x45, 0xfc, 0xe8, 0x93, 0x2, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xdb, 0x5a, 0xfc, 0xff, 0xe9, 0xe1, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x40, 0x1b, 0x2, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x25, 0, 0x8b, 0x45, 0xfc, 0x66, 0xc7, 0x40, 0x1d, 0, 0, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x50, 0x1b, 0x8b, 0x45, 0xfc, 0x66, 0x89, 0x50, 0x1f, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x1b, 0xc1, 0xfa, 0x10, 0xc1, 0xe2, 0x2, 0xb8, 0x48, 0x53, 0x1c, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x21, 0xe8, 0xa, 0xad, 0xfd, 0xff, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x21, 0x8d, 0x45, 0xdc, 0xe8, 0x26, 0x7e, 0x5, 0, 0x84, 0xc0, 0xf, 0x84, 0x78, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x25, 0x1, 0xb8, 0x1, 0, 0, 0, 0x50, 0x8b, 0x45, 0xfc, 0x8b, 0x48, 0x21, 0xc1, 0xf9, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x58, 0x1f, 0xc1, 0xfb, 0x10, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xec, 0xe8, 0x94, 0x60, 0xfc, 0xff, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0xce, 0xfd, 0xfb, 0xff, 0x66, 0x85, 0xc0, 0x74, 0x2b, 0xb9, 0x1, 0, 0, 0, 0xbb, 0x2, 0, 0, 0, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x21, 0x8d, 0x45, 0xd8, 0xe8, 0x5c, 0x59, 0xfc, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xec, 0xe8, 0xaa, 0xa6, 0xfd, 0xff, 0xe8, 0xe2, 0x8b, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x5, 0xe9, 0x8, 0x1, 0, 0, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xd4, 0xe8, 0x78, 0xab, 0xfd, 0xff, 0x89, 0x45, 0xd0, 0x80, 0x65, 0xf8, 0xfe, 0xb8, 0x20, 0, 0, 0, 0xe8, 0xc3, 0x58, 0xb, 0, 0x89, 0x45, 0xcc, 0x8b, 0x45, 0xcc, 0x89, 0x45, 0xc8, 0x83, 0x7d, 0xc8, 0, 0x74, 0x35, 0x8b, 0x55, 0xfc, 0x83, 0xc2, 0x21, 0x8d, 0x45, 0xc4, 0xe8, 0xa, 0x59, 0xfc, 0xff, 0x89, 0xc1, 0xbb, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x17, 0xe8, 0x64, 0x60, 0xfc, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xcc, 0xe8, 0x75, 0xb9, 0xff, 0xff, 0x89, 0x45, 0xc0, 0x8b, 0x45, 0xc0, 0x89, 0x45, 0xbc, 0xeb, 0x6, 0x8b, 0x45, 0xc8, 0x89, 0x45, 0xbc, 0x8b, 0x45, 0xbc, 0x89, 0x45, 0xb8, 0xf, 0xbf, 0x55, 0xf4, 0x8b, 0x45, 0xb8, 0xe8, 0xc4, 0xd2, 0x6, 0, 0xba, 0x3, 0, 0, 0, 0x8b, 0x45, 0xb8, 0xe8, 0x5b, 0xd2, 0x6, 0, 0x31, 0xd2, 0x8b, 0x45, 0xb8, 0xe8, 0xdc, 0xd2, 0x6, 0, 0xb8, 0x1f, 0, 0, 0, 0xe8, 0x46, 0x58, 0xb, 0, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0xb4, 0x89, 0x45, 0xb0, 0x83, 0x7d, 0xb0, 0, 0x74, 0x24, 0xb8, 0xa7, 0x6, 0xb, 0x10, 0x50, 0xb9, 0x40, 0x6, 0xb, 0x10, 0x8b, 0x5d, 0xb8, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xb4, 0xe8, 0x90, 0xb4, 0xff, 0xff, 0x89, 0x45, 0xac, 0x8b, 0x45, 0xac, 0x89, 0x45, 0xa8, 0xeb, 0x6, 0x8b, 0x45, 0xb0, 0x89, 0x45, 0xa8, 0x8b, 0x55, 0xa8, 0x8d, 0x45, 0xd4, 0xe8, 0xe6, 0xa9, 0xfd, 0xff, 0x8d, 0x45, 0xd4, 0xe8, 0x7e, 0xa9, 0xfd, 0xff, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x3e, 0x47, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xd4, 0xe8, 0x60, 0x85, 0xfd, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0x6, 0x59, 0xfc, 0xff, 0xeb, 0xf, 0xe9, 0xde, 0xfd, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xec, 0xe8, 0xf5, 0x58, 0xfc, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100b0383, 0x5)   pushd(0x78);                          /* push dword 0x78 */
    II(0x100b0388, 0x5)   calld(sys_check_available_stack_size, 0xb59c5); /* call 0x10165d52 */
    II(0x100b038d, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100b038e, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100b038f, 0x1)   pushd(edx);                           /* push edx */
    II(0x100b0390, 0x1)   pushd(esi);                           /* push esi */
    II(0x100b0391, 0x1)   pushd(edi);                           /* push edi */
    II(0x100b0392, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100b0393, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100b0395, 0x6)   sub(esp, 0x58);                       /* sub esp, 0x58 */
    II(0x100b039b, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100b039e, 0x5)   mov(eax, memd_a32(ds, 0x101c8172));   /* mov eax, [0x101c8172] */
    II(0x100b03a3, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b03a6, 0x1)   pushd(eax);                           /* push eax */
    II(0x100b03a7, 0x6)   mov(ecx, memd_a32(ds, 0x101c8170));   /* mov ecx, [0x101c8170] */
    II(0x100b03ad, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100b03b0, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x100b03b2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b03b4, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100b03b7, 0x5)   calld(0x1008b148, -0x25274);          /* call 0x1008b148 */
    II(0x100b03bc, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x100b03c0, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b03c3, 0x5)   calld(my_ctor_0x101b38f8, -0x39cd8);  /* call 0x100766f0 */
    II(0x100b03c8, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100b03cb, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x100b03cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b03d2, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100b03d5, 0x5)   calld(0x10076574, -0x39e66);          /* call 0x10076574 */
    II(0x100b03da, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x4e);   /* cmp word [eax+0x8], 0x4e */
    II(0x100b03df, 0x2)   jnzd(0x100b03ea, 0x9);                /* jnz 0x100b03ea */
    II(0x100b03e1, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x100b03e8, 0x2)   jmpd(0x100b03f1, 0x7);                /* jmp 0x100b03f1 */
l_0x100b03ea:
    II(0x100b03ea, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0x2);    /* mov dword [ebp-0xc], 0x2 */
l_0x100b03f1:
    II(0x100b03f1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b03f4, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x100b03f7, 0x5)   calld(0x1008a520, -0x25edc);          /* call 0x1008a520 */
    II(0x100b03fc, 0x5)   calld(0x100b7d68, 0x7967);            /* call 0x100b7d68 */
    II(0x100b0401, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b0403, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b0406, 0x5)   calld(0x10076630, -0x39ddb);          /* call 0x10076630 */
l_0x100b040b:
    II(0x100b040b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b040e, 0x4)   mov(dx, memw_a32(ds, eax + 0x1f));    /* mov dx, [eax+0x1f] */
//    II(0x100b0412, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0415, 0x4)   dec(memw_a32(ds, eax + 0x1f));        /* dec word [eax+0x1f] */
    II(0x100b0419, 0x3)   movsx(eax, dx);                       /* movsx eax, dx */
    II(0x100b041c, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100b041e, 0x2)   jgd(0x100b047c, 0x5c);                /* jg 0x100b047c */
    II(0x100b0420, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0423, 0x5)   add(memw_a32(ds, eax + 0x1d), 0x2);   /* add word [eax+0x1d], 0x2 */
    II(0x100b0428, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b042b, 0x3)   mov(eax, memd_a32(ds, eax + 0x1b));   /* mov eax, [eax+0x1b] */
    II(0x100b042e, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b0431, 0x3)   cmp(eax, 0x8);                        /* cmp eax, 0x8 */
    II(0x100b0434, 0x2)   jld(0x100b046e, 0x38);                /* jl 0x100b046e */
    II(0x100b0436, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0439, 0x4)   cmp(memb_a32(ds, eax + 0x25), 0);     /* cmp byte [eax+0x25], 0x0 */
    II(0x100b043d, 0x2)   jnzd(0x100b0456, 0x17);               /* jnz 0x100b0456 */
    II(0x100b043f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0442, 0x5)   calld(0x100b06da, 0x293);             /* call 0x100b06da */
    II(0x100b0447, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b0449, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b044c, 0x5)   calld(0x10075f2c, -0x3a525);          /* call 0x10075f2c */
    II(0x100b0451, 0x5)   jmpd(0x100b0637, 0x1e1);              /* jmp 0x100b0637 */
l_0x100b0456:
    II(0x100b0456, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0459, 0x5)   add(memw_a32(ds, eax + 0x1b), 0x2);   /* add word [eax+0x1b], 0x2 */
    II(0x100b045e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0461, 0x4)   mov(memb_a32(ds, eax + 0x25), 0);     /* mov byte [eax+0x25], 0x0 */
    II(0x100b0465, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0468, 0x6)   mov(memw_a32(ds, eax + 0x1d), 0);     /* mov word [eax+0x1d], 0x0 */
l_0x100b046e:
    II(0x100b046e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0471, 0x4)   mov(dx, memw_a32(ds, eax + 0x1b));    /* mov dx, [eax+0x1b] */
//    II(0x100b0475, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0478, 0x4)   mov(memw_a32(ds, eax + 0x1f), dx);    /* mov [eax+0x1f], dx */
l_0x100b047c:
    II(0x100b047c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b047f, 0x3)   mov(edx, memd_a32(ds, eax + 0x1b));   /* mov edx, [eax+0x1b] */
    II(0x100b0482, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100b0485, 0x3)   shl(edx, 0x2);                        /* shl edx, 0x2 */
    II(0x100b0488, 0x5)   mov(eax, 0x101c5348);                 /* mov eax, 0x101c5348 */
    II(0x100b048d, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x100b048f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0492, 0x3)   add(eax, 0x21);                       /* add eax, 0x21 */
    II(0x100b0495, 0x5)   calld(0x1008b1a4, -0x252f6);          /* call 0x1008b1a4 */
    II(0x100b049a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b049d, 0x3)   add(edx, 0x21);                       /* add edx, 0x21 */
    II(0x100b04a0, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100b04a3, 0x5)   calld(0x101082ce, 0x57e26);           /* call 0x101082ce */
    II(0x100b04a8, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b04aa, 0x6)   jzd(0x100b0628, 0x178);               /* jz dword 0x100b0628 */
    II(0x100b04b0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b04b3, 0x4)   mov(memb_a32(ds, eax + 0x25), 0x1);   /* mov byte [eax+0x25], 0x1 */
    II(0x100b04b7, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100b04bc, 0x1)   pushd(eax);                           /* push eax */
    II(0x100b04bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b04c0, 0x3)   mov(ecx, memd_a32(ds, eax + 0x21));   /* mov ecx, [eax+0x21] */
    II(0x100b04c3, 0x3)   sar(ecx, 0x10);                       /* sar ecx, 0x10 */
    II(0x100b04c6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b04c9, 0x3)   mov(ebx, memd_a32(ds, eax + 0x1f));   /* mov ebx, [eax+0x1f] */
    II(0x100b04cc, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x100b04cf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b04d2, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x100b04d5, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x100b04d8, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b04db, 0x5)   calld(0x10076574, -0x39f6c);          /* call 0x10076574 */
    II(0x100b04e0, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x100b04e3, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100b04e6, 0x5)   calld(0x100702b9, -0x40232);          /* call 0x100702b9 */
    II(0x100b04eb, 0x3)   test(ax, ax);                         /* test ax, ax */
    II(0x100b04ee, 0x2)   jzd(0x100b051b, 0x2b);                /* jz 0x100b051b */
    II(0x100b04f0, 0x5)   mov(ecx, 0x1);                        /* mov ecx, 0x1 */
    II(0x100b04f5, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x100b04fa, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b04fd, 0x3)   add(edx, 0x21);                       /* add edx, 0x21 */
    II(0x100b0500, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100b0503, 0x5)   calld(0x10075e64, -0x3a6a4);          /* call 0x10075e64 */
    II(0x100b0508, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b050a, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b050d, 0x5)   calld(0x1008abbc, -0x25956);          /* call 0x1008abbc */
    II(0x100b0512, 0x5)   calld(0x100a90f9, -0x741e);           /* call 0x100a90f9 */
    II(0x100b0517, 0x2)   test(al, al);                         /* test al, al */
    II(0x100b0519, 0x2)   jzd(0x100b0520, 0x5);                 /* jz 0x100b0520 */
l_0x100b051b:
    II(0x100b051b, 0x5)   jmpd(0x100b0628, 0x108);              /* jmp 0x100b0628 */
l_0x100b0520:
    II(0x100b0520, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x100b0524, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b0527, 0x5)   calld(my_ctor_0x101b3b58, -0x25488);  /* call 0x1008b0a4 */
    II(0x100b052c, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x100b052f, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x100b0533, 0x5)   mov(eax, 0x20);                       /* mov eax, 0x20 */
    II(0x100b0538, 0x5)   calld(sys_new, 0xb58c3);              /* call 0x10165e00 */
    II(0x100b053d, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
//    II(0x100b0540, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100b0543, 0x3)   mov(memd_a32(ss, ebp - 0x38), eax);   /* mov [ebp-0x38], eax */
    II(0x100b0546, 0x4)   cmp(memd_a32(ss, ebp - 0x38), 0);     /* cmp dword [ebp-0x38], 0x0 */
    II(0x100b054a, 0x2)   jzd(0x100b0581, 0x35);                /* jz 0x100b0581 */
    II(0x100b054c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b054f, 0x3)   add(edx, 0x21);                       /* add edx, 0x21 */
    II(0x100b0552, 0x3)   lea(eax, ebp - 0x3c);                 /* lea eax, [ebp-0x3c] */
    II(0x100b0555, 0x5)   calld(0x10075e64, -0x3a6f6);          /* call 0x10075e64 */
    II(0x100b055a, 0x2)   mov(ecx, eax);                        /* mov ecx, eax */
    II(0x100b055c, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x100b0561, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100b0564, 0x3)   add(eax, 0x17);                       /* add eax, 0x17 */
    II(0x100b0567, 0x5)   calld(0x100765d0, -0x39f9c);          /* call 0x100765d0 */
    II(0x100b056c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b056e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x34));   /* mov eax, [ebp-0x34] */
    II(0x100b0571, 0x5)   calld(0x100abeeb, -0x468b);           /* call 0x100abeeb */
    II(0x100b0576, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
//    II(0x100b0579, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100b057c, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
    II(0x100b057f, 0x2)   jmpd(0x100b0587, 0x6);                /* jmp 0x100b0587 */
l_0x100b0581:
    II(0x100b0581, 0x3)   mov(eax, memd_a32(ss, ebp - 0x38));   /* mov eax, [ebp-0x38] */
    II(0x100b0584, 0x3)   mov(memd_a32(ss, ebp - 0x44), eax);   /* mov [ebp-0x44], eax */
l_0x100b0587:
    II(0x100b0587, 0x3)   mov(eax, memd_a32(ss, ebp - 0x44));   /* mov eax, [ebp-0x44] */
    II(0x100b058a, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
    II(0x100b058d, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100b0591, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100b0594, 0x5)   calld(0x1011d85d, 0x6d2c4);           /* call 0x1011d85d */
    II(0x100b0599, 0x5)   mov(edx, 0x3);                        /* mov edx, 0x3 */
    II(0x100b059e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100b05a1, 0x5)   calld(0x1011d801, 0x6d25b);           /* call 0x1011d801 */
    II(0x100b05a6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b05a8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x100b05ab, 0x5)   calld(0x1011d88c, 0x6d2dc);           /* call 0x1011d88c */
    II(0x100b05b0, 0x5)   mov(eax, 0x1f);                       /* mov eax, 0x1f */
    II(0x100b05b5, 0x5)   calld(sys_new, 0xb5846);              /* call 0x10165e00 */
    II(0x100b05ba, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
//    II(0x100b05bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100b05c0, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x100b05c3, 0x4)   cmp(memd_a32(ss, ebp - 0x50), 0);     /* cmp dword [ebp-0x50], 0x0 */
    II(0x100b05c7, 0x2)   jzd(0x100b05ed, 0x24);                /* jz 0x100b05ed */
    II(0x100b05c9, 0x5)   mov(eax, 0x100b06a7);                 /* mov eax, 0x100b06a7 */
    II(0x100b05ce, 0x1)   pushd(eax);                           /* push eax */
    II(0x100b05cf, 0x5)   mov(ecx, 0x100b0640);                 /* mov ecx, 0x100b0640 */
    II(0x100b05d4, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x48));   /* mov ebx, [ebp-0x48] */
    II(0x100b05d7, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100b05da, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x100b05dd, 0x5)   calld(0x100aba72, -0x4b70);           /* call 0x100aba72 */
    II(0x100b05e2, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
//    II(0x100b05e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x100b05e8, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
    II(0x100b05eb, 0x2)   jmpd(0x100b05f3, 0x6);                /* jmp 0x100b05f3 */
l_0x100b05ed:
    II(0x100b05ed, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x100b05f0, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
l_0x100b05f3:
    II(0x100b05f3, 0x3)   mov(edx, memd_a32(ss, ebp - 0x58));   /* mov edx, [ebp-0x58] */
    II(0x100b05f6, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b05f9, 0x5)   calld(0x1008afe4, -0x2561a);          /* call 0x1008afe4 */
    II(0x100b05fe, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b0601, 0x5)   calld(0x1008af84, -0x25682);          /* call 0x1008af84 */
    II(0x100b0606, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100b0608, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x100b060d, 0x5)   calld(0x100a4d50, -0xb8c2);           /* call 0x100a4d50 */
    II(0x100b0612, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b0614, 0x3)   lea(eax, ebp - 0x2c);                 /* lea eax, [ebp-0x2c] */
    II(0x100b0617, 0x5)   calld(0x10088b7c, -0x27aa0);          /* call 0x10088b7c */
    II(0x100b061c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100b061e, 0x3)   lea(eax, ebp - 0x14);                 /* lea eax, [ebp-0x14] */
    II(0x100b0621, 0x5)   calld(0x10075f2c, -0x3a6fa);          /* call 0x10075f2c */
    II(0x100b0626, 0x2)   jmpd(0x100b0637, 0xf);                /* jmp 0x100b0637 */
l_0x100b0628:
    II(0x100b0628, 0x5)   jmpd(0x100b040b, -0x222);             /* jmp 0x100b040b */
//  II(0x100b062d, 0xa)   /* Недостижимый код. */
l_0x100b0637:
    II(0x100b0637, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100b0639, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100b063a, 0x1)   popd(edi);                            /* pop edi */
    II(0x100b063b, 0x1)   popd(esi);                            /* pop esi */
    II(0x100b063c, 0x1)   popd(edx);                            /* pop edx */
    II(0x100b063d, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100b063e, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100b063f, 0x1)   retd();                               /* ret */
FUNC_END

