FUNC_BEGIN(0x100f008a, 0x33a867e19d467b7d, 0x20, ({0x68, 0x3c, 0, 0, 0, 0xe8, 0xbe, 0x5c, 0x7, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0x78, 0x8, 0, 0x74, 0x15, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x8, 0xe8, 0x6, 0xb0, 0x7, 0, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0x8, 0, 0, 0, 0, 0x83, 0x7d, 0xf8, 0, 0x74, 0x9, 0xc7, 0x45, 0xf0, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0x15, 0x1, 0, 0, 0xbb, 0xc, 0x22, 0x1a, 0x10, 0xba, 0x19, 0x22, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0xa8, 0x5c, 0x7, 0, 0x89, 0x45, 0xf0, 0x8b, 0x4d, 0xf8, 0xbb, 0x10, 0, 0, 0, 0xba, 0x1, 0, 0, 0, 0x8d, 0x45, 0xe0, 0xe8, 0x8d, 0xf3, 0xff, 0xff, 0x85, 0xc0, 0x75, 0x9, 0xc6, 0x45, 0xf4, 0, 0xe9, 0xa1, 0, 0, 0, 0x8b, 0x45, 0xe0, 0x83, 0xe8, 0x10, 0x8b, 0x55, 0xfc, 0x89, 0x2, 0x8b, 0x45, 0xe4, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x42, 0x4, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x4, 0x25, 0xff, 0xff, 0, 0, 0x3d, 0xfa, 0xf1, 0, 0, 0x75, 0x9, 0xc7, 0x45, 0xdc, 0, 0, 0, 0, 0xeb, 0x19, 0xb9, 0x1a, 0x1, 0, 0, 0xbb, 0x23, 0x22, 0x1a, 0x10, 0xba, 0x30, 0x22, 0x1a, 0x10, 0x31, 0xc0, 0xe8, 0x3c, 0x5c, 0x7, 0, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xe6, 0x8b, 0x55, 0xfc, 0x66, 0x89, 0x42, 0x6, 0x8b, 0x45, 0xfc, 0x8b, 0, 0xe8, 0x71, 0xae, 0x7, 0, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x89, 0x50, 0x8, 0x8b, 0x4d, 0xf8, 0x8b, 0x45, 0xfc, 0x8b, 0x18, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x8, 0xe8, 0x2, 0xf3, 0xff, 0xff, 0x85, 0xc0, 0x75, 0x1b, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x8, 0xe8, 0x25, 0xaf, 0x7, 0, 0x8b, 0x45, 0xfc, 0xc7, 0x40, 0x8, 0, 0, 0, 0, 0xc6, 0x45, 0xf4, 0, 0xeb, 0x4, 0xc6, 0x45, 0xf4, 0x1, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100f008a, 0x5)   pushd(0x3c);                          /* push dword 0x3c */
    II(0x100f008f, 0x5)   calld(sys_check_available_stack_size, 0x75cbe); /* call 0x10165d52 */
    II(0x100f0094, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100f0095, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100f0096, 0x1)   pushd(esi);                           /* push esi */
    II(0x100f0097, 0x1)   pushd(edi);                           /* push edi */
    II(0x100f0098, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100f0099, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100f009b, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x100f00a1, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100f00a4, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100f00a7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f00aa, 0x4)   cmp(memd_a32(ds, eax + 0x8), 0);      /* cmp dword [eax+0x8], 0x0 */
    II(0x100f00ae, 0x2)   jzd(0x100f00c5, 0x15);                /* jz 0x100f00c5 */
    II(0x100f00b0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f00b3, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x100f00b6, 0x5)   calld(sys_free, 0x7b006);             /* call 0x1016b0c1 */
    II(0x100f00bb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f00be, 0x7)   mov(memd_a32(ds, eax + 0x8), 0);      /* mov dword [eax+0x8], 0x0 */
l_0x100f00c5:
    II(0x100f00c5, 0x4)   cmp(memd_a32(ss, ebp - 0x8), 0);      /* cmp dword [ebp-0x8], 0x0 */
    II(0x100f00c9, 0x2)   jzd(0x100f00d4, 0x9);                 /* jz 0x100f00d4 */
    II(0x100f00cb, 0x7)   mov(memd_a32(ss, ebp - 0x10), 0);     /* mov dword [ebp-0x10], 0x0 */
    II(0x100f00d2, 0x2)   jmpd(0x100f00ed, 0x19);               /* jmp 0x100f00ed */
l_0x100f00d4:
    II(0x100f00d4, 0x5)   mov(ecx, 0x115);                      /* mov ecx, 0x115 */
    II(0x100f00d9, 0x5)   mov(ebx, 0x101a220c);                 /* mov ebx, 0x101a220c */ /* "flicsmgr.cpp" */
    II(0x100f00de, 0x5)   mov(edx, 0x101a2219);                 /* mov edx, 0x101a2219 */ /* "file != 0" */
    II(0x100f00e3, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f00e5, 0x5)   calld(sys_assert, 0x75ca8);           /* call 0x10165d92 */
    II(0x100f00ea, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
l_0x100f00ed:
    II(0x100f00ed, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x8));    /* mov ecx, [ebp-0x8] */
    II(0x100f00f0, 0x5)   mov(ebx, 0x10);                       /* mov ebx, 0x10 */
    II(0x100f00f5, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x100f00fa, 0x3)   lea(eax, ebp - 0x20);                 /* lea eax, [ebp-0x20] */
    II(0x100f00fd, 0x5)   calld(my_fread, -0xc73);              /* call 0x100ef48f */
    II(0x100f0102, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100f0104, 0x2)   jnzd(0x100f010f, 0x9);                /* jnz 0x100f010f */
    II(0x100f0106, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100f010a, 0x5)   jmpd(0x100f01b0, 0xa1);               /* jmp 0x100f01b0 */
l_0x100f010f:
    II(0x100f010f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x20));   /* mov eax, [ebp-0x20] */
    II(0x100f0112, 0x3)   sub(eax, 0x10);                       /* sub eax, 0x10 */
    II(0x100f0115, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100f0118, 0x2)   mov(memd_a32(ds, edx), eax);          /* mov [edx], eax */
    II(0x100f011a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x100f011d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100f0120, 0x4)   mov(memw_a32(ds, edx + 0x4), ax);     /* mov [edx+0x4], ax */
    II(0x100f0124, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f0127, 0x4)   mov(ax, memw_a32(ds, eax + 0x4));     /* mov ax, [eax+0x4] */
    II(0x100f012b, 0x5)   and_(eax, 0xffff);                    /* and eax, 0xffff */
    II(0x100f0130, 0x5)   cmp(eax, 0xf1fa);                     /* cmp eax, 0xf1fa */
    II(0x100f0135, 0x2)   jnzd(0x100f0140, 0x9);                /* jnz 0x100f0140 */
    II(0x100f0137, 0x7)   mov(memd_a32(ss, ebp - 0x24), 0);     /* mov dword [ebp-0x24], 0x0 */
    II(0x100f013e, 0x2)   jmpd(0x100f0159, 0x19);               /* jmp 0x100f0159 */
l_0x100f0140:
    II(0x100f0140, 0x5)   mov(ecx, 0x11a);                      /* mov ecx, 0x11a */
    II(0x100f0145, 0x5)   mov(ebx, 0x101a2223);                 /* mov ebx, 0x101a2223 */ /* "flicsmgr.cpp" */
    II(0x100f014a, 0x5)   mov(edx, 0x101a2230);                 /* mov edx, 0x101a2230 */ /* "frame->type == 0xF1FA" */
    II(0x100f014f, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100f0151, 0x5)   calld(sys_assert, 0x75c3c);           /* call 0x10165d92 */
    II(0x100f0156, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
l_0x100f0159:
    II(0x100f0159, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1a));   /* mov eax, [ebp-0x1a] */
    II(0x100f015c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x100f015f, 0x4)   mov(memw_a32(ds, edx + 0x6), ax);     /* mov [edx+0x6], ax */
    II(0x100f0163, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f0166, 0x2)   mov(eax, memd_a32(ds, eax));          /* mov eax, [eax] */
    II(0x100f0168, 0x5)   calld(sys_malloc, 0x7ae71);           /* call 0x1016afde */
    II(0x100f016d, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100f016f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f0172, 0x3)   mov(memd_a32(ds, eax + 0x8), edx);    /* mov [eax+0x8], edx */
    II(0x100f0175, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x8));    /* mov ecx, [ebp-0x8] */
    II(0x100f0178, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f017b, 0x2)   mov(ebx, memd_a32(ds, eax));          /* mov ebx, [eax] */
    II(0x100f017d, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
//    II(0x100f0182, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f0185, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x100f0188, 0x5)   calld(my_fread, -0xcfe);              /* call 0x100ef48f */
    II(0x100f018d, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100f018f, 0x2)   jnzd(0x100f01ac, 0x1b);               /* jnz 0x100f01ac */
    II(0x100f0191, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f0194, 0x3)   mov(eax, memd_a32(ds, eax + 0x8));    /* mov eax, [eax+0x8] */
    II(0x100f0197, 0x5)   calld(sys_free, 0x7af25);             /* call 0x1016b0c1 */
    II(0x100f019c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100f019f, 0x7)   mov(memd_a32(ds, eax + 0x8), 0);      /* mov dword [eax+0x8], 0x0 */
    II(0x100f01a6, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100f01aa, 0x2)   jmpd(0x100f01b0, 0x4);                /* jmp 0x100f01b0 */
l_0x100f01ac:
    II(0x100f01ac, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
l_0x100f01b0:
    II(0x100f01b0, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100f01b3, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100f01b5, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100f01b6, 0x1)   popd(edi);                            /* pop edi */
    II(0x100f01b7, 0x1)   popd(esi);                            /* pop esi */
    II(0x100f01b8, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100f01b9, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100f01ba, 0x1)   retd();                               /* ret */
FUNC_END

