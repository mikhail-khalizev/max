FUNC_BEGIN(0x10154f88, 0x304b9bc688697041, 0x20, ({0x68, 0x34, 0, 0, 0, 0xe8, 0xc0, 0xd, 0x1, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x24, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xfc, 0x89, 0x5d, 0xf8, 0x89, 0x4d, 0xf4, 0x8b, 0x45, 0xf0, 0x8a, 0x40, 0x45, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7e, 0x10, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x74, 0xe8, 0xa5, 0x63, 0xf3, 0xff, 0x98, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x16, 0x31, 0xd2, 0x8b, 0x45, 0xf0, 0x83, 0xc0, 0x74, 0xe8, 0x51, 0x62, 0xf3, 0xff, 0x66, 0x8b, 0, 0x66, 0x3b, 0x45, 0xfc, 0x74, 0x2, 0xeb, 0xd, 0x31, 0xc0, 0x8b, 0x55, 0xf0, 0x8a, 0x42, 0x45, 0x89, 0x45, 0xec, 0xeb, 0x28, 0xf, 0xbf, 0x55, 0xfc, 0x8b, 0x45, 0xf0, 0x8a, 0x40, 0x26, 0x25, 0xff, 0, 0, 0, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xbb, 0x68, 0xa4, 0x1c, 0x10, 0x1, 0xd8, 0xe8, 0x1c, 0xad, 0xf8, 0xff, 0x66, 0x8b, 0x40, 0x8, 0x89, 0x45, 0xec, 0x8b, 0x45, 0xf0, 0xf6, 0x40, 0x13, 0x1, 0x74, 0xc, 0x8b, 0x45, 0xf0, 0x66, 0x8b, 0x40, 0x52, 0x89, 0x45, 0xe8, 0xeb, 0x7, 0xc7, 0x45, 0xe8, 0xff, 0x7f, 0, 0, 0x8b, 0x45, 0xf4, 0x66, 0xc7, 0, 0, 0, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xf, 0xbf, 0x45, 0xec, 0x85, 0xc0, 0x7e, 0x61, 0xf, 0xbf, 0x5d, 0xe8, 0xf, 0xbf, 0x55, 0xec, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x9, 0xfc, 0xf7, 0xff, 0x89, 0x45, 0xe0, 0xf, 0xbf, 0x55, 0xe0, 0xf, 0xbf, 0x45, 0xf8, 0xe8, 0x14, 0x47, 0xf3, 0xff, 0x89, 0x45, 0xf8, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x7b, 0xcd, 0xf1, 0xff, 0x1, 0x45, 0xe4, 0x8b, 0x45, 0xf4, 0x66, 0xff, 0, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x6, 0xc1, 0xf8, 0x10, 0xe8, 0x60, 0xcd, 0xf1, 0xff, 0x29, 0x45, 0xe8, 0x8b, 0x45, 0xf8, 0x29, 0x45, 0xec, 0xeb, 0x97, 0x8b, 0x45, 0xe4, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x10154f88, 0x5)   pushd(0x34);                          /* push dword 0x34 */
    II(0x10154f8d, 0x5)   calld(sys_check_available_stack_size, 0x10dc0); /* call 0x10165d52 */
    II(0x10154f92, 0x1)   pushd(esi);                           /* push esi */
    II(0x10154f93, 0x1)   pushd(edi);                           /* push edi */
    II(0x10154f94, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10154f95, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10154f97, 0x6)   sub(esp, 0x24);                       /* sub esp, 0x24 */
    II(0x10154f9d, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10154fa0, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x10154fa3, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x10154fa6, 0x3)   mov(memd_a32(ss, ebp - 0xc), ecx);    /* mov [ebp-0xc], ecx */
//    II(0x10154fa9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10154fac, 0x3)   mov(al, memb_a32(ds, eax + 0x45));    /* mov al, [eax+0x45] */
    II(0x10154faf, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10154fb4, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10154fb6, 0x2)   jled(0x10154fc8, 0x10);               /* jle 0x10154fc8 */
    II(0x10154fb8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10154fbb, 0x3)   add(eax, 0x74);                       /* add eax, 0x74 */
    II(0x10154fbe, 0x5)   calld(my_2_get_count, -0xc9c5b);      /* call 0x1008b368 */
    II(0x10154fc3, 0x1)   cwde();                               /* cwde */
    II(0x10154fc4, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10154fc6, 0x2)   jgd(0x10154fca, 0x2);                 /* jg 0x10154fca */
l_0x10154fc8:
    II(0x10154fc8, 0x2)   jmpd(0x10154fe0, 0x16);               /* jmp 0x10154fe0 */
l_0x10154fca:
    II(0x10154fca, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10154fcc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10154fcf, 0x3)   add(eax, 0x74);                       /* add eax, 0x74 */
    II(0x10154fd2, 0x5)   calld(0x1008b228, -0xc9daf);          /* call 0x1008b228 */
    II(0x10154fd7, 0x3)   mov(ax, memw_a32(ds, eax));           /* mov ax, [eax] */
    II(0x10154fda, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4));     /* cmp ax, [ebp-0x4] */
    II(0x10154fde, 0x2)   jzd(0x10154fe2, 0x2);                 /* jz 0x10154fe2 */
l_0x10154fe0:
    II(0x10154fe0, 0x2)   jmpd(0x10154fef, 0xd);                /* jmp 0x10154fef */
l_0x10154fe2:
    II(0x10154fe2, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10154fe4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10154fe7, 0x3)   mov(al, memb_a32(ds, edx + 0x45));    /* mov al, [edx+0x45] */
    II(0x10154fea, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x10154fed, 0x2)   jmpd(0x10155017, 0x28);               /* jmp 0x10155017 */
l_0x10154fef:
    II(0x10154fef, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x10154ff3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10154ff6, 0x3)   mov(al, memb_a32(ds, eax + 0x26));    /* mov al, [eax+0x26] */
    II(0x10154ff9, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10154ffe, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10155004, 0x5)   mov(ebx, 0x101ca468);                 /* mov ebx, 0x101ca468 */
    II(0x10155009, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x1015500b, 0x5)   calld(0x100dfd2c, -0x752e4);          /* call 0x100dfd2c */
    II(0x10155010, 0x4)   mov(ax, memw_a32(ds, eax + 0x8));     /* mov ax, [eax+0x8] */
    II(0x10155014, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
l_0x10155017:
    II(0x10155017, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1015501a, 0x4)   test(memb_a32(ds, eax + 0x13), 0x1);  /* test byte [eax+0x13], 0x1 */
    II(0x1015501e, 0x2)   jzd(0x1015502c, 0xc);                 /* jz 0x1015502c */
    II(0x10155020, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10155023, 0x4)   mov(ax, memw_a32(ds, eax + 0x52));    /* mov ax, [eax+0x52] */
    II(0x10155027, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x1015502a, 0x2)   jmpd(0x10155033, 0x7);                /* jmp 0x10155033 */
l_0x1015502c:
    II(0x1015502c, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x7fff); /* mov dword [ebp-0x18], 0x7fff */
l_0x10155033:
    II(0x10155033, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x10155036, 0x5)   mov(memw_a32(ds, eax), 0);            /* mov word [eax], 0x0 */
    II(0x1015503b, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
l_0x10155042:
    II(0x10155042, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x14)); /* movsx eax, word [ebp-0x14] */
    II(0x10155046, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10155048, 0x2)   jled(0x101550ab, 0x61);               /* jle 0x101550ab */
    II(0x1015504a, 0x4)   movsx(ebx, memw_a32(ss, ebp - 0x18)); /* movsx ebx, word [ebp-0x18] */
    II(0x1015504e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x14)); /* movsx edx, word [ebp-0x14] */
    II(0x10155052, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10155055, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10155058, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015505b, 0x5)   calld(0x100d4c69, -0x803f7);          /* call 0x100d4c69 */
    II(0x10155060, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10155063, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x20)); /* movsx edx, word [ebp-0x20] */
    II(0x10155067, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1015506b, 0x5)   calld(my_min, -0xcb8ec);              /* call 0x10089784 */
    II(0x10155070, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x10155073, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10155077, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1015507a, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x1015507d, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10155080, 0x5)   calld(0x10071e00, -0xe3285);          /* call 0x10071e00 */
    II(0x10155085, 0x3)   add(memd_a32(ss, ebp - 0x1c), eax);   /* add [ebp-0x1c], eax */
    II(0x10155088, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1015508b, 0x3)   inc(memw_a32(ds, eax));               /* inc word [eax] */
    II(0x1015508e, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10155092, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x10155095, 0x3)   mov(eax, memd_a32(ds, eax + 0x6));    /* mov eax, [eax+0x6] */
    II(0x10155098, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1015509b, 0x5)   calld(0x10071e00, -0xe32a0);          /* call 0x10071e00 */
    II(0x101550a0, 0x3)   sub(memd_a32(ss, ebp - 0x18), eax);   /* sub [ebp-0x18], eax */
    II(0x101550a3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x101550a6, 0x3)   sub(memd_a32(ss, ebp - 0x14), eax);   /* sub [ebp-0x14], eax */
    II(0x101550a9, 0x2)   jmpd(0x10155042, -0x69);              /* jmp 0x10155042 */
l_0x101550ab:
    II(0x101550ab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x1c));   /* mov eax, [ebp-0x1c] */
    II(0x101550ae, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
//    II(0x101550b1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x101550b4, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x101550b6, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x101550b7, 0x1)   popd(edi);                            /* pop edi */
    II(0x101550b8, 0x1)   popd(esi);                            /* pop esi */
    II(0x101550b9, 0x1)   retd();                               /* ret */
FUNC_END

