FUNC_BEGIN(0x10128d78, 0x868f9b029fde5362, 0x20, ({0x68, 0x24, 0, 0, 0, 0xe8, 0xd0, 0xcf, 0x3, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xfc, 0x89, 0x55, 0xf8, 0xb8, 0x9c, 0x81, 0x1c, 0x10, 0xe8, 0x99, 0xd5, 0xf4, 0xff, 0x8d, 0x5d, 0xf4, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xd, 0xd7, 0xf4, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xbc, 0x1f, 0x1, 0, 0x84, 0xc0, 0xf, 0x84, 0x74, 0, 0, 0, 0x8d, 0x45, 0xf4, 0xe8, 0xdb, 0xd5, 0xf4, 0xff, 0xe8, 0x3a, 0xd4, 0xf4, 0xff, 0x3b, 0x45, 0xf8, 0x75, 0xf, 0x8d, 0x45, 0xf4, 0xe8, 0xc9, 0xd5, 0xf4, 0xff, 0x66, 0x83, 0x78, 0x8, 0x28, 0x74, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf4, 0xe8, 0xb8, 0xd5, 0xf4, 0xff, 0x80, 0x78, 0x3d, 0x8, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf4, 0xe8, 0xa8, 0xd5, 0xf4, 0xff, 0x80, 0x78, 0x3d, 0x1a, 0x75, 0x2, 0xeb, 0xe, 0x8d, 0x45, 0xf4, 0xe8, 0x98, 0xd5, 0xf4, 0xff, 0x80, 0x78, 0x3d, 0x10, 0x75, 0x2, 0xeb, 0x14, 0x31, 0xdb, 0xba, 0x6, 0, 0, 0, 0x8d, 0x45, 0xf4, 0xe8, 0xe9, 0xd5, 0xf4, 0xff, 0xe8, 0x2f, 0xa2, 0x3, 0, 0x8d, 0x45, 0xf4, 0xe8, 0xcc, 0xdd, 0xf4, 0xff, 0xe9, 0x7a, 0xff, 0xff, 0xff, 0xc6, 0x5, 0x1c, 0x5c, 0x1c, 0x10, 0xb, 0x8b, 0x45, 0xfc, 0x66, 0xa3, 0x1d, 0x5c, 0x1c, 0x10, 0xbb, 0x21, 0x5c, 0x1c, 0x10, 0x8b, 0x45, 0xf8, 0xe8, 0x16, 0x7f, 0xfb, 0xff, 0xf, 0xbf, 0xd0, 0xf, 0xbf, 0x45, 0xfc, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0x62, 0xa5, 0x1c, 0x10, 0xe8, 0xfb, 0x66, 0xfb, 0xff, 0x66, 0xa3, 0x1f, 0x5c, 0x1c, 0x10, 0xb8, 0x4, 0, 0, 0, 0xe8, 0x73, 0xcd, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xec, 0xd0, 0xf4, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x10128d78, 0x5)   pushd(0x24);                          /* push dword 0x24 */
    II(0x10128d7d, 0x5)   calld(sys_check_available_stack_size, 0x3cfd0); /* call 0x10165d52 */
    II(0x10128d82, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10128d83, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10128d84, 0x1)   pushd(esi);                           /* push esi */
    II(0x10128d85, 0x1)   pushd(edi);                           /* push edi */
    II(0x10128d86, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10128d87, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10128d89, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x10128d8f, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x10128d92, 0x3)   mov(memd_a32(ss, ebp - 0x8), edx);    /* mov [ebp-0x8], edx */
    II(0x10128d95, 0x5)   mov(eax, 0x101c819c);                 /* mov eax, 0x101c819c */
    II(0x10128d9a, 0x5)   calld(0x10076338, -0xb2a67);          /* call 0x10076338 */
    II(0x10128d9f, 0x3)   lea(ebx, ebp - 0xc);                  /* lea ebx, [ebp-0xc] */
    II(0x10128da2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10128da4, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x10128da6, 0x5)   calld(0x100764b8, -0xb28f3);          /* call 0x100764b8 */
l_0x10128dab:
    II(0x10128dab, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10128dad, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10128db0, 0x5)   calld(0x1013ad71, 0x11fbc);           /* call 0x1013ad71 */
    II(0x10128db5, 0x2)   test(al, al);                         /* test al, al */
    II(0x10128db7, 0x6)   jzd(0x10128e31, 0x74);                /* jz dword 0x10128e31 */
    II(0x10128dbd, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10128dc0, 0x5)   calld(0x100763a0, -0xb2a25);          /* call 0x100763a0 */
    II(0x10128dc5, 0x5)   calld(0x10076204, -0xb2bc6);          /* call 0x10076204 */
    II(0x10128dca, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x8));    /* cmp eax, [ebp-0x8] */
    II(0x10128dcd, 0x2)   jnzd(0x10128dde, 0xf);                /* jnz 0x10128dde */
    II(0x10128dcf, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10128dd2, 0x5)   calld(0x100763a0, -0xb2a37);          /* call 0x100763a0 */
    II(0x10128dd7, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x28);   /* cmp word [eax+0x8], 0x28 */
    II(0x10128ddc, 0x2)   jzd(0x10128de0, 0x2);                 /* jz 0x10128de0 */
l_0x10128dde:
    II(0x10128dde, 0x2)   jmpd(0x10128dee, 0xe);                /* jmp 0x10128dee */
l_0x10128de0:
    II(0x10128de0, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10128de3, 0x5)   calld(0x100763a0, -0xb2a48);          /* call 0x100763a0 */
    II(0x10128de8, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x8);   /* cmp byte [eax+0x3d], 0x8 */
    II(0x10128dec, 0x2)   jnzd(0x10128df0, 0x2);                /* jnz 0x10128df0 */
l_0x10128dee:
    II(0x10128dee, 0x2)   jmpd(0x10128dfe, 0xe);                /* jmp 0x10128dfe */
l_0x10128df0:
    II(0x10128df0, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10128df3, 0x5)   calld(0x100763a0, -0xb2a58);          /* call 0x100763a0 */
    II(0x10128df8, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1a);  /* cmp byte [eax+0x3d], 0x1a */
    II(0x10128dfc, 0x2)   jnzd(0x10128e00, 0x2);                /* jnz 0x10128e00 */
l_0x10128dfe:
    II(0x10128dfe, 0x2)   jmpd(0x10128e0e, 0xe);                /* jmp 0x10128e0e */
l_0x10128e00:
    II(0x10128e00, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10128e03, 0x5)   calld(0x100763a0, -0xb2a68);          /* call 0x100763a0 */
    II(0x10128e08, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x10);  /* cmp byte [eax+0x3d], 0x10 */
    II(0x10128e0c, 0x2)   jnzd(0x10128e10, 0x2);                /* jnz 0x10128e10 */
l_0x10128e0e:
    II(0x10128e0e, 0x2)   jmpd(0x10128e24, 0x14);               /* jmp 0x10128e24 */
l_0x10128e10:
    II(0x10128e10, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x10128e12, 0x5)   mov(edx, 0x6);                        /* mov edx, 0x6 */
    II(0x10128e17, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10128e1a, 0x5)   calld(0x10076408, -0xb2a17);          /* call 0x10076408 */
    II(0x10128e1f, 0x5)   calld(0x10163053, 0x3a22f);           /* call 0x10163053 */
l_0x10128e24:
    II(0x10128e24, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10128e27, 0x5)   calld(0x10076bf8, -0xb2234);          /* call 0x10076bf8 */
    II(0x10128e2c, 0x5)   jmpd(0x10128dab, -0x86);              /* jmp 0x10128dab */
l_0x10128e31:
    II(0x10128e31, 0x7)   mov(memb_a32(ds, 0x101c5c1c), 0xb);   /* mov byte [0x101c5c1c], 0xb */
    II(0x10128e38, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10128e3b, 0x6)   mov(memw_a32(ds, 0x101c5c1d), ax);    /* mov [0x101c5c1d], ax */
    II(0x10128e41, 0x5)   mov(ebx, 0x101c5c21);                 /* mov ebx, 0x101c5c21 */
    II(0x10128e46, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x10128e49, 0x5)   calld(0x100e0d64, -0x480ea);          /* call 0x100e0d64 */
    II(0x10128e4e, 0x3)   movsx(edx, ax);                       /* movsx edx, ax */
    II(0x10128e51, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x10128e55, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10128e5b, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca562)); /* mov eax, [eax+0x101ca562] */
    II(0x10128e61, 0x5)   calld(0x100df561, -0x49905);          /* call 0x100df561 */
    II(0x10128e66, 0x6)   mov(memw_a32(ds, 0x101c5c1f), ax);    /* mov [0x101c5c1f], ax */
    II(0x10128e6c, 0x5)   mov(eax, 0x4);                        /* mov eax, 0x4 */
    II(0x10128e71, 0x5)   calld(0x10125be9, -0x328d);           /* call 0x10125be9 */
    II(0x10128e76, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10128e78, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x10128e7b, 0x5)   calld(0x10075f6c, -0xb2f14);          /* call 0x10075f6c */
    II(0x10128e80, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10128e82, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10128e83, 0x1)   popd(edi);                            /* pop edi */
    II(0x10128e84, 0x1)   popd(esi);                            /* pop esi */
    II(0x10128e85, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10128e86, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10128e87, 0x1)   retd();                               /* ret */
FUNC_END

