FUNC_BEGIN(0x1010d90b, 0xc4e00340306b524d, 0x20, ({0x68, 0x8, 0x1, 0, 0, 0xe8, 0x3d, 0x84, 0x5, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xec, 0, 0, 0, 0xc6, 0x45, 0xfc, 0, 0x8d, 0x85, 0x18, 0xff, 0xff, 0xff, 0xe8, 0xe9, 0xfd, 0xff, 0xff, 0x80, 0x3d, 0x30, 0x56, 0x1c, 0x10, 0x1, 0x75, 0x5, 0xe8, 0x54, 0xd3, 0x1, 0, 0xe8, 0xc3, 0xd8, 0x5, 0, 0x89, 0x85, 0x28, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x28, 0xff, 0xff, 0xff, 0, 0x7e, 0xc, 0x81, 0xbd, 0x28, 0xff, 0xff, 0xff, 0, 0x70, 0, 0, 0x7c, 0x2, 0xeb, 0x4, 0xc6, 0x45, 0xfc, 0, 0xc7, 0x85, 0x14, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0xeb, 0xc, 0x8b, 0x85, 0x14, 0xff, 0xff, 0xff, 0xff, 0x85, 0x14, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x85, 0x14, 0xff, 0xff, 0xff, 0x83, 0xf8, 0xc, 0xf, 0x8d, 0xbf, 0, 0, 0, 0xf, 0xbf, 0x85, 0x14, 0xff, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x83, 0xbc, 0x28, 0x38, 0xff, 0xff, 0xff, 0, 0xf, 0x84, 0xa2, 0, 0, 0, 0xf, 0xbf, 0x85, 0x14, 0xff, 0xff, 0xff, 0x5, 0, 0x70, 0, 0, 0x3b, 0x85, 0x28, 0xff, 0xff, 0xff, 0x75, 0x22, 0x80, 0x7d, 0xfc, 0, 0x75, 0x16, 0xf, 0xbf, 0x85, 0x14, 0xff, 0xff, 0xff, 0xc1, 0xe0, 0x2, 0x8b, 0x84, 0x28, 0x38, 0xff, 0xff, 0xff, 0xe8, 0xe8, 0x21, 0xfc, 0xff, 0xc6, 0x45, 0xfc, 0x1, 0xeb, 0x71, 0xf, 0xbf, 0x95, 0x14, 0xff, 0xff, 0xff, 0x6b, 0xd2, 0xc, 0x8b, 0x85, 0x28, 0xff, 0xff, 0xff, 0x3b, 0x84, 0x2a, 0x6c, 0xff, 0xff, 0xff, 0x75, 0x17, 0xf, 0xbf, 0x85, 0x14, 0xff, 0xff, 0xff, 0x6b, 0xc0, 0xc, 0x8b, 0x84, 0x28, 0x68, 0xff, 0xff, 0xff, 0x89, 0x85, 0x28, 0xff, 0xff, 0xff, 0xf, 0xbf, 0x95, 0x14, 0xff, 0xff, 0xff, 0x6b, 0xd2, 0xc, 0x8b, 0x85, 0x28, 0xff, 0xff, 0xff, 0x3b, 0x84, 0x2a, 0x68, 0xff, 0xff, 0xff, 0x75, 0x23, 0x81, 0x85, 0x28, 0xff, 0xff, 0xff, 0x18, 0xfc, 0xff, 0xff, 0xf, 0xbf, 0x95, 0x14, 0xff, 0xff, 0xff, 0x6b, 0xd2, 0xc, 0x8d, 0x85, 0x18, 0xff, 0xff, 0xff, 0xff, 0x94, 0x2a, 0x70, 0xff, 0xff, 0xff, 0xeb, 0x5, 0xe9, 0x25, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x1c, 0xff, 0xff, 0xff, 0, 0x75, 0x9, 0x83, 0xbd, 0x20, 0xff, 0xff, 0xff, 0, 0x74, 0x2, 0xeb, 0x5, 0xe9, 0xcc, 0xfe, 0xff, 0xff, 0x8d, 0x85, 0x18, 0xff, 0xff, 0xff, 0xe8, 0x89, 0xfd, 0xff, 0xff, 0x83, 0xbd, 0x20, 0xff, 0xff, 0xff, 0, 0x74, 0x9, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x18, 0xf, 0xbf, 0x95, 0x24, 0xff, 0xff, 0xff, 0xb8, 0x45, 0, 0, 0, 0xe8, 0x68, 0xd0, 0xfb, 0xff, 0xc7, 0x45, 0xf8, 0x1, 0, 0, 0, 0x8b, 0x45, 0xf8, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1010d90b, 0x5)   pushd(0x108);                         /* push dword 0x108 */
    II(0x1010d910, 0x5)   calld(sys_check_available_stack_size, 0x5843d); /* call 0x10165d52 */
    II(0x1010d915, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1010d916, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1010d917, 0x1)   pushd(edx);                           /* push edx */
    II(0x1010d918, 0x1)   pushd(esi);                           /* push esi */
    II(0x1010d919, 0x1)   pushd(edi);                           /* push edi */
    II(0x1010d91a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1010d91b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1010d91d, 0x6)   sub(esp, 0xec);                       /* sub esp, 0xec */
    II(0x1010d923, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0);      /* mov byte [ebp-0x4], 0x0 */
    II(0x1010d927, 0x6)   lea(eax, ebp - 0xe8);                 /* lea eax, [ebp+0xffffff18] */
    II(0x1010d92d, 0x5)   calld(0x1010d71b, -0x217);            /* call 0x1010d71b */
l_0x1010d932:
    II(0x1010d932, 0x7)   cmp(memb_a32(ds, 0x101c5630), 0x1);   /* cmp byte [0x101c5630], 0x1 */
    II(0x1010d939, 0x2)   jnzd(0x1010d940, 0x5);                /* jnz 0x1010d940 */
    II(0x1010d93b, 0x5)   calld(0x1012ac94, 0x1d354);           /* call 0x1012ac94 */
l_0x1010d940:
    II(0x1010d940, 0x5)   calld(/* sys */ 0x1016b208, 0x5d8c3); /* call 0x1016b208 */
    II(0x1010d945, 0x6)   mov(memd_a32(ss, ebp - 0xd8), eax);   /* mov [ebp+0xffffff28], eax */
    II(0x1010d94b, 0x7)   cmp(memd_a32(ss, ebp - 0xd8), 0);     /* cmp dword [ebp+0xffffff28], 0x0 */
    II(0x1010d952, 0x2)   jled(0x1010d960, 0xc);                /* jle 0x1010d960 */
    II(0x1010d954, 0xa)   cmp(memd_a32(ss, ebp - 0xd8), 0x7000); /* cmp dword [ebp+0xffffff28], 0x7000 */
    II(0x1010d95e, 0x2)   jld(0x1010d962, 0x2);                 /* jl 0x1010d962 */
l_0x1010d960:
    II(0x1010d960, 0x2)   jmpd(0x1010d966, 0x4);                /* jmp 0x1010d966 */
l_0x1010d962:
    II(0x1010d962, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0);      /* mov byte [ebp-0x4], 0x0 */
l_0x1010d966:
    II(0x1010d966, 0xa)   mov(memd_a32(ss, ebp - 0xec), 0);     /* mov dword [ebp+0xffffff14], 0x0 */
    II(0x1010d970, 0x2)   jmpd(0x1010d97e, 0xc);                /* jmp 0x1010d97e */
l_0x1010d972:
    II(0x1010d972, 0x6)   mov(eax, memd_a32(ss, ebp - 0xec));   /* mov eax, [ebp+0xffffff14] */
    II(0x1010d978, 0x6)   inc(memd_a32(ss, ebp - 0xec));        /* inc dword [ebp+0xffffff14] */
l_0x1010d97e:
    II(0x1010d97e, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xec)); /* movsx eax, word [ebp+0xffffff14] */
    II(0x1010d985, 0x3)   cmp(eax, 0xc);                        /* cmp eax, 0xc */
    II(0x1010d988, 0x6)   jged(0x1010da4d, 0xbf);               /* jge dword 0x1010da4d */
    II(0x1010d98e, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xec)); /* movsx eax, word [ebp+0xffffff14] */
    II(0x1010d995, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010d998, 0x8)   cmp(memd_a32(ds, eax + ebp - 0xc8), 0); /* cmp dword [eax+ebp+0xffffff38], 0x0 */
    II(0x1010d9a0, 0x6)   jzd(0x1010da48, 0xa2);                /* jz dword 0x1010da48 */
    II(0x1010d9a6, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xec)); /* movsx eax, word [ebp+0xffffff14] */
    II(0x1010d9ad, 0x5)   add(eax, 0x7000);                     /* add eax, 0x7000 */
    II(0x1010d9b2, 0x6)   cmp(eax, memd_a32(ss, ebp - 0xd8));   /* cmp eax, [ebp+0xffffff28] */
    II(0x1010d9b8, 0x2)   jnzd(0x1010d9dc, 0x22);               /* jnz 0x1010d9dc */
    II(0x1010d9ba, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x1010d9be, 0x2)   jnzd(0x1010d9d6, 0x16);               /* jnz 0x1010d9d6 */
    II(0x1010d9c0, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xec)); /* movsx eax, word [ebp+0xffffff14] */
    II(0x1010d9c7, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1010d9ca, 0x7)   mov(eax, memd_a32(ds, eax + ebp - 0xc8)); /* mov eax, [eax+ebp+0xffffff38] */
    II(0x1010d9d1, 0x5)   calld(0x100cfbbe, -0x3de18);          /* call 0x100cfbbe */
l_0x1010d9d6:
    II(0x1010d9d6, 0x4)   mov(memb_a32(ss, ebp - 0x4), 0x1);    /* mov byte [ebp-0x4], 0x1 */
    II(0x1010d9da, 0x2)   jmpd(0x1010da4d, 0x71);               /* jmp 0x1010da4d */
l_0x1010d9dc:
    II(0x1010d9dc, 0x7)   movsx(edx, memw_a32(ss, ebp - 0xec)); /* movsx edx, word [ebp+0xffffff14] */
    II(0x1010d9e3, 0x3)   imul(edx, edx, 0xc);                  /* imul edx, edx, 0xc */
    II(0x1010d9e6, 0x6)   mov(eax, memd_a32(ss, ebp - 0xd8));   /* mov eax, [ebp+0xffffff28] */
    II(0x1010d9ec, 0x7)   cmp(eax, memd_a32(ds, edx + ebp - 0x94)); /* cmp eax, [edx+ebp+0xffffff6c] */
    II(0x1010d9f3, 0x2)   jnzd(0x1010da0c, 0x17);               /* jnz 0x1010da0c */
    II(0x1010d9f5, 0x7)   movsx(eax, memw_a32(ss, ebp - 0xec)); /* movsx eax, word [ebp+0xffffff14] */
    II(0x1010d9fc, 0x3)   imul(eax, eax, 0xc);                  /* imul eax, eax, 0xc */
    II(0x1010d9ff, 0x7)   mov(eax, memd_a32(ds, eax + ebp - 0x98)); /* mov eax, [eax+ebp+0xffffff68] */
    II(0x1010da06, 0x6)   mov(memd_a32(ss, ebp - 0xd8), eax);   /* mov [ebp+0xffffff28], eax */
l_0x1010da0c:
    II(0x1010da0c, 0x7)   movsx(edx, memw_a32(ss, ebp - 0xec)); /* movsx edx, word [ebp+0xffffff14] */
    II(0x1010da13, 0x3)   imul(edx, edx, 0xc);                  /* imul edx, edx, 0xc */
    II(0x1010da16, 0x6)   mov(eax, memd_a32(ss, ebp - 0xd8));   /* mov eax, [ebp+0xffffff28] */
    II(0x1010da1c, 0x7)   cmp(eax, memd_a32(ds, edx + ebp - 0x98)); /* cmp eax, [edx+ebp+0xffffff68] */
    II(0x1010da23, 0x2)   jnzd(0x1010da48, 0x23);               /* jnz 0x1010da48 */
    II(0x1010da25, 0xa)   add(memd_a32(ss, ebp - 0xd8), 0xfffffc18); /* add dword [ebp+0xffffff28], 0xfffffc18 */
    II(0x1010da2f, 0x7)   movsx(edx, memw_a32(ss, ebp - 0xec)); /* movsx edx, word [ebp+0xffffff14] */
    II(0x1010da36, 0x3)   imul(edx, edx, 0xc);                  /* imul edx, edx, 0xc */
    II(0x1010da39, 0x6)   lea(eax, ebp - 0xe8);                 /* lea eax, [ebp+0xffffff18] */
    II(0x1010da3f, 0x7)   calld_abs(memd_a32(ds, edx + ebp - 0x90)); /* call dword near [edx+ebp+0xffffff70] */
    II(0x1010da46, 0x2)   jmpd(0x1010da4d, 0x5);                /* jmp 0x1010da4d */
l_0x1010da48:
    II(0x1010da48, 0x5)   jmpd(0x1010d972, -0xdb);              /* jmp 0x1010d972 */
l_0x1010da4d:
    II(0x1010da4d, 0x7)   cmp(memd_a32(ss, ebp - 0xe4), 0);     /* cmp dword [ebp+0xffffff1c], 0x0 */
    II(0x1010da54, 0x2)   jnzd(0x1010da5f, 0x9);                /* jnz 0x1010da5f */
    II(0x1010da56, 0x7)   cmp(memd_a32(ss, ebp - 0xe0), 0);     /* cmp dword [ebp+0xffffff20], 0x0 */
    II(0x1010da5d, 0x2)   jzd(0x1010da61, 0x2);                 /* jz 0x1010da61 */
l_0x1010da5f:
    II(0x1010da5f, 0x2)   jmpd(0x1010da66, 0x5);                /* jmp 0x1010da66 */
l_0x1010da61:
    II(0x1010da61, 0x5)   jmpd(0x1010d932, -0x134);             /* jmp 0x1010d932 */
l_0x1010da66:
    II(0x1010da66, 0x6)   lea(eax, ebp - 0xe8);                 /* lea eax, [ebp+0xffffff18] */
    II(0x1010da6c, 0x5)   calld(0x1010d7fa, -0x277);            /* call 0x1010d7fa */
    II(0x1010da71, 0x7)   cmp(memd_a32(ss, ebp - 0xe0), 0);     /* cmp dword [ebp+0xffffff20], 0x0 */
    II(0x1010da78, 0x2)   jzd(0x1010da83, 0x9);                 /* jz 0x1010da83 */
    II(0x1010da7a, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x1010da81, 0x2)   jmpd(0x1010da9b, 0x18);               /* jmp 0x1010da9b */
l_0x1010da83:
    II(0x1010da83, 0x7)   movsx(edx, memw_a32(ss, ebp - 0xdc)); /* movsx edx, word [ebp+0xffffff24] */
    II(0x1010da8a, 0x5)   mov(eax, 0x45);                       /* mov eax, 0x45 */
    II(0x1010da8f, 0x5)   calld(0x100caafc, -0x42f98);          /* call 0x100caafc */
    II(0x1010da94, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x1);    /* mov dword [ebp-0x8], 0x1 */
l_0x1010da9b:
    II(0x1010da9b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1010da9e, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1010daa0, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1010daa1, 0x1)   popd(edi);                            /* pop edi */
    II(0x1010daa2, 0x1)   popd(esi);                            /* pop esi */
    II(0x1010daa3, 0x1)   popd(edx);                            /* pop edx */
    II(0x1010daa4, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1010daa5, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1010daa6, 0x1)   retd();                               /* ret */
FUNC_END

