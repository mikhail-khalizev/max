FUNC_BEGIN(0x10133a88, 0x79a852d9a83f14d9, 0x20, ({0x68, 0x44, 0, 0, 0, 0xe8, 0xc0, 0x22, 0x3, 0, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x34, 0, 0, 0, 0x89, 0x45, 0xf0, 0x89, 0x55, 0xf4, 0x89, 0x5d, 0xf8, 0x88, 0x4d, 0xfc, 0xc7, 0x45, 0xe8, 0xff, 0xff, 0xff, 0x7f, 0xc7, 0x45, 0xe4, 0, 0, 0, 0, 0xeb, 0x4, 0x83, 0x45, 0xe4, 0x3, 0xf, 0xbf, 0x45, 0xe4, 0x3d, 0, 0x3, 0, 0, 0xf, 0x8d, 0xea, 0, 0, 0, 0x80, 0x7d, 0xfc, 0, 0x75, 0x36, 0xf, 0xbf, 0x45, 0xe4, 0x83, 0xf8, 0x1b, 0x7c, 0x9, 0xf, 0xbf, 0x45, 0xe4, 0x83, 0xf8, 0x5d, 0x7e, 0x2, 0xeb, 0x5, 0xe9, 0xc6, 0, 0, 0, 0xf, 0xbf, 0x45, 0xe4, 0x3d, 0x20, 0x1, 0, 0, 0x7c, 0xb, 0xf, 0xbf, 0x45, 0xe4, 0x3d, 0x7d, 0x1, 0, 0, 0x7e, 0x2, 0xeb, 0x5, 0xe9, 0xa9, 0, 0, 0, 0xf, 0xbf, 0x55, 0xe4, 0xa1, 0x64, 0x94, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x89, 0x45, 0xe0, 0xf, 0xbf, 0x45, 0xf0, 0x8b, 0x55, 0xe0, 0x29, 0xc2, 0x89, 0x55, 0xdc, 0xf, 0xbf, 0x45, 0xe4, 0x8b, 0x15, 0x64, 0x94, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0x40, 0x1, 0x25, 0xff, 0, 0, 0, 0x89, 0x45, 0xe0, 0xf, 0xbf, 0x45, 0xf4, 0x8b, 0x55, 0xe0, 0x29, 0xc2, 0x89, 0x55, 0xd8, 0xf, 0xbf, 0x55, 0xe4, 0xa1, 0x64, 0x94, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0x40, 0x2, 0x25, 0xff, 0, 0, 0, 0x89, 0x45, 0xe0, 0xf, 0xbf, 0x45, 0xf8, 0x8b, 0x55, 0xe0, 0x29, 0xc2, 0x89, 0x55, 0xd4, 0x8b, 0x55, 0xdc, 0xf, 0xaf, 0x55, 0xdc, 0x8b, 0x45, 0xd8, 0xf, 0xaf, 0x45, 0xd8, 0x1, 0xc2, 0x8b, 0x45, 0xd4, 0xf, 0xaf, 0x45, 0xd4, 0x1, 0xc2, 0x89, 0x55, 0xd0, 0x8b, 0x45, 0xd0, 0x3b, 0x45, 0xe8, 0x7d, 0x1f, 0x8b, 0x45, 0xd0, 0x89, 0x45, 0xe8, 0xf, 0xbf, 0x55, 0xe4, 0xbb, 0x3, 0, 0, 0, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xcc, 0x83, 0x7d, 0xd0, 0, 0x74, 0x5, 0xe9, 0x3, 0xff, 0xff, 0xff, 0x8a, 0x45, 0xcc, 0x88, 0x45, 0xec, 0x8a, 0x45, 0xec, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0xc3}))
    II(0x10133a88, 0x5)   pushd(0x44);                          /* push dword 0x44 */
    II(0x10133a8d, 0x5)   calld(sys_check_available_stack_size, 0x322c0); /* call 0x10165d52 */
    II(0x10133a92, 0x1)   pushd(esi);                           /* push esi */
    II(0x10133a93, 0x1)   pushd(edi);                           /* push edi */
    II(0x10133a94, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10133a95, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10133a97, 0x6)   sub(esp, 0x34);                       /* sub esp, 0x34 */
    II(0x10133a9d, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x10133aa0, 0x3)   mov(memd_a32(ss, ebp - 0xc), edx);    /* mov [ebp-0xc], edx */
    II(0x10133aa3, 0x3)   mov(memd_a32(ss, ebp - 0x8), ebx);    /* mov [ebp-0x8], ebx */
    II(0x10133aa6, 0x3)   mov(memb_a32(ss, ebp - 0x4), cl);     /* mov [ebp-0x4], cl */
    II(0x10133aa9, 0x7)   mov(memd_a32(ss, ebp - 0x18), 0x7fffffff); /* mov dword [ebp-0x18], 0x7fffffff */
    II(0x10133ab0, 0x7)   mov(memd_a32(ss, ebp - 0x1c), 0);     /* mov dword [ebp-0x1c], 0x0 */
    II(0x10133ab7, 0x2)   jmpd(0x10133abd, 0x4);                /* jmp 0x10133abd */
l_0x10133ab9:
    II(0x10133ab9, 0x4)   add(memd_a32(ss, ebp - 0x1c), 0x3);   /* add dword [ebp-0x1c], 0x3 */
l_0x10133abd:
    II(0x10133abd, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10133ac1, 0x5)   cmp(eax, 0x300);                      /* cmp eax, 0x300 */
    II(0x10133ac6, 0x6)   jged(0x10133bb6, 0xea);               /* jge dword 0x10133bb6 */
    II(0x10133acc, 0x4)   cmp(memb_a32(ss, ebp - 0x4), 0);      /* cmp byte [ebp-0x4], 0x0 */
    II(0x10133ad0, 0x2)   jnzd(0x10133b08, 0x36);               /* jnz 0x10133b08 */
    II(0x10133ad2, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10133ad6, 0x3)   cmp(eax, 0x1b);                       /* cmp eax, 0x1b */
    II(0x10133ad9, 0x2)   jld(0x10133ae4, 0x9);                 /* jl 0x10133ae4 */
    II(0x10133adb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10133adf, 0x3)   cmp(eax, 0x5d);                       /* cmp eax, 0x5d */
    II(0x10133ae2, 0x2)   jled(0x10133ae6, 0x2);                /* jle 0x10133ae6 */
l_0x10133ae4:
    II(0x10133ae4, 0x2)   jmpd(0x10133aeb, 0x5);                /* jmp 0x10133aeb */
l_0x10133ae6:
    II(0x10133ae6, 0x5)   jmpd(0x10133bb1, 0xc6);               /* jmp 0x10133bb1 */
l_0x10133aeb:
    II(0x10133aeb, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10133aef, 0x5)   cmp(eax, 0x120);                      /* cmp eax, 0x120 */
    II(0x10133af4, 0x2)   jld(0x10133b01, 0xb);                 /* jl 0x10133b01 */
    II(0x10133af6, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10133afa, 0x5)   cmp(eax, 0x17d);                      /* cmp eax, 0x17d */
    II(0x10133aff, 0x2)   jled(0x10133b03, 0x2);                /* jle 0x10133b03 */
l_0x10133b01:
    II(0x10133b01, 0x2)   jmpd(0x10133b08, 0x5);                /* jmp 0x10133b08 */
l_0x10133b03:
    II(0x10133b03, 0x5)   jmpd(0x10133bb1, 0xa9);               /* jmp 0x10133bb1 */
l_0x10133b08:
    II(0x10133b08, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x10133b0c, 0x5)   mov(eax, memd_a32(ds, ptr_to_pallete)); /* mov eax, [0x101c9464] */
    II(0x10133b11, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10133b13, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x10133b15, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10133b1a, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10133b1d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x10)); /* movsx eax, word [ebp-0x10] */
    II(0x10133b21, 0x3)   mov(edx, memd_a32(ss, ebp - 0x20));   /* mov edx, [ebp-0x20] */
    II(0x10133b24, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x10133b26, 0x3)   mov(memd_a32(ss, ebp - 0x24), edx);   /* mov [ebp-0x24], edx */
    II(0x10133b29, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x1c)); /* movsx eax, word [ebp-0x1c] */
    II(0x10133b2d, 0x6)   mov(edx, memd_a32(ds, ptr_to_pallete)); /* mov edx, [0x101c9464] */
    II(0x10133b33, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10133b35, 0x3)   mov(al, memb_a32(ds, eax + 0x1));     /* mov al, [eax+0x1] */
    II(0x10133b38, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10133b3d, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10133b40, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x10133b44, 0x3)   mov(edx, memd_a32(ss, ebp - 0x20));   /* mov edx, [ebp-0x20] */
    II(0x10133b47, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x10133b49, 0x3)   mov(memd_a32(ss, ebp - 0x28), edx);   /* mov [ebp-0x28], edx */
    II(0x10133b4c, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x10133b50, 0x5)   mov(eax, memd_a32(ds, ptr_to_pallete)); /* mov eax, [0x101c9464] */
    II(0x10133b55, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x10133b57, 0x3)   mov(al, memb_a32(ds, eax + 0x2));     /* mov al, [eax+0x2] */
    II(0x10133b5a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10133b5f, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x10133b62, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10133b66, 0x3)   mov(edx, memd_a32(ss, ebp - 0x20));   /* mov edx, [ebp-0x20] */
    II(0x10133b69, 0x2)   sub(edx, eax);                        /* sub edx, eax */
    II(0x10133b6b, 0x3)   mov(memd_a32(ss, ebp - 0x2c), edx);   /* mov [ebp-0x2c], edx */
    II(0x10133b6e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x24));   /* mov edx, [ebp-0x24] */
    II(0x10133b71, 0x4)   imul(edx, memd_a32(ss, ebp - 0x24));  /* imul edx, [ebp-0x24] */
    II(0x10133b75, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x10133b78, 0x4)   imul(eax, memd_a32(ss, ebp - 0x28));  /* imul eax, [ebp-0x28] */
    II(0x10133b7c, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10133b7e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x10133b81, 0x4)   imul(eax, memd_a32(ss, ebp - 0x2c));  /* imul eax, [ebp-0x2c] */
    II(0x10133b85, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x10133b87, 0x3)   mov(memd_a32(ss, ebp - 0x30), edx);   /* mov [ebp-0x30], edx */
    II(0x10133b8a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x10133b8d, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x18));   /* cmp eax, [ebp-0x18] */
    II(0x10133b90, 0x2)   jged(0x10133bb1, 0x1f);               /* jge 0x10133bb1 */
    II(0x10133b92, 0x3)   mov(eax, memd_a32(ss, ebp - 0x30));   /* mov eax, [ebp-0x30] */
    II(0x10133b95, 0x3)   mov(memd_a32(ss, ebp - 0x18), eax);   /* mov [ebp-0x18], eax */
    II(0x10133b98, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x1c)); /* movsx edx, word [ebp-0x1c] */
    II(0x10133b9c, 0x5)   mov(ebx, 0x3);                        /* mov ebx, 0x3 */
    II(0x10133ba1, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x10133ba3, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x10133ba6, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x10133ba8, 0x3)   mov(memd_a32(ss, ebp - 0x34), eax);   /* mov [ebp-0x34], eax */
    II(0x10133bab, 0x4)   cmp(memd_a32(ss, ebp - 0x30), 0);     /* cmp dword [ebp-0x30], 0x0 */
    II(0x10133baf, 0x2)   jzd(0x10133bb6, 0x5);                 /* jz 0x10133bb6 */
l_0x10133bb1:
    II(0x10133bb1, 0x5)   jmpd(0x10133ab9, -0xfd);              /* jmp 0x10133ab9 */
l_0x10133bb6:
    II(0x10133bb6, 0x3)   mov(al, memb_a32(ss, ebp - 0x34));    /* mov al, [ebp-0x34] */
    II(0x10133bb9, 0x3)   mov(memb_a32(ss, ebp - 0x14), al);    /* mov [ebp-0x14], al */
//    II(0x10133bbc, 0x3)   mov(al, memb_a32(ss, ebp - 0x14));    /* mov al, [ebp-0x14] */
    II(0x10133bbf, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10133bc1, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10133bc2, 0x1)   popd(edi);                            /* pop edi */
    II(0x10133bc3, 0x1)   popd(esi);                            /* pop esi */
    II(0x10133bc4, 0x1)   retd();                               /* ret */
FUNC_END

