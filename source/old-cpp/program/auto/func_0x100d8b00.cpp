FUNC_BEGIN(0x100d8b00, 0x29f19876d49f0173, 0x20, ({0x68, 0x48, 0, 0, 0, 0xe8, 0x48, 0xd2, 0x8, 0, 0x53, 0x51, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0x30, 0, 0, 0, 0x89, 0x45, 0xf8, 0x89, 0x55, 0xfc, 0xf, 0xbf, 0x45, 0xf8, 0x6b, 0xc0, 0x33, 0x8b, 0x80, 0xc0, 0x81, 0x1c, 0x10, 0x89, 0x45, 0xf0, 0xf, 0xbf, 0x45, 0xfc, 0x6b, 0xc0, 0x33, 0x8b, 0x80, 0xc0, 0x81, 0x1c, 0x10, 0x89, 0x45, 0xec, 0x8b, 0x55, 0xf0, 0x81, 0xe2, 0, 0x1, 0, 0, 0x8b, 0x45, 0xec, 0x25, 0, 0x1, 0, 0, 0x39, 0xc2, 0x74, 0x1e, 0xf7, 0x45, 0xf0, 0, 0x1, 0, 0, 0x75, 0x6, 0xc6, 0x45, 0xe8, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xe8, 0, 0x8a, 0x45, 0xe8, 0x88, 0x45, 0xf4, 0xe9, 0xba, 0x1, 0, 0, 0x8b, 0x55, 0xf0, 0x81, 0xe2, 0x80, 0, 0, 0, 0x8b, 0x45, 0xec, 0x25, 0x80, 0, 0, 0, 0x39, 0xc2, 0x74, 0x1e, 0xf7, 0x45, 0xf0, 0x80, 0, 0, 0, 0x75, 0x6, 0xc6, 0x45, 0xe4, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xe4, 0, 0x8a, 0x45, 0xe4, 0x88, 0x45, 0xf4, 0xe9, 0x87, 0x1, 0, 0, 0x8b, 0x55, 0xf0, 0x83, 0xe2, 0x40, 0x8b, 0x45, 0xec, 0x83, 0xe0, 0x40, 0x39, 0xc2, 0x74, 0x1e, 0xf7, 0x45, 0xf0, 0x40, 0, 0, 0, 0x75, 0x6, 0xc6, 0x45, 0xe0, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xe0, 0, 0x8a, 0x45, 0xe0, 0x88, 0x45, 0xf4, 0xe9, 0x59, 0x1, 0, 0, 0xf, 0xbf, 0x55, 0xf8, 0xa1, 0x62, 0xa5, 0x1c, 0x10, 0xe8, 0xd1, 0x2a, 0xff, 0xff, 0x8d, 0x5d, 0xdc, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x15, 0xdc, 0xf9, 0xff, 0xf, 0xbf, 0x55, 0xfc, 0xa1, 0x62, 0xa5, 0x1c, 0x10, 0xe8, 0xb7, 0x2a, 0xff, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xd8, 0xe8, 0xfd, 0xdb, 0xf9, 0xff, 0x8d, 0x45, 0xdc, 0xe8, 0x25, 0xdb, 0xf9, 0xff, 0x8b, 0x40, 0xc, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7e, 0x12, 0x8d, 0x45, 0xd8, 0xe8, 0x13, 0xdb, 0xf9, 0xff, 0x8b, 0x40, 0xc, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x74, 0x2, 0xeb, 0x1d, 0xc6, 0x45, 0xf4, 0, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0xb5, 0xd2, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xab, 0xd2, 0xf9, 0xff, 0xe9, 0xe4, 0, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0xe2, 0xda, 0xf9, 0xff, 0x8b, 0x40, 0xc, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x75, 0x12, 0x8d, 0x45, 0xd8, 0xe8, 0xd0, 0xda, 0xf9, 0xff, 0x8b, 0x40, 0xc, 0xc1, 0xf8, 0x10, 0x85, 0xc0, 0x7f, 0x2, 0xeb, 0x1d, 0xc6, 0x45, 0xf4, 0x1, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x72, 0xd2, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x68, 0xd2, 0xf9, 0xff, 0xe9, 0xa1, 0, 0, 0, 0x8d, 0x45, 0xdc, 0xe8, 0x9f, 0xda, 0xf9, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xd8, 0xe8, 0x95, 0xda, 0xf9, 0xff, 0x66, 0x8b, 0x52, 0x8, 0x66, 0x3b, 0x50, 0x8, 0x74, 0x42, 0x8d, 0x45, 0xdc, 0xe8, 0x83, 0xda, 0xf9, 0xff, 0x89, 0xc2, 0x8d, 0x45, 0xd8, 0xe8, 0x79, 0xda, 0xf9, 0xff, 0x66, 0x8b, 0x52, 0x8, 0x66, 0x3b, 0x50, 0x8, 0x7e, 0x6, 0xc6, 0x45, 0xd4, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xd4, 0, 0x8a, 0x45, 0xd4, 0x88, 0x45, 0xf4, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0x11, 0xd2, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0x7, 0xd2, 0xf9, 0xff, 0xeb, 0x43, 0x8b, 0x45, 0xf8, 0x66, 0x3b, 0x45, 0xfc, 0x7e, 0x6, 0xc6, 0x45, 0xd0, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xd0, 0, 0x8a, 0x45, 0xd0, 0x88, 0x45, 0xf4, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0xe2, 0xd1, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xd8, 0xd1, 0xf9, 0xff, 0xeb, 0x14, 0x31, 0xd2, 0x8d, 0x45, 0xd8, 0xe8, 0xcc, 0xd1, 0xf9, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xdc, 0xe8, 0xc2, 0xd1, 0xf9, 0xff, 0x8a, 0x45, 0xf4, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x59, 0x5b, 0xc3}))
    II(0x100d8b00, 0x5)   pushd(0x48);                          /* push dword 0x48 */
    II(0x100d8b05, 0x5)   calld(sys_check_available_stack_size, 0x8d248); /* call 0x10165d52 */
    II(0x100d8b0a, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100d8b0b, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100d8b0c, 0x1)   pushd(esi);                           /* push esi */
    II(0x100d8b0d, 0x1)   pushd(edi);                           /* push edi */
    II(0x100d8b0e, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100d8b0f, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100d8b11, 0x6)   sub(esp, 0x30);                       /* sub esp, 0x30 */
    II(0x100d8b17, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
    II(0x100d8b1a, 0x3)   mov(memd_a32(ss, ebp - 0x4), edx);    /* mov [ebp-0x4], edx */
    II(0x100d8b1d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100d8b21, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100d8b24, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c81c0)); /* mov eax, [eax+0x101c81c0] */
    II(0x100d8b2a, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x100d8b2d, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x4));  /* movsx eax, word [ebp-0x4] */
    II(0x100d8b31, 0x3)   imul(eax, eax, 0x33);                 /* imul eax, eax, 0x33 */
    II(0x100d8b34, 0x6)   mov(eax, memd_a32(ds, eax + 0x101c81c0)); /* mov eax, [eax+0x101c81c0] */
    II(0x100d8b3a, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x100d8b3d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100d8b40, 0x6)   and_(edx, 0x100);                     /* and edx, 0x100 */
    II(0x100d8b46, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100d8b49, 0x5)   and_(eax, 0x100);                     /* and eax, 0x100 */
    II(0x100d8b4e, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100d8b50, 0x2)   jzd(0x100d8b70, 0x1e);                /* jz 0x100d8b70 */
    II(0x100d8b52, 0x7)   test(memd_a32(ss, ebp - 0x10), 0x100); /* test dword [ebp-0x10], 0x100 */
    II(0x100d8b59, 0x2)   jnzd(0x100d8b61, 0x6);                /* jnz 0x100d8b61 */
    II(0x100d8b5b, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0x1);   /* mov byte [ebp-0x18], 0x1 */
    II(0x100d8b5f, 0x2)   jmpd(0x100d8b65, 0x4);                /* jmp 0x100d8b65 */
l_0x100d8b61:
    II(0x100d8b61, 0x4)   mov(memb_a32(ss, ebp - 0x18), 0);     /* mov byte [ebp-0x18], 0x0 */
l_0x100d8b65:
    II(0x100d8b65, 0x3)   mov(al, memb_a32(ss, ebp - 0x18));    /* mov al, [ebp-0x18] */
    II(0x100d8b68, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x100d8b6b, 0x5)   jmpd(0x100d8d2a, 0x1ba);              /* jmp 0x100d8d2a */
l_0x100d8b70:
    II(0x100d8b70, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100d8b73, 0x6)   and_(edx, 0x80);                      /* and edx, 0x80 */
    II(0x100d8b79, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100d8b7c, 0x5)   and_(eax, 0x80);                      /* and eax, 0x80 */
    II(0x100d8b81, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100d8b83, 0x2)   jzd(0x100d8ba3, 0x1e);                /* jz 0x100d8ba3 */
    II(0x100d8b85, 0x7)   test(memd_a32(ss, ebp - 0x10), 0x80); /* test dword [ebp-0x10], 0x80 */
    II(0x100d8b8c, 0x2)   jnzd(0x100d8b94, 0x6);                /* jnz 0x100d8b94 */
    II(0x100d8b8e, 0x4)   mov(memb_a32(ss, ebp - 0x1c), 0x1);   /* mov byte [ebp-0x1c], 0x1 */
    II(0x100d8b92, 0x2)   jmpd(0x100d8b98, 0x4);                /* jmp 0x100d8b98 */
l_0x100d8b94:
    II(0x100d8b94, 0x4)   mov(memb_a32(ss, ebp - 0x1c), 0);     /* mov byte [ebp-0x1c], 0x0 */
l_0x100d8b98:
    II(0x100d8b98, 0x3)   mov(al, memb_a32(ss, ebp - 0x1c));    /* mov al, [ebp-0x1c] */
    II(0x100d8b9b, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x100d8b9e, 0x5)   jmpd(0x100d8d2a, 0x187);              /* jmp 0x100d8d2a */
l_0x100d8ba3:
    II(0x100d8ba3, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100d8ba6, 0x3)   and_(edx, 0x40);                      /* and edx, 0x40 */
    II(0x100d8ba9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x14));   /* mov eax, [ebp-0x14] */
    II(0x100d8bac, 0x3)   and_(eax, 0x40);                      /* and eax, 0x40 */
    II(0x100d8baf, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x100d8bb1, 0x2)   jzd(0x100d8bd1, 0x1e);                /* jz 0x100d8bd1 */
    II(0x100d8bb3, 0x7)   test(memd_a32(ss, ebp - 0x10), 0x40); /* test dword [ebp-0x10], 0x40 */
    II(0x100d8bba, 0x2)   jnzd(0x100d8bc2, 0x6);                /* jnz 0x100d8bc2 */
    II(0x100d8bbc, 0x4)   mov(memb_a32(ss, ebp - 0x20), 0x1);   /* mov byte [ebp-0x20], 0x1 */
    II(0x100d8bc0, 0x2)   jmpd(0x100d8bc6, 0x4);                /* jmp 0x100d8bc6 */
l_0x100d8bc2:
    II(0x100d8bc2, 0x4)   mov(memb_a32(ss, ebp - 0x20), 0);     /* mov byte [ebp-0x20], 0x0 */
l_0x100d8bc6:
    II(0x100d8bc6, 0x3)   mov(al, memb_a32(ss, ebp - 0x20));    /* mov al, [ebp-0x20] */
    II(0x100d8bc9, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x100d8bcc, 0x5)   jmpd(0x100d8d2a, 0x159);              /* jmp 0x100d8d2a */
l_0x100d8bd1:
    II(0x100d8bd1, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100d8bd5, 0x5)   mov(eax, memd_a32(ds, 0x101ca562));   /* mov eax, [0x101ca562] */
    II(0x100d8bda, 0x5)   calld(0x100cb6b0, -0xd52f);           /* call 0x100cb6b0 */
    II(0x100d8bdf, 0x3)   lea(ebx, ebp - 0x24);                 /* lea ebx, [ebp-0x24] */
    II(0x100d8be2, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100d8be4, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100d8be6, 0x5)   calld(0x10076800, -0x623eb);          /* call 0x10076800 */
    II(0x100d8beb, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x4));  /* movsx edx, word [ebp-0x4] */
    II(0x100d8bef, 0x5)   mov(eax, memd_a32(ds, 0x101ca562));   /* mov eax, [0x101ca562] */
    II(0x100d8bf4, 0x5)   calld(0x100cb6b0, -0xd549);           /* call 0x100cb6b0 */
    II(0x100d8bf9, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100d8bfb, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100d8bfe, 0x5)   calld(0x10076800, -0x62403);          /* call 0x10076800 */
    II(0x100d8c03, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100d8c06, 0x5)   calld(0x10076730, -0x624db);          /* call 0x10076730 */
    II(0x100d8c0b, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x100d8c0e, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d8c11, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d8c13, 0x2)   jled(0x100d8c27, 0x12);               /* jle 0x100d8c27 */
    II(0x100d8c15, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100d8c18, 0x5)   calld(0x10076730, -0x624ed);          /* call 0x10076730 */
    II(0x100d8c1d, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x100d8c20, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d8c23, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d8c25, 0x2)   jzd(0x100d8c29, 0x2);                 /* jz 0x100d8c29 */
l_0x100d8c27:
    II(0x100d8c27, 0x2)   jmpd(0x100d8c46, 0x1d);               /* jmp 0x100d8c46 */
l_0x100d8c29:
    II(0x100d8c29, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0);      /* mov byte [ebp-0xc], 0x0 */
    II(0x100d8c2d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d8c2f, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100d8c32, 0x5)   calld(0x10075eec, -0x62d4b);          /* call 0x10075eec */
    II(0x100d8c37, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d8c39, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100d8c3c, 0x5)   calld(0x10075eec, -0x62d55);          /* call 0x10075eec */
    II(0x100d8c41, 0x5)   jmpd(0x100d8d2a, 0xe4);               /* jmp 0x100d8d2a */
l_0x100d8c46:
    II(0x100d8c46, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100d8c49, 0x5)   calld(0x10076730, -0x6251e);          /* call 0x10076730 */
    II(0x100d8c4e, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x100d8c51, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d8c54, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d8c56, 0x2)   jnzd(0x100d8c6a, 0x12);               /* jnz 0x100d8c6a */
    II(0x100d8c58, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100d8c5b, 0x5)   calld(0x10076730, -0x62530);          /* call 0x10076730 */
    II(0x100d8c60, 0x3)   mov(eax, memd_a32(ds, eax + 0xc));    /* mov eax, [eax+0xc] */
    II(0x100d8c63, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x100d8c66, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x100d8c68, 0x2)   jgd(0x100d8c6c, 0x2);                 /* jg 0x100d8c6c */
l_0x100d8c6a:
    II(0x100d8c6a, 0x2)   jmpd(0x100d8c89, 0x1d);               /* jmp 0x100d8c89 */
l_0x100d8c6c:
    II(0x100d8c6c, 0x4)   mov(memb_a32(ss, ebp - 0xc), 0x1);    /* mov byte [ebp-0xc], 0x1 */
    II(0x100d8c70, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d8c72, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100d8c75, 0x5)   calld(0x10075eec, -0x62d8e);          /* call 0x10075eec */
    II(0x100d8c7a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d8c7c, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100d8c7f, 0x5)   calld(0x10075eec, -0x62d98);          /* call 0x10075eec */
    II(0x100d8c84, 0x5)   jmpd(0x100d8d2a, 0xa1);               /* jmp 0x100d8d2a */
l_0x100d8c89:
    II(0x100d8c89, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100d8c8c, 0x5)   calld(0x10076730, -0x62561);          /* call 0x10076730 */
    II(0x100d8c91, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100d8c93, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100d8c96, 0x5)   calld(0x10076730, -0x6256b);          /* call 0x10076730 */
    II(0x100d8c9b, 0x4)   mov(dx, memw_a32(ds, edx + 0x8));     /* mov dx, [edx+0x8] */
    II(0x100d8c9f, 0x4)   cmp(dx, memw_a32(ds, eax + 0x8));     /* cmp dx, [eax+0x8] */
    II(0x100d8ca3, 0x2)   jzd(0x100d8ce7, 0x42);                /* jz 0x100d8ce7 */
    II(0x100d8ca5, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100d8ca8, 0x5)   calld(0x10076730, -0x6257d);          /* call 0x10076730 */
    II(0x100d8cad, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100d8caf, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100d8cb2, 0x5)   calld(0x10076730, -0x62587);          /* call 0x10076730 */
    II(0x100d8cb7, 0x4)   mov(dx, memw_a32(ds, edx + 0x8));     /* mov dx, [edx+0x8] */
    II(0x100d8cbb, 0x4)   cmp(dx, memw_a32(ds, eax + 0x8));     /* cmp dx, [eax+0x8] */
    II(0x100d8cbf, 0x2)   jled(0x100d8cc7, 0x6);                /* jle 0x100d8cc7 */
    II(0x100d8cc1, 0x4)   mov(memb_a32(ss, ebp - 0x2c), 0x1);   /* mov byte [ebp-0x2c], 0x1 */
    II(0x100d8cc5, 0x2)   jmpd(0x100d8ccb, 0x4);                /* jmp 0x100d8ccb */
l_0x100d8cc7:
    II(0x100d8cc7, 0x4)   mov(memb_a32(ss, ebp - 0x2c), 0);     /* mov byte [ebp-0x2c], 0x0 */
l_0x100d8ccb:
    II(0x100d8ccb, 0x3)   mov(al, memb_a32(ss, ebp - 0x2c));    /* mov al, [ebp-0x2c] */
    II(0x100d8cce, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x100d8cd1, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d8cd3, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100d8cd6, 0x5)   calld(0x10075eec, -0x62def);          /* call 0x10075eec */
    II(0x100d8cdb, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d8cdd, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100d8ce0, 0x5)   calld(0x10075eec, -0x62df9);          /* call 0x10075eec */
    II(0x100d8ce5, 0x2)   jmpd(0x100d8d2a, 0x43);               /* jmp 0x100d8d2a */
l_0x100d8ce7:
    II(0x100d8ce7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x100d8cea, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x4));     /* cmp ax, [ebp-0x4] */
    II(0x100d8cee, 0x2)   jled(0x100d8cf6, 0x6);                /* jle 0x100d8cf6 */
    II(0x100d8cf0, 0x4)   mov(memb_a32(ss, ebp - 0x30), 0x1);   /* mov byte [ebp-0x30], 0x1 */
    II(0x100d8cf4, 0x2)   jmpd(0x100d8cfa, 0x4);                /* jmp 0x100d8cfa */
l_0x100d8cf6:
    II(0x100d8cf6, 0x4)   mov(memb_a32(ss, ebp - 0x30), 0);     /* mov byte [ebp-0x30], 0x0 */
l_0x100d8cfa:
    II(0x100d8cfa, 0x3)   mov(al, memb_a32(ss, ebp - 0x30));    /* mov al, [ebp-0x30] */
    II(0x100d8cfd, 0x3)   mov(memb_a32(ss, ebp - 0xc), al);     /* mov [ebp-0xc], al */
    II(0x100d8d00, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d8d02, 0x3)   lea(eax, ebp - 0x28);                 /* lea eax, [ebp-0x28] */
    II(0x100d8d05, 0x5)   calld(0x10075eec, -0x62e1e);          /* call 0x10075eec */
    II(0x100d8d0a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x100d8d0c, 0x3)   lea(eax, ebp - 0x24);                 /* lea eax, [ebp-0x24] */
    II(0x100d8d0f, 0x5)   calld(0x10075eec, -0x62e28);          /* call 0x10075eec */
    II(0x100d8d14, 0x2)   jmpd(0x100d8d2a, 0x14);               /* jmp 0x100d8d2a */
//  II(0x100d8d16, 0x14)  /* Недостижимый код. */
l_0x100d8d2a:
    II(0x100d8d2a, 0x3)   mov(al, memb_a32(ss, ebp - 0xc));     /* mov al, [ebp-0xc] */
    II(0x100d8d2d, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x100d8d2f, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x100d8d30, 0x1)   popd(edi);                            /* pop edi */
    II(0x100d8d31, 0x1)   popd(esi);                            /* pop esi */
    II(0x100d8d32, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100d8d33, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100d8d34, 0x1)   retd();                               /* ret */
FUNC_END

