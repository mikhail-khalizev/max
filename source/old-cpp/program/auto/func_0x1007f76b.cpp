FUNC_BEGIN(0x1007f76b, 0xd62a6d8ac0ef6520, 0x20, ({0x68, 0xf4, 0, 0, 0, 0xe8, 0xdd, 0x65, 0xe, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xcc, 0, 0, 0, 0x89, 0x45, 0xfc, 0x80, 0x4d, 0xf8, 0x1, 0x8d, 0x45, 0xe8, 0xe8, 0x6a, 0x6d, 0xff, 0xff, 0x89, 0x45, 0xec, 0x80, 0x65, 0xf8, 0xfe, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x14, 0xe8, 0x84, 0xaa, 0, 0, 0xe8, 0xc7, 0xab, 0, 0, 0x89, 0x45, 0xf0, 0xc7, 0x45, 0xf4, 0, 0, 0, 0, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x83, 0xf8, 0x2, 0x74, 0xf, 0x8b, 0x45, 0xf0, 0x8a, 0x40, 0x4d, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x7f, 0x17, 0x8b, 0x45, 0xfc, 0xe8, 0x83, 0xfe, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x8c, 0x67, 0xff, 0xff, 0xe9, 0xb4, 0xb, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0x48, 0x6b, 0xff, 0xff, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x40, 0x6c, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0xf2, 0x73, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x61, 0xb5, 0xb, 0, 0x84, 0xc0, 0xf, 0x84, 0x81, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x80, 0x6b, 0xff, 0xff, 0x8a, 0x40, 0x50, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x68, 0x8d, 0x45, 0xe8, 0xe8, 0x6c, 0x6b, 0xff, 0xff, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x24, 0x8d, 0x45, 0xe8, 0xe8, 0x58, 0x6b, 0xff, 0xff, 0xe8, 0xef, 0x69, 0xff, 0xff, 0x80, 0x78, 0x16, 0, 0x74, 0xf, 0xb8, 0x4c, 0, 0, 0, 0xe8, 0x7f, 0x67, 0xff, 0xff, 0x83, 0xf8, 0x2, 0x7d, 0x2, 0xeb, 0x30, 0xe8, 0xe7, 0xb3, 0, 0, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xe8, 0xe8, 0x28, 0x6b, 0xff, 0xff, 0xe8, 0xe5, 0x30, 0xd, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x7, 0xb3, 0, 0, 0x8b, 0x5d, 0xfc, 0x83, 0xc3, 0x18, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x58, 0xb2, 0, 0, 0xe9, 0x65, 0xff, 0xff, 0xff, 0x31, 0xc0, 0xa0, 0xc9, 0x37, 0x1c, 0x10, 0x85, 0xc0, 0x75, 0x19, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x31, 0xd2, 0x8a, 0x15, 0xc8, 0x37, 0x1c, 0x10, 0x39, 0xc2, 0xf, 0x85, 0x74, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0x70, 0x6a, 0xff, 0xff, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x68, 0x6b, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0x1a, 0x73, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x89, 0xb4, 0xb, 0, 0x84, 0xc0, 0xf, 0x84, 0x41, 0x1, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xdc, 0x6a, 0xff, 0xff, 0xe8, 0xde, 0x35, 0x2, 0, 0x84, 0xc0, 0x74, 0x68, 0x8d, 0x45, 0xe8, 0xe8, 0x97, 0x6a, 0xff, 0xff, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0x52, 0x8d, 0x45, 0xe8, 0xe8, 0x83, 0x6a, 0xff, 0xff, 0xe8, 0x1a, 0x69, 0xff, 0xff, 0x8b, 0x50, 0x10, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xe8, 0xe8, 0x70, 0x6a, 0xff, 0xff, 0xe8, 0x7, 0x69, 0xff, 0xff, 0x8b, 0x40, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xd0, 0x89, 0xd3, 0x8d, 0x55, 0xe4, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x14, 0xe8, 0xda, 0xa8, 0, 0, 0xe8, 0x10, 0x95, 0x3, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0x77, 0x6a, 0xff, 0xff, 0xe8, 0x3f, 0x13, 0xff, 0xff, 0x98, 0x39, 0xd8, 0x7f, 0x2, 0xeb, 0x5, 0xe9, 0xbe, 0, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x5c, 0x6a, 0xff, 0xff, 0xe8, 0xc3, 0x8e, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x2c, 0x8d, 0x45, 0xe8, 0xe8, 0x7f, 0x6a, 0xff, 0xff, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x22, 0xe8, 0x86, 0xb1, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xee, 0xb1, 0, 0, 0x8b, 0x5d, 0xfc, 0x83, 0xc3, 0x18, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x3f, 0xb1, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0xd8, 0x71, 0xff, 0xff, 0x98, 0x85, 0xc0, 0x7e, 0xc, 0x8b, 0x45, 0xfc, 0xe8, 0x63, 0xb3, 0, 0, 0x84, 0xc0, 0x74, 0x2, 0xeb, 0x52, 0xe8, 0xec, 0xad, 0, 0, 0x25, 0xff, 0, 0, 0, 0x89, 0x45, 0xe0, 0xb8, 0xa, 0, 0, 0, 0xe8, 0x1e, 0x64, 0xe, 0, 0x89, 0x45, 0xdc, 0x8b, 0x45, 0xdc, 0x89, 0x45, 0xd8, 0x83, 0x7d, 0xd8, 0, 0x74, 0x16, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xdc, 0xe8, 0xcd, 0x3e, 0x2, 0, 0x89, 0x45, 0xd4, 0x8b, 0x45, 0xd4, 0x89, 0x45, 0xd0, 0xeb, 0x6, 0x8b, 0x45, 0xd8, 0x89, 0x45, 0xd0, 0x8b, 0x55, 0xd0, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0x8b, 0x5d, 0xe0, 0xe8, 0x99, 0x53, 0x2, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x45, 0x65, 0xff, 0xff, 0xe9, 0x6d, 0x9, 0, 0, 0xe9, 0xa5, 0xfe, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0xfc, 0x68, 0xff, 0xff, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xf4, 0x69, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0xa6, 0x71, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x15, 0xb3, 0xb, 0, 0x84, 0xc0, 0x74, 0x46, 0x8d, 0x45, 0xe8, 0xe8, 0x38, 0x69, 0xff, 0xff, 0x8a, 0x40, 0x4e, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x75, 0x30, 0xe8, 0xd7, 0xb1, 0, 0, 0x31, 0xdb, 0x88, 0xc3, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xe8, 0xe8, 0x18, 0x69, 0xff, 0xff, 0xe8, 0xd5, 0x2e, 0xd, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xf7, 0xb0, 0, 0, 0x8b, 0x5d, 0xfc, 0x83, 0xc3, 0x18, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x48, 0xb0, 0, 0, 0xeb, 0xa4, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0xdf, 0x70, 0xff, 0xff, 0x98, 0x85, 0xc0, 0xf, 0x8e, 0xd5, 0x8, 0, 0, 0xc7, 0x45, 0xc0, 0, 0, 0, 0, 0xc6, 0x45, 0xc8, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0x68, 0x68, 0xff, 0xff, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x60, 0x69, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0x12, 0x71, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x81, 0xb2, 0xb, 0, 0x84, 0xc0, 0xf, 0x84, 0x22, 0x2, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xa0, 0x68, 0xff, 0xff, 0x80, 0x78, 0x3d, 0x1e, 0x74, 0x52, 0x8d, 0x45, 0xe8, 0xe8, 0x92, 0x68, 0xff, 0xff, 0xe8, 0x29, 0x67, 0xff, 0xff, 0x8b, 0x50, 0x10, 0xc1, 0xfa, 0x10, 0x8d, 0x45, 0xe8, 0xe8, 0x7f, 0x68, 0xff, 0xff, 0xe8, 0x16, 0x67, 0xff, 0xff, 0x8b, 0x40, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xd0, 0x89, 0xd3, 0x8d, 0x55, 0xbc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x14, 0xe8, 0xe9, 0xa6, 0, 0, 0xe8, 0x1f, 0x93, 0x3, 0, 0x89, 0xc2, 0x8d, 0x45, 0xe8, 0xe8, 0x86, 0x68, 0xff, 0xff, 0xe8, 0x4e, 0x11, 0xff, 0xff, 0x98, 0x39, 0xd8, 0x7f, 0x9, 0xc6, 0x45, 0xc8, 0x1, 0xe9, 0xb4, 0x1, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x37, 0x68, 0xff, 0xff, 0xe8, 0x3e, 0x2b, 0xd, 0, 0x3b, 0x45, 0xfc, 0x74, 0x11, 0x8d, 0x45, 0xe8, 0xe8, 0x25, 0x68, 0xff, 0xff, 0xe8, 0x2c, 0x2b, 0xd, 0, 0x85, 0xc0, 0x75, 0x2, 0xeb, 0x20, 0x8d, 0x45, 0xe8, 0xe8, 0x12, 0x68, 0xff, 0xff, 0xe8, 0x19, 0x2b, 0xd, 0, 0x89, 0x45, 0xb8, 0x8b, 0x45, 0xb8, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xb8, 0xff, 0x52, 0x20, 0x3c, 0x10, 0x75, 0x2, 0xeb, 0x20, 0x8d, 0x45, 0xe8, 0xe8, 0xf0, 0x67, 0xff, 0xff, 0xe8, 0xf7, 0x2a, 0xd, 0, 0x89, 0x45, 0xb4, 0x8b, 0x45, 0xb4, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xb4, 0xff, 0x52, 0x20, 0x3c, 0x17, 0x75, 0x2, 0xeb, 0x5, 0xe9, 0x46, 0x1, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xc9, 0x67, 0xff, 0xff, 0xe8, 0x60, 0x66, 0xff, 0xff, 0x89, 0x45, 0xb0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0xa6, 0x6f, 0xff, 0xff, 0x98, 0x83, 0xf8, 0x1, 0x74, 0x42, 0x8b, 0x45, 0xf0, 0x8b, 0x50, 0x1a, 0xc1, 0xfa, 0x10, 0xa1, 0x70, 0x81, 0x1c, 0x10, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xd0, 0x8b, 0x45, 0xf0, 0x8b, 0x40, 0x18, 0xc1, 0xf8, 0x10, 0x1, 0xc2, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8b, 0x80, 0xa3, 0xa6, 0x1c, 0x10, 0x1, 0xd0, 0x8a, 0, 0x25, 0xff, 0, 0, 0, 0x83, 0xf8, 0x1, 0x74, 0x2, 0xeb, 0x30, 0x8b, 0x45, 0xb0, 0x8b, 0x50, 0x15, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xb0, 0x8b, 0x40, 0x15, 0xc1, 0xf8, 0x10, 0xf, 0xaf, 0xd0, 0x89, 0xd3, 0x8b, 0x55, 0xf0, 0x8d, 0x45, 0xe8, 0xe8, 0x7e, 0x67, 0xff, 0xff, 0xe8, 0xa6, 0x10, 0xff, 0xff, 0x98, 0x39, 0xd8, 0xf, 0x8e, 0xb1, 0, 0, 0, 0x8b, 0x45, 0xb0, 0x8b, 0x40, 0xa, 0xc1, 0xf8, 0x10, 0xc1, 0xe0, 0x2, 0x89, 0xc3, 0x8d, 0x45, 0xe8, 0xe8, 0x26, 0x67, 0xff, 0xff, 0x31, 0xd2, 0x8a, 0x50, 0x4d, 0x1, 0xda, 0x6b, 0xd2, 0xc, 0x8b, 0x45, 0xb0, 0x8b, 0x58, 0x6, 0xc1, 0xfb, 0x10, 0x89, 0xd0, 0xc1, 0xfa, 0x1f, 0xf7, 0xfb, 0x89, 0x45, 0xac, 0x83, 0x7d, 0xc0, 0, 0x74, 0x9, 0x8b, 0x45, 0xac, 0x66, 0x3b, 0x45, 0xa8, 0x7c, 0x2, 0xeb, 0xf, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xc0, 0xe8, 0x9f, 0x2d, 0xd, 0, 0x84, 0xc0, 0x74, 0x2, 0xeb, 0x6, 0x8b, 0x45, 0xa8, 0x89, 0x45, 0xac, 0x8b, 0x55, 0xfc, 0x8d, 0x45, 0xe8, 0xe8, 0xd6, 0x66, 0xff, 0xff, 0xe8, 0x83, 0x2d, 0xd, 0, 0x84, 0xc0, 0x74, 0x6, 0x8b, 0x45, 0xf4, 0xff, 0x45, 0xf4, 0x83, 0x7d, 0xc0, 0, 0x74, 0x9, 0x8b, 0x45, 0xac, 0x66, 0x3b, 0x45, 0xa8, 0x7e, 0x2, 0xeb, 0x1a, 0x8b, 0x45, 0xac, 0x66, 0x3b, 0x45, 0xa8, 0x75, 0xf, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xc0, 0xe8, 0x54, 0x2d, 0xd, 0, 0x84, 0xc0, 0x74, 0x2, 0xeb, 0x11, 0x8d, 0x45, 0xe8, 0xe8, 0xc8, 0x66, 0xff, 0xff, 0x89, 0x45, 0xc0, 0x8b, 0x45, 0xac, 0x89, 0x45, 0xa8, 0xe9, 0xc4, 0xfd, 0xff, 0xff, 0x83, 0x7d, 0xc0, 0, 0xf, 0x85, 0xa5, 0x1, 0, 0, 0x80, 0x7d, 0xc8, 0, 0xf, 0x85, 0x84, 0x1, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x22, 0xe8, 0xff, 0x65, 0xff, 0xff, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0xf7, 0x66, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0xa9, 0x6e, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x18, 0xb0, 0xb, 0, 0x84, 0xc0, 0xf, 0x84, 0x8f, 0, 0, 0, 0xbb, 0x2, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0x66, 0x66, 0xff, 0xff, 0x8b, 0x4d, 0xfc, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0xf0, 0x36, 0x2, 0, 0x84, 0xc0, 0x74, 0x6d, 0x8b, 0x45, 0xfc, 0xe8, 0xa2, 0xaf, 0, 0, 0x84, 0xc0, 0x75, 0x52, 0xe8, 0x2d, 0xaa, 0, 0, 0x25, 0xff, 0, 0, 0, 0x89, 0x45, 0xa4, 0xb8, 0xa, 0, 0, 0, 0xe8, 0x5f, 0x60, 0xe, 0, 0x89, 0x45, 0xa0, 0x8b, 0x45, 0xa0, 0x89, 0x45, 0x9c, 0x83, 0x7d, 0x9c, 0, 0x74, 0x16, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xa0, 0xe8, 0xe, 0x3b, 0x2, 0, 0x89, 0x45, 0x98, 0x8b, 0x45, 0x98, 0x89, 0x45, 0x94, 0xeb, 0x6, 0x8b, 0x45, 0x9c, 0x89, 0x45, 0x94, 0x8b, 0x55, 0x94, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0x8b, 0x5d, 0xa4, 0xe8, 0xda, 0x4f, 0x2, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x86, 0x61, 0xff, 0xff, 0xe9, 0xae, 0x5, 0, 0, 0xe9, 0x57, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0x3d, 0x65, 0xff, 0xff, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x35, 0x66, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0xe7, 0x6d, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x56, 0xaf, 0xb, 0, 0x84, 0xc0, 0xf, 0x84, 0x8f, 0, 0, 0, 0xbb, 0x2, 0, 0, 0, 0x8d, 0x45, 0xe8, 0xe8, 0xa4, 0x65, 0xff, 0xff, 0x8b, 0x4d, 0xfc, 0x89, 0xc2, 0x89, 0xc8, 0xe8, 0x2e, 0x36, 0x2, 0, 0x84, 0xc0, 0x74, 0x6d, 0x8b, 0x45, 0xfc, 0xe8, 0xe0, 0xae, 0, 0, 0x84, 0xc0, 0x75, 0x52, 0xe8, 0x6b, 0xa9, 0, 0, 0x25, 0xff, 0, 0, 0, 0x89, 0x45, 0x90, 0xb8, 0xa, 0, 0, 0, 0xe8, 0x9d, 0x5f, 0xe, 0, 0x89, 0x45, 0x8c, 0x8b, 0x45, 0x8c, 0x89, 0x45, 0x88, 0x83, 0x7d, 0x88, 0, 0x74, 0x16, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0x8c, 0xe8, 0x4c, 0x3a, 0x2, 0, 0x89, 0x45, 0x84, 0x8b, 0x45, 0x84, 0x89, 0x45, 0x80, 0xeb, 0x6, 0x8b, 0x45, 0x88, 0x89, 0x45, 0x80, 0x8b, 0x55, 0x80, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0x8b, 0x5d, 0x90, 0xe8, 0x18, 0x4f, 0x2, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xc4, 0x60, 0xff, 0xff, 0xe9, 0xec, 0x4, 0, 0, 0xe9, 0x57, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0xe8, 0x9f, 0xf7, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xa8, 0x60, 0xff, 0xff, 0xe9, 0xd0, 0x4, 0, 0, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xc0, 0xe8, 0x7e, 0x2b, 0xd, 0, 0x84, 0xc0, 0x75, 0xf, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x8a, 0x60, 0xff, 0xff, 0xe9, 0xb2, 0x4, 0, 0, 0x8d, 0x85, 0x7c, 0xff, 0xff, 0xff, 0xe8, 0xfe, 0x6b, 0xff, 0xff, 0x8b, 0x45, 0xc0, 0xe8, 0x42, 0x63, 0xff, 0xff, 0x80, 0x78, 0x16, 0, 0x74, 0xf, 0xb8, 0x4c, 0, 0, 0, 0xe8, 0xd2, 0x60, 0xff, 0xff, 0x83, 0xf8, 0x2, 0x7d, 0x2, 0xeb, 0x6, 0xc6, 0x45, 0xc4, 0x1, 0xeb, 0x4, 0xc6, 0x45, 0xc4, 0x2, 0x8b, 0x55, 0xf0, 0x8b, 0x45, 0xc0, 0xe8, 0x7f, 0x79, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x24, 0xf, 0xbe, 0x45, 0xc4, 0x50, 0x8d, 0x8d, 0x78, 0xff, 0xff, 0xff, 0x8d, 0x9d, 0x7c, 0xff, 0xff, 0xff, 0x8b, 0x55, 0xf0, 0x8b, 0x45, 0xc0, 0xe8, 0x9b, 0x71, 0xff, 0xff, 0x88, 0x45, 0xcc, 0xe9, 0x98, 0, 0, 0, 0x8b, 0x45, 0xc0, 0xe8, 0xe6, 0x62, 0xff, 0xff, 0x66, 0x8b, 0x40, 0x12, 0x89, 0x85, 0x74, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x8b, 0x50, 0x7, 0xc1, 0xfa, 0x10, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x14, 0xe8, 0xb4, 0xa2, 0, 0, 0xe8, 0xf7, 0xa3, 0, 0, 0xe8, 0xf6, 0x60, 0xff, 0xff, 0x84, 0xc0, 0x75, 0x20, 0x8b, 0x45, 0xc0, 0xe8, 0xb2, 0x62, 0xff, 0xff, 0x8b, 0x50, 0x15, 0xc1, 0xfa, 0x10, 0xf, 0xbf, 0x85, 0x74, 0xff, 0xff, 0xff, 0xe8, 0xe8, 0x97, 0, 0, 0x89, 0x85, 0x74, 0xff, 0xff, 0xff, 0xb8, 0x1, 0, 0, 0, 0x50, 0xf, 0xbf, 0x85, 0x74, 0xff, 0xff, 0xff, 0x50, 0xf, 0xbe, 0x45, 0xc4, 0x50, 0x8d, 0x8d, 0x78, 0xff, 0xff, 0xff, 0x8d, 0x9d, 0x7c, 0xff, 0xff, 0xff, 0x8d, 0x95, 0x70, 0xff, 0xff, 0xff, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x14, 0xe8, 0x56, 0xa2, 0, 0, 0xe8, 0x8c, 0x8e, 0x3, 0, 0x8b, 0x75, 0xc0, 0x89, 0xc2, 0x89, 0xf0, 0xe8, 0x9e, 0x73, 0xff, 0xff, 0x88, 0x45, 0xcc, 0x80, 0x7d, 0xcc, 0, 0x74, 0xf, 0x8b, 0x55, 0xf0, 0x8b, 0x45, 0xc0, 0xe8, 0x66, 0x6f, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x5, 0xe9, 0xad, 0x1, 0, 0, 0xc7, 0x85, 0x6c, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0x23, 0x63, 0xff, 0xff, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x1b, 0x64, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0xcd, 0x6b, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x3c, 0xad, 0xb, 0, 0x84, 0xc0, 0x74, 0x28, 0xf, 0xbe, 0x5d, 0xc4, 0x8b, 0x55, 0xf0, 0x8d, 0x45, 0xe8, 0xe8, 0x8c, 0x63, 0xff, 0xff, 0xe8, 0xe5, 0x4, 0x4, 0, 0x89, 0x85, 0x68, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x68, 0xff, 0xff, 0xff, 0x1, 0x85, 0x6c, 0xff, 0xff, 0xff, 0xeb, 0xc2, 0xb8, 0x1, 0, 0, 0, 0x50, 0xf, 0xbe, 0x4d, 0xc4, 0x8d, 0x95, 0x7c, 0xff, 0xff, 0xff, 0x8d, 0x85, 0x64, 0xff, 0xff, 0xff, 0xe8, 0xe8, 0x5d, 0xff, 0xff, 0x89, 0xc3, 0x8b, 0x55, 0xc0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0xc5, 0, 0, 0, 0xbe, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xf0, 0xe8, 0x43, 0x20, 0x4, 0, 0x89, 0x85, 0x78, 0xff, 0xff, 0xff, 0xb8, 0x1, 0, 0, 0, 0x50, 0xf, 0xbf, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x50, 0xf, 0xbe, 0x4d, 0xc4, 0xf, 0xbf, 0x9d, 0x78, 0xff, 0xff, 0xff, 0x8b, 0x55, 0xf0, 0x8b, 0x45, 0xc0, 0xe8, 0x30, 0x7f, 0xff, 0xff, 0x84, 0xc0, 0xf, 0x85, 0xdf, 0, 0, 0, 0xc6, 0x45, 0xcc, 0, 0x80, 0x7d, 0xc4, 0x1, 0xf, 0x85, 0xd1, 0, 0, 0, 0xc7, 0x85, 0x6c, 0xff, 0xff, 0xff, 0, 0, 0, 0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0x47, 0x62, 0xff, 0xff, 0x8d, 0x5d, 0xe8, 0x89, 0xc2, 0x89, 0xd8, 0xe8, 0x3f, 0x63, 0xff, 0xff, 0xeb, 0x8, 0x8d, 0x45, 0xe8, 0xe8, 0xf1, 0x6a, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x60, 0xac, 0xb, 0, 0x84, 0xc0, 0x74, 0x29, 0xbb, 0x2, 0, 0, 0, 0x8b, 0x55, 0xf0, 0x8d, 0x45, 0xe8, 0xe8, 0xaf, 0x62, 0xff, 0xff, 0xe8, 0x8, 0x4, 0x4, 0, 0x89, 0x85, 0x68, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x68, 0xff, 0xff, 0xff, 0x1, 0x85, 0x6c, 0xff, 0xff, 0xff, 0xeb, 0xc1, 0xb8, 0x1, 0, 0, 0, 0x50, 0xb9, 0x2, 0, 0, 0, 0x8d, 0x95, 0x7c, 0xff, 0xff, 0xff, 0x8d, 0x85, 0x60, 0xff, 0xff, 0xff, 0xe8, 0xa, 0x5d, 0xff, 0xff, 0x89, 0xc3, 0x8b, 0x55, 0xc0, 0x8b, 0x45, 0xfc, 0x8b, 0x40, 0x7, 0xc1, 0xf8, 0x10, 0x69, 0xc0, 0xc5, 0, 0, 0, 0xbe, 0xc4, 0x31, 0x1c, 0x10, 0x1, 0xf0, 0xe8, 0x65, 0x1f, 0x4, 0, 0x89, 0x85, 0x78, 0xff, 0xff, 0xff, 0xb8, 0x1, 0, 0, 0, 0x50, 0xf, 0xbf, 0x85, 0x6c, 0xff, 0xff, 0xff, 0x50, 0xb9, 0x2, 0, 0, 0, 0xf, 0xbf, 0x9d, 0x78, 0xff, 0xff, 0xff, 0x8b, 0x55, 0xf0, 0x8b, 0x45, 0xc0, 0xe8, 0x51, 0x7e, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x4, 0xc6, 0x45, 0xcc, 0x1, 0x80, 0x7d, 0xcc, 0, 0xf, 0x85, 0xb4, 0, 0, 0, 0x8b, 0x55, 0xc0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x18, 0xe8, 0xef, 0xa8, 0, 0, 0x8b, 0x55, 0xc0, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x22, 0xe8, 0x49, 0xa9, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x4d, 0xab, 0, 0, 0x84, 0xc0, 0xf, 0x85, 0x79, 0, 0, 0, 0xe8, 0xd4, 0xa5, 0, 0, 0x25, 0xff, 0, 0, 0, 0x89, 0x85, 0x5c, 0xff, 0xff, 0xff, 0xb8, 0xa, 0, 0, 0, 0xe8, 0x3, 0x5c, 0xe, 0, 0x89, 0x85, 0x58, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x58, 0xff, 0xff, 0xff, 0x89, 0x85, 0x54, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x54, 0xff, 0xff, 0xff, 0, 0x74, 0x22, 0x8b, 0x55, 0xfc, 0x8b, 0x85, 0x58, 0xff, 0xff, 0xff, 0xe8, 0xa3, 0x36, 0x2, 0, 0x89, 0x85, 0x50, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x50, 0xff, 0xff, 0xff, 0x89, 0x85, 0x4c, 0xff, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x54, 0xff, 0xff, 0xff, 0x89, 0x85, 0x4c, 0xff, 0xff, 0xff, 0x8b, 0x95, 0x4c, 0xff, 0xff, 0xff, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0x8b, 0x9d, 0x5c, 0xff, 0xff, 0xff, 0xe8, 0x5a, 0x4b, 0x2, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0x6, 0x5d, 0xff, 0xff, 0xe9, 0x2e, 0x1, 0, 0, 0x8b, 0x45, 0xc0, 0x66, 0x8b, 0x40, 0x1a, 0x66, 0x3b, 0x85, 0x7c, 0xff, 0xff, 0xff, 0x75, 0x14, 0x8b, 0x45, 0xc0, 0x66, 0x8b, 0x40, 0x1c, 0x66, 0x3b, 0x85, 0x7e, 0xff, 0xff, 0xff, 0xf, 0x84, 0xfb, 0, 0, 0, 0xb8, 0x49, 0, 0, 0, 0xe8, 0x67, 0x5b, 0xe, 0, 0x89, 0x85, 0x48, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x48, 0xff, 0xff, 0xff, 0x89, 0x85, 0x44, 0xff, 0xff, 0xff, 0x83, 0xbd, 0x44, 0xff, 0xff, 0xff, 0, 0x74, 0x42, 0xb8, 0x3, 0xf6, 0x7, 0x10, 0x50, 0x8d, 0x95, 0x7c, 0xff, 0xff, 0xff, 0x8d, 0x85, 0x40, 0xff, 0xff, 0xff, 0xe8, 0x99, 0x5b, 0xff, 0xff, 0x50, 0x31, 0xc0, 0x50, 0x31, 0xc9, 0x8b, 0x5d, 0xfc, 0x8b, 0x55, 0xc0, 0x8b, 0x85, 0x48, 0xff, 0xff, 0xff, 0xe8, 0x3e, 0xbf, 0x2, 0, 0x89, 0x85, 0x3c, 0xff, 0xff, 0xff, 0x8b, 0x85, 0x3c, 0xff, 0xff, 0xff, 0x89, 0x85, 0x38, 0xff, 0xff, 0xff, 0xeb, 0xc, 0x8b, 0x85, 0x44, 0xff, 0xff, 0xff, 0x89, 0x85, 0x38, 0xff, 0xff, 0xff, 0x8b, 0x95, 0x38, 0xff, 0xff, 0xff, 0x8d, 0x85, 0x34, 0xff, 0xff, 0xff, 0xe8, 0xdd, 0xa2, 0, 0, 0xba, 0x1, 0, 0, 0, 0x8d, 0x85, 0x34, 0xff, 0xff, 0xff, 0xe8, 0xfd, 0xa1, 0, 0, 0xe8, 0x4c, 0xa3, 0, 0, 0xba, 0x1, 0, 0, 0, 0x8d, 0x85, 0x34, 0xff, 0xff, 0xff, 0xe8, 0xe8, 0xa1, 0, 0, 0xe8, 0x67, 0xa3, 0, 0, 0x8b, 0x45, 0xfc, 0xc6, 0x40, 0x13, 0x1, 0x8d, 0x85, 0x34, 0xff, 0xff, 0xff, 0xe8, 0x2d, 0xa2, 0, 0, 0x89, 0xc2, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0xf5, 0x49, 0x2, 0, 0xf, 0xbf, 0x45, 0xf4, 0x83, 0xf8, 0x1, 0x7e, 0xd, 0xba, 0x1, 0, 0, 0, 0x8b, 0x45, 0xfc, 0xe8, 0x8e, 0x25, 0x2, 0, 0x31, 0xd2, 0x8d, 0x85, 0x34, 0xff, 0xff, 0xff, 0xe8, 0xce, 0x89, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xe4, 0x5b, 0xff, 0xff, 0xeb, 0xf, 0xe9, 0x17, 0xf7, 0xff, 0xff, 0x31, 0xd2, 0x8d, 0x45, 0xe8, 0xe8, 0xd3, 0x5b, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1007f76b, 0x5)   pushd(0xf4);                          /* push dword 0xf4 */
    II(0x1007f770, 0x5)   calld(sys_check_available_stack_size, 0xe65dd); /* call 0x10165d52 */
    II(0x1007f775, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1007f776, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1007f777, 0x1)   pushd(edx);                           /* push edx */
    II(0x1007f778, 0x1)   pushd(esi);                           /* push esi */
    II(0x1007f779, 0x1)   pushd(edi);                           /* push edi */
    II(0x1007f77a, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1007f77b, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1007f77d, 0x6)   sub(esp, 0xcc);                       /* sub esp, 0xcc */
    II(0x1007f783, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x1007f786, 0x4)   or_(memb_a32(ss, ebp - 0x8), 0x1);    /* or byte [ebp-0x8], 0x1 */
    II(0x1007f78a, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007f78d, 0x5)   calld(0x100764fc, -0x9296);           /* call 0x100764fc */
    II(0x1007f792, 0x3)   mov(memd_a32(ss, ebp - 0x14), eax);   /* mov [ebp-0x14], eax */
    II(0x1007f795, 0x4)   and_(memb_a32(ss, ebp - 0x8), -0x2 /* 0xfe */); /* and byte [ebp-0x8], 0xfe */
    II(0x1007f799, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007f79c, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x1007f79f, 0x5)   calld(0x1008a228, 0xaa84);            /* call 0x1008a228 */
    II(0x1007f7a4, 0x5)   calld(0x1008a370, 0xabc7);            /* call 0x1008a370 */
    II(0x1007f7a9, 0x3)   mov(memd_a32(ss, ebp - 0x10), eax);   /* mov [ebp-0x10], eax */
    II(0x1007f7ac, 0x7)   mov(memd_a32(ss, ebp - 0xc), 0);      /* mov dword [ebp-0xc], 0x0 */
    II(0x1007f7b3, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1007f7b5, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x1007f7ba, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x1007f7bd, 0x2)   jzd(0x1007f7ce, 0xf);                 /* jz 0x1007f7ce */
    II(0x1007f7bf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007f7c2, 0x3)   mov(al, memb_a32(ds, eax + 0x4d));    /* mov al, [eax+0x4d] */
    II(0x1007f7c5, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1007f7ca, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007f7cc, 0x2)   jgd(0x1007f7e5, 0x17);                /* jg 0x1007f7e5 */
l_0x1007f7ce:
    II(0x1007f7ce, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007f7d1, 0x5)   calld(0x1007f659, -0x17d);            /* call 0x1007f659 */
    II(0x1007f7d6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007f7d8, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007f7db, 0x5)   calld(0x10075f6c, -0x9874);           /* call 0x10075f6c */
    II(0x1007f7e0, 0x5)   jmpd(0x10080399, 0xbb4);              /* jmp 0x10080399 */
l_0x1007f7e5:
    II(0x1007f7e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007f7e8, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1007f7eb, 0x5)   calld(0x10076338, -0x94b8);           /* call 0x10076338 */
    II(0x1007f7f0, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x1007f7f3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007f7f5, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1007f7f7, 0x5)   calld(0x1007643c, -0x93c0);           /* call 0x1007643c */
    II(0x1007f7fc, 0x2)   jmpd(0x1007f806, 0x8);                /* jmp 0x1007f806 */
l_0x1007f7fe:
    II(0x1007f7fe, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007f801, 0x5)   calld(0x10076bf8, -0x8c0e);           /* call 0x10076bf8 */
l_0x1007f806:
    II(0x1007f806, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007f808, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007f80b, 0x5)   calld(0x1013ad71, 0xbb561);           /* call 0x1013ad71 */
    II(0x1007f810, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007f812, 0x6)   jzd(0x1007f899, 0x81);                /* jz dword 0x1007f899 */
    II(0x1007f818, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007f81b, 0x5)   calld(0x100763a0, -0x9480);           /* call 0x100763a0 */
    II(0x1007f820, 0x3)   mov(al, memb_a32(ds, eax + 0x50));    /* mov al, [eax+0x50] */
    II(0x1007f823, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1007f828, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007f82a, 0x2)   jnzd(0x1007f894, 0x68);               /* jnz 0x1007f894 */
    II(0x1007f82c, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007f82f, 0x5)   calld(0x100763a0, -0x9494);           /* call 0x100763a0 */
    II(0x1007f834, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x1007f837, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1007f83c, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007f83e, 0x2)   jzd(0x1007f864, 0x24);                /* jz 0x1007f864 */
    II(0x1007f840, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007f843, 0x5)   calld(0x100763a0, -0x94a8);           /* call 0x100763a0 */
    II(0x1007f848, 0x5)   calld(0x1007623c, -0x9611);           /* call 0x1007623c */
    II(0x1007f84d, 0x4)   cmp(memb_a32(ds, eax + 0x16), 0);     /* cmp byte [eax+0x16], 0x0 */
    II(0x1007f851, 0x2)   jzd(0x1007f862, 0xf);                 /* jz 0x1007f862 */
    II(0x1007f853, 0x5)   mov(eax, 0x4c);                       /* mov eax, 0x4c */
    II(0x1007f858, 0x5)   calld(0x10075fdc, -0x9881);           /* call 0x10075fdc */
    II(0x1007f85d, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x1007f860, 0x2)   jged(0x1007f864, 0x2);                /* jge 0x1007f864 */
l_0x1007f862:
    II(0x1007f862, 0x2)   jmpd(0x1007f894, 0x30);               /* jmp 0x1007f894 */
l_0x1007f864:
    II(0x1007f864, 0x5)   calld(0x1008ac50, 0xb3e7);            /* call 0x1008ac50 */
    II(0x1007f869, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1007f86b, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x1007f86d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1007f870, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007f873, 0x5)   calld(0x100763a0, -0x94d8);           /* call 0x100763a0 */
    II(0x1007f878, 0x5)   calld(0x10152962, 0xd30e5);           /* call 0x10152962 */
    II(0x1007f87d, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007f880, 0x5)   calld(0x1008ab8c, 0xb307);            /* call 0x1008ab8c */
    II(0x1007f885, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x1007f888, 0x3)   add(ebx, 0x18);                       /* add ebx, 0x18 */
    II(0x1007f88b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007f88d, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1007f88f, 0x5)   calld(0x1008aaec, 0xb258);            /* call 0x1008aaec */
l_0x1007f894:
    II(0x1007f894, 0x5)   jmpd(0x1007f7fe, -0x9b);              /* jmp 0x1007f7fe */
l_0x1007f899:
    II(0x1007f899, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1007f89b, 0x5)   mov(al, memb_a32(ds, 0x101c37c9));    /* mov al, [0x101c37c9] */
    II(0x1007f8a0, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007f8a2, 0x2)   jnzd(0x1007f8bd, 0x19);               /* jnz 0x1007f8bd */
    II(0x1007f8a4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007f8a7, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x1007f8aa, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007f8ad, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007f8af, 0x6)   mov(dl, memb_a32(ds, 0x101c37c8));    /* mov dl, [0x101c37c8] */
    II(0x1007f8b5, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1007f8b7, 0x6)   jnzd(0x1007fa31, 0x174);              /* jnz dword 0x1007fa31 */
l_0x1007f8bd:
    II(0x1007f8bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007f8c0, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1007f8c3, 0x5)   calld(0x10076338, -0x9590);           /* call 0x10076338 */
    II(0x1007f8c8, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x1007f8cb, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007f8cd, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1007f8cf, 0x5)   calld(0x1007643c, -0x9498);           /* call 0x1007643c */
    II(0x1007f8d4, 0x2)   jmpd(0x1007f8de, 0x8);                /* jmp 0x1007f8de */
l_0x1007f8d6:
    II(0x1007f8d6, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007f8d9, 0x5)   calld(0x10076bf8, -0x8ce6);           /* call 0x10076bf8 */
l_0x1007f8de:
    II(0x1007f8de, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007f8e0, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007f8e3, 0x5)   calld(0x1013ad71, 0xbb489);           /* call 0x1013ad71 */
    II(0x1007f8e8, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007f8ea, 0x6)   jzd(0x1007fa31, 0x141);               /* jz dword 0x1007fa31 */
    II(0x1007f8f0, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007f8f3, 0x5)   calld(0x100763d4, -0x9524);           /* call 0x100763d4 */
    II(0x1007f8f8, 0x5)   calld(0x100a2edb, 0x235de);           /* call 0x100a2edb */
    II(0x1007f8fd, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007f8ff, 0x2)   jzd(0x1007f969, 0x68);                /* jz 0x1007f969 */
    II(0x1007f901, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007f904, 0x5)   calld(0x100763a0, -0x9569);           /* call 0x100763a0 */
    II(0x1007f909, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x1007f90c, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1007f911, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007f913, 0x2)   jzd(0x1007f967, 0x52);                /* jz 0x1007f967 */
    II(0x1007f915, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007f918, 0x5)   calld(0x100763a0, -0x957d);           /* call 0x100763a0 */
    II(0x1007f91d, 0x5)   calld(0x1007623c, -0x96e6);           /* call 0x1007623c */
    II(0x1007f922, 0x3)   mov(edx, memd_a32(ds, eax + 0x10));   /* mov edx, [eax+0x10] */
    II(0x1007f925, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1007f928, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007f92b, 0x5)   calld(0x100763a0, -0x9590);           /* call 0x100763a0 */
    II(0x1007f930, 0x5)   calld(0x1007623c, -0x96f9);           /* call 0x1007623c */
    II(0x1007f935, 0x3)   mov(eax, memd_a32(ds, eax + 0x10));   /* mov eax, [eax+0x10] */
    II(0x1007f938, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007f93b, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x1007f93e, 0x2)   mov(ebx, edx);                        /* mov ebx, edx */
    II(0x1007f940, 0x3)   lea(edx, ebp - 0x1c);                 /* lea edx, [ebp-0x1c] */
    II(0x1007f943, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007f946, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x1007f949, 0x5)   calld(0x1008a228, 0xa8da);            /* call 0x1008a228 */
    II(0x1007f94e, 0x5)   calld(0x100b8e63, 0x39510);           /* call 0x100b8e63 */
    II(0x1007f953, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007f955, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007f958, 0x5)   calld(0x100763d4, -0x9589);           /* call 0x100763d4 */
    II(0x1007f95d, 0x5)   calld(0x10070ca1, -0xecc1);           /* call 0x10070ca1 */
    II(0x1007f962, 0x1)   cwde();                               /* cwde */
    II(0x1007f963, 0x2)   cmp(eax, ebx);                        /* cmp eax, ebx */
    II(0x1007f965, 0x2)   jgd(0x1007f969, 0x2);                 /* jg 0x1007f969 */
l_0x1007f967:
    II(0x1007f967, 0x2)   jmpd(0x1007f96e, 0x5);                /* jmp 0x1007f96e */
l_0x1007f969:
    II(0x1007f969, 0x5)   jmpd(0x1007fa2c, 0xbe);               /* jmp 0x1007fa2c */
l_0x1007f96e:
    II(0x1007f96e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007f970, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007f973, 0x5)   calld(0x100763d4, -0x95a4);           /* call 0x100763d4 */
    II(0x1007f978, 0x5)   calld(0x10078840, -0x713d);           /* call 0x10078840 */
    II(0x1007f97d, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007f97f, 0x2)   jnzd(0x1007f9ad, 0x2c);               /* jnz 0x1007f9ad */
    II(0x1007f981, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007f984, 0x5)   calld(0x10076408, -0x9581);           /* call 0x10076408 */
    II(0x1007f989, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007f98b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007f98e, 0x3)   add(eax, 0x22);                       /* add eax, 0x22 */
    II(0x1007f991, 0x5)   calld(0x1008ab1c, 0xb186);            /* call 0x1008ab1c */
    II(0x1007f996, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007f999, 0x5)   calld(0x1008ab8c, 0xb1ee);            /* call 0x1008ab8c */
    II(0x1007f99e, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x1007f9a1, 0x3)   add(ebx, 0x18);                       /* add ebx, 0x18 */
    II(0x1007f9a4, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007f9a6, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1007f9a8, 0x5)   calld(0x1008aaec, 0xb13f);            /* call 0x1008aaec */
l_0x1007f9ad:
    II(0x1007f9ad, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007f9b0, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1007f9b3, 0x5)   calld(0x10076b90, -0x8e28);           /* call 0x10076b90 */
    II(0x1007f9b8, 0x1)   cwde();                               /* cwde */
    II(0x1007f9b9, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007f9bb, 0x2)   jled(0x1007f9c9, 0xc);                /* jle 0x1007f9c9 */
    II(0x1007f9bd, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007f9c0, 0x5)   calld(0x1008ad28, 0xb363);            /* call 0x1008ad28 */
    II(0x1007f9c5, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007f9c7, 0x2)   jzd(0x1007f9cb, 0x2);                 /* jz 0x1007f9cb */
l_0x1007f9c9:
    II(0x1007f9c9, 0x2)   jmpd(0x1007fa1d, 0x52);               /* jmp 0x1007fa1d */
l_0x1007f9cb:
    II(0x1007f9cb, 0x5)   calld(0x1008a7bc, 0xadec);            /* call 0x1008a7bc */
    II(0x1007f9d0, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1007f9d5, 0x3)   mov(memd_a32(ss, ebp - 0x20), eax);   /* mov [ebp-0x20], eax */
    II(0x1007f9d8, 0x5)   mov(eax, 0xa);                        /* mov eax, 0xa */
    II(0x1007f9dd, 0x5)   calld(sys_new, 0xe641e);              /* call 0x10165e00 */
    II(0x1007f9e2, 0x3)   mov(memd_a32(ss, ebp - 0x24), eax);   /* mov [ebp-0x24], eax */
//    II(0x1007f9e5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1007f9e8, 0x3)   mov(memd_a32(ss, ebp - 0x28), eax);   /* mov [ebp-0x28], eax */
    II(0x1007f9eb, 0x4)   cmp(memd_a32(ss, ebp - 0x28), 0);     /* cmp dword [ebp-0x28], 0x0 */
    II(0x1007f9ef, 0x2)   jzd(0x1007fa07, 0x16);                /* jz 0x1007fa07 */
    II(0x1007f9f1, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1007f9f4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x24));   /* mov eax, [ebp-0x24] */
    II(0x1007f9f7, 0x5)   calld(my_ctor_c11, 0x23ecd);          /* call 0x100a38c9 */
    II(0x1007f9fc, 0x3)   mov(memd_a32(ss, ebp - 0x2c), eax);   /* mov [ebp-0x2c], eax */
//    II(0x1007f9ff, 0x3)   mov(eax, memd_a32(ss, ebp - 0x2c));   /* mov eax, [ebp-0x2c] */
    II(0x1007fa02, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
    II(0x1007fa05, 0x2)   jmpd(0x1007fa0d, 0x6);                /* jmp 0x1007fa0d */
l_0x1007fa07:
    II(0x1007fa07, 0x3)   mov(eax, memd_a32(ss, ebp - 0x28));   /* mov eax, [ebp-0x28] */
    II(0x1007fa0a, 0x3)   mov(memd_a32(ss, ebp - 0x30), eax);   /* mov [ebp-0x30], eax */
l_0x1007fa0d:
    II(0x1007fa0d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x30));   /* mov edx, [ebp-0x30] */
    II(0x1007fa10, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x1007fa15, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x20));   /* mov ebx, [ebp-0x20] */
    II(0x1007fa18, 0x5)   calld(0x100a4db6, 0x25399);           /* call 0x100a4db6 */
l_0x1007fa1d:
    II(0x1007fa1d, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007fa1f, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fa22, 0x5)   calld(0x10075f6c, -0x9abb);           /* call 0x10075f6c */
    II(0x1007fa27, 0x5)   jmpd(0x10080399, 0x96d);              /* jmp 0x10080399 */
l_0x1007fa2c:
    II(0x1007fa2c, 0x5)   jmpd(0x1007f8d6, -0x15b);             /* jmp 0x1007f8d6 */
l_0x1007fa31:
    II(0x1007fa31, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007fa34, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1007fa37, 0x5)   calld(0x10076338, -0x9704);           /* call 0x10076338 */
    II(0x1007fa3c, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x1007fa3f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007fa41, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1007fa43, 0x5)   calld(0x1007643c, -0x960c);           /* call 0x1007643c */
    II(0x1007fa48, 0x2)   jmpd(0x1007fa52, 0x8);                /* jmp 0x1007fa52 */
l_0x1007fa4a:
    II(0x1007fa4a, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fa4d, 0x5)   calld(0x10076bf8, -0x8e5a);           /* call 0x10076bf8 */
l_0x1007fa52:
    II(0x1007fa52, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007fa54, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fa57, 0x5)   calld(0x1013ad71, 0xbb315);           /* call 0x1013ad71 */
    II(0x1007fa5c, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007fa5e, 0x2)   jzd(0x1007faa6, 0x46);                /* jz 0x1007faa6 */
    II(0x1007fa60, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fa63, 0x5)   calld(0x100763a0, -0x96c8);           /* call 0x100763a0 */
    II(0x1007fa68, 0x3)   mov(al, memb_a32(ds, eax + 0x4e));    /* mov al, [eax+0x4e] */
    II(0x1007fa6b, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1007fa70, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007fa72, 0x2)   jnzd(0x1007faa4, 0x30);               /* jnz 0x1007faa4 */
    II(0x1007fa74, 0x5)   calld(0x1008ac50, 0xb1d7);            /* call 0x1008ac50 */
    II(0x1007fa79, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1007fa7b, 0x2)   mov(bl, al);                          /* mov bl, al */
    II(0x1007fa7d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1007fa80, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fa83, 0x5)   calld(0x100763a0, -0x96e8);           /* call 0x100763a0 */
    II(0x1007fa88, 0x5)   calld(0x10152962, 0xd2ed5);           /* call 0x10152962 */
    II(0x1007fa8d, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fa90, 0x5)   calld(0x1008ab8c, 0xb0f7);            /* call 0x1008ab8c */
    II(0x1007fa95, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x1007fa98, 0x3)   add(ebx, 0x18);                       /* add ebx, 0x18 */
    II(0x1007fa9b, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007fa9d, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1007fa9f, 0x5)   calld(0x1008aaec, 0xb048);            /* call 0x1008aaec */
l_0x1007faa4:
    II(0x1007faa4, 0x2)   jmpd(0x1007fa4a, -0x5c);              /* jmp 0x1007fa4a */
l_0x1007faa6:
    II(0x1007faa6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007faa9, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1007faac, 0x5)   calld(0x10076b90, -0x8f21);           /* call 0x10076b90 */
    II(0x1007fab1, 0x1)   cwde();                               /* cwde */
    II(0x1007fab2, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007fab4, 0x6)   jled(0x1008038f, 0x8d5);              /* jle dword 0x1008038f */
    II(0x1007faba, 0x7)   mov(memd_a32(ss, ebp - 0x40), 0);     /* mov dword [ebp-0x40], 0x0 */
    II(0x1007fac1, 0x4)   mov(memb_a32(ss, ebp - 0x38), 0);     /* mov byte [ebp-0x38], 0x0 */
    II(0x1007fac5, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007fac8, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1007facb, 0x5)   calld(0x10076338, -0x9798);           /* call 0x10076338 */
    II(0x1007fad0, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x1007fad3, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007fad5, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1007fad7, 0x5)   calld(0x1007643c, -0x96a0);           /* call 0x1007643c */
    II(0x1007fadc, 0x2)   jmpd(0x1007fae6, 0x8);                /* jmp 0x1007fae6 */
l_0x1007fade:
    II(0x1007fade, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fae1, 0x5)   calld(0x10076bf8, -0x8eee);           /* call 0x10076bf8 */
l_0x1007fae6:
    II(0x1007fae6, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007fae8, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007faeb, 0x5)   calld(0x1013ad71, 0xbb281);           /* call 0x1013ad71 */
    II(0x1007faf0, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007faf2, 0x6)   jzd(0x1007fd1a, 0x222);               /* jz dword 0x1007fd1a */
    II(0x1007faf8, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fafb, 0x5)   calld(0x100763a0, -0x9760);           /* call 0x100763a0 */
    II(0x1007fb00, 0x4)   cmp(memb_a32(ds, eax + 0x3d), 0x1e);  /* cmp byte [eax+0x3d], 0x1e */
    II(0x1007fb04, 0x2)   jzd(0x1007fb58, 0x52);                /* jz 0x1007fb58 */
    II(0x1007fb06, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fb09, 0x5)   calld(0x100763a0, -0x976e);           /* call 0x100763a0 */
    II(0x1007fb0e, 0x5)   calld(0x1007623c, -0x98d7);           /* call 0x1007623c */
    II(0x1007fb13, 0x3)   mov(edx, memd_a32(ds, eax + 0x10));   /* mov edx, [eax+0x10] */
    II(0x1007fb16, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1007fb19, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fb1c, 0x5)   calld(0x100763a0, -0x9781);           /* call 0x100763a0 */
    II(0x1007fb21, 0x5)   calld(0x1007623c, -0x98ea);           /* call 0x1007623c */
    II(0x1007fb26, 0x3)   mov(eax, memd_a32(ds, eax + 0x10));   /* mov eax, [eax+0x10] */
    II(0x1007fb29, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007fb2c, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x1007fb2f, 0x2)   mov(ebx, edx);                        /* mov ebx, edx */
    II(0x1007fb31, 0x3)   lea(edx, ebp - 0x44);                 /* lea edx, [ebp-0x44] */
    II(0x1007fb34, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007fb37, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x1007fb3a, 0x5)   calld(0x1008a228, 0xa6e9);            /* call 0x1008a228 */
    II(0x1007fb3f, 0x5)   calld(0x100b8e63, 0x3931f);           /* call 0x100b8e63 */
    II(0x1007fb44, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007fb46, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fb49, 0x5)   calld(0x100763d4, -0x977a);           /* call 0x100763d4 */
    II(0x1007fb4e, 0x5)   calld(0x10070ca1, -0xeeb2);           /* call 0x10070ca1 */
    II(0x1007fb53, 0x1)   cwde();                               /* cwde */
    II(0x1007fb54, 0x2)   cmp(eax, ebx);                        /* cmp eax, ebx */
    II(0x1007fb56, 0x2)   jgd(0x1007fb61, 0x9);                 /* jg 0x1007fb61 */
l_0x1007fb58:
    II(0x1007fb58, 0x4)   mov(memb_a32(ss, ebp - 0x38), 0x1);   /* mov byte [ebp-0x38], 0x1 */
    II(0x1007fb5c, 0x5)   jmpd(0x1007fd15, 0x1b4);              /* jmp 0x1007fd15 */
l_0x1007fb61:
    II(0x1007fb61, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fb64, 0x5)   calld(0x100763a0, -0x97c9);           /* call 0x100763a0 */
    II(0x1007fb69, 0x5)   calld(0x101526ac, 0xd2b3e);           /* call 0x101526ac */
    II(0x1007fb6e, 0x3)   cmp(eax, memd_a32(ss, ebp - 0x4));    /* cmp eax, [ebp-0x4] */
    II(0x1007fb71, 0x2)   jzd(0x1007fb84, 0x11);                /* jz 0x1007fb84 */
    II(0x1007fb73, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fb76, 0x5)   calld(0x100763a0, -0x97db);           /* call 0x100763a0 */
    II(0x1007fb7b, 0x5)   calld(0x101526ac, 0xd2b2c);           /* call 0x101526ac */
    II(0x1007fb80, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007fb82, 0x2)   jnzd(0x1007fb86, 0x2);                /* jnz 0x1007fb86 */
l_0x1007fb84:
    II(0x1007fb84, 0x2)   jmpd(0x1007fba6, 0x20);               /* jmp 0x1007fba6 */
l_0x1007fb86:
    II(0x1007fb86, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fb89, 0x5)   calld(0x100763a0, -0x97ee);           /* call 0x100763a0 */
    II(0x1007fb8e, 0x5)   calld(0x101526ac, 0xd2b19);           /* call 0x101526ac */
    II(0x1007fb93, 0x3)   mov(memd_a32(ss, ebp - 0x48), eax);   /* mov [ebp-0x48], eax */
//    II(0x1007fb96, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x1007fb99, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x1007fb9c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x48));   /* mov eax, [ebp-0x48] */
    II(0x1007fb9f, 0x3)   calld_abs(memd_a32(ds, edx + 0x20));  /* call dword near [edx+0x20] */
    II(0x1007fba2, 0x2)   cmp(al, 0x10);                        /* cmp al, 0x10 */
    II(0x1007fba4, 0x2)   jnzd(0x1007fba8, 0x2);                /* jnz 0x1007fba8 */
l_0x1007fba6:
    II(0x1007fba6, 0x2)   jmpd(0x1007fbc8, 0x20);               /* jmp 0x1007fbc8 */
l_0x1007fba8:
    II(0x1007fba8, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fbab, 0x5)   calld(0x100763a0, -0x9810);           /* call 0x100763a0 */
    II(0x1007fbb0, 0x5)   calld(0x101526ac, 0xd2af7);           /* call 0x101526ac */
    II(0x1007fbb5, 0x3)   mov(memd_a32(ss, ebp - 0x4c), eax);   /* mov [ebp-0x4c], eax */
//    II(0x1007fbb8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x1007fbbb, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x1007fbbe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4c));   /* mov eax, [ebp-0x4c] */
    II(0x1007fbc1, 0x3)   calld_abs(memd_a32(ds, edx + 0x20));  /* call dword near [edx+0x20] */
    II(0x1007fbc4, 0x2)   cmp(al, 0x17);                        /* cmp al, 0x17 */
    II(0x1007fbc6, 0x2)   jnzd(0x1007fbca, 0x2);                /* jnz 0x1007fbca */
l_0x1007fbc8:
    II(0x1007fbc8, 0x2)   jmpd(0x1007fbcf, 0x5);                /* jmp 0x1007fbcf */
l_0x1007fbca:
    II(0x1007fbca, 0x5)   jmpd(0x1007fd15, 0x146);              /* jmp 0x1007fd15 */
l_0x1007fbcf:
    II(0x1007fbcf, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fbd2, 0x5)   calld(0x100763a0, -0x9837);           /* call 0x100763a0 */
    II(0x1007fbd7, 0x5)   calld(0x1007623c, -0x99a0);           /* call 0x1007623c */
    II(0x1007fbdc, 0x3)   mov(memd_a32(ss, ebp - 0x50), eax);   /* mov [ebp-0x50], eax */
    II(0x1007fbdf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007fbe2, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1007fbe5, 0x5)   calld(0x10076b90, -0x905a);           /* call 0x10076b90 */
    II(0x1007fbea, 0x1)   cwde();                               /* cwde */
    II(0x1007fbeb, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x1007fbee, 0x2)   jzd(0x1007fc32, 0x42);                /* jz 0x1007fc32 */
    II(0x1007fbf0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007fbf3, 0x3)   mov(edx, memd_a32(ds, eax + 0x1a));   /* mov edx, [eax+0x1a] */
    II(0x1007fbf6, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1007fbf9, 0x5)   mov(eax, memd_a32(ds, 0x101c8170));   /* mov eax, [0x101c8170] */
    II(0x1007fbfe, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007fc01, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x1007fc04, 0x3)   mov(eax, memd_a32(ss, ebp - 0x10));   /* mov eax, [ebp-0x10] */
    II(0x1007fc07, 0x3)   mov(eax, memd_a32(ds, eax + 0x18));   /* mov eax, [eax+0x18] */
    II(0x1007fc0a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007fc0d, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1007fc0f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007fc12, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x1007fc15, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007fc18, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1007fc1e, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a3)); /* mov eax, [eax+0x101ca6a3] */
    II(0x1007fc24, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1007fc26, 0x2)   mov(al, memb_a32(ds, eax));           /* mov al, [eax] */
    II(0x1007fc28, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1007fc2d, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x1007fc30, 0x2)   jzd(0x1007fc34, 0x2);                 /* jz 0x1007fc34 */
l_0x1007fc32:
    II(0x1007fc32, 0x2)   jmpd(0x1007fc64, 0x30);               /* jmp 0x1007fc64 */
l_0x1007fc34:
    II(0x1007fc34, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x1007fc37, 0x3)   mov(edx, memd_a32(ds, eax + 0x15));   /* mov edx, [eax+0x15] */
    II(0x1007fc3a, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1007fc3d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x1007fc40, 0x3)   mov(eax, memd_a32(ds, eax + 0x15));   /* mov eax, [eax+0x15] */
    II(0x1007fc43, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007fc46, 0x3)   imul(edx, eax);                       /* imul edx, eax */
    II(0x1007fc49, 0x2)   mov(ebx, edx);                        /* mov ebx, edx */
    II(0x1007fc4b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1007fc4e, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fc51, 0x5)   calld(0x100763d4, -0x9882);           /* call 0x100763d4 */
    II(0x1007fc56, 0x5)   calld(0x10070d01, -0xef5a);           /* call 0x10070d01 */
    II(0x1007fc5b, 0x1)   cwde();                               /* cwde */
    II(0x1007fc5c, 0x2)   cmp(eax, ebx);                        /* cmp eax, ebx */
    II(0x1007fc5e, 0x6)   jled(0x1007fd15, 0xb1);               /* jle dword 0x1007fd15 */
l_0x1007fc64:
    II(0x1007fc64, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x1007fc67, 0x3)   mov(eax, memd_a32(ds, eax + 0xa));    /* mov eax, [eax+0xa] */
    II(0x1007fc6a, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1007fc6d, 0x3)   shl(eax, 0x2);                        /* shl eax, 0x2 */
    II(0x1007fc70, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1007fc72, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fc75, 0x5)   calld(0x100763a0, -0x98da);           /* call 0x100763a0 */
    II(0x1007fc7a, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007fc7c, 0x3)   mov(dl, memb_a32(ds, eax + 0x4d));    /* mov dl, [eax+0x4d] */
    II(0x1007fc7f, 0x2)   add(edx, ebx);                        /* add edx, ebx */
    II(0x1007fc81, 0x3)   imul(edx, edx, 0xc);                  /* imul edx, edx, 0xc */
    II(0x1007fc84, 0x3)   mov(eax, memd_a32(ss, ebp - 0x50));   /* mov eax, [ebp-0x50] */
    II(0x1007fc87, 0x3)   mov(ebx, memd_a32(ds, eax + 0x6));    /* mov ebx, [eax+0x6] */
    II(0x1007fc8a, 0x3)   sar(ebx, 0x10);                       /* sar ebx, 0x10 */
    II(0x1007fc8d, 0x2)   mov(eax, edx);                        /* mov eax, edx */
    II(0x1007fc8f, 0x3)   sar(edx, 0x1f);                       /* sar edx, 0x1f */
    II(0x1007fc92, 0x2)   idiv(ebx);                            /* idiv ebx */
    II(0x1007fc94, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
    II(0x1007fc97, 0x4)   cmp(memd_a32(ss, ebp - 0x40), 0);     /* cmp dword [ebp-0x40], 0x0 */
    II(0x1007fc9b, 0x2)   jzd(0x1007fca6, 0x9);                 /* jz 0x1007fca6 */
    II(0x1007fc9d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x1007fca0, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x58));    /* cmp ax, [ebp-0x58] */
    II(0x1007fca4, 0x2)   jld(0x1007fca8, 0x2);                 /* jl 0x1007fca8 */
l_0x1007fca6:
    II(0x1007fca6, 0x2)   jmpd(0x1007fcb7, 0xf);                /* jmp 0x1007fcb7 */
l_0x1007fca8:
    II(0x1007fca8, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1007fcab, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x1007fcae, 0x5)   calld(0x10152a52, 0xd2d9f);           /* call 0x10152a52 */
    II(0x1007fcb3, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007fcb5, 0x2)   jzd(0x1007fcb9, 0x2);                 /* jz 0x1007fcb9 */
l_0x1007fcb7:
    II(0x1007fcb7, 0x2)   jmpd(0x1007fcbf, 0x6);                /* jmp 0x1007fcbf */
l_0x1007fcb9:
    II(0x1007fcb9, 0x3)   mov(eax, memd_a32(ss, ebp - 0x58));   /* mov eax, [ebp-0x58] */
    II(0x1007fcbc, 0x3)   mov(memd_a32(ss, ebp - 0x54), eax);   /* mov [ebp-0x54], eax */
l_0x1007fcbf:
    II(0x1007fcbf, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1007fcc2, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fcc5, 0x5)   calld(0x100763a0, -0x992a);           /* call 0x100763a0 */
    II(0x1007fcca, 0x5)   calld(0x10152a52, 0xd2d83);           /* call 0x10152a52 */
    II(0x1007fccf, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007fcd1, 0x2)   jzd(0x1007fcd9, 0x6);                 /* jz 0x1007fcd9 */
    II(0x1007fcd3, 0x3)   mov(eax, memd_a32(ss, ebp - 0xc));    /* mov eax, [ebp-0xc] */
    II(0x1007fcd6, 0x3)   inc(memd_a32(ss, ebp - 0xc));         /* inc dword [ebp-0xc] */
l_0x1007fcd9:
    II(0x1007fcd9, 0x4)   cmp(memd_a32(ss, ebp - 0x40), 0);     /* cmp dword [ebp-0x40], 0x0 */
    II(0x1007fcdd, 0x2)   jzd(0x1007fce8, 0x9);                 /* jz 0x1007fce8 */
    II(0x1007fcdf, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x1007fce2, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x58));    /* cmp ax, [ebp-0x58] */
    II(0x1007fce6, 0x2)   jled(0x1007fcea, 0x2);                /* jle 0x1007fcea */
l_0x1007fce8:
    II(0x1007fce8, 0x2)   jmpd(0x1007fd04, 0x1a);               /* jmp 0x1007fd04 */
l_0x1007fcea:
    II(0x1007fcea, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x1007fced, 0x4)   cmp(ax, memw_a32(ss, ebp - 0x58));    /* cmp ax, [ebp-0x58] */
    II(0x1007fcf1, 0x2)   jnzd(0x1007fd02, 0xf);                /* jnz 0x1007fd02 */
    II(0x1007fcf3, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1007fcf6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x1007fcf9, 0x5)   calld(0x10152a52, 0xd2d54);           /* call 0x10152a52 */
    II(0x1007fcfe, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007fd00, 0x2)   jzd(0x1007fd04, 0x2);                 /* jz 0x1007fd04 */
l_0x1007fd02:
    II(0x1007fd02, 0x2)   jmpd(0x1007fd15, 0x11);               /* jmp 0x1007fd15 */
l_0x1007fd04:
    II(0x1007fd04, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fd07, 0x5)   calld(0x100763d4, -0x9938);           /* call 0x100763d4 */
    II(0x1007fd0c, 0x3)   mov(memd_a32(ss, ebp - 0x40), eax);   /* mov [ebp-0x40], eax */
    II(0x1007fd0f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x54));   /* mov eax, [ebp-0x54] */
    II(0x1007fd12, 0x3)   mov(memd_a32(ss, ebp - 0x58), eax);   /* mov [ebp-0x58], eax */
l_0x1007fd15:
    II(0x1007fd15, 0x5)   jmpd(0x1007fade, -0x23c);             /* jmp 0x1007fade */
l_0x1007fd1a:
    II(0x1007fd1a, 0x4)   cmp(memd_a32(ss, ebp - 0x40), 0);     /* cmp dword [ebp-0x40], 0x0 */
    II(0x1007fd1e, 0x6)   jnzd(0x1007fec9, 0x1a5);              /* jnz dword 0x1007fec9 */
    II(0x1007fd24, 0x4)   cmp(memb_a32(ss, ebp - 0x38), 0);     /* cmp byte [ebp-0x38], 0x0 */
    II(0x1007fd28, 0x6)   jnzd(0x1007feb2, 0x184);              /* jnz dword 0x1007feb2 */
    II(0x1007fd2e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007fd31, 0x3)   add(eax, 0x22);                       /* add eax, 0x22 */
    II(0x1007fd34, 0x5)   calld(0x10076338, -0x9a01);           /* call 0x10076338 */
    II(0x1007fd39, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x1007fd3c, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007fd3e, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1007fd40, 0x5)   calld(0x1007643c, -0x9909);           /* call 0x1007643c */
    II(0x1007fd45, 0x2)   jmpd(0x1007fd4f, 0x8);                /* jmp 0x1007fd4f */
l_0x1007fd47:
    II(0x1007fd47, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fd4a, 0x5)   calld(0x10076bf8, -0x9157);           /* call 0x10076bf8 */
l_0x1007fd4f:
    II(0x1007fd4f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007fd51, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fd54, 0x5)   calld(0x1013ad71, 0xbb018);           /* call 0x1013ad71 */
    II(0x1007fd59, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007fd5b, 0x6)   jzd(0x1007fdf0, 0x8f);                /* jz dword 0x1007fdf0 */
    II(0x1007fd61, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x1007fd66, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fd69, 0x5)   calld(0x100763d4, -0x999a);           /* call 0x100763d4 */
    II(0x1007fd6e, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x4));    /* mov ecx, [ebp-0x4] */
    II(0x1007fd71, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007fd73, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x1007fd75, 0x5)   calld(0x100a346a, 0x236f0);           /* call 0x100a346a */
    II(0x1007fd7a, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007fd7c, 0x2)   jzd(0x1007fdeb, 0x6d);                /* jz 0x1007fdeb */
    II(0x1007fd7e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007fd81, 0x5)   calld(0x1008ad28, 0xafa2);            /* call 0x1008ad28 */
    II(0x1007fd86, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007fd88, 0x2)   jnzd(0x1007fddc, 0x52);               /* jnz 0x1007fddc */
    II(0x1007fd8a, 0x5)   calld(0x1008a7bc, 0xaa2d);            /* call 0x1008a7bc */
    II(0x1007fd8f, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1007fd94, 0x3)   mov(memd_a32(ss, ebp - 0x5c), eax);   /* mov [ebp-0x5c], eax */
    II(0x1007fd97, 0x5)   mov(eax, 0xa);                        /* mov eax, 0xa */
    II(0x1007fd9c, 0x5)   calld(sys_new, 0xe605f);              /* call 0x10165e00 */
    II(0x1007fda1, 0x3)   mov(memd_a32(ss, ebp - 0x60), eax);   /* mov [ebp-0x60], eax */
//    II(0x1007fda4, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x1007fda7, 0x3)   mov(memd_a32(ss, ebp - 0x64), eax);   /* mov [ebp-0x64], eax */
    II(0x1007fdaa, 0x4)   cmp(memd_a32(ss, ebp - 0x64), 0);     /* cmp dword [ebp-0x64], 0x0 */
    II(0x1007fdae, 0x2)   jzd(0x1007fdc6, 0x16);                /* jz 0x1007fdc6 */
    II(0x1007fdb0, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1007fdb3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x60));   /* mov eax, [ebp-0x60] */
    II(0x1007fdb6, 0x5)   calld(my_ctor_c11, 0x23b0e);          /* call 0x100a38c9 */
    II(0x1007fdbb, 0x3)   mov(memd_a32(ss, ebp - 0x68), eax);   /* mov [ebp-0x68], eax */
//    II(0x1007fdbe, 0x3)   mov(eax, memd_a32(ss, ebp - 0x68));   /* mov eax, [ebp-0x68] */
    II(0x1007fdc1, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
    II(0x1007fdc4, 0x2)   jmpd(0x1007fdcc, 0x6);                /* jmp 0x1007fdcc */
l_0x1007fdc6:
    II(0x1007fdc6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x64));   /* mov eax, [ebp-0x64] */
    II(0x1007fdc9, 0x3)   mov(memd_a32(ss, ebp - 0x6c), eax);   /* mov [ebp-0x6c], eax */
l_0x1007fdcc:
    II(0x1007fdcc, 0x3)   mov(edx, memd_a32(ss, ebp - 0x6c));   /* mov edx, [ebp-0x6c] */
    II(0x1007fdcf, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x1007fdd4, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x5c));   /* mov ebx, [ebp-0x5c] */
    II(0x1007fdd7, 0x5)   calld(0x100a4db6, 0x24fda);           /* call 0x100a4db6 */
l_0x1007fddc:
    II(0x1007fddc, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007fdde, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fde1, 0x5)   calld(0x10075f6c, -0x9e7a);           /* call 0x10075f6c */
    II(0x1007fde6, 0x5)   jmpd(0x10080399, 0x5ae);              /* jmp 0x10080399 */
l_0x1007fdeb:
    II(0x1007fdeb, 0x5)   jmpd(0x1007fd47, -0xa9);              /* jmp 0x1007fd47 */
l_0x1007fdf0:
    II(0x1007fdf0, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007fdf3, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x1007fdf6, 0x5)   calld(0x10076338, -0x9ac3);           /* call 0x10076338 */
    II(0x1007fdfb, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x1007fdfe, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007fe00, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1007fe02, 0x5)   calld(0x1007643c, -0x99cb);           /* call 0x1007643c */
    II(0x1007fe07, 0x2)   jmpd(0x1007fe11, 0x8);                /* jmp 0x1007fe11 */
l_0x1007fe09:
    II(0x1007fe09, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fe0c, 0x5)   calld(0x10076bf8, -0x9219);           /* call 0x10076bf8 */
l_0x1007fe11:
    II(0x1007fe11, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007fe13, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fe16, 0x5)   calld(0x1013ad71, 0xbaf56);           /* call 0x1013ad71 */
    II(0x1007fe1b, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007fe1d, 0x6)   jzd(0x1007feb2, 0x8f);                /* jz dword 0x1007feb2 */
    II(0x1007fe23, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x1007fe28, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fe2b, 0x5)   calld(0x100763d4, -0x9a5c);           /* call 0x100763d4 */
    II(0x1007fe30, 0x3)   mov(ecx, memd_a32(ss, ebp - 0x4));    /* mov ecx, [ebp-0x4] */
    II(0x1007fe33, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007fe35, 0x2)   mov(eax, ecx);                        /* mov eax, ecx */
    II(0x1007fe37, 0x5)   calld(0x100a346a, 0x2362e);           /* call 0x100a346a */
    II(0x1007fe3c, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007fe3e, 0x2)   jzd(0x1007fead, 0x6d);                /* jz 0x1007fead */
    II(0x1007fe40, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007fe43, 0x5)   calld(0x1008ad28, 0xaee0);            /* call 0x1008ad28 */
    II(0x1007fe48, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007fe4a, 0x2)   jnzd(0x1007fe9e, 0x52);               /* jnz 0x1007fe9e */
    II(0x1007fe4c, 0x5)   calld(0x1008a7bc, 0xa96b);            /* call 0x1008a7bc */
    II(0x1007fe51, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1007fe56, 0x3)   mov(memd_a32(ss, ebp - 0x70), eax);   /* mov [ebp-0x70], eax */
    II(0x1007fe59, 0x5)   mov(eax, 0xa);                        /* mov eax, 0xa */
    II(0x1007fe5e, 0x5)   calld(sys_new, 0xe5f9d);              /* call 0x10165e00 */
    II(0x1007fe63, 0x3)   mov(memd_a32(ss, ebp - 0x74), eax);   /* mov [ebp-0x74], eax */
//    II(0x1007fe66, 0x3)   mov(eax, memd_a32(ss, ebp - 0x74));   /* mov eax, [ebp-0x74] */
    II(0x1007fe69, 0x3)   mov(memd_a32(ss, ebp - 0x78), eax);   /* mov [ebp-0x78], eax */
    II(0x1007fe6c, 0x4)   cmp(memd_a32(ss, ebp - 0x78), 0);     /* cmp dword [ebp-0x78], 0x0 */
    II(0x1007fe70, 0x2)   jzd(0x1007fe88, 0x16);                /* jz 0x1007fe88 */
    II(0x1007fe72, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1007fe75, 0x3)   mov(eax, memd_a32(ss, ebp - 0x74));   /* mov eax, [ebp-0x74] */
    II(0x1007fe78, 0x5)   calld(my_ctor_c11, 0x23a4c);          /* call 0x100a38c9 */
    II(0x1007fe7d, 0x3)   mov(memd_a32(ss, ebp - 0x7c), eax);   /* mov [ebp-0x7c], eax */
//    II(0x1007fe80, 0x3)   mov(eax, memd_a32(ss, ebp - 0x7c));   /* mov eax, [ebp-0x7c] */
    II(0x1007fe83, 0x3)   mov(memd_a32(ss, ebp - 0x80), eax);   /* mov [ebp-0x80], eax */
    II(0x1007fe86, 0x2)   jmpd(0x1007fe8e, 0x6);                /* jmp 0x1007fe8e */
l_0x1007fe88:
    II(0x1007fe88, 0x3)   mov(eax, memd_a32(ss, ebp - 0x78));   /* mov eax, [ebp-0x78] */
    II(0x1007fe8b, 0x3)   mov(memd_a32(ss, ebp - 0x80), eax);   /* mov [ebp-0x80], eax */
l_0x1007fe8e:
    II(0x1007fe8e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x80));   /* mov edx, [ebp-0x80] */
    II(0x1007fe91, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x1007fe96, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x70));   /* mov ebx, [ebp-0x70] */
    II(0x1007fe99, 0x5)   calld(0x100a4db6, 0x24f18);           /* call 0x100a4db6 */
l_0x1007fe9e:
    II(0x1007fe9e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007fea0, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fea3, 0x5)   calld(0x10075f6c, -0x9f3c);           /* call 0x10075f6c */
    II(0x1007fea8, 0x5)   jmpd(0x10080399, 0x4ec);              /* jmp 0x10080399 */
l_0x1007fead:
    II(0x1007fead, 0x5)   jmpd(0x1007fe09, -0xa9);              /* jmp 0x1007fe09 */
l_0x1007feb2:
    II(0x1007feb2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007feb5, 0x5)   calld(0x1007f659, -0x861);            /* call 0x1007f659 */
    II(0x1007feba, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007febc, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007febf, 0x5)   calld(0x10075f6c, -0x9f58);           /* call 0x10075f6c */
    II(0x1007fec4, 0x5)   jmpd(0x10080399, 0x4d0);              /* jmp 0x10080399 */
l_0x1007fec9:
    II(0x1007fec9, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1007fecc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x1007fecf, 0x5)   calld(0x10152a52, 0xd2b7e);           /* call 0x10152a52 */
    II(0x1007fed4, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007fed6, 0x2)   jnzd(0x1007fee7, 0xf);                /* jnz 0x1007fee7 */
    II(0x1007fed8, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007feda, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1007fedd, 0x5)   calld(0x10075f6c, -0x9f76);           /* call 0x10075f6c */
    II(0x1007fee2, 0x5)   jmpd(0x10080399, 0x4b2);              /* jmp 0x10080399 */
l_0x1007fee7:
    II(0x1007fee7, 0x6)   lea(eax, ebp - 0x84);                 /* lea eax, [ebp+0xffffff7c] */
    II(0x1007feed, 0x5)   calld(my_ctor_0x101b4184, -0x9402);   /* call 0x10076af0 */
    II(0x1007fef2, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x1007fef5, 0x5)   calld(0x1007623c, -0x9cbe);           /* call 0x1007623c */
    II(0x1007fefa, 0x4)   cmp(memb_a32(ds, eax + 0x16), 0);     /* cmp byte [eax+0x16], 0x0 */
    II(0x1007fefe, 0x2)   jzd(0x1007ff0f, 0xf);                 /* jz 0x1007ff0f */
    II(0x1007ff00, 0x5)   mov(eax, 0x4c);                       /* mov eax, 0x4c */
    II(0x1007ff05, 0x5)   calld(0x10075fdc, -0x9f2e);           /* call 0x10075fdc */
    II(0x1007ff0a, 0x3)   cmp(eax, 0x2);                        /* cmp eax, 0x2 */
    II(0x1007ff0d, 0x2)   jged(0x1007ff11, 0x2);                /* jge 0x1007ff11 */
l_0x1007ff0f:
    II(0x1007ff0f, 0x2)   jmpd(0x1007ff17, 0x6);                /* jmp 0x1007ff17 */
l_0x1007ff11:
    II(0x1007ff11, 0x4)   mov(memb_a32(ss, ebp - 0x3c), 0x1);   /* mov byte [ebp-0x3c], 0x1 */
    II(0x1007ff15, 0x2)   jmpd(0x1007ff1b, 0x4);                /* jmp 0x1007ff1b */
l_0x1007ff17:
    II(0x1007ff17, 0x4)   mov(memb_a32(ss, ebp - 0x3c), 0x2);   /* mov byte [ebp-0x3c], 0x2 */
l_0x1007ff1b:
    II(0x1007ff1b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1007ff1e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x1007ff21, 0x5)   calld(0x100778a5, -0x8681);           /* call 0x100778a5 */
    II(0x1007ff26, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007ff28, 0x2)   jzd(0x1007ff4e, 0x24);                /* jz 0x1007ff4e */
    II(0x1007ff2a, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x3c)); /* movsx eax, byte [ebp-0x3c] */
    II(0x1007ff2e, 0x1)   pushd(eax);                           /* push eax */
    II(0x1007ff2f, 0x6)   lea(ecx, ebp - 0x88);                 /* lea ecx, [ebp+0xffffff78] */
    II(0x1007ff35, 0x6)   lea(ebx, ebp - 0x84);                 /* lea ebx, [ebp+0xffffff7c] */
    II(0x1007ff3b, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1007ff3e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x1007ff41, 0x5)   calld(0x100770e1, -0x8e65);           /* call 0x100770e1 */
    II(0x1007ff46, 0x3)   mov(memb_a32(ss, ebp - 0x34), al);    /* mov [ebp-0x34], al */
    II(0x1007ff49, 0x5)   jmpd(0x1007ffe6, 0x98);               /* jmp 0x1007ffe6 */
l_0x1007ff4e:
    II(0x1007ff4e, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x1007ff51, 0x5)   calld(0x1007623c, -0x9d1a);           /* call 0x1007623c */
    II(0x1007ff56, 0x4)   mov(ax, memw_a32(ds, eax + 0x12));    /* mov ax, [eax+0x12] */
    II(0x1007ff5a, 0x6)   mov(memd_a32(ss, ebp - 0x8c), eax);   /* mov [ebp+0xffffff74], eax */
    II(0x1007ff60, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007ff63, 0x3)   mov(edx, memd_a32(ds, eax + 0x7));    /* mov edx, [eax+0x7] */
    II(0x1007ff66, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1007ff69, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007ff6c, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x1007ff6f, 0x5)   calld(0x1008a228, 0xa2b4);            /* call 0x1008a228 */
    II(0x1007ff74, 0x5)   calld(0x1008a370, 0xa3f7);            /* call 0x1008a370 */
    II(0x1007ff79, 0x5)   calld(0x10076074, -0x9f0a);           /* call 0x10076074 */
    II(0x1007ff7e, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007ff80, 0x2)   jnzd(0x1007ffa2, 0x20);               /* jnz 0x1007ffa2 */
    II(0x1007ff82, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x1007ff85, 0x5)   calld(0x1007623c, -0x9d4e);           /* call 0x1007623c */
    II(0x1007ff8a, 0x3)   mov(edx, memd_a32(ds, eax + 0x15));   /* mov edx, [eax+0x15] */
    II(0x1007ff8d, 0x3)   sar(edx, 0x10);                       /* sar edx, 0x10 */
    II(0x1007ff90, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x8c)); /* movsx eax, word [ebp+0xffffff74] */
    II(0x1007ff97, 0x5)   calld(my_min, 0x97e8);                /* call 0x10089784 */
    II(0x1007ff9c, 0x6)   mov(memd_a32(ss, ebp - 0x8c), eax);   /* mov [ebp+0xffffff74], eax */
l_0x1007ffa2:
    II(0x1007ffa2, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x1007ffa7, 0x1)   pushd(eax);                           /* push eax */
    II(0x1007ffa8, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x8c)); /* movsx eax, word [ebp+0xffffff74] */
    II(0x1007ffaf, 0x1)   pushd(eax);                           /* push eax */
    II(0x1007ffb0, 0x4)   movsx(eax, memb_a32(ss, ebp - 0x3c)); /* movsx eax, byte [ebp-0x3c] */
    II(0x1007ffb4, 0x1)   pushd(eax);                           /* push eax */
    II(0x1007ffb5, 0x6)   lea(ecx, ebp - 0x88);                 /* lea ecx, [ebp+0xffffff78] */
    II(0x1007ffbb, 0x6)   lea(ebx, ebp - 0x84);                 /* lea ebx, [ebp+0xffffff7c] */
    II(0x1007ffc1, 0x6)   lea(edx, ebp - 0x90);                 /* lea edx, [ebp+0xffffff70] */
    II(0x1007ffc7, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007ffca, 0x3)   add(eax, 0x14);                       /* add eax, 0x14 */
    II(0x1007ffcd, 0x5)   calld(0x1008a228, 0xa256);            /* call 0x1008a228 */
    II(0x1007ffd2, 0x5)   calld(0x100b8e63, 0x38e8c);           /* call 0x100b8e63 */
    II(0x1007ffd7, 0x3)   mov(esi, memd_a32(ss, ebp - 0x40));   /* mov esi, [ebp-0x40] */
    II(0x1007ffda, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007ffdc, 0x2)   mov(eax, esi);                        /* mov eax, esi */
    II(0x1007ffde, 0x5)   calld(0x10077381, -0x8c62);           /* call 0x10077381 */
    II(0x1007ffe3, 0x3)   mov(memb_a32(ss, ebp - 0x34), al);    /* mov [ebp-0x34], al */
l_0x1007ffe6:
    II(0x1007ffe6, 0x4)   cmp(memb_a32(ss, ebp - 0x34), 0);     /* cmp byte [ebp-0x34], 0x0 */
    II(0x1007ffea, 0x2)   jzd(0x1007fffb, 0xf);                 /* jz 0x1007fffb */
    II(0x1007ffec, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1007ffef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x1007fff2, 0x5)   calld(0x10076f5d, -0x909a);           /* call 0x10076f5d */
    II(0x1007fff7, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007fff9, 0x2)   jzd(0x10080000, 0x5);                 /* jz 0x10080000 */
l_0x1007fffb:
    II(0x1007fffb, 0x5)   jmpd(0x100801ad, 0x1ad);              /* jmp 0x100801ad */
l_0x10080000:
    II(0x10080000, 0xa)   mov(memd_a32(ss, ebp - 0x94), 0);     /* mov dword [ebp+0xffffff6c], 0x0 */
    II(0x1008000a, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008000d, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x10080010, 0x5)   calld(0x10076338, -0x9cdd);           /* call 0x10076338 */
    II(0x10080015, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x10080018, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1008001a, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x1008001c, 0x5)   calld(0x1007643c, -0x9be5);           /* call 0x1007643c */
    II(0x10080021, 0x2)   jmpd(0x1008002b, 0x8);                /* jmp 0x1008002b */
l_0x10080023:
    II(0x10080023, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10080026, 0x5)   calld(0x10076bf8, -0x9433);           /* call 0x10076bf8 */
l_0x1008002b:
    II(0x1008002b, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008002d, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10080030, 0x5)   calld(0x1013ad71, 0xbad3c);           /* call 0x1013ad71 */
    II(0x10080035, 0x2)   test(al, al);                         /* test al, al */
    II(0x10080037, 0x2)   jzd(0x10080061, 0x28);                /* jz 0x10080061 */
    II(0x10080039, 0x4)   movsx(ebx, memb_a32(ss, ebp - 0x3c)); /* movsx ebx, byte [ebp-0x3c] */
    II(0x1008003d, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x10080040, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10080043, 0x5)   calld(0x100763d4, -0x9c74);           /* call 0x100763d4 */
    II(0x10080048, 0x5)   calld(0x100c0532, 0x404e5);           /* call 0x100c0532 */
    II(0x1008004d, 0x6)   mov(memd_a32(ss, ebp - 0x98), eax);   /* mov [ebp+0xffffff68], eax */
//    II(0x10080053, 0x6)   mov(eax, memd_a32(ss, ebp - 0x98));   /* mov eax, [ebp+0xffffff68] */
    II(0x10080059, 0x6)   add(memd_a32(ss, ebp - 0x94), eax);   /* add [ebp+0xffffff6c], eax */
    II(0x1008005f, 0x2)   jmpd(0x10080023, -0x3e);              /* jmp 0x10080023 */
l_0x10080061:
    II(0x10080061, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10080066, 0x1)   pushd(eax);                           /* push eax */
    II(0x10080067, 0x4)   movsx(ecx, memb_a32(ss, ebp - 0x3c)); /* movsx ecx, byte [ebp-0x3c] */
    II(0x1008006b, 0x6)   lea(edx, ebp - 0x84);                 /* lea edx, [ebp+0xffffff7c] */
    II(0x10080071, 0x6)   lea(eax, ebp - 0x9c);                 /* lea eax, [ebp+0xffffff64] */
    II(0x10080077, 0x5)   calld(0x10075e64, -0xa218);           /* call 0x10075e64 */
    II(0x1008007c, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1008007e, 0x3)   mov(edx, memd_a32(ss, ebp - 0x40));   /* mov edx, [ebp-0x40] */
    II(0x10080081, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10080084, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10080087, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x1008008a, 0x6)   imul(eax, eax, 0xc5);                 /* imul eax, eax, 0xc5 */
    II(0x10080090, 0x5)   mov(esi, 0x101c31c4);                 /* mov esi, 0x101c31c4 */
    II(0x10080095, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x10080097, 0x5)   calld(0x100c20df, 0x42043);           /* call 0x100c20df */
    II(0x1008009c, 0x6)   mov(memd_a32(ss, ebp - 0x88), eax);   /* mov [ebp+0xffffff78], eax */
    II(0x100800a2, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x100800a7, 0x1)   pushd(eax);                           /* push eax */
    II(0x100800a8, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x94)); /* movsx eax, word [ebp+0xffffff6c] */
    II(0x100800af, 0x1)   pushd(eax);                           /* push eax */
    II(0x100800b0, 0x4)   movsx(ecx, memb_a32(ss, ebp - 0x3c)); /* movsx ecx, byte [ebp-0x3c] */
    II(0x100800b4, 0x7)   movsx(ebx, memw_a32(ss, ebp - 0x88)); /* movsx ebx, word [ebp+0xffffff78] */
    II(0x100800bb, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x100800be, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100800c1, 0x5)   calld(0x10077ff6, -0x80d0);           /* call 0x10077ff6 */
    II(0x100800c6, 0x2)   test(al, al);                         /* test al, al */
    II(0x100800c8, 0x6)   jnzd(0x100801ad, 0xdf);               /* jnz dword 0x100801ad */
    II(0x100800ce, 0x4)   mov(memb_a32(ss, ebp - 0x34), 0);     /* mov byte [ebp-0x34], 0x0 */
    II(0x100800d2, 0x4)   cmp(memb_a32(ss, ebp - 0x3c), 0x1);   /* cmp byte [ebp-0x3c], 0x1 */
    II(0x100800d6, 0x6)   jnzd(0x100801ad, 0xd1);               /* jnz dword 0x100801ad */
    II(0x100800dc, 0xa)   mov(memd_a32(ss, ebp - 0x94), 0);     /* mov dword [ebp+0xffffff6c], 0x0 */
    II(0x100800e6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100800e9, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x100800ec, 0x5)   calld(0x10076338, -0x9db9);           /* call 0x10076338 */
    II(0x100800f1, 0x3)   lea(ebx, ebp - 0x18);                 /* lea ebx, [ebp-0x18] */
    II(0x100800f4, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x100800f6, 0x2)   mov(eax, ebx);                        /* mov eax, ebx */
    II(0x100800f8, 0x5)   calld(0x1007643c, -0x9cc1);           /* call 0x1007643c */
    II(0x100800fd, 0x2)   jmpd(0x10080107, 0x8);                /* jmp 0x10080107 */
l_0x100800ff:
    II(0x100800ff, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10080102, 0x5)   calld(0x10076bf8, -0x950f);           /* call 0x10076bf8 */
l_0x10080107:
    II(0x10080107, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10080109, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x1008010c, 0x5)   calld(0x1013ad71, 0xbac60);           /* call 0x1013ad71 */
    II(0x10080111, 0x2)   test(al, al);                         /* test al, al */
    II(0x10080113, 0x2)   jzd(0x1008013e, 0x29);                /* jz 0x1008013e */
    II(0x10080115, 0x5)   mov(ebx, 0x2);                        /* mov ebx, 0x2 */
    II(0x1008011a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1008011d, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10080120, 0x5)   calld(0x100763d4, -0x9d51);           /* call 0x100763d4 */
    II(0x10080125, 0x5)   calld(0x100c0532, 0x40408);           /* call 0x100c0532 */
    II(0x1008012a, 0x6)   mov(memd_a32(ss, ebp - 0x98), eax);   /* mov [ebp+0xffffff68], eax */
//    II(0x10080130, 0x6)   mov(eax, memd_a32(ss, ebp - 0x98));   /* mov eax, [ebp+0xffffff68] */
    II(0x10080136, 0x6)   add(memd_a32(ss, ebp - 0x94), eax);   /* add [ebp+0xffffff6c], eax */
    II(0x1008013c, 0x2)   jmpd(0x100800ff, -0x3f);              /* jmp 0x100800ff */
l_0x1008013e:
    II(0x1008013e, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10080143, 0x1)   pushd(eax);                           /* push eax */
    II(0x10080144, 0x5)   mov(ecx, 0x2);                        /* mov ecx, 0x2 */
    II(0x10080149, 0x6)   lea(edx, ebp - 0x84);                 /* lea edx, [ebp+0xffffff7c] */
    II(0x1008014f, 0x6)   lea(eax, ebp - 0xa0);                 /* lea eax, [ebp+0xffffff60] */
    II(0x10080155, 0x5)   calld(0x10075e64, -0xa2f6);           /* call 0x10075e64 */
    II(0x1008015a, 0x2)   mov(ebx, eax);                        /* mov ebx, eax */
    II(0x1008015c, 0x3)   mov(edx, memd_a32(ss, ebp - 0x40));   /* mov edx, [ebp-0x40] */
    II(0x1008015f, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10080162, 0x3)   mov(eax, memd_a32(ds, eax + 0x7));    /* mov eax, [eax+0x7] */
    II(0x10080165, 0x3)   sar(eax, 0x10);                       /* sar eax, 0x10 */
    II(0x10080168, 0x6)   imul(eax, eax, 0xc5);                 /* imul eax, eax, 0xc5 */
    II(0x1008016e, 0x5)   mov(esi, 0x101c31c4);                 /* mov esi, 0x101c31c4 */
    II(0x10080173, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x10080175, 0x5)   calld(0x100c20df, 0x41f65);           /* call 0x100c20df */
    II(0x1008017a, 0x6)   mov(memd_a32(ss, ebp - 0x88), eax);   /* mov [ebp+0xffffff78], eax */
    II(0x10080180, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10080185, 0x1)   pushd(eax);                           /* push eax */
    II(0x10080186, 0x7)   movsx(eax, memw_a32(ss, ebp - 0x94)); /* movsx eax, word [ebp+0xffffff6c] */
    II(0x1008018d, 0x1)   pushd(eax);                           /* push eax */
    II(0x1008018e, 0x5)   mov(ecx, 0x2);                        /* mov ecx, 0x2 */
    II(0x10080193, 0x7)   movsx(ebx, memw_a32(ss, ebp - 0x88)); /* movsx ebx, word [ebp+0xffffff78] */
    II(0x1008019a, 0x3)   mov(edx, memd_a32(ss, ebp - 0x10));   /* mov edx, [ebp-0x10] */
    II(0x1008019d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x100801a0, 0x5)   calld(0x10077ff6, -0x81af);           /* call 0x10077ff6 */
    II(0x100801a5, 0x2)   test(al, al);                         /* test al, al */
    II(0x100801a7, 0x2)   jzd(0x100801ad, 0x4);                 /* jz 0x100801ad */
    II(0x100801a9, 0x4)   mov(memb_a32(ss, ebp - 0x34), 0x1);   /* mov byte [ebp-0x34], 0x1 */
l_0x100801ad:
    II(0x100801ad, 0x4)   cmp(memb_a32(ss, ebp - 0x34), 0);     /* cmp byte [ebp-0x34], 0x0 */
    II(0x100801b1, 0x6)   jnzd(0x1008026b, 0xb4);               /* jnz dword 0x1008026b */
    II(0x100801b7, 0x3)   mov(edx, memd_a32(ss, ebp - 0x40));   /* mov edx, [ebp-0x40] */
    II(0x100801ba, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100801bd, 0x3)   add(eax, 0x18);                       /* add eax, 0x18 */
    II(0x100801c0, 0x5)   calld(0x1008aab4, 0xa8ef);            /* call 0x1008aab4 */
    II(0x100801c5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x40));   /* mov edx, [ebp-0x40] */
    II(0x100801c8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100801cb, 0x3)   add(eax, 0x22);                       /* add eax, 0x22 */
    II(0x100801ce, 0x5)   calld(0x1008ab1c, 0xa949);            /* call 0x1008ab1c */
    II(0x100801d3, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100801d6, 0x5)   calld(0x1008ad28, 0xab4d);            /* call 0x1008ad28 */
    II(0x100801db, 0x2)   test(al, al);                         /* test al, al */
    II(0x100801dd, 0x6)   jnzd(0x1008025c, 0x79);               /* jnz dword 0x1008025c */
    II(0x100801e3, 0x5)   calld(0x1008a7bc, 0xa5d4);            /* call 0x1008a7bc */
    II(0x100801e8, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x100801ed, 0x6)   mov(memd_a32(ss, ebp - 0xa4), eax);   /* mov [ebp+0xffffff5c], eax */
    II(0x100801f3, 0x5)   mov(eax, 0xa);                        /* mov eax, 0xa */
    II(0x100801f8, 0x5)   calld(sys_new, 0xe5c03);              /* call 0x10165e00 */
    II(0x100801fd, 0x6)   mov(memd_a32(ss, ebp - 0xa8), eax);   /* mov [ebp+0xffffff58], eax */
//    II(0x10080203, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa8));   /* mov eax, [ebp+0xffffff58] */
    II(0x10080209, 0x6)   mov(memd_a32(ss, ebp - 0xac), eax);   /* mov [ebp+0xffffff54], eax */
    II(0x1008020f, 0x7)   cmp(memd_a32(ss, ebp - 0xac), 0);     /* cmp dword [ebp+0xffffff54], 0x0 */
    II(0x10080216, 0x2)   jzd(0x1008023a, 0x22);                /* jz 0x1008023a */
    II(0x10080218, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1008021b, 0x6)   mov(eax, memd_a32(ss, ebp - 0xa8));   /* mov eax, [ebp+0xffffff58] */
    II(0x10080221, 0x5)   calld(my_ctor_c11, 0x236a3);          /* call 0x100a38c9 */
    II(0x10080226, 0x6)   mov(memd_a32(ss, ebp - 0xb0), eax);   /* mov [ebp+0xffffff50], eax */
//    II(0x1008022c, 0x6)   mov(eax, memd_a32(ss, ebp - 0xb0));   /* mov eax, [ebp+0xffffff50] */
    II(0x10080232, 0x6)   mov(memd_a32(ss, ebp - 0xb4), eax);   /* mov [ebp+0xffffff4c], eax */
    II(0x10080238, 0x2)   jmpd(0x10080246, 0xc);                /* jmp 0x10080246 */
l_0x1008023a:
    II(0x1008023a, 0x6)   mov(eax, memd_a32(ss, ebp - 0xac));   /* mov eax, [ebp+0xffffff54] */
    II(0x10080240, 0x6)   mov(memd_a32(ss, ebp - 0xb4), eax);   /* mov [ebp+0xffffff4c], eax */
l_0x10080246:
    II(0x10080246, 0x6)   mov(edx, memd_a32(ss, ebp - 0xb4));   /* mov edx, [ebp+0xffffff4c] */
    II(0x1008024c, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x10080251, 0x6)   mov(ebx, memd_a32(ss, ebp - 0xa4));   /* mov ebx, [ebp+0xffffff5c] */
    II(0x10080257, 0x5)   calld(0x100a4db6, 0x24b5a);           /* call 0x100a4db6 */
l_0x1008025c:
    II(0x1008025c, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1008025e, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10080261, 0x5)   calld(0x10075f6c, -0xa2fa);           /* call 0x10075f6c */
    II(0x10080266, 0x5)   jmpd(0x10080399, 0x12e);              /* jmp 0x10080399 */
l_0x1008026b:
    II(0x1008026b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x1008026e, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x10080272, 0x7)   cmp(ax, memw_a32(ss, ebp - 0x84));    /* cmp ax, [ebp+0xffffff7c] */
    II(0x10080279, 0x2)   jnzd(0x1008028f, 0x14);               /* jnz 0x1008028f */
    II(0x1008027b, 0x3)   mov(eax, memd_a32(ss, ebp - 0x40));   /* mov eax, [ebp-0x40] */
    II(0x1008027e, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x10080282, 0x7)   cmp(ax, memw_a32(ss, ebp - 0x82));    /* cmp ax, [ebp+0xffffff7e] */
    II(0x10080289, 0x6)   jzd(0x1008038a, 0xfb);                /* jz dword 0x1008038a */
l_0x1008028f:
    II(0x1008028f, 0x5)   mov(eax, 0x49);                       /* mov eax, 0x49 */
    II(0x10080294, 0x5)   calld(sys_new, 0xe5b67);              /* call 0x10165e00 */
    II(0x10080299, 0x6)   mov(memd_a32(ss, ebp - 0xb8), eax);   /* mov [ebp+0xffffff48], eax */
//    II(0x1008029f, 0x6)   mov(eax, memd_a32(ss, ebp - 0xb8));   /* mov eax, [ebp+0xffffff48] */
    II(0x100802a5, 0x6)   mov(memd_a32(ss, ebp - 0xbc), eax);   /* mov [ebp+0xffffff44], eax */
    II(0x100802ab, 0x7)   cmp(memd_a32(ss, ebp - 0xbc), 0);     /* cmp dword [ebp+0xffffff44], 0x0 */
    II(0x100802b2, 0x2)   jzd(0x100802f6, 0x42);                /* jz 0x100802f6 */
    II(0x100802b4, 0x5)   mov(eax, 0x1007f603);                 /* mov eax, 0x1007f603 */
    II(0x100802b9, 0x1)   pushd(eax);                           /* push eax */
    II(0x100802ba, 0x6)   lea(edx, ebp - 0x84);                 /* lea edx, [ebp+0xffffff7c] */
    II(0x100802c0, 0x6)   lea(eax, ebp - 0xc0);                 /* lea eax, [ebp+0xffffff40] */
    II(0x100802c6, 0x5)   calld(0x10075e64, -0xa467);           /* call 0x10075e64 */
    II(0x100802cb, 0x1)   pushd(eax);                           /* push eax */
    II(0x100802cc, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x100802ce, 0x1)   pushd(eax);                           /* push eax */
    II(0x100802cf, 0x2)   xor_(ecx, ecx);                       /* xor ecx, ecx */
    II(0x100802d1, 0x3)   mov(ebx, memd_a32(ss, ebp - 0x4));    /* mov ebx, [ebp-0x4] */
    II(0x100802d4, 0x3)   mov(edx, memd_a32(ss, ebp - 0x40));   /* mov edx, [ebp-0x40] */
    II(0x100802d7, 0x6)   mov(eax, memd_a32(ss, ebp - 0xb8));   /* mov eax, [ebp+0xffffff48] */
    II(0x100802dd, 0x5)   calld(0x100ac220, 0x2bf3e);           /* call 0x100ac220 */
    II(0x100802e2, 0x6)   mov(memd_a32(ss, ebp - 0xc4), eax);   /* mov [ebp+0xffffff3c], eax */
//    II(0x100802e8, 0x6)   mov(eax, memd_a32(ss, ebp - 0xc4));   /* mov eax, [ebp+0xffffff3c] */
    II(0x100802ee, 0x6)   mov(memd_a32(ss, ebp - 0xc8), eax);   /* mov [ebp+0xffffff38], eax */
    II(0x100802f4, 0x2)   jmpd(0x10080302, 0xc);                /* jmp 0x10080302 */
l_0x100802f6:
    II(0x100802f6, 0x6)   mov(eax, memd_a32(ss, ebp - 0xbc));   /* mov eax, [ebp+0xffffff44] */
    II(0x100802fc, 0x6)   mov(memd_a32(ss, ebp - 0xc8), eax);   /* mov [ebp+0xffffff38], eax */
l_0x10080302:
    II(0x10080302, 0x6)   mov(edx, memd_a32(ss, ebp - 0xc8));   /* mov edx, [ebp+0xffffff38] */
    II(0x10080308, 0x6)   lea(eax, ebp - 0xcc);                 /* lea eax, [ebp+0xffffff34] */
    II(0x1008030e, 0x5)   calld(0x1008a5f0, 0xa2dd);            /* call 0x1008a5f0 */
    II(0x10080313, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10080318, 0x6)   lea(eax, ebp - 0xcc);                 /* lea eax, [ebp+0xffffff34] */
    II(0x1008031e, 0x5)   calld(0x1008a520, 0xa1fd);            /* call 0x1008a520 */
    II(0x10080323, 0x5)   calld(0x1008a674, 0xa34c);            /* call 0x1008a674 */
    II(0x10080328, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x1008032d, 0x6)   lea(eax, ebp - 0xcc);                 /* lea eax, [ebp+0xffffff34] */
    II(0x10080333, 0x5)   calld(0x1008a520, 0xa1e8);            /* call 0x1008a520 */
    II(0x10080338, 0x5)   calld(0x1008a6a4, 0xa367);            /* call 0x1008a6a4 */
    II(0x1008033d, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10080340, 0x4)   mov(memb_a32(ds, eax + 0x13), 0x1);   /* mov byte [eax+0x13], 0x1 */
    II(0x10080344, 0x6)   lea(eax, ebp - 0xcc);                 /* lea eax, [ebp+0xffffff34] */
    II(0x1008034a, 0x5)   calld(0x1008a57c, 0xa22d);            /* call 0x1008a57c */
    II(0x1008034f, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10080351, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x10080356, 0x5)   calld(0x100a4d50, 0x249f5);           /* call 0x100a4d50 */
    II(0x1008035b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0xc));  /* movsx eax, word [ebp-0xc] */
    II(0x1008035f, 0x3)   cmp(eax, 0x1);                        /* cmp eax, 0x1 */
    II(0x10080362, 0x2)   jled(0x10080371, 0xd);                /* jle 0x10080371 */
    II(0x10080364, 0x5)   mov(edx, 0x1);                        /* mov edx, 0x1 */
    II(0x10080369, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1008036c, 0x5)   calld(0x100a28ff, 0x2258e);           /* call 0x100a28ff */
l_0x10080371:
    II(0x10080371, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10080373, 0x6)   lea(eax, ebp - 0xcc);                 /* lea eax, [ebp+0xffffff34] */
    II(0x10080379, 0x5)   calld(0x10088d4c, 0x89ce);            /* call 0x10088d4c */
    II(0x1008037e, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10080380, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10080383, 0x5)   calld(0x10075f6c, -0xa41c);           /* call 0x10075f6c */
    II(0x10080388, 0x2)   jmpd(0x10080399, 0xf);                /* jmp 0x10080399 */
l_0x1008038a:
    II(0x1008038a, 0x5)   jmpd(0x1007faa6, -0x8e9);             /* jmp 0x1007faa6 */
l_0x1008038f:
    II(0x1008038f, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x10080391, 0x3)   lea(eax, ebp - 0x18);                 /* lea eax, [ebp-0x18] */
    II(0x10080394, 0x5)   calld(0x10075f6c, -0xa42d);           /* call 0x10075f6c */
l_0x10080399:
    II(0x10080399, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1008039b, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1008039c, 0x1)   popd(edi);                            /* pop edi */
    II(0x1008039d, 0x1)   popd(esi);                            /* pop esi */
    II(0x1008039e, 0x1)   popd(edx);                            /* pop edx */
    II(0x1008039f, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x100803a0, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x100803a1, 0x1)   retd();                               /* ret */
FUNC_END

