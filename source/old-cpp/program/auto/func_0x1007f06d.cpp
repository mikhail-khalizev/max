FUNC_BEGIN(0x1007f06d, 0xb1306204000009cc, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0xdb, 0x6c, 0xe, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0xe1, 0x74, 0xff, 0xff, 0xe8, 0x68, 0x36, 0xd, 0, 0x89, 0xc2, 0x8d, 0x45, 0xf4, 0xe8, 0xce, 0xbd, 0, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0xc5, 0xbc, 0xb, 0, 0x84, 0xc0, 0x74, 0x1b, 0x8d, 0x45, 0xf4, 0xe8, 0xc, 0xbd, 0, 0, 0x89, 0x45, 0xf8, 0x8b, 0x45, 0xf8, 0x8b, 0x50, 0x2, 0x8b, 0x45, 0xf8, 0xff, 0x52, 0x20, 0x3c, 0x30, 0x75, 0x2, 0xeb, 0xa, 0x8d, 0x45, 0xf4, 0xe8, 0x23, 0x7b, 0xff, 0xff, 0xeb, 0xcb, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x30, 0xbc, 0xb, 0, 0x84, 0xc0, 0x74, 0x15, 0x8b, 0x55, 0xfc, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0x13, 0xe8, 0x81, 0x74, 0xff, 0xff, 0xe8, 0xf5, 0x36, 0xd, 0, 0xeb, 0x1a, 0x31, 0xd2, 0x8b, 0x45, 0xfc, 0x83, 0xc0, 0xf, 0xe8, 0xdd, 0xbe, 0, 0, 0x8b, 0x55, 0xfc, 0xb8, 0x80, 0x31, 0x1c, 0x10, 0xe8, 0x13, 0x6d, 0x2, 0, 0x31, 0xd2, 0x8d, 0x45, 0xf4, 0xe8, 0x9e, 0x9a, 0, 0, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x1007f06d, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x1007f072, 0x5)   calld(sys_check_available_stack_size, 0xe6cdb); /* call 0x10165d52 */
    II(0x1007f077, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x1007f078, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1007f079, 0x1)   pushd(edx);                           /* push edx */
    II(0x1007f07a, 0x1)   pushd(esi);                           /* push esi */
    II(0x1007f07b, 0x1)   pushd(edi);                           /* push edi */
    II(0x1007f07c, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x1007f07d, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x1007f07f, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x1007f085, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
//    II(0x1007f088, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007f08b, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1007f08e, 0x5)   calld(0x10076574, -0x8b1f);           /* call 0x10076574 */
    II(0x1007f093, 0x5)   calld(0x10152700, 0xd3668);           /* call 0x10152700 */
    II(0x1007f098, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x1007f09a, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1007f09d, 0x5)   calld(0x1008ae70, 0xbdce);            /* call 0x1008ae70 */
l_0x1007f0a2:
    II(0x1007f0a2, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007f0a4, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1007f0a7, 0x5)   calld(0x1013ad71, 0xbbcc5);           /* call 0x1013ad71 */
    II(0x1007f0ac, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007f0ae, 0x2)   jzd(0x1007f0cb, 0x1b);                /* jz 0x1007f0cb */
    II(0x1007f0b0, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1007f0b3, 0x5)   calld(0x1008adc4, 0xbd0c);            /* call 0x1008adc4 */
    II(0x1007f0b8, 0x3)   mov(memd_a32(ss, ebp - 0x8), eax);    /* mov [ebp-0x8], eax */
//    II(0x1007f0bb, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007f0be, 0x3)   mov(edx, memd_a32(ds, eax + 0x2));    /* mov edx, [eax+0x2] */
//    II(0x1007f0c1, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007f0c4, 0x3)   calld_abs(memd_a32(ds, edx + 0x20));  /* call dword near [edx+0x20] */
    II(0x1007f0c7, 0x2)   cmp(al, 0x30);                        /* cmp al, 0x30 */
    II(0x1007f0c9, 0x2)   jnzd(0x1007f0cd, 0x2);                /* jnz 0x1007f0cd */
l_0x1007f0cb:
    II(0x1007f0cb, 0x2)   jmpd(0x1007f0d7, 0xa);                /* jmp 0x1007f0d7 */
l_0x1007f0cd:
    II(0x1007f0cd, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1007f0d0, 0x5)   calld(0x10076bf8, -0x84dd);           /* call 0x10076bf8 */
    II(0x1007f0d5, 0x2)   jmpd(0x1007f0a2, -0x35);              /* jmp 0x1007f0a2 */
l_0x1007f0d7:
    II(0x1007f0d7, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007f0d9, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1007f0dc, 0x5)   calld(0x1013ad11, 0xbbc30);           /* call 0x1013ad11 */
    II(0x1007f0e1, 0x2)   test(al, al);                         /* test al, al */
    II(0x1007f0e3, 0x2)   jzd(0x1007f0fa, 0x15);                /* jz 0x1007f0fa */
    II(0x1007f0e5, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1007f0e8, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007f0eb, 0x3)   add(eax, 0x13);                       /* add eax, 0x13 */
    II(0x1007f0ee, 0x5)   calld(0x10076574, -0x8b7f);           /* call 0x10076574 */
    II(0x1007f0f3, 0x5)   calld(0x101527ed, 0xd36f5);           /* call 0x101527ed */
    II(0x1007f0f8, 0x2)   jmpd(0x1007f114, 0x1a);               /* jmp 0x1007f114 */
l_0x1007f0fa:
    II(0x1007f0fa, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007f0fc, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007f0ff, 0x3)   add(eax, 0xf);                        /* add eax, 0xf */
    II(0x1007f102, 0x5)   calld(0x1008afe4, 0xbedd);            /* call 0x1008afe4 */
    II(0x1007f107, 0x3)   mov(edx, memd_a32(ss, ebp - 0x4));    /* mov edx, [ebp-0x4] */
    II(0x1007f10a, 0x5)   mov(eax, 0x101c3180);                 /* mov eax, 0x101c3180 */
    II(0x1007f10f, 0x5)   calld(0x100a5e27, 0x26d13);           /* call 0x100a5e27 */
l_0x1007f114:
    II(0x1007f114, 0x2)   xor_(edx, edx);                       /* xor edx, edx */
    II(0x1007f116, 0x3)   lea(eax, ebp - 0xc);                  /* lea eax, [ebp-0xc] */
    II(0x1007f119, 0x5)   calld(0x10088bbc, 0x9a9e);            /* call 0x10088bbc */
    II(0x1007f11e, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x1007f120, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1007f121, 0x1)   popd(edi);                            /* pop edi */
    II(0x1007f122, 0x1)   popd(esi);                            /* pop esi */
    II(0x1007f123, 0x1)   popd(edx);                            /* pop edx */
    II(0x1007f124, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1007f125, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1007f126, 0x1)   retd();                               /* ret */
FUNC_END

