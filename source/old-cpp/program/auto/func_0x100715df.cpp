FUNC_BEGIN(0x100715df, 0x293a965b15472abe, 0x20, ({0x68, 0x28, 0, 0, 0, 0xe8, 0x69, 0x47, 0xf, 0, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x89, 0xe5, 0x81, 0xec, 0xc, 0, 0, 0, 0x89, 0x45, 0xfc, 0x80, 0x3d, 0x20, 0x39, 0x1c, 0x10, 0, 0x74, 0x3f, 0xc7, 0x45, 0xf8, 0, 0, 0, 0, 0xeb, 0x6, 0x8b, 0x45, 0xf8, 0xff, 0x45, 0xf8, 0xf, 0xbf, 0x45, 0xf8, 0x83, 0xf8, 0x4, 0x7d, 0x27, 0xf, 0xbf, 0x45, 0xf8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0x74, 0xc, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0xe8, 0xf4, 0xdf, 0xd, 0, 0xeb, 0xca, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1c, 0x66, 0xf, 0xaf, 0x5, 0x72, 0x81, 0x1c, 0x10, 0x89, 0xc2, 0x8b, 0x45, 0xfc, 0x66, 0x8b, 0x40, 0x1a, 0x1, 0xd0, 0x89, 0x45, 0xf4, 0xc7, 0x45, 0xf8, 0x4, 0, 0, 0, 0xff, 0x4d, 0xf8, 0x66, 0x83, 0x7d, 0xf8, 0xff, 0xf, 0x84, 0xbd, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0x8a, 0x80, 0x90, 0xa4, 0x1c, 0x10, 0x25, 0xff, 0, 0, 0, 0x85, 0xc0, 0xf, 0x84, 0x9b, 0, 0, 0, 0xf, 0xbf, 0x45, 0xf8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xf, 0xbf, 0x55, 0xf4, 0x8b, 0x80, 0xa7, 0xa6, 0x1c, 0x10, 0x1, 0xd0, 0x80, 0x38, 0, 0x74, 0xc, 0x8b, 0x45, 0xfc, 0xe8, 0x87, 0x2c, 0xf, 0, 0x84, 0xc0, 0x75, 0x2, 0xeb, 0xc, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0xe8, 0x6e, 0xdf, 0xd, 0, 0x8b, 0x45, 0xfc, 0x66, 0x83, 0x78, 0x8, 0x42, 0x75, 0x27, 0xf, 0xbf, 0x45, 0xf8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xf, 0xbf, 0x55, 0xf4, 0x8b, 0x80, 0xab, 0xa6, 0x1c, 0x10, 0x1, 0xd0, 0x80, 0x38, 0, 0x74, 0xc, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0xe8, 0x3d, 0xdf, 0xd, 0, 0xf, 0xbf, 0x45, 0xf8, 0x69, 0xc0, 0x47, 0x2, 0, 0, 0xf, 0xbf, 0x55, 0xf4, 0x8b, 0x80, 0xa3, 0xa6, 0x1c, 0x10, 0x1, 0xd0, 0x80, 0x38, 0, 0x74, 0xe, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0xe8, 0x14, 0xdd, 0xd, 0, 0xeb, 0xc, 0xf, 0xbf, 0x55, 0xf8, 0x8b, 0x45, 0xfc, 0xe8, 0x76, 0xdb, 0xd, 0, 0xe9, 0x35, 0xff, 0xff, 0xff, 0x89, 0xec, 0x5d, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0xc3}))
    II(0x100715df, 0x5)   pushd(0x28);                          /* push dword 0x28 */
    II(0x100715e4, 0x5)   calld(sys_check_available_stack_size, 0xf4769); /* call 0x10165d52 */
    II(0x100715e9, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x100715ea, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x100715eb, 0x1)   pushd(edx);                           /* push edx */
    II(0x100715ec, 0x1)   pushd(esi);                           /* push esi */
    II(0x100715ed, 0x1)   pushd(edi);                           /* push edi */
    II(0x100715ee, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x100715ef, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x100715f1, 0x6)   sub(esp, 0xc);                        /* sub esp, 0xc */
    II(0x100715f7, 0x3)   mov(memd_a32(ss, ebp - 0x4), eax);    /* mov [ebp-0x4], eax */
    II(0x100715fa, 0x7)   cmp(memb_a32(ds, 0x101c3920), 0);     /* cmp byte [0x101c3920], 0x0 */
    II(0x10071601, 0x2)   jzd(0x10071642, 0x3f);                /* jz 0x10071642 */
    II(0x10071603, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0);      /* mov dword [ebp-0x8], 0x0 */
    II(0x1007160a, 0x2)   jmpd(0x10071612, 0x6);                /* jmp 0x10071612 */
l_0x1007160c:
    II(0x1007160c, 0x3)   mov(eax, memd_a32(ss, ebp - 0x8));    /* mov eax, [ebp-0x8] */
    II(0x1007160f, 0x3)   inc(memd_a32(ss, ebp - 0x8));         /* inc dword [ebp-0x8] */
l_0x10071612:
    II(0x10071612, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10071616, 0x3)   cmp(eax, 0x4);                        /* cmp eax, 0x4 */
    II(0x10071619, 0x2)   jged(0x10071642, 0x27);               /* jge 0x10071642 */
    II(0x1007161b, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x1007161f, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10071625, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x1007162b, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10071630, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x10071632, 0x2)   jzd(0x10071640, 0xc);                 /* jz 0x10071640 */
    II(0x10071634, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10071638, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x1007163b, 0x5)   calld(0x1014f634, 0xddff4);           /* call 0x1014f634 */
l_0x10071640:
    II(0x10071640, 0x2)   jmpd(0x1007160c, -0x36);              /* jmp 0x1007160c */
l_0x10071642:
    II(0x10071642, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10071645, 0x4)   mov(ax, memw_a32(ds, eax + 0x1c));    /* mov ax, [eax+0x1c] */
    II(0x10071649, 0x8)   imul(ax, memw_a32(ds, 0x101c8172));   /* imul ax, [0x101c8172] */
    II(0x10071651, 0x2)   mov(edx, eax);                        /* mov edx, eax */
    II(0x10071653, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10071656, 0x4)   mov(ax, memw_a32(ds, eax + 0x1a));    /* mov ax, [eax+0x1a] */
    II(0x1007165a, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1007165c, 0x3)   mov(memd_a32(ss, ebp - 0xc), eax);    /* mov [ebp-0xc], eax */
    II(0x1007165f, 0x7)   mov(memd_a32(ss, ebp - 0x8), 0x4);    /* mov dword [ebp-0x8], 0x4 */
l_0x10071666:
    II(0x10071666, 0x3)   dec(memd_a32(ss, ebp - 0x8));         /* dec dword [ebp-0x8] */
    II(0x10071669, 0x5)   cmp(memw_a32(ss, ebp - 0x8), -0x1 /* 0xff */); /* cmp word [ebp-0x8], 0xff */
    II(0x1007166e, 0x6)   jzd(0x10071731, 0xbd);                /* jz dword 0x10071731 */
    II(0x10071674, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10071678, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1007167e, 0x6)   mov(al, memb_a32(ds, eax + 0x101ca490)); /* mov al, [eax+0x101ca490] */
    II(0x10071684, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10071689, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1007168b, 0x6)   jzd(0x1007172c, 0x9b);                /* jz dword 0x1007172c */
    II(0x10071691, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x10071695, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x1007169b, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x1007169f, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a7)); /* mov eax, [eax+0x101ca6a7] */
    II(0x100716a5, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100716a7, 0x3)   cmp(memb_a32(ds, eax), 0);            /* cmp byte [eax], 0x0 */
    II(0x100716aa, 0x2)   jzd(0x100716b8, 0xc);                 /* jz 0x100716b8 */
    II(0x100716ac, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100716af, 0x5)   calld(0x1016433b, 0xf2c87);           /* call 0x1016433b */
    II(0x100716b4, 0x2)   test(al, al);                         /* test al, al */
    II(0x100716b6, 0x2)   jnzd(0x100716ba, 0x2);                /* jnz 0x100716ba */
l_0x100716b8:
    II(0x100716b8, 0x2)   jmpd(0x100716c6, 0xc);                /* jmp 0x100716c6 */
l_0x100716ba:
    II(0x100716ba, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100716be, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100716c1, 0x5)   calld(0x1014f634, 0xddf6e);           /* call 0x1014f634 */
l_0x100716c6:
    II(0x100716c6, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100716c9, 0x5)   cmp(memw_a32(ds, eax + 0x8), 0x42);   /* cmp word [eax+0x8], 0x42 */
    II(0x100716ce, 0x2)   jnzd(0x100716f7, 0x27);               /* jnz 0x100716f7 */
    II(0x100716d0, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100716d4, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x100716da, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x100716de, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6ab)); /* mov eax, [eax+0x101ca6ab] */
    II(0x100716e4, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x100716e6, 0x3)   cmp(memb_a32(ds, eax), 0);            /* cmp byte [eax], 0x0 */
    II(0x100716e9, 0x2)   jzd(0x100716f7, 0xc);                 /* jz 0x100716f7 */
    II(0x100716eb, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x100716ef, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x100716f2, 0x5)   calld(0x1014f634, 0xddf3d);           /* call 0x1014f634 */
l_0x100716f7:
    II(0x100716f7, 0x4)   movsx(eax, memw_a32(ss, ebp - 0x8));  /* movsx eax, word [ebp-0x8] */
    II(0x100716fb, 0x6)   imul(eax, eax, 0x247);                /* imul eax, eax, 0x247 */
    II(0x10071701, 0x4)   movsx(edx, memw_a32(ss, ebp - 0xc));  /* movsx edx, word [ebp-0xc] */
    II(0x10071705, 0x6)   mov(eax, memd_a32(ds, eax + 0x101ca6a3)); /* mov eax, [eax+0x101ca6a3] */
    II(0x1007170b, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1007170d, 0x3)   cmp(memb_a32(ds, eax), 0);            /* cmp byte [eax], 0x0 */
    II(0x10071710, 0x2)   jzd(0x10071720, 0xe);                 /* jz 0x10071720 */
    II(0x10071712, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10071716, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10071719, 0x5)   calld(0x1014f432, 0xddd14);           /* call 0x1014f432 */
    II(0x1007171e, 0x2)   jmpd(0x1007172c, 0xc);                /* jmp 0x1007172c */
l_0x10071720:
    II(0x10071720, 0x4)   movsx(edx, memw_a32(ss, ebp - 0x8));  /* movsx edx, word [ebp-0x8] */
    II(0x10071724, 0x3)   mov(eax, memd_a32(ss, ebp - 0x4));    /* mov eax, [ebp-0x4] */
    II(0x10071727, 0x5)   calld(0x1014f2a2, 0xddb76);           /* call 0x1014f2a2 */
l_0x1007172c:
    II(0x1007172c, 0x5)   jmpd(0x10071666, -0xcb);              /* jmp 0x10071666 */
l_0x10071731:
    II(0x10071731, 0x2)   mov(esp, ebp);                        /* mov esp, ebp */
    II(0x10071733, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x10071734, 0x1)   popd(edi);                            /* pop edi */
    II(0x10071735, 0x1)   popd(esi);                            /* pop esi */
    II(0x10071736, 0x1)   popd(edx);                            /* pop edx */
    II(0x10071737, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x10071738, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x10071739, 0x1)   retd();                               /* ret */
FUNC_END

