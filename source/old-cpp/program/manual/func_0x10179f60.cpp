FUNC_BEGIN(0x10179f60, 0x38a6e99c0e18857a, 0x20, ({0x55, 0x89, 0xe5, 0x53, 0x51, 0x52, 0x56, 0x57, 0x8b, 0x15, 0xc0, 0x9d, 0x20, 0x10, 0x8b, 0x1d, 0x1c, 0xe4, 0x1b, 0x10, 0x31, 0xc0, 0xc1, 0xfa, 0x2, 0x83, 0xfb, 0xff, 0x74, 0x15, 0x52, 0xe8, 0x7e, 0x3d, 0x1, 0, 0x8b, 0x15, 0xc0, 0x9d, 0x20, 0x10, 0x83, 0xc4, 0x4, 0x1, 0x15, 0x20, 0xe4, 0x1b, 0x10, 0x8b, 0x15, 0xc0, 0x9d, 0x20, 0x10, 0xf7, 0xda, 0xd1, 0xfa, 0x39, 0xd0, 0x7e, 0x10, 0x83, 0x3d, 0x28, 0xe4, 0x1b, 0x10, 0, 0x75, 0x7, 0xb8, 0x1, 0, 0, 0, 0xeb, 0x2, 0x31, 0xc0, 0xa3, 0x24, 0xe4, 0x1b, 0x10, 0x31, 0xff, 0xa1, 0x18, 0xe4, 0x1b, 0x10, 0x89, 0x3d, 0x28, 0xe4, 0x1b, 0x10, 0x83, 0xf8, 0xff, 0xf, 0x84, 0xdf, 0x1, 0, 0, 0x83, 0x3d, 0xac, 0x9d, 0x20, 0x10, 0, 0x75, 0xa, 0xa1, 0x74, 0x9a, 0x20, 0x10, 0xa3, 0xac, 0x9d, 0x20, 0x10, 0x31, 0xdb, 0x8b, 0x15, 0x34, 0xe4, 0x1b, 0x10, 0x83, 0xfa, 0xff, 0xf, 0x95, 0xc0, 0x25, 0xff, 0, 0, 0, 0x74, 0x2b, 0xa1, 0x18, 0xe4, 0x1b, 0x10, 0xe8, 0, 0xfa, 0xff, 0xff, 0x8b, 0xd, 0xa4, 0x9d, 0x20, 0x10, 0x8b, 0x35, 0xac, 0x9d, 0x20, 0x10, 0x1, 0xc8, 0x8b, 0x3d, 0xa0, 0x9d, 0x20, 0x10, 0x1, 0xf0, 0x39, 0xf8, 0x73, 0x7, 0xbb, 0x1, 0, 0, 0, 0xeb, 0xc2, 0x85, 0xdb, 0x74, 0x19, 0xa1, 0xc0, 0x9d, 0x20, 0x10, 0x8b, 0x15, 0xc0, 0x9d, 0x20, 0x10, 0xc1, 0xf8, 0x2, 0x1, 0xd0, 0x50, 0xe8, 0x2c, 0x3c, 0x1, 0, 0x83, 0xc4, 0x4, 0x8b, 0x15, 0x34, 0xe4, 0x1b, 0x10, 0x83, 0xfa, 0xff, 0xf, 0x95, 0xc0, 0x25, 0xff, 0, 0, 0, 0x74, 0x2d, 0xa1, 0x18, 0xe4, 0x1b, 0x10, 0xe8, 0xa5, 0xf9, 0xff, 0xff, 0x8b, 0x15, 0xa4, 0x9d, 0x20, 0x10, 0x8b, 0x1d, 0xac, 0x9d, 0x20, 0x10, 0x1, 0xc2, 0xa1, 0xa0, 0x9d, 0x20, 0x10, 0x1, 0xd8, 0x39, 0xc2, 0x76, 0xa, 0xc7, 0x5, 0x34, 0xe4, 0x1b, 0x10, 0xff, 0xff, 0xff, 0xff, 0x83, 0x3d, 0x9c, 0x9d, 0x20, 0x10, 0, 0xf, 0x84, 0xe2, 0, 0, 0, 0x83, 0x3d, 0x34, 0xe4, 0x1b, 0x10, 0xff, 0xf, 0x85, 0xd5, 0, 0, 0, 0x83, 0x3d, 0x98, 0x9d, 0x20, 0x10, 0, 0xf, 0x84, 0xc8, 0, 0, 0, 0xa1, 0xa4, 0x9d, 0x20, 0x10, 0x8b, 0x15, 0xa8, 0x9d, 0x20, 0x10, 0x8b, 0x1d, 0xa0, 0x9d, 0x20, 0x10, 0x1, 0xd0, 0x39, 0xd8, 0xf, 0x87, 0xad, 0, 0, 0, 0xa1, 0x1c, 0x9d, 0x20, 0x10, 0x8b, 0x4, 0xc5, 0x70, 0x9a, 0x20, 0x10, 0x8c, 0x1d, 0x28, 0x9d, 0x20, 0x10, 0xa3, 0x24, 0x9d, 0x20, 0x10, 0xa1, 0x1c, 0x9d, 0x20, 0x10, 0x8b, 0x4, 0xc5, 0x74, 0x9a, 0x20, 0x10, 0xa3, 0x2c, 0x9d, 0x20, 0x10, 0x8b, 0x15, 0xa8, 0x9d, 0x20, 0x10, 0x1, 0x15, 0xa4, 0x9d, 0x20, 0x10, 0xa3, 0xa8, 0x9d, 0x20, 0x10, 0x83, 0x3d, 0x1c, 0x9d, 0x20, 0x10, 0x3b, 0x75, 0x9, 0x31, 0xc0, 0xa3, 0x1c, 0x9d, 0x20, 0x10, 0xeb, 0x6, 0xff, 0x5, 0x1c, 0x9d, 0x20, 0x10, 0xff, 0xd, 0x98, 0x9d, 0x20, 0x10, 0xa1, 0x18, 0xe4, 0x1b, 0x10, 0x31, 0xdb, 0x8c, 0xd9, 0x89, 0x1d, 0x9c, 0x9d, 0x20, 0x10, 0xbb, 0x24, 0x9d, 0x20, 0x10, 0xe8, 0x2d, 0x5c, 0, 0, 0xa3, 0x34, 0xe4, 0x1b, 0x10, 0x8b, 0x15, 0x34, 0xe4, 0x1b, 0x10, 0x83, 0xfa, 0xff, 0xf, 0x95, 0xc0, 0x25, 0xff, 0, 0, 0, 0x74, 0x16, 0xa1, 0x18, 0xe4, 0x1b, 0x10, 0xe8, 0xae, 0xf8, 0xff, 0xff, 0x85, 0xc0, 0xf, 0x94, 0xc0, 0x25, 0xff, 0, 0, 0, 0x75, 0xd7, 0x8b, 0xd, 0xc0, 0x9d, 0x20, 0x10, 0x51, 0xe8, 0xfd, 0x3a, 0x1, 0, 0x83, 0xc4, 0x4, 0xa1, 0x14, 0x9d, 0x20, 0x10, 0x3b, 0x5, 0x10, 0x9d, 0x20, 0x10, 0x74, 0x33, 0xa1, 0x14, 0x9d, 0x20, 0x10, 0x8b, 0x3d, 0xa0, 0x9d, 0x20, 0x10, 0x8b, 0x4, 0xc5, 0x74, 0x9a, 0x20, 0x10, 0x1, 0xc7, 0x89, 0x3d, 0xa0, 0x9d, 0x20, 0x10, 0x83, 0x3d, 0x14, 0x9d, 0x20, 0x10, 0x3b, 0x75, 0xa, 0x31, 0xdb, 0x89, 0x1d, 0x14, 0x9d, 0x20, 0x10, 0xeb, 0x6, 0xff, 0x5, 0x14, 0x9d, 0x20, 0x10, 0x8d, 0x65, 0xec, 0x5f, 0x5e, 0x5a, 0x59, 0x5b, 0x5d, 0xc3}))

    dma_channel & chan = dma_get_channel(5);

    II(0x10179f60, 0x1)   pushd(ebp);                           /* push ebp */
    II(0x10179f61, 0x2)   mov(ebp, esp);                        /* mov ebp, esp */
    II(0x10179f63, 0x1)   pushd(ebx);                           /* push ebx */
    II(0x10179f64, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x10179f65, 0x1)   pushd(edx);                           /* push edx */
    II(0x10179f66, 0x1)   pushd(esi);                           /* push esi */
    II(0x10179f67, 0x1)   pushd(edi);                           /* push edi */
    II(0x10179f68, 0x6)   mov(edx, memd_a32(ds, 0x10209dc0));   /* mov edx, [0x10209dc0] */
    II(0x10179f6e, 0x6)   mov(ebx, memd_a32(ds, 0x101be41c));   /* mov ebx, [0x101be41c] */
    II(0x10179f74, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x10179f76, 0x3)   sar(edx, 0x2);                        /* sar edx, 0x2 */
    II(0x10179f79, 0x3)   cmp(ebx, -0x1 /* 0xff */);            /* cmp ebx, 0xff */
    II(0x10179f7c, 0x2)   jzd(0x10179f93, 0x15);                /* jz 0x10179f93 */
    II(0x10179f7e, 0x1)   pushd(edx);                           /* push edx */
    II(0x10179f7f, 0x5)   calld(0x1018dd02, 0x13d7e);           /* call 0x1018dd02 */
    II(0x10179f84, 0x6)   mov(edx, memd_a32(ds, 0x10209dc0));   /* mov edx, [0x10209dc0] */
    II(0x10179f8a, 0x3)   add(esp, 0x4);                        /* add esp, 0x4 */
    II(0x10179f8d, 0x6)   add(memd_a32(ds, 0x101be420), edx);   /* add [0x101be420], edx */
l_0x10179f93:
    II(0x10179f93, 0x6)   mov(edx, memd_a32(ds, 0x10209dc0));   /* mov edx, [0x10209dc0] */
    II(0x10179f99, 0x2)   neg(edx);                             /* neg edx */
    II(0x10179f9b, 0x2)   sar(edx, 0x1);                        /* sar edx, 1 */
    II(0x10179f9d, 0x2)   cmp(eax, edx);                        /* cmp eax, edx */
    II(0x10179f9f, 0x2)   jled(0x10179fb1, 0x10);               /* jle 0x10179fb1 */
    II(0x10179fa1, 0x7)   cmp(memd_a32(ds, 0x101be428), 0);     /* cmp dword [0x101be428], 0x0 */
    II(0x10179fa8, 0x2)   jnzd(0x10179fb1, 0x7);                /* jnz 0x10179fb1 */
    II(0x10179faa, 0x5)   mov(eax, 0x1);                        /* mov eax, 0x1 */
    II(0x10179faf, 0x2)   jmpd(0x10179fb3, 0x2);                /* jmp 0x10179fb3 */
l_0x10179fb1:
    II(0x10179fb1, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
l_0x10179fb3:
    II(0x10179fb3, 0x5)   mov(memd_a32(ds, 0x101be424), eax);   /* mov [0x101be424], eax */
    II(0x10179fb8, 0x2)   xor_(edi, edi);                       /* xor edi, edi */
    II(0x10179fba, 0x5)   mov(eax, memd_a32(ds, 0x101be418));   /* mov eax, [0x101be418] */
    II(0x10179fbf, 0x6)   mov(memd_a32(ds, 0x101be428), edi);   /* mov [0x101be428], edi */
    II(0x10179fc5, 0x3)   cmp(eax, -0x1 /* 0xff */);            /* cmp eax, 0xff */
    II(0x10179fc8, 0x6)   jzd(0x1017a1ad, 0x1df);               /* jz dword 0x1017a1ad */
    II(0x10179fce, 0x7)   cmp(memd_a32(ds, 0x10209dac), 0);     /* cmp dword [0x10209dac], 0x0 */
    II(0x10179fd5, 0x2)   jnzd(0x10179fe1, 0xa);                /* jnz 0x10179fe1 */
    II(0x10179fd7, 0x5)   mov(eax, memd_a32(ds, 0x10209a74));   /* mov eax, [0x10209a74] */
    II(0x10179fdc, 0x5)   mov(memd_a32(ds, 0x10209dac), eax);   /* mov [0x10209dac], eax */
l_0x10179fe1:
    II(0x10179fe1, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
l_0x10179fe3:

    // Работа с аудио. Загрука данных из файла в память?

    if (chan.masked == false)
    {
        uint16_t buf[0x1];
        chan.read(buf, 0x1);
    }

    II(0x10179fe3, 0x6)   mov(edx, memd_a32(ds, 0x101be434));   /* mov edx, [0x101be434] */
    II(0x10179fe9, 0x3)   cmp(edx, -0x1 /* 0xff */);            /* cmp edx, 0xff */
    II(0x10179fec, 0x3)   setnz(al);                            /* setnz al */
    II(0x10179fef, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x10179ff4, 0x2)   jzd(0x1017a021, 0x2b);                /* jz 0x1017a021 */
    II(0x10179ff6, 0x5)   mov(eax, memd_a32(ds, 0x101be418));   /* mov eax, [0x101be418] */
    II(0x10179ffb, 0x5)   calld(0x10179a00, -0x600);            /* call 0x10179a00 */
    II(0x1017a000, 0x6)   mov(ecx, memd_a32(ds, 0x10209da4));   /* mov ecx, [0x10209da4] */
    II(0x1017a006, 0x6)   mov(esi, memd_a32(ds, 0x10209dac));   /* mov esi, [0x10209dac] */
    II(0x1017a00c, 0x2)   add(eax, ecx);                        /* add eax, ecx */
    II(0x1017a00e, 0x6)   mov(edi, memd_a32(ds, 0x10209da0));   /* mov edi, [0x10209da0] */
    II(0x1017a014, 0x2)   add(eax, esi);                        /* add eax, esi */
    II(0x1017a016, 0x2)   cmp(eax, edi);                        /* cmp eax, edi */
    II(0x1017a018, 0x2)   jaed(0x1017a021, 0x7);                /* jae 0x1017a021 */
    II(0x1017a01a, 0x5)   mov(ebx, 0x1);                        /* mov ebx, 0x1 */
    II(0x1017a01f, 0x2)   jmpd(0x10179fe3, -0x3e);              /* jmp 0x10179fe3 */
l_0x1017a021:
    II(0x1017a021, 0x2)   test(ebx, ebx);                       /* test ebx, ebx */
    II(0x1017a023, 0x2)   jzd(0x1017a03e, 0x19);                /* jz 0x1017a03e */
    II(0x1017a025, 0x5)   mov(eax, memd_a32(ds, 0x10209dc0));   /* mov eax, [0x10209dc0] */
    II(0x1017a02a, 0x6)   mov(edx, memd_a32(ds, 0x10209dc0));   /* mov edx, [0x10209dc0] */
    II(0x1017a030, 0x3)   sar(eax, 0x2);                        /* sar eax, 0x2 */
    II(0x1017a033, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1017a035, 0x1)   pushd(eax);                           /* push eax */
    II(0x1017a036, 0x5)   calld(0x1018dc67, 0x13c2c);           /* call 0x1018dc67 */
    II(0x1017a03b, 0x3)   add(esp, 0x4);                        /* add esp, 0x4 */
l_0x1017a03e:
    II(0x1017a03e, 0x6)   mov(edx, memd_a32(ds, 0x101be434));   /* mov edx, [0x101be434] */
    II(0x1017a044, 0x3)   cmp(edx, -0x1 /* 0xff */);            /* cmp edx, 0xff */
    II(0x1017a047, 0x3)   setnz(al);                            /* setnz al */
    II(0x1017a04a, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1017a04f, 0x2)   jzd(0x1017a07e, 0x2d);                /* jz 0x1017a07e */
    II(0x1017a051, 0x5)   mov(eax, memd_a32(ds, 0x101be418));   /* mov eax, [0x101be418] */
    II(0x1017a056, 0x5)   calld(0x10179a00, -0x65b);            /* call 0x10179a00 */
    II(0x1017a05b, 0x6)   mov(edx, memd_a32(ds, 0x10209da4));   /* mov edx, [0x10209da4] */
    II(0x1017a061, 0x6)   mov(ebx, memd_a32(ds, 0x10209dac));   /* mov ebx, [0x10209dac] */
    II(0x1017a067, 0x2)   add(edx, eax);                        /* add edx, eax */
    II(0x1017a069, 0x5)   mov(eax, memd_a32(ds, 0x10209da0));   /* mov eax, [0x10209da0] */
    II(0x1017a06e, 0x2)   add(eax, ebx);                        /* add eax, ebx */
    II(0x1017a070, 0x2)   cmp(edx, eax);                        /* cmp edx, eax */
    II(0x1017a072, 0x2)   jbed(0x1017a07e, 0xa);                /* jbe 0x1017a07e */
    II(0x1017a074, 0xa)   mov(memd_a32(ds, 0x101be434), 0xffffffff); /* mov dword [0x101be434], 0xffffffff */
l_0x1017a07e:
    II(0x1017a07e, 0x7)   cmp(memd_a32(ds, 0x10209d9c), 0);     /* cmp dword [0x10209d9c], 0x0 */
    II(0x1017a085, 0x6)   jzd(0x1017a16d, 0xe2);                /* jz dword 0x1017a16d */
    II(0x1017a08b, 0x7)   cmp(memd_a32(ds, 0x101be434), -0x1 /* 0xff */); /* cmp dword [0x101be434], 0xff */
    II(0x1017a092, 0x6)   jnzd(0x1017a16d, 0xd5);               /* jnz dword 0x1017a16d */
    II(0x1017a098, 0x7)   cmp(memd_a32(ds, 0x10209d98), 0);     /* cmp dword [0x10209d98], 0x0 */
    II(0x1017a09f, 0x6)   jzd(0x1017a16d, 0xc8);                /* jz dword 0x1017a16d */
    II(0x1017a0a5, 0x5)   mov(eax, memd_a32(ds, 0x10209da4));   /* mov eax, [0x10209da4] */
    II(0x1017a0aa, 0x6)   mov(edx, memd_a32(ds, 0x10209da8));   /* mov edx, [0x10209da8] */
    II(0x1017a0b0, 0x6)   mov(ebx, memd_a32(ds, 0x10209da0));   /* mov ebx, [0x10209da0] */
    II(0x1017a0b6, 0x2)   add(eax, edx);                        /* add eax, edx */
    II(0x1017a0b8, 0x2)   cmp(eax, ebx);                        /* cmp eax, ebx */
    II(0x1017a0ba, 0x6)   jad(0x1017a16d, 0xad);                /* ja dword 0x1017a16d */
    II(0x1017a0c0, 0x5)   mov(eax, memd_a32(ds, 0x10209d1c));   /* mov eax, [0x10209d1c] */
    II(0x1017a0c5, 0x7)   mov(eax, memd_a32(ds, eax * 0x8 + 0x10209a70)); /* mov eax, [eax*8+0x10209a70] */
    II(0x1017a0cc, 0x6)   mov(memd_a32(ds, 0x10209d28), ds);    /* mov [0x10209d28], ds */
    II(0x1017a0d2, 0x5)   mov(memd_a32(ds, 0x10209d24), eax);   /* mov [0x10209d24], eax */
    II(0x1017a0d7, 0x5)   mov(eax, memd_a32(ds, 0x10209d1c));   /* mov eax, [0x10209d1c] */
    II(0x1017a0dc, 0x7)   mov(eax, memd_a32(ds, eax * 0x8 + 0x10209a74)); /* mov eax, [eax*8+0x10209a74] */
    II(0x1017a0e3, 0x5)   mov(memd_a32(ds, 0x10209d2c), eax);   /* mov [0x10209d2c], eax */
    II(0x1017a0e8, 0x6)   mov(edx, memd_a32(ds, 0x10209da8));   /* mov edx, [0x10209da8] */
    II(0x1017a0ee, 0x6)   add(memd_a32(ds, 0x10209da4), edx);   /* add [0x10209da4], edx */
    II(0x1017a0f4, 0x5)   mov(memd_a32(ds, 0x10209da8), eax);   /* mov [0x10209da8], eax */
    II(0x1017a0f9, 0x7)   cmp(memd_a32(ds, 0x10209d1c), 0x3b);  /* cmp dword [0x10209d1c], 0x3b */
    II(0x1017a100, 0x2)   jnzd(0x1017a10b, 0x9);                /* jnz 0x1017a10b */
    II(0x1017a102, 0x2)   xor_(eax, eax);                       /* xor eax, eax */
    II(0x1017a104, 0x5)   mov(memd_a32(ds, 0x10209d1c), eax);   /* mov [0x10209d1c], eax */
    II(0x1017a109, 0x2)   jmpd(0x1017a111, 0x6);                /* jmp 0x1017a111 */
l_0x1017a10b:
    II(0x1017a10b, 0x6)   inc(memd_a32(ds, 0x10209d1c));        /* inc dword [0x10209d1c] */
l_0x1017a111:
    II(0x1017a111, 0x6)   dec(memd_a32(ds, 0x10209d98));        /* dec dword [0x10209d98] */
    II(0x1017a117, 0x5)   mov(eax, memd_a32(ds, 0x101be418));   /* mov eax, [0x101be418] */
    II(0x1017a11c, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1017a11e, 0x2)   mov(ecx, ds);                         /* mov ecx, ds */
    II(0x1017a120, 0x6)   mov(memd_a32(ds, 0x10209d9c), ebx);   /* mov [0x10209d9c], ebx */
    II(0x1017a126, 0x5)   mov(ebx, 0x10209d24);                 /* mov ebx, 0x10209d24 */
    II(0x1017a12b, 0x5)   calld(0x1017fd5d, 0x5c2d);            /* call 0x1017fd5d */
    II(0x1017a130, 0x5)   mov(memd_a32(ds, 0x101be434), eax);   /* mov [0x101be434], eax */
l_0x1017a135:

    if (chan.masked == false)
    {
        uint16_t buf[0x1];
        chan.read(buf, 0x1);
    //        if (chan.currcnt == 0xffff)
    //            pic.activate_irq(7);
    }

    II(0x1017a135, 0x6)   mov(edx, memd_a32(ds, 0x101be434));   /* mov edx, [0x101be434] */
    II(0x1017a13b, 0x3)   cmp(edx, -0x1 /* 0xff */);            /* cmp edx, 0xff */
    II(0x1017a13e, 0x3)   setnz(al);                            /* setnz al */
    II(0x1017a141, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1017a146, 0x2)   jzd(0x1017a15e, 0x16);                /* jz 0x1017a15e */
    II(0x1017a148, 0x5)   mov(eax, memd_a32(ds, 0x101be418));   /* mov eax, [0x101be418] */
    II(0x1017a14d, 0x5)   calld(0x10179a00, -0x752);            /* call 0x10179a00 */
    II(0x1017a152, 0x2)   test(eax, eax);                       /* test eax, eax */
    II(0x1017a154, 0x3)   setz(al);                             /* setz al */
    II(0x1017a157, 0x5)   and_(eax, 0xff);                      /* and eax, 0xff */
    II(0x1017a15c, 0x2)   jnzd(0x1017a135, -0x29);              /* jnz 0x1017a135 */
l_0x1017a15e:
    II(0x1017a15e, 0x6)   mov(ecx, memd_a32(ds, 0x10209dc0));   /* mov ecx, [0x10209dc0] */
    II(0x1017a164, 0x1)   pushd(ecx);                           /* push ecx */
    II(0x1017a165, 0x5)   calld(0x1018dc67, 0x13afd);           /* call 0x1018dc67 */
    II(0x1017a16a, 0x3)   add(esp, 0x4);                        /* add esp, 0x4 */
l_0x1017a16d:
    II(0x1017a16d, 0x5)   mov(eax, memd_a32(ds, 0x10209d14));   /* mov eax, [0x10209d14] */
    II(0x1017a172, 0x6)   cmp(eax, memd_a32(ds, 0x10209d10));   /* cmp eax, [0x10209d10] */
    II(0x1017a178, 0x2)   jzd(0x1017a1ad, 0x33);                /* jz 0x1017a1ad */
    II(0x1017a17a, 0x5)   mov(eax, memd_a32(ds, 0x10209d14));   /* mov eax, [0x10209d14] */
    II(0x1017a17f, 0x6)   mov(edi, memd_a32(ds, 0x10209da0));   /* mov edi, [0x10209da0] */
    II(0x1017a185, 0x7)   mov(eax, memd_a32(ds, eax * 0x8 + 0x10209a74)); /* mov eax, [eax*8+0x10209a74] */
    II(0x1017a18c, 0x2)   add(edi, eax);                        /* add edi, eax */
    II(0x1017a18e, 0x6)   mov(memd_a32(ds, 0x10209da0), edi);   /* mov [0x10209da0], edi */
    II(0x1017a194, 0x7)   cmp(memd_a32(ds, 0x10209d14), 0x3b);  /* cmp dword [0x10209d14], 0x3b */
    II(0x1017a19b, 0x2)   jnzd(0x1017a1a7, 0xa);                /* jnz 0x1017a1a7 */
    II(0x1017a19d, 0x2)   xor_(ebx, ebx);                       /* xor ebx, ebx */
    II(0x1017a19f, 0x6)   mov(memd_a32(ds, 0x10209d14), ebx);   /* mov [0x10209d14], ebx */
    II(0x1017a1a5, 0x2)   jmpd(0x1017a1ad, 0x6);                /* jmp 0x1017a1ad */
l_0x1017a1a7:
    II(0x1017a1a7, 0x6)   inc(memd_a32(ds, 0x10209d14));        /* inc dword [0x10209d14] */
l_0x1017a1ad:
    II(0x1017a1ad, 0x3)   lea(esp, ebp - 0x14);                 /* lea esp, [ebp-0x14] */
    II(0x1017a1b0, 0x1)   popd(edi);                            /* pop edi */
    II(0x1017a1b1, 0x1)   popd(esi);                            /* pop esi */
    II(0x1017a1b2, 0x1)   popd(edx);                            /* pop edx */
    II(0x1017a1b3, 0x1)   popd(ecx);                            /* pop ecx */
    II(0x1017a1b4, 0x1)   popd(ebx);                            /* pop ebx */
    II(0x1017a1b5, 0x1)   popd(ebp);                            /* pop ebp */
    II(0x1017a1b6, 0x1)   retd();                               /* ret  */
FUNC_END

