FUNC_BEGIN(0x001394f9, 0xe0d851957992ceeb, 0x10, ({0xfa, 0xfc, 0x6, 0x57, 0x1e, 0x7, 0xbf, 0xc4, 0x50, 0x6, 0x57, 0x66, 0x53, 0x66, 0x8b, 0xd3, 0x8e, 0x2e, 0xaa, 0, 0xf, 0x6, 0x33, 0xc0, 0x26, 0xb, 0x45, 0x5a, 0xf, 0x84, 0x3, 0, 0xe9, 0xd0, 0, 0xb0, 0x1, 0x86, 0x6, 0x96, 0x9, 0xa, 0xc0, 0xf, 0x84, 0x3, 0, 0xe9, 0xc1, 0, 0x66, 0x81, 0xfb, 0, 0, 0, 0x10, 0xf, 0x82, 0x9, 0, 0x66, 0x3b, 0x1e, 0xd8, 0x4f, 0xf, 0x86, 0x7, 0, 0x66, 0x53, 0x66, 0x58, 0xe9, 0xa6, 0, 0x66, 0x81, 0xeb, 0, 0, 0, 0x10, 0x66, 0xc1, 0xeb, 0xb, 0x80, 0xe3, 0xfe, 0x66, 0x8b, 0x3e, 0xa4, 0x1f, 0x65, 0x67, 0x8b, 0x4, 0x1f, 0x65, 0x67, 0xf7, 0x4, 0x1f, 0xff, 0xff, 0x74, 0xd8, 0x90, 0xe, 0xe8, 0xd4, 0xe0, 0xfa, 0xb, 0xc0, 0xf, 0x85, 0x79, 0, 0x83, 0xc4, 0x8, 0x1e, 0x7, 0xbf, 0xc4, 0x50, 0x26, 0x66, 0x8b, 0x45, 0x68, 0x66, 0xb, 0xc0, 0xf, 0x84, 0x8, 0, 0xc4, 0x3e, 0x54, 0x1f, 0x26, 0x66, 0x89, 0x5, 0x1e, 0x7, 0xbf, 0xc4, 0x50, 0x32, 0xc0, 0xa2, 0x96, 0x9, 0x26, 0x66, 0x8b, 0x45, 0x28, 0x26, 0x66, 0x8b, 0x5d, 0x34, 0x26, 0x66, 0x8b, 0x4d, 0x2c, 0x26, 0x66, 0x8b, 0x55, 0x30, 0x26, 0x66, 0x8b, 0x75, 0x40, 0x26, 0x66, 0x8b, 0x6d, 0x3c, 0x26, 0x8e, 0x5d, 0x54, 0x26, 0x8e, 0x6d, 0x5c, 0x26, 0x8e, 0x65, 0x58, 0x26, 0x8e, 0x55, 0x50, 0x26, 0x66, 0x8b, 0x65, 0x38, 0x26, 0x66, 0xff, 0x75, 0x24, 0x26, 0xff, 0x75, 0x4c, 0x26, 0xff, 0x75, 0x4c, 0x26, 0x66, 0xff, 0x75, 0x20, 0x26, 0xff, 0x75, 0x48, 0x26, 0x66, 0x8b, 0x7d, 0x44, 0x7, 0xf, 0x6, 0x66, 0xcf, 0xfa, 0xfc, 0x83, 0xc4, 0x8, 0x1e, 0x7, 0xbf, 0xc4, 0x50, 0x26, 0x66, 0x8b, 0x45, 0x68, 0x66, 0xb, 0xc0, 0xf, 0x84, 0x8, 0, 0xc4, 0x3e, 0x54, 0x1f, 0x26, 0x66, 0x89, 0x5, 0xfa, 0x1e, 0x7, 0xbf, 0xc4, 0x50, 0x32, 0xc0, 0xa2, 0x96, 0x9, 0x26, 0x66, 0x8b, 0x45, 0x28, 0x26, 0x66, 0x8b, 0x5d, 0x34, 0x26, 0x66, 0x8b, 0x4d, 0x2c, 0x26, 0x66, 0x8b, 0x55, 0x30, 0x26, 0x66, 0x8b, 0x75, 0x40, 0x26, 0x66, 0x8b, 0x6d, 0x3c, 0x26, 0x8e, 0x5d, 0x54, 0x26, 0x8e, 0x6d, 0x5c, 0x26, 0x8e, 0x65, 0x58, 0x26, 0x8e, 0x55, 0x50, 0x26, 0x66, 0x8b, 0x65, 0x38, 0x26, 0x66, 0xff, 0x75, 0x24, 0x26, 0xff, 0x75, 0x4c, 0x26, 0xff, 0x75, 0x4c, 0x26, 0x66, 0xff, 0x75, 0x20, 0x26, 0x83, 0x7d, 0x5a, 0, 0xf, 0x85, 0x4, 0, 0x6a, 0, 0x6a, 0x1, 0x26, 0xff, 0x75, 0x6f, 0x26, 0xff, 0x75, 0x6d, 0x26, 0xff, 0x75, 0x48, 0x26, 0x66, 0x8b, 0x7d, 0x44, 0x7, 0xf, 0x6, 0xcb}))
    II(0x001394f9, 0x1)   cli();                                /* cli  */
    II(0x001394fa, 0x1)   cld();                                /* cld  */
    II(0x001394fb, 0x1)   pushw(es);                            /* push es */
    II(0x001394fc, 0x1)   pushw(di);                            /* push di */
    II(0x001394fd, 0x1)   pushw(ds);                            /* push ds */
    II(0x001394fe, 0x1)   popw(es);                             /* pop es */
    II(0x001394ff, 0x3)   mov(di, 0x50c4);                      /* mov di, 0x50c4 */
    II(0x00139502, 0x1)   pushw(es);                            /* push es */
    II(0x00139503, 0x1)   pushw(di);                            /* push di */
    II(0x00139504, 0x2)   pushd(ebx);                           /* push ebx */
    II(0x00139506, 0x3)   mov(edx, ebx);                        /* mov edx, ebx */
    II(0x00139509, 0x4)   mov(gs, memw_a16(ds, 0xaa));          /* mov gs, [0xaa] */
    II(0x0013950d, 0x2)   clts();                               /* clts  */
    II(0x0013950f, 0x2)   xor_(ax, ax);                         /* xor ax, ax */
    II(0x00139511, 0x4)   or_(ax, memw_a16(es, di + 0x5a));     /* or ax, [es:di+0x5a] */
    II(0x00139515, 0x4)   jzw(0x0013951c, 0x3);                 /* jz word 0x13951c */
    II(0x00139519, 0x3)   jmpw(0x001395ec, 0xd0);               /* jmp 0x1395ec */
l_0x0013951c:
    II(0x0013951c, 0x2)   mov(al, 0x1);                         /* mov al, 0x1 */
    II(0x0013951e, 0x4)   xchg(memb_a16(ds, 0x996), al);        /* xchg [0x996], al */
    II(0x00139522, 0x2)   or_(al, al);                          /* or al, al */
    II(0x00139524, 0x4)   jzw(0x0013952b, 0x3);                 /* jz word 0x13952b */
    II(0x00139528, 0x3)   jmpw(0x001395ec, 0xc1);               /* jmp 0x1395ec */
l_0x0013952b:
    II(0x0013952b, 0x7)   cmp(ebx, 0x10000000);                 /* cmp ebx, 0x10000000 */
    II(0x00139532, 0x4)   jbw(0x0013953f, 0x9);                 /* jb word 0x13953f */
    II(0x00139536, 0x5)   cmp(ebx, memd_a16(ds, 0x4fd8));       /* cmp ebx, [0x4fd8] */
    II(0x0013953b, 0x4)   jbew(0x00139546, 0x7);                /* jbe word 0x139546 */
l_0x0013953f:
    II(0x0013953f, 0x2)   pushd(ebx);                           /* push ebx */
    II(0x00139541, 0x2)   popd(eax);                            /* pop eax */
    II(0x00139543, 0x3)   jmpw(0x001395ec, 0xa6);               /* jmp 0x1395ec */
l_0x00139546:
    II(0x00139546, 0x7)   sub(ebx, 0x10000000);                 /* sub ebx, 0x10000000 */
    II(0x0013954d, 0x4)   shr(ebx, 0xb);                        /* shr ebx, 0xb */
    II(0x00139551, 0x3)   and_(bl, 0xfe);                       /* and bl, 0xfe */
    II(0x00139554, 0x5)   mov(edi, memd_a16(ds, 0x1fa4));       /* mov edi, [0x1fa4] */
    II(0x00139559, 0x5)   mov(ax, memw_a32(gs, edi + ebx));     /* mov ax, [gs:edi+ebx] */
    II(0x0013955e, 0x7)   test(memw_a32(gs, edi + ebx), 0xffff); /* test word [gs:edi+ebx], 0xffff */
    II(0x00139565, 0x2)   jzw(0x0013953f, -0x28);               /* jz 0x13953f */
//    II(0x00139567, 0x1)   nop();                                /* nop  */
    II(0x00139568, 0x1)   pushw(cs);                            /* push cs */
    II(0x00139569, 0x3)   callw(0x00137640, -0x1f2c);           /* call 0x137640 */
    II(0x0013956c, 0x1)   cli();                                /* cli  */
    II(0x0013956d, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0013956f, 0x4)   jnzw(0x001395ec, 0x79);               /* jnz word 0x1395ec */
    II(0x00139573, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x00139576, 0x1)   pushw(ds);                            /* push ds */
    II(0x00139577, 0x1)   popw(es);                             /* pop es */
    II(0x00139578, 0x3)   mov(di, 0x50c4);                      /* mov di, 0x50c4 */
    II(0x0013957b, 0x5)   mov(eax, memd_a16(es, di + 0x68));    /* mov eax, [es:di+0x68] */
    II(0x00139580, 0x3)   or_(eax, eax);                        /* or eax, eax */
    II(0x00139583, 0x4)   jzw(0x0013958f, 0x8);                 /* jz word 0x13958f */
    II(0x00139587, 0x4)   les(di, ds, 0x1f54);                  /* les di, [0x1f54] */
    II(0x0013958b, 0x4)   mov(memd_a16(es, di), eax);           /* mov [es:di], eax */
l_0x0013958f:
    II(0x0013958f, 0x1)   pushw(ds);                            /* push ds */
    II(0x00139590, 0x1)   popw(es);                             /* pop es */
    II(0x00139591, 0x3)   mov(di, 0x50c4);                      /* mov di, 0x50c4 */
    II(0x00139594, 0x2)   xor_(al, al);                         /* xor al, al */
    II(0x00139596, 0x3)   mov(memb_a16(ds, 0x996), al);         /* mov [0x996], al */
    II(0x00139599, 0x5)   mov(eax, memd_a16(es, di + 0x28));    /* mov eax, [es:di+0x28] */
    II(0x0013959e, 0x5)   mov(ebx, memd_a16(es, di + 0x34));    /* mov ebx, [es:di+0x34] */
    II(0x001395a3, 0x5)   mov(ecx, memd_a16(es, di + 0x2c));    /* mov ecx, [es:di+0x2c] */
    II(0x001395a8, 0x5)   mov(edx, memd_a16(es, di + 0x30));    /* mov edx, [es:di+0x30] */
    II(0x001395ad, 0x5)   mov(esi, memd_a16(es, di + 0x40));    /* mov esi, [es:di+0x40] */
    II(0x001395b2, 0x5)   mov(ebp, memd_a16(es, di + 0x3c));    /* mov ebp, [es:di+0x3c] */
    II(0x001395b7, 0x4)   mov(ds, memw_a16(es, di + 0x54));     /* mov ds, [es:di+0x54] */
    II(0x001395bb, 0x4)   mov(gs, memw_a16(es, di + 0x5c));     /* mov gs, [es:di+0x5c] */
    II(0x001395bf, 0x4)   mov(fs, memw_a16(es, di + 0x58));     /* mov fs, [es:di+0x58] */
    II(0x001395c3, 0x4)   mov(ss, memw_a16(es, di + 0x50));     /* mov ss, [es:di+0x50] */
    II(0x001395c7, 0x5)   mov(esp, memd_a16(es, di + 0x38));    /* mov esp, [es:di+0x38] */
    II(0x001395cc, 0x5)   pushd(memd_a16(es, di + 0x24));       /* push dword [es:di+0x24] */
    II(0x001395d1, 0x4)   pushw(memw_a16(es, di + 0x4c));       /* push word [es:di+0x4c] */
    II(0x001395d5, 0x4)   pushw(memw_a16(es, di + 0x4c));       /* push word [es:di+0x4c] */
    II(0x001395d9, 0x5)   pushd(memd_a16(es, di + 0x20));       /* push dword [es:di+0x20] */
    II(0x001395de, 0x4)   pushw(memw_a16(es, di + 0x48));       /* push word [es:di+0x48] */
    II(0x001395e2, 0x5)   mov(edi, memd_a16(es, di + 0x44));    /* mov edi, [es:di+0x44] */
    II(0x001395e7, 0x1)   popw(es);                             /* pop es */
    II(0x001395e8, 0x2)   clts();                               /* clts  */
    II(0x001395ea, 0x2)   iretd();                              /* iretd  */
l_0x001395ec:
    II(0x001395ec, 0x1)   cli();                                /* cli  */
    II(0x001395ed, 0x1)   cld();                                /* cld  */
    II(0x001395ee, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x001395f1, 0x1)   pushw(ds);                            /* push ds */
    II(0x001395f2, 0x1)   popw(es);                             /* pop es */
    II(0x001395f3, 0x3)   mov(di, 0x50c4);                      /* mov di, 0x50c4 */
    II(0x001395f6, 0x5)   mov(eax, memd_a16(es, di + 0x68));    /* mov eax, [es:di+0x68] */
    II(0x001395fb, 0x3)   or_(eax, eax);                        /* or eax, eax */
    II(0x001395fe, 0x4)   jzw(0x0013960a, 0x8);                 /* jz word 0x13960a */
    II(0x00139602, 0x4)   les(di, ds, 0x1f54);                  /* les di, [0x1f54] */
    II(0x00139606, 0x4)   mov(memd_a16(es, di), eax);           /* mov [es:di], eax */
l_0x0013960a:
    II(0x0013960a, 0x1)   cli();                                /* cli  */
    II(0x0013960b, 0x1)   pushw(ds);                            /* push ds */
    II(0x0013960c, 0x1)   popw(es);                             /* pop es */
    II(0x0013960d, 0x3)   mov(di, 0x50c4);                      /* mov di, 0x50c4 */
    II(0x00139610, 0x2)   xor_(al, al);                         /* xor al, al */
    II(0x00139612, 0x3)   mov(memb_a16(ds, 0x996), al);         /* mov [0x996], al */
    II(0x00139615, 0x5)   mov(eax, memd_a16(es, di + 0x28));    /* mov eax, [es:di+0x28] */
    II(0x0013961a, 0x5)   mov(ebx, memd_a16(es, di + 0x34));    /* mov ebx, [es:di+0x34] */
    II(0x0013961f, 0x5)   mov(ecx, memd_a16(es, di + 0x2c));    /* mov ecx, [es:di+0x2c] */
    II(0x00139624, 0x5)   mov(edx, memd_a16(es, di + 0x30));    /* mov edx, [es:di+0x30] */
    II(0x00139629, 0x5)   mov(esi, memd_a16(es, di + 0x40));    /* mov esi, [es:di+0x40] */
    II(0x0013962e, 0x5)   mov(ebp, memd_a16(es, di + 0x3c));    /* mov ebp, [es:di+0x3c] */
    II(0x00139633, 0x4)   mov(ds, memw_a16(es, di + 0x54));     /* mov ds, [es:di+0x54] */
    II(0x00139637, 0x4)   mov(gs, memw_a16(es, di + 0x5c));     /* mov gs, [es:di+0x5c] */
    II(0x0013963b, 0x4)   mov(fs, memw_a16(es, di + 0x58));     /* mov fs, [es:di+0x58] */
    II(0x0013963f, 0x4)   mov(ss, memw_a16(es, di + 0x50));     /* mov ss, [es:di+0x50] */
    II(0x00139643, 0x5)   mov(esp, memd_a16(es, di + 0x38));    /* mov esp, [es:di+0x38] */
    II(0x00139648, 0x5)   pushd(memd_a16(es, di + 0x24));       /* push dword [es:di+0x24] */
    II(0x0013964d, 0x4)   pushw(memw_a16(es, di + 0x4c));       /* push word [es:di+0x4c] */
    II(0x00139651, 0x4)   pushw(memw_a16(es, di + 0x4c));       /* push word [es:di+0x4c] */
    II(0x00139655, 0x5)   pushd(memd_a16(es, di + 0x20));       /* push dword [es:di+0x20] */
    II(0x0013965a, 0x5)   cmp(memw_a16(es, di + 0x5a), 0);      /* cmp word [es:di+0x5a], 0x0 */
    II(0x0013965f, 0x4)   jnzw(0x00139667, 0x4);                /* jnz word 0x139667 */
    II(0x00139663, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x00139665, 0x2)   pushw(0x1);                           /* push 0x1 */
l_0x00139667:
    II(0x00139667, 0x4)   pushw(memw_a16(es, di + 0x6f));       /* push word [es:di+0x6f] */
    II(0x0013966b, 0x4)   pushw(memw_a16(es, di + 0x6d));       /* push word [es:di+0x6d] */
    II(0x0013966f, 0x4)   pushw(memw_a16(es, di + 0x48));       /* push word [es:di+0x48] */
    II(0x00139673, 0x5)   mov(edi, memd_a16(es, di + 0x44));    /* mov edi, [es:di+0x44] */
    II(0x00139678, 0x1)   popw(es);                             /* pop es */
    II(0x00139679, 0x2)   clts();                               /* clts  */
    II(0x0013967b, 0x1)   retfw();                              /* retf  */
FUNC_END

