FUNC_BEGIN(0x00006d67, 0x62e4d183a70499ca, 0x10, ({0x56, 0xbe, 0, 0x9f, 0xeb, 0x3, 0x83, 0xc6, 0x40, 0x81, 0xfe, 0, 0xa0, 0x74, 0xf, 0x68, 0x92, 0, 0x56, 0xe8, 0xc9, 0xff, 0x5b, 0x5b, 0xeb, 0xec, 0x81, 0xc6, 0, 0x2, 0xb, 0xf6, 0x74, 0x20, 0x8b, 0xce, 0xc1, 0xe9, 0xc, 0xb8, 0, 0xd0, 0xd3, 0xe8, 0x25, 0x1, 0, 0x3d, 0x1, 0, 0x1b, 0xc0, 0x24, 0xf8, 0x5, 0x9a, 0, 0x50, 0x56, 0xe8, 0xa1, 0xff, 0x5b, 0x5b, 0xeb, 0xd8, 0x5e, 0xc3}))
    II(0x00006d67, 0x1)   pushw(si);                            /* push si */
    II(0x00006d68, 0x3)   mov(si, 0x9f00);                      /* mov si, 0x9f00 */
    II(0x00006d6b, 0x2)   jmpw(0x00006d70, 0x3);                /* jmp 0x6d70 */
l_0x00006d6d:
    II(0x00006d6d, 0x3)   add(si, 0x40);                        /* add si, 0x40 */
l_0x00006d70:
    II(0x00006d70, 0x4)   cmp(si, 0xa000);                      /* cmp si, 0xa000 */
    II(0x00006d74, 0x2)   jzw(0x00006d85, 0xf);                 /* jz 0x6d85 */
    II(0x00006d76, 0x3)   pushw(0x92);                          /* push word 0x92 */
    II(0x00006d79, 0x1)   pushw(si);                            /* push si */
    II(0x00006d7a, 0x3)   callw(0x00006d46, -0x37);             /* call 0x6d46 */
    II(0x00006d7d, 0x1)   popw(bx);                             /* pop bx */
    II(0x00006d7e, 0x1)   popw(bx);                             /* pop bx */
    II(0x00006d7f, 0x2)   jmpw(0x00006d6d, -0x14);              /* jmp 0x6d6d */
l_0x00006d81:
    II(0x00006d81, 0x4)   add(si, 0x200);                       /* add si, 0x200 */
l_0x00006d85:
    II(0x00006d85, 0x2)   or_(si, si);                          /* or si, si */
    II(0x00006d87, 0x2)   jzw(0x00006da9, 0x20);                /* jz 0x6da9 */
    II(0x00006d89, 0x2)   mov(cx, si);                          /* mov cx, si */
    II(0x00006d8b, 0x3)   shr(cx, 0xc);                         /* shr cx, 0xc */
    II(0x00006d8e, 0x3)   mov(ax, 0xd000);                      /* mov ax, 0xd000 */
    II(0x00006d91, 0x2)   shr(ax, cl);                          /* shr ax, cl */
    II(0x00006d93, 0x3)   and_(ax, 0x1);                        /* and ax, 0x1 */
    II(0x00006d96, 0x3)   cmp(ax, 0x1);                         /* cmp ax, 0x1 */
    II(0x00006d99, 0x2)   sbb(ax, ax);                          /* sbb ax, ax */
    II(0x00006d9b, 0x2)   and_(al, 0xf8);                       /* and al, 0xf8 */
    II(0x00006d9d, 0x3)   add(ax, 0x9a);                        /* add ax, 0x9a */
    II(0x00006da0, 0x1)   pushw(ax);                            /* push ax */
    II(0x00006da1, 0x1)   pushw(si);                            /* push si */
    II(0x00006da2, 0x3)   callw(0x00006d46, -0x5f);             /* call 0x6d46 */
    II(0x00006da5, 0x1)   popw(bx);                             /* pop bx */
    II(0x00006da6, 0x1)   popw(bx);                             /* pop bx */
    II(0x00006da7, 0x2)   jmpw(0x00006d81, -0x28);              /* jmp 0x6d81 */
l_0x00006da9:
    II(0x00006da9, 0x1)   popw(si);                             /* pop si */
    II(0x00006daa, 0x1)   retw();                               /* ret  */
FUNC_END

