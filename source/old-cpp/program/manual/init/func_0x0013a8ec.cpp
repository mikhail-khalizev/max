FUNC_BEGIN(0x0013a8ec, 0xb0c2d4c5832de121, 0x10, ({0xc8, 0x26, 0, 0, 0x57, 0x56, 0x1e, 0xb8, 0x68, 0x3e, 0x8e, 0xd8, 0xc7, 0x46, 0xf2, 0, 0, 0xc4, 0x5e, 0x6, 0x26, 0x8b, 0x47, 0x14, 0x26, 0x8b, 0x57, 0x16, 0x89, 0x46, 0xf4, 0x89, 0x56, 0xf6, 0x26, 0x8b, 0x47, 0x1c, 0x26, 0x8b, 0x57, 0x1e, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0x26, 0xf7, 0x47, 0xa, 0xff, 0xff, 0x74, 0x8, 0xc7, 0x46, 0xf2, 0x23, 0x80, 0xe9, 0xca, 0x1, 0x26, 0x8b, 0x47, 0x8, 0x89, 0x46, 0xdc, 0x50, 0xe, 0xe8, 0x64, 0x1e, 0x83, 0xc4, 0x2, 0x89, 0x46, 0xee, 0x89, 0x56, 0xf0, 0x3d, 0xff, 0xff, 0x75, 0xc, 0x3b, 0xd0, 0x75, 0x8, 0xc7, 0x46, 0xf2, 0x23, 0x80, 0xe9, 0xa4, 0x1, 0x8b, 0x46, 0xf4, 0x8b, 0x56, 0xf6, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x1, 0x46, 0xee, 0x11, 0x56, 0xf0, 0x8b, 0x46, 0xee, 0x8b, 0x56, 0xf0, 0x5, 0, 0, 0x83, 0xd2, 0x1, 0x8a, 0xf2, 0x8a, 0xd4, 0x8a, 0xe0, 0x2a, 0xc0, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0x89, 0x46, 0xf8, 0x89, 0x56, 0xfa, 0xc4, 0x5e, 0x6, 0x26, 0x8b, 0x4f, 0x18, 0x26, 0x8b, 0x77, 0x1a, 0x89, 0x4e, 0xde, 0x89, 0x76, 0xe0, 0x3, 0x46, 0xf4, 0x13, 0x56, 0xf6, 0x52, 0x50, 0x56, 0x51, 0x1e, 0x68, 0x55, 0x13, 0x90, 0xe, 0xe8, 0x8b, 0x66, 0x83, 0xc4, 0xc, 0xc4, 0x5e, 0x6, 0x26, 0x80, 0x67, 0x2c, 0xfe, 0x8b, 0x46, 0xee, 0x8b, 0x56, 0xf0, 0x89, 0x46, 0xea, 0x89, 0x56, 0xec, 0x2b, 0xc0, 0x89, 0x46, 0xe8, 0x89, 0x46, 0xe6, 0xeb, 0x11, 0x90, 0x83, 0x46, 0xe6, 0x1, 0x83, 0x56, 0xe8, 0, 0x83, 0x46, 0xea, 0x1, 0x83, 0x56, 0xec, 0, 0x8b, 0x46, 0xfc, 0x8b, 0x56, 0xfe, 0x39, 0x56, 0xe8, 0x77, 0x53, 0x72, 0x5, 0x39, 0x46, 0xe6, 0x73, 0x4c, 0xff, 0x76, 0xec, 0xff, 0x76, 0xea, 0xff, 0x36, 0xa6, 0x1f, 0xff, 0x36, 0xa4, 0x1f, 0xe8, 0xab, 0xe6, 0x83, 0xc4, 0x8, 0x89, 0x46, 0xda, 0xb, 0xc0, 0x75, 0xb, 0xc7, 0x46, 0xf2, 0x2, 0x80, 0xe9, 0xcb, 0, 0xeb, 0x24, 0x90, 0xa0, 0xa6, 0x51, 0x2a, 0xe4, 0x3b, 0x46, 0xda, 0x74, 0x19, 0xa0, 0xb5, 0x51, 0x3b, 0x46, 0xda, 0x74, 0x11, 0x6a, 0, 0x6a, 0x1, 0xff, 0x76, 0xec, 0xff, 0x76, 0xea, 0xe, 0xe8, 0x12, 0x1b, 0x83, 0xc4, 0x8, 0xeb, 0x93, 0x90, 0x8b, 0x46, 0xee, 0x8b, 0x56, 0xf0, 0x89, 0x46, 0xea, 0x89, 0x56, 0xec, 0x80, 0x4e, 0xe2, 0x7, 0x2b, 0xc0, 0x89, 0x46, 0xe8, 0x89, 0x46, 0xe6, 0xeb, 0x19, 0x83, 0x46, 0xe6, 0x1, 0x83, 0x56, 0xe8, 0, 0x83, 0x46, 0xea, 0x1, 0x83, 0x56, 0xec, 0, 0x81, 0x46, 0xde, 0, 0x10, 0x83, 0x56, 0xe0, 0, 0x8b, 0x46, 0xfc, 0x8b, 0x56, 0xfe, 0x39, 0x56, 0xe8, 0x77, 0x5e, 0x72, 0x5, 0x39, 0x46, 0xe6, 0x73, 0x57, 0xa0, 0xa6, 0x51, 0x2a, 0xe4, 0x50, 0xff, 0x76, 0xec, 0xff, 0x76, 0xea, 0xff, 0x36, 0xa6, 0x1f, 0xff, 0x36, 0xa4, 0x1f, 0xe8, 0x33, 0xe7, 0x83, 0xc4, 0xa, 0xff, 0x76, 0xe0, 0xff, 0x76, 0xde, 0x90, 0xe, 0xe8, 0xbc, 0xab, 0x83, 0xc4, 0x4, 0x25, 0, 0xf0, 0x8b, 0x4e, 0xe2, 0x80, 0xe5, 0xf, 0xb, 0xc1, 0x89, 0x46, 0xe2, 0x89, 0x56, 0xe4, 0x8b, 0xd7, 0x8e, 0x6, 0xaa, 0, 0x66, 0x8b, 0x3e, 0x8c, 0x4f, 0x66, 0x8b, 0x5e, 0xea, 0x66, 0x8b, 0x46, 0xe2, 0x26, 0x67, 0x66, 0x89, 0x4, 0x9f, 0x8b, 0xfa, 0xe9, 0x7e, 0xff, 0xf, 0x20, 0xd8, 0xf, 0x22, 0xd8, 0x83, 0x7e, 0xf2, 0, 0x74, 0x14, 0x8b, 0x46, 0xf2, 0x99, 0xc4, 0x5e, 0x6, 0x26, 0x89, 0x47, 0x20, 0x26, 0x89, 0x57, 0x22, 0x26, 0x80, 0x4f, 0x2c, 0x1, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb}))
    II(0x0013a8ec, 0x4)   enterw(0x26, 0);                      /* enter 0x26, 0x0 */
    II(0x0013a8f0, 0x1)   pushw(di);                            /* push di */
    II(0x0013a8f1, 0x1)   pushw(si);                            /* push si */
    II(0x0013a8f2, 0x1)   pushw(ds);                            /* push ds */
    II(0x0013a8f3, 0x3)   mov(ax, 0x3e68);                      /* mov ax, 0x3e68 */
    II(0x0013a8f6, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x0013a8f8, 0x5)   mov(memw_a16(ss, bp - 0xe), 0);       /* mov word [bp-0xe], 0x0 */
    II(0x0013a8fd, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x0013a900, 0x4)   mov(ax, memw_a16(es, bx + 0x14));     /* mov ax, [es:bx+0x14] */
    II(0x0013a904, 0x4)   mov(dx, memw_a16(es, bx + 0x16));     /* mov dx, [es:bx+0x16] */
    II(0x0013a908, 0x3)   mov(memw_a16(ss, bp - 0xc), ax);      /* mov [bp-0xc], ax */
    II(0x0013a90b, 0x3)   mov(memw_a16(ss, bp - 0xa), dx);      /* mov [bp-0xa], dx */
    II(0x0013a90e, 0x4)   mov(ax, memw_a16(es, bx + 0x1c));     /* mov ax, [es:bx+0x1c] */
    II(0x0013a912, 0x4)   mov(dx, memw_a16(es, bx + 0x1e));     /* mov dx, [es:bx+0x1e] */
    II(0x0013a916, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x0013a919, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
    II(0x0013a91c, 0x6)   test(memw_a16(es, bx + 0xa), 0xffff); /* test word [es:bx+0xa], 0xffff */
    II(0x0013a922, 0x2)   jzw(0x0013a92c, 0x8);                 /* jz 0x13a92c */
    II(0x0013a924, 0x5)   mov(memw_a16(ss, bp - 0xe), 0x8023);  /* mov word [bp-0xe], 0x8023 */
    II(0x0013a929, 0x3)   jmpw(0x0013aaf6, 0x1ca);              /* jmp 0x13aaf6 */
l_0x0013a92c:
    II(0x0013a92c, 0x4)   mov(ax, memw_a16(es, bx + 0x8));      /* mov ax, [es:bx+0x8] */
    II(0x0013a930, 0x3)   mov(memw_a16(ss, bp - 0x24), ax);     /* mov [bp-0x24], ax */
    II(0x0013a933, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013a934, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013a935, 0x3)   callw(0x0013c79c, 0x1e64);            /* call 0x13c79c */
    II(0x0013a938, 0x3)   add(sp, 0x2);                         /* add sp, 0x2 */
    II(0x0013a93b, 0x3)   mov(memw_a16(ss, bp - 0x12), ax);     /* mov [bp-0x12], ax */
    II(0x0013a93e, 0x3)   mov(memw_a16(ss, bp - 0x10), dx);     /* mov [bp-0x10], dx */
    II(0x0013a941, 0x3)   cmp(ax, 0xffff);                      /* cmp ax, 0xffff */
    II(0x0013a944, 0x2)   jnzw(0x0013a952, 0xc);                /* jnz 0x13a952 */
    II(0x0013a946, 0x2)   cmp(dx, ax);                          /* cmp dx, ax */
    II(0x0013a948, 0x2)   jnzw(0x0013a952, 0x8);                /* jnz 0x13a952 */
    II(0x0013a94a, 0x5)   mov(memw_a16(ss, bp - 0xe), 0x8023);  /* mov word [bp-0xe], 0x8023 */
    II(0x0013a94f, 0x3)   jmpw(0x0013aaf6, 0x1a4);              /* jmp 0x13aaf6 */
l_0x0013a952:
    II(0x0013a952, 0x3)   mov(ax, memw_a16(ss, bp - 0xc));      /* mov ax, [bp-0xc] */
    II(0x0013a955, 0x3)   mov(dx, memw_a16(ss, bp - 0xa));      /* mov dx, [bp-0xa] */
    II(0x0013a958, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x0013a95a, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x0013a95c, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x0013a95e, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x0013a960, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013a962, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013a964, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013a966, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013a968, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013a96a, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013a96c, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013a96e, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013a970, 0x3)   add(memw_a16(ss, bp - 0x12), ax);     /* add [bp-0x12], ax */
    II(0x0013a973, 0x3)   adc(memw_a16(ss, bp - 0x10), dx);     /* adc [bp-0x10], dx */
    II(0x0013a976, 0x3)   mov(ax, memw_a16(ss, bp - 0x12));     /* mov ax, [bp-0x12] */
    II(0x0013a979, 0x3)   mov(dx, memw_a16(ss, bp - 0x10));     /* mov dx, [bp-0x10] */
    II(0x0013a97c, 0x3)   add(ax, 0);                           /* add ax, 0x0 */
    II(0x0013a97f, 0x3)   adc(dx, 0x1);                         /* adc dx, 0x1 */
    II(0x0013a982, 0x2)   mov(dh, dl);                          /* mov dh, dl */
    II(0x0013a984, 0x2)   mov(dl, ah);                          /* mov dl, ah */
    II(0x0013a986, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x0013a988, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x0013a98a, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013a98c, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013a98e, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013a990, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013a992, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013a994, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013a996, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013a998, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013a99a, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x0013a99d, 0x3)   mov(memw_a16(ss, bp - 0x6), dx);      /* mov [bp-0x6], dx */
    II(0x0013a9a0, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x0013a9a3, 0x4)   mov(cx, memw_a16(es, bx + 0x18));     /* mov cx, [es:bx+0x18] */
    II(0x0013a9a7, 0x4)   mov(si, memw_a16(es, bx + 0x1a));     /* mov si, [es:bx+0x1a] */
    II(0x0013a9ab, 0x3)   mov(memw_a16(ss, bp - 0x22), cx);     /* mov [bp-0x22], cx */
    II(0x0013a9ae, 0x3)   mov(memw_a16(ss, bp - 0x20), si);     /* mov [bp-0x20], si */
    II(0x0013a9b1, 0x3)   add(ax, memw_a16(ss, bp - 0xc));      /* add ax, [bp-0xc] */
    II(0x0013a9b4, 0x3)   adc(dx, memw_a16(ss, bp - 0xa));      /* adc dx, [bp-0xa] */
    II(0x0013a9b7, 0x1)   pushw(dx);                            /* push dx */
    II(0x0013a9b8, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013a9b9, 0x1)   pushw(si);                            /* push si */
    II(0x0013a9ba, 0x1)   pushw(cx);                            /* push cx */
    II(0x0013a9bb, 0x1)   pushw(ds);                            /* push ds */
    II(0x0013a9bc, 0x3)   pushw(0x1355);                        /* push word 0x1355 */
//    II(0x0013a9bf, 0x1)   nop();                                /* nop  */
    II(0x0013a9c0, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013a9c1, 0x3)   callw(0x0014104f, 0x668b);            /* call 0x14104f */
    II(0x0013a9c4, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x0013a9c7, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x0013a9ca, 0x5)   and_(memb_a16(es, bx + 0x2c), -0x2 /* 0xfe */); /* and byte [es:bx+0x2c], 0xfe */
    II(0x0013a9cf, 0x3)   mov(ax, memw_a16(ss, bp - 0x12));     /* mov ax, [bp-0x12] */
    II(0x0013a9d2, 0x3)   mov(dx, memw_a16(ss, bp - 0x10));     /* mov dx, [bp-0x10] */
    II(0x0013a9d5, 0x3)   mov(memw_a16(ss, bp - 0x16), ax);     /* mov [bp-0x16], ax */
    II(0x0013a9d8, 0x3)   mov(memw_a16(ss, bp - 0x14), dx);     /* mov [bp-0x14], dx */
    II(0x0013a9db, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0013a9dd, 0x3)   mov(memw_a16(ss, bp - 0x18), ax);     /* mov [bp-0x18], ax */
    II(0x0013a9e0, 0x3)   mov(memw_a16(ss, bp - 0x1a), ax);     /* mov [bp-0x1a], ax */
    II(0x0013a9e3, 0x2)   jmpw(0x0013a9f6, 0x11);               /* jmp 0x13a9f6 */
//    II(0x0013a9e5, 0x1)   /* Недостижимый код. */
l_0x0013a9e6:
    II(0x0013a9e6, 0x4)   add(memw_a16(ss, bp - 0x1a), 0x1);    /* add word [bp-0x1a], 0x1 */
    II(0x0013a9ea, 0x4)   adc(memw_a16(ss, bp - 0x18), 0);      /* adc word [bp-0x18], 0x0 */
    II(0x0013a9ee, 0x4)   add(memw_a16(ss, bp - 0x16), 0x1);    /* add word [bp-0x16], 0x1 */
    II(0x0013a9f2, 0x4)   adc(memw_a16(ss, bp - 0x14), 0);      /* adc word [bp-0x14], 0x0 */
l_0x0013a9f6:
    II(0x0013a9f6, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x0013a9f9, 0x3)   mov(dx, memw_a16(ss, bp - 0x2));      /* mov dx, [bp-0x2] */
    II(0x0013a9fc, 0x3)   cmp(memw_a16(ss, bp - 0x18), dx);     /* cmp [bp-0x18], dx */
    II(0x0013a9ff, 0x2)   jaw(0x0013aa54, 0x53);                /* ja 0x13aa54 */
    II(0x0013aa01, 0x2)   jbw(0x0013aa08, 0x5);                 /* jb 0x13aa08 */
    II(0x0013aa03, 0x3)   cmp(memw_a16(ss, bp - 0x1a), ax);     /* cmp [bp-0x1a], ax */
    II(0x0013aa06, 0x2)   jaew(0x0013aa54, 0x4c);               /* jae 0x13aa54 */
l_0x0013aa08:
    II(0x0013aa08, 0x3)   pushw(memw_a16(ss, bp - 0x14));       /* push word [bp-0x14] */
    II(0x0013aa0b, 0x3)   pushw(memw_a16(ss, bp - 0x16));       /* push word [bp-0x16] */
    II(0x0013aa0e, 0x4)   pushw(memw_a16(ds, 0x1fa6));          /* push word [0x1fa6] */
    II(0x0013aa12, 0x4)   pushw(memw_a16(ds, 0x1fa4));          /* push word [0x1fa4] */
    II(0x0013aa16, 0x3)   callw(0x001390c4, -0x1955);           /* call 0x1390c4 */
    II(0x0013aa19, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013aa1c, 0x3)   mov(memw_a16(ss, bp - 0x26), ax);     /* mov [bp-0x26], ax */
    II(0x0013aa1f, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0013aa21, 0x2)   jnzw(0x0013aa2e, 0xb);                /* jnz 0x13aa2e */
    II(0x0013aa23, 0x5)   mov(memw_a16(ss, bp - 0xe), 0x8002);  /* mov word [bp-0xe], 0x8002 */
    II(0x0013aa28, 0x3)   jmpw(0x0013aaf6, 0xcb);               /* jmp 0x13aaf6 */
//    II(0x0013aa2b, 0x3)   /* Недостижимый код. */
l_0x0013aa2e:
    II(0x0013aa2e, 0x3)   mov(al, memb_a16(ds, 0x51a6));        /* mov al, [0x51a6] */
    II(0x0013aa31, 0x2)   sub(ah, ah);                          /* sub ah, ah */
    II(0x0013aa33, 0x3)   cmp(ax, memw_a16(ss, bp - 0x26));     /* cmp ax, [bp-0x26] */
    II(0x0013aa36, 0x2)   jzw(0x0013aa51, 0x19);                /* jz 0x13aa51 */
    II(0x0013aa38, 0x3)   mov(al, memb_a16(ds, 0x51b5));        /* mov al, [0x51b5] */
    II(0x0013aa3b, 0x3)   cmp(ax, memw_a16(ss, bp - 0x26));     /* cmp ax, [bp-0x26] */
    II(0x0013aa3e, 0x2)   jzw(0x0013aa51, 0x11);                /* jz 0x13aa51 */
    II(0x0013aa40, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0013aa42, 0x2)   pushw(0x1);                           /* push 0x1 */
    II(0x0013aa44, 0x3)   pushw(memw_a16(ss, bp - 0x14));       /* push word [bp-0x14] */
    II(0x0013aa47, 0x3)   pushw(memw_a16(ss, bp - 0x16));       /* push word [bp-0x16] */
    II(0x0013aa4a, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013aa4b, 0x3)   callw(0x0013c560, 0x1b12);            /* call 0x13c560 */
    II(0x0013aa4e, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
l_0x0013aa51:
    II(0x0013aa51, 0x2)   jmpw(0x0013a9e6, -0x6d);              /* jmp 0x13a9e6 */
//    II(0x0013aa53, 0x1)   /* Недостижимый код. */
l_0x0013aa54:
    II(0x0013aa54, 0x3)   mov(ax, memw_a16(ss, bp - 0x12));     /* mov ax, [bp-0x12] */
    II(0x0013aa57, 0x3)   mov(dx, memw_a16(ss, bp - 0x10));     /* mov dx, [bp-0x10] */
    II(0x0013aa5a, 0x3)   mov(memw_a16(ss, bp - 0x16), ax);     /* mov [bp-0x16], ax */
    II(0x0013aa5d, 0x3)   mov(memw_a16(ss, bp - 0x14), dx);     /* mov [bp-0x14], dx */
    II(0x0013aa60, 0x4)   or_(memb_a16(ss, bp - 0x1e), 0x7);    /* or byte [bp-0x1e], 0x7 */
    II(0x0013aa64, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0013aa66, 0x3)   mov(memw_a16(ss, bp - 0x18), ax);     /* mov [bp-0x18], ax */
    II(0x0013aa69, 0x3)   mov(memw_a16(ss, bp - 0x1a), ax);     /* mov [bp-0x1a], ax */
    II(0x0013aa6c, 0x2)   jmpw(0x0013aa87, 0x19);               /* jmp 0x13aa87 */
l_0x0013aa6e:
    II(0x0013aa6e, 0x4)   add(memw_a16(ss, bp - 0x1a), 0x1);    /* add word [bp-0x1a], 0x1 */
    II(0x0013aa72, 0x4)   adc(memw_a16(ss, bp - 0x18), 0);      /* adc word [bp-0x18], 0x0 */
    II(0x0013aa76, 0x4)   add(memw_a16(ss, bp - 0x16), 0x1);    /* add word [bp-0x16], 0x1 */
    II(0x0013aa7a, 0x4)   adc(memw_a16(ss, bp - 0x14), 0);      /* adc word [bp-0x14], 0x0 */
    II(0x0013aa7e, 0x5)   add(memw_a16(ss, bp - 0x22), 0x1000); /* add word [bp-0x22], 0x1000 */
    II(0x0013aa83, 0x4)   adc(memw_a16(ss, bp - 0x20), 0);      /* adc word [bp-0x20], 0x0 */
l_0x0013aa87:
    II(0x0013aa87, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x0013aa8a, 0x3)   mov(dx, memw_a16(ss, bp - 0x2));      /* mov dx, [bp-0x2] */
    II(0x0013aa8d, 0x3)   cmp(memw_a16(ss, bp - 0x18), dx);     /* cmp [bp-0x18], dx */
    II(0x0013aa90, 0x2)   jaw(0x0013aaf0, 0x5e);                /* ja 0x13aaf0 */
    II(0x0013aa92, 0x2)   jbw(0x0013aa99, 0x5);                 /* jb 0x13aa99 */
    II(0x0013aa94, 0x3)   cmp(memw_a16(ss, bp - 0x1a), ax);     /* cmp [bp-0x1a], ax */
    II(0x0013aa97, 0x2)   jaew(0x0013aaf0, 0x57);               /* jae 0x13aaf0 */
l_0x0013aa99:
    II(0x0013aa99, 0x3)   mov(al, memb_a16(ds, 0x51a6));        /* mov al, [0x51a6] */
    II(0x0013aa9c, 0x2)   sub(ah, ah);                          /* sub ah, ah */
    II(0x0013aa9e, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013aa9f, 0x3)   pushw(memw_a16(ss, bp - 0x14));       /* push word [bp-0x14] */
    II(0x0013aaa2, 0x3)   pushw(memw_a16(ss, bp - 0x16));       /* push word [bp-0x16] */
    II(0x0013aaa5, 0x4)   pushw(memw_a16(ds, 0x1fa6));          /* push word [0x1fa6] */
    II(0x0013aaa9, 0x4)   pushw(memw_a16(ds, 0x1fa4));          /* push word [0x1fa4] */
    II(0x0013aaad, 0x3)   callw(0x001391e3, -0x18cd);           /* call 0x1391e3 */
    II(0x0013aab0, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x0013aab3, 0x3)   pushw(memw_a16(ss, bp - 0x20));       /* push word [bp-0x20] */
    II(0x0013aab6, 0x3)   pushw(memw_a16(ss, bp - 0x22));       /* push word [bp-0x22] */
//    II(0x0013aab9, 0x1)   nop();                                /* nop  */
    II(0x0013aaba, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013aabb, 0x3)   callw(0x0013567a, -0x5444);           /* call 0x13567a */
    II(0x0013aabe, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x0013aac1, 0x3)   and_(ax, 0xf000);                     /* and ax, 0xf000 */
    II(0x0013aac4, 0x3)   mov(cx, memw_a16(ss, bp - 0x1e));     /* mov cx, [bp-0x1e] */
    II(0x0013aac7, 0x3)   and_(ch, 0xf);                        /* and ch, 0xf */
    II(0x0013aaca, 0x2)   or_(ax, cx);                          /* or ax, cx */
    II(0x0013aacc, 0x3)   mov(memw_a16(ss, bp - 0x1e), ax);     /* mov [bp-0x1e], ax */
    II(0x0013aacf, 0x3)   mov(memw_a16(ss, bp - 0x1c), dx);     /* mov [bp-0x1c], dx */
    II(0x0013aad2, 0x2)   mov(dx, di);                          /* mov dx, di */
    II(0x0013aad4, 0x4)   mov(es, memw_a16(ds, 0xaa));          /* mov es, [0xaa] */
    II(0x0013aad8, 0x5)   mov(edi, memd_a16(ds, 0x4f8c));       /* mov edi, [0x4f8c] */
    II(0x0013aadd, 0x4)   mov(ebx, memd_a16(ss, bp - 0x16));    /* mov ebx, [bp-0x16] */
    II(0x0013aae1, 0x4)   mov(eax, memd_a16(ss, bp - 0x1e));    /* mov eax, [bp-0x1e] */
    II(0x0013aae5, 0x6)   mov(memd_a32(es, edi + ebx * 0x4), eax); /* mov [es:edi+ebx*4], eax */
    II(0x0013aaeb, 0x2)   mov(di, dx);                          /* mov di, dx */
    II(0x0013aaed, 0x3)   jmpw(0x0013aa6e, -0x82);              /* jmp 0x13aa6e */
l_0x0013aaf0:
    II(0x0013aaf0, 0x3)   mov(eax, cr3);                        /* mov eax, cr3 */
//    II(0x0013aaf3, 0x3)   mov(cr3, eax);                        /* mov cr3, eax */
l_0x0013aaf6:
    II(0x0013aaf6, 0x4)   cmp(memw_a16(ss, bp - 0xe), 0);       /* cmp word [bp-0xe], 0x0 */
    II(0x0013aafa, 0x2)   jzw(0x0013ab10, 0x14);                /* jz 0x13ab10 */
    II(0x0013aafc, 0x3)   mov(ax, memw_a16(ss, bp - 0xe));      /* mov ax, [bp-0xe] */
    II(0x0013aaff, 0x1)   cwd();                                /* cwd  */
    II(0x0013ab00, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x0013ab03, 0x4)   mov(memw_a16(es, bx + 0x20), ax);     /* mov [es:bx+0x20], ax */
    II(0x0013ab07, 0x4)   mov(memw_a16(es, bx + 0x22), dx);     /* mov [es:bx+0x22], dx */
    II(0x0013ab0b, 0x5)   or_(memb_a16(es, bx + 0x2c), 0x1);    /* or byte [es:bx+0x2c], 0x1 */
l_0x0013ab10:
    II(0x0013ab10, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013ab11, 0x1)   popw(si);                             /* pop si */
    II(0x0013ab12, 0x1)   popw(di);                             /* pop di */
    II(0x0013ab13, 0x1)   leavew();                             /* leave  */
    II(0x0013ab14, 0x1)   retfw();                              /* retf  */
FUNC_END

