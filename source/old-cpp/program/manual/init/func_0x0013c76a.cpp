FUNC_BEGIN(0x0013c76a, 0x98ac5283cc4a624f, 0x10, ({0xc8, 0x6, 0, 0, 0x1e, 0xb8, 0x68, 0x3e, 0x8e, 0xd8, 0x8a, 0x46, 0x6, 0x25, 0xf, 0, 0x89, 0x46, 0xfa, 0x8b, 0xc8, 0xb8, 0x1, 0, 0xd3, 0xe0, 0xf7, 0xd0, 0x89, 0x46, 0xfc, 0x8b, 0x5e, 0x6, 0xc1, 0xeb, 0x4, 0x89, 0x5e, 0xfe, 0xd1, 0xe3, 0x21, 0x87, 0xca, 0xa, 0x1f, 0xc9, 0xcb}))
    II(0x0013c76a, 0x4)   enterw(0x6, 0);                       /* enter 0x6, 0x0 */
    II(0x0013c76e, 0x1)   pushw(ds);                            /* push ds */
    II(0x0013c76f, 0x3)   mov(ax, 0x3e68);                      /* mov ax, 0x3e68 */
    II(0x0013c772, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x0013c774, 0x3)   mov(al, memb_a16(ss, bp + 0x6));      /* mov al, [bp+0x6] */
    II(0x0013c777, 0x3)   and_(ax, 0xf);                        /* and ax, 0xf */
    II(0x0013c77a, 0x3)   mov(memw_a16(ss, bp - 0x6), ax);      /* mov [bp-0x6], ax */
    II(0x0013c77d, 0x2)   mov(cx, ax);                          /* mov cx, ax */
    II(0x0013c77f, 0x3)   mov(ax, 0x1);                         /* mov ax, 0x1 */
    II(0x0013c782, 0x2)   shl(ax, cl);                          /* shl ax, cl */
    II(0x0013c784, 0x2)   not_(ax);                             /* not ax */
    II(0x0013c786, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x0013c789, 0x3)   mov(bx, memw_a16(ss, bp + 0x6));      /* mov bx, [bp+0x6] */
    II(0x0013c78c, 0x3)   shr(bx, 0x4);                         /* shr bx, 0x4 */
    II(0x0013c78f, 0x3)   mov(memw_a16(ss, bp - 0x2), bx);      /* mov [bp-0x2], bx */
    II(0x0013c792, 0x2)   shl(bx, 0x1);                         /* shl bx, 1 */
    II(0x0013c794, 0x4)   and_(memw_a16(ds, bx + 0xaca), ax);   /* and [bx+0xaca], ax */
    II(0x0013c798, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013c799, 0x1)   leavew();                             /* leave  */
    II(0x0013c79a, 0x1)   retfw();                              /* retf  */
FUNC_END

