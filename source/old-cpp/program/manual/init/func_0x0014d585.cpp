FUNC_BEGIN(0x0014d585, 0x95ece6ce1bd94936, 0x10, ({0xc8, 0xc, 0, 0, 0x57, 0x56, 0x8b, 0x5e, 0x4, 0xc1, 0xeb, 0x3, 0xc4, 0x3e, 0xa0, 0xa, 0x26, 0xf6, 0x1, 0x10, 0x74, 0x7a, 0x8b, 0x36, 0x7c, 0x9, 0x8b, 0xc6, 0x32, 0x46, 0x4, 0x25, 0x7, 0, 0x33, 0xf0, 0xc6, 0x46, 0xfe, 0, 0xeb, 0x49, 0x8d, 0x46, 0xf4, 0x50, 0x56, 0xe8, 0xd7, 0x6, 0x5b, 0x5b, 0xb, 0xc0, 0x74, 0x3b, 0xf6, 0x46, 0xfc, 0x10, 0x74, 0x35, 0x8b, 0x46, 0xf4, 0x8b, 0x56, 0xf6, 0x2b, 0x46, 0x6, 0x1b, 0x56, 0x8, 0x8b, 0x4e, 0xa, 0x2b, 0xdb, 0x3b, 0xd3, 0x77, 0x20, 0x72, 0x4, 0x3b, 0xc1, 0x77, 0x1a, 0x3, 0x46, 0xc, 0x13, 0x56, 0xe, 0x89, 0x46, 0xf4, 0x89, 0x56, 0xf6, 0x8d, 0x46, 0xf4, 0x50, 0x56, 0xe8, 0x36, 0x6, 0x5b, 0x5b, 0xc6, 0x46, 0xfe, 0x1, 0x83, 0xee, 0x8, 0x3b, 0x36, 0x34, 0xc, 0x73, 0xae, 0x80, 0x7e, 0xfe, 0, 0x75, 0xe, 0x8b, 0x5e, 0x4, 0xc1, 0xeb, 0x3, 0xc4, 0x3e, 0xa0, 0xa, 0x26, 0x80, 0x21, 0xef, 0x5e, 0x5f, 0xc9, 0xc3}))
    II(0x0014d585, 0x4)   enterw(0xc, 0);                       /* enter 0xc, 0x0 */
    II(0x0014d589, 0x1)   pushw(di);                            /* push di */
    II(0x0014d58a, 0x1)   pushw(si);                            /* push si */
    II(0x0014d58b, 0x3)   mov(bx, memw_a16(ss, bp + 0x4));      /* mov bx, [bp+0x4] */
    II(0x0014d58e, 0x3)   shr(bx, 0x3);                         /* shr bx, 0x3 */
    II(0x0014d591, 0x4)   les(di, ds, 0xaa0);                   /* les di, [0xaa0] */
    II(0x0014d595, 0x4)   test(memb_a16(es, bx + di), 0x10);    /* test byte [es:bx+di], 0x10 */
    II(0x0014d599, 0x2)   jzw(0x0014d615, 0x7a);                /* jz 0x14d615 */
    II(0x0014d59b, 0x4)   mov(si, memw_a16(ds, 0x97c));         /* mov si, [0x97c] */
    II(0x0014d59f, 0x2)   mov(ax, si);                          /* mov ax, si */
    II(0x0014d5a1, 0x3)   xor_(al, memb_a16(ss, bp + 0x4));     /* xor al, [bp+0x4] */
    II(0x0014d5a4, 0x3)   and_(ax, 0x7);                        /* and ax, 0x7 */
    II(0x0014d5a7, 0x2)   xor_(si, ax);                         /* xor si, ax */
    II(0x0014d5a9, 0x4)   mov(memb_a16(ss, bp - 0x2), 0);       /* mov byte [bp-0x2], 0x0 */
    II(0x0014d5ad, 0x2)   jmpw(0x0014d5f8, 0x49);               /* jmp 0x14d5f8 */
l_0x0014d5af:
    II(0x0014d5af, 0x3)   lea(ax, bp - 0xc);                    /* lea ax, [bp-0xc] */
    II(0x0014d5b2, 0x1)   pushw(ax);                            /* push ax */
    II(0x0014d5b3, 0x1)   pushw(si);                            /* push si */
    II(0x0014d5b4, 0x3)   callw(0x0014dc8e, 0x6d7);             /* call 0x14dc8e */
    II(0x0014d5b7, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014d5b8, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014d5b9, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0014d5bb, 0x2)   jzw(0x0014d5f8, 0x3b);                /* jz 0x14d5f8 */
    II(0x0014d5bd, 0x4)   test(memb_a16(ss, bp - 0x4), 0x10);   /* test byte [bp-0x4], 0x10 */
    II(0x0014d5c1, 0x2)   jzw(0x0014d5f8, 0x35);                /* jz 0x14d5f8 */
    II(0x0014d5c3, 0x3)   mov(ax, memw_a16(ss, bp - 0xc));      /* mov ax, [bp-0xc] */
    II(0x0014d5c6, 0x3)   mov(dx, memw_a16(ss, bp - 0xa));      /* mov dx, [bp-0xa] */
    II(0x0014d5c9, 0x3)   sub(ax, memw_a16(ss, bp + 0x6));      /* sub ax, [bp+0x6] */
    II(0x0014d5cc, 0x3)   sbb(dx, memw_a16(ss, bp + 0x8));      /* sbb dx, [bp+0x8] */
    II(0x0014d5cf, 0x3)   mov(cx, memw_a16(ss, bp + 0xa));      /* mov cx, [bp+0xa] */
    II(0x0014d5d2, 0x2)   sub(bx, bx);                          /* sub bx, bx */
    II(0x0014d5d4, 0x2)   cmp(dx, bx);                          /* cmp dx, bx */
    II(0x0014d5d6, 0x2)   jaw(0x0014d5f8, 0x20);                /* ja 0x14d5f8 */
    II(0x0014d5d8, 0x2)   jbw(0x0014d5de, 0x4);                 /* jb 0x14d5de */
    II(0x0014d5da, 0x2)   cmp(ax, cx);                          /* cmp ax, cx */
    II(0x0014d5dc, 0x2)   jaw(0x0014d5f8, 0x1a);                /* ja 0x14d5f8 */
l_0x0014d5de:
    II(0x0014d5de, 0x3)   add(ax, memw_a16(ss, bp + 0xc));      /* add ax, [bp+0xc] */
    II(0x0014d5e1, 0x3)   adc(dx, memw_a16(ss, bp + 0xe));      /* adc dx, [bp+0xe] */
    II(0x0014d5e4, 0x3)   mov(memw_a16(ss, bp - 0xc), ax);      /* mov [bp-0xc], ax */
    II(0x0014d5e7, 0x3)   mov(memw_a16(ss, bp - 0xa), dx);      /* mov [bp-0xa], dx */
    II(0x0014d5ea, 0x3)   lea(ax, bp - 0xc);                    /* lea ax, [bp-0xc] */
    II(0x0014d5ed, 0x1)   pushw(ax);                            /* push ax */
    II(0x0014d5ee, 0x1)   pushw(si);                            /* push si */
    II(0x0014d5ef, 0x3)   callw(0x0014dc28, 0x636);             /* call 0x14dc28 */
    II(0x0014d5f2, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014d5f3, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014d5f4, 0x4)   mov(memb_a16(ss, bp - 0x2), 0x1);     /* mov byte [bp-0x2], 0x1 */
l_0x0014d5f8:
    II(0x0014d5f8, 0x3)   sub(si, 0x8);                         /* sub si, 0x8 */
    II(0x0014d5fb, 0x4)   cmp(si, memw_a16(ds, 0xc34));         /* cmp si, [0xc34] */
    II(0x0014d5ff, 0x2)   jaew(0x0014d5af, -0x52);              /* jae 0x14d5af */
    II(0x0014d601, 0x4)   cmp(memb_a16(ss, bp - 0x2), 0);       /* cmp byte [bp-0x2], 0x0 */
    II(0x0014d605, 0x2)   jnzw(0x0014d615, 0xe);                /* jnz 0x14d615 */
    II(0x0014d607, 0x3)   mov(bx, memw_a16(ss, bp + 0x4));      /* mov bx, [bp+0x4] */
    II(0x0014d60a, 0x3)   shr(bx, 0x3);                         /* shr bx, 0x3 */
    II(0x0014d60d, 0x4)   les(di, ds, 0xaa0);                   /* les di, [0xaa0] */
    II(0x0014d611, 0x4)   and_(memb_a16(es, bx + di), -0x11 /* 0xef */); /* and byte [es:bx+di], 0xef */
l_0x0014d615:
    II(0x0014d615, 0x1)   popw(si);                             /* pop si */
    II(0x0014d616, 0x1)   popw(di);                             /* pop di */
    II(0x0014d617, 0x1)   leavew();                             /* leave  */
    II(0x0014d618, 0x1)   retw();                               /* ret  */
FUNC_END

