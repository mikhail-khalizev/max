FUNC_BEGIN(0x0014ce29, 0x5d30d41accda25b, 0x10, ({0xc8, 0x1a, 0, 0, 0x57, 0x56, 0xc6, 0x46, 0xfc, 0, 0xc4, 0x5e, 0x4, 0x26, 0x8b, 0x7f, 0x6, 0x8d, 0x46, 0xe6, 0x50, 0x26, 0xff, 0x77, 0x6, 0xe8, 0x49, 0xe, 0x5b, 0x5b, 0x8a, 0x46, 0xee, 0x2a, 0xe4, 0x89, 0x46, 0xfe, 0x8b, 0xdf, 0xc1, 0xeb, 0x3, 0x3, 0x1e, 0xa0, 0xa, 0x8e, 0x6, 0xa2, 0xa, 0x26, 0x8a, 0x7, 0x98, 0x89, 0x46, 0xfa, 0xa8, 0x1, 0x75, 0xc, 0xa1, 0x26, 0xc, 0xc4, 0x5e, 0x4, 0x26, 0x39, 0x47, 0x22, 0x75, 0x17, 0x8a, 0x46, 0xfe, 0x25, 0x18, 0, 0x3d, 0x10, 0, 0x74, 0x26, 0x3d, 0x18, 0, 0x75, 0x7, 0x80, 0x3e, 0x80, 0x9, 0x4, 0x7c, 0x1a, 0x80, 0x7e, 0xfc, 0, 0x74, 0x3, 0xe9, 0xbf, 0x1, 0xc4, 0x5e, 0x4, 0x26, 0xc7, 0x47, 0x6, 0, 0, 0x26, 0x80, 0x4f, 0x26, 0x1, 0xe9, 0xae, 0x1, 0xc4, 0x5e, 0x4, 0x26, 0x80, 0x67, 0x26, 0xfe, 0x83, 0x7e, 0xe8, 0x10, 0x72, 0x24, 0xa0, 0x80, 0x9, 0x98, 0xeb, 0x5, 0xfe, 0x46, 0xfc, 0xeb, 0x55, 0x3d, 0x5, 0, 0x77, 0x50, 0xd1, 0xe0, 0x93, 0x2e, 0xff, 0xa7, 0xaa, 0x33, 0x32, 0x35, 0x98, 0x33, 0x32, 0x35, 0xf2, 0x33, 0xf2, 0x33, 0xf2, 0x33, 0xa0, 0x80, 0x9, 0x98, 0xeb, 0x1d, 0xfe, 0x46, 0xfc, 0xeb, 0x31, 0xf7, 0xc7, 0x3, 0, 0x75, 0x2b, 0xff, 0x76, 0xe8, 0xff, 0x76, 0xe6, 0xe8, 0xcc, 0xc, 0x5b, 0x5b, 0x3b, 0xc7, 0x75, 0x1c, 0xe9, 0x59, 0x1, 0x3d, 0x5, 0, 0x77, 0x14, 0xd1, 0xe0, 0x93, 0x2e, 0xff, 0xa7, 0xe6, 0x33, 0xbc, 0x33, 0x32, 0x35, 0xf2, 0x33, 0x32, 0x35, 0xc7, 0x33, 0xc1, 0x33, 0xff, 0x76, 0xea, 0xe8, 0xdf, 0xb, 0x5b, 0xc4, 0x5e, 0x4, 0x26, 0x89, 0x47, 0x10, 0x8b, 0x1e, 0x96, 0x9, 0x89, 0x47, 0x10, 0xb8, 0, 0x48, 0xc4, 0x5e, 0x4, 0x26, 0x89, 0x47, 0x16, 0x8b, 0x1e, 0x96, 0x9, 0x89, 0x47, 0x16, 0x6a, 0, 0xff, 0x76, 0x6, 0xff, 0x76, 0x4, 0xe8, 0x1b, 0xf9, 0x83, 0xc4, 0x6, 0xc4, 0x5e, 0x4, 0x26, 0xf6, 0x47, 0x26, 0x1, 0x74, 0x3, 0xe9, 0x37, 0xff, 0x26, 0x8b, 0x77, 0x16, 0xf6, 0x46, 0xfa, 0xc0, 0x74, 0x1e, 0xff, 0x76, 0xfa, 0x56, 0xe8, 0x22, 0xd8, 0x5b, 0x5b, 0xb, 0xc0, 0x75, 0x11, 0xc4, 0x5e, 0x4, 0x26, 0x89, 0x77, 0x6, 0x6, 0x53, 0xe8, 0x81, 0xfd, 0x5b, 0x5b, 0xe9, 0xf, 0xff, 0x6a, 0, 0xe8, 0x29, 0xd6, 0x5b, 0x8d, 0x46, 0xf0, 0x50, 0x56, 0xe8, 0x5, 0xd, 0x5b, 0x5b, 0x80, 0x3e, 0x80, 0x9, 0x4, 0x75, 0x4, 0x80, 0x4e, 0xfe, 0x60, 0x57, 0xe8, 0x60, 0x1, 0x5b, 0xc4, 0x5e, 0x4, 0x26, 0x89, 0x47, 0x6, 0x8a, 0x46, 0xfa, 0x8b, 0xdf, 0xc1, 0xeb, 0x3, 0x3, 0x1e, 0xa0, 0xa, 0x8e, 0x6, 0xa2, 0xa, 0x26, 0x88, 0x7, 0x57, 0xff, 0x76, 0xf2, 0xff, 0x76, 0xf0, 0xe8, 0xfd, 0xb, 0x5b, 0x5b, 0x52, 0x50, 0xe8, 0x4, 0xa, 0x83, 0xc4, 0x6, 0x80, 0x3e, 0x80, 0x9, 0x4, 0x7c, 0x1e, 0x8a, 0x46, 0xfa, 0x24, 0x10, 0x8b, 0xde, 0xc1, 0xeb, 0x3, 0x3, 0x1e, 0xa0, 0xa, 0x8e, 0x6, 0xa2, 0xa, 0x26, 0x8, 0x7, 0x57, 0xe8, 0x18, 0xd, 0x5b, 0x8b, 0xfe, 0xeb, 0x5, 0x56, 0xe8, 0xf, 0xd, 0x5b, 0x8a, 0x46, 0xfe, 0x88, 0x46, 0xf8, 0x8d, 0x46, 0xf0, 0x50, 0x57, 0xe8, 0x27, 0xc, 0x5b, 0x5b, 0xb, 0xc0, 0x75, 0x7, 0x68, 0x2, 0x1, 0xe8, 0xb8, 0x9, 0x5b, 0xc4, 0x5e, 0x4, 0x26, 0x8b, 0x5f, 0x6, 0xc1, 0xeb, 0x3, 0x3, 0x1e, 0xa0, 0xa, 0x8e, 0x6, 0xa2, 0xa, 0x26, 0xc6, 0x7, 0x1, 0xff, 0x76, 0x6, 0xff, 0x76, 0x4, 0xe8, 0xca, 0xfc, 0x5b, 0x5b, 0xff, 0x76, 0xf2, 0xff, 0x76, 0xf0, 0xff, 0x76, 0xea, 0xff, 0x76, 0xe8, 0xff, 0x76, 0xe6, 0x57, 0xe8, 0x43, 0x5, 0x83, 0xc4, 0xc, 0x6a, 0x1, 0xe8, 0x5f, 0xd5, 0x5b, 0xc4, 0x5e, 0x4, 0x26, 0x89, 0x7f, 0x6, 0x5e, 0x5f, 0xc9, 0xc3}))
    II(0x0014ce29, 0x4)   enterw(0x1a, 0);                      /* enter 0x1a, 0x0 */
    II(0x0014ce2d, 0x1)   pushw(di);                            /* push di */
    II(0x0014ce2e, 0x1)   pushw(si);                            /* push si */
    II(0x0014ce2f, 0x4)   mov(memb_a16(ss, bp - 0x4), 0);       /* mov byte [bp-0x4], 0x0 */
    II(0x0014ce33, 0x3)   les(bx, ss, bp + 0x4);                /* les bx, [bp+0x4] */
    II(0x0014ce36, 0x4)   mov(di, memw_a16(es, bx + 0x6));      /* mov di, [es:bx+0x6] */
    II(0x0014ce3a, 0x3)   lea(ax, bp - 0x1a);                   /* lea ax, [bp-0x1a] */
    II(0x0014ce3d, 0x1)   pushw(ax);                            /* push ax */
    II(0x0014ce3e, 0x4)   pushw(memw_a16(es, bx + 0x6));        /* push word [es:bx+0x6] */
    II(0x0014ce42, 0x3)   callw(0x0014dc8e, 0xe49);             /* call 0x14dc8e */
    II(0x0014ce45, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014ce46, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014ce47, 0x3)   mov(al, memb_a16(ss, bp - 0x12));     /* mov al, [bp-0x12] */
    II(0x0014ce4a, 0x2)   sub(ah, ah);                          /* sub ah, ah */
    II(0x0014ce4c, 0x3)   mov(memw_a16(ss, bp - 0x2), ax);      /* mov [bp-0x2], ax */
    II(0x0014ce4f, 0x2)   mov(bx, di);                          /* mov bx, di */
    II(0x0014ce51, 0x3)   shr(bx, 0x3);                         /* shr bx, 0x3 */
    II(0x0014ce54, 0x4)   add(bx, memw_a16(ds, 0xaa0));         /* add bx, [0xaa0] */
    II(0x0014ce58, 0x4)   mov(es, memw_a16(ds, 0xaa2));         /* mov es, [0xaa2] */
    II(0x0014ce5c, 0x3)   mov(al, memb_a16(es, bx));            /* mov al, [es:bx] */
    II(0x0014ce5f, 0x1)   cbw();                                /* cbw  */
    II(0x0014ce60, 0x3)   mov(memw_a16(ss, bp - 0x6), ax);      /* mov [bp-0x6], ax */
    II(0x0014ce63, 0x2)   test(al, 0x1);                        /* test al, 0x1 */
    II(0x0014ce65, 0x2)   jnzw(0x0014ce73, 0xc);                /* jnz 0x14ce73 */
    II(0x0014ce67, 0x3)   mov(ax, memw_a16(ds, 0xc26));         /* mov ax, [0xc26] */
    II(0x0014ce6a, 0x3)   les(bx, ss, bp + 0x4);                /* les bx, [bp+0x4] */
    II(0x0014ce6d, 0x4)   cmp(memw_a16(es, bx + 0x22), ax);     /* cmp [es:bx+0x22], ax */
    II(0x0014ce71, 0x2)   jnzw(0x0014ce8a, 0x17);               /* jnz 0x14ce8a */
l_0x0014ce73:
    II(0x0014ce73, 0x3)   mov(al, memb_a16(ss, bp - 0x2));      /* mov al, [bp-0x2] */
    II(0x0014ce76, 0x3)   and_(ax, 0x18);                       /* and ax, 0x18 */
    II(0x0014ce79, 0x3)   cmp(ax, 0x10);                        /* cmp ax, 0x10 */
    II(0x0014ce7c, 0x2)   jzw(0x0014cea4, 0x26);                /* jz 0x14cea4 */
    II(0x0014ce7e, 0x3)   cmp(ax, 0x18);                        /* cmp ax, 0x18 */
    II(0x0014ce81, 0x2)   jnzw(0x0014ce8a, 0x7);                /* jnz 0x14ce8a */
    II(0x0014ce83, 0x5)   cmp(memb_a16(ds, 0x980), 0x4);        /* cmp byte [0x980], 0x4 */
    II(0x0014ce88, 0x2)   jlw(0x0014cea4, 0x1a);                /* jl 0x14cea4 */
l_0x0014ce8a:
    II(0x0014ce8a, 0x4)   cmp(memb_a16(ss, bp - 0x4), 0);       /* cmp byte [bp-0x4], 0x0 */
    II(0x0014ce8e, 0x2)   jzw(0x0014ce93, 0x3);                 /* jz 0x14ce93 */
    II(0x0014ce90, 0x3)   jmpw(0x0014d052, 0x1bf);              /* jmp 0x14d052 */
l_0x0014ce93:
    II(0x0014ce93, 0x3)   les(bx, ss, bp + 0x4);                /* les bx, [bp+0x4] */
    II(0x0014ce96, 0x6)   mov(memw_a16(es, bx + 0x6), 0);       /* mov word [es:bx+0x6], 0x0 */
    II(0x0014ce9c, 0x5)   or_(memb_a16(es, bx + 0x26), 0x1);    /* or byte [es:bx+0x26], 0x1 */
    II(0x0014cea1, 0x3)   jmpw(0x0014d052, 0x1ae);              /* jmp 0x14d052 */
l_0x0014cea4:
    II(0x0014cea4, 0x3)   les(bx, ss, bp + 0x4);                /* les bx, [bp+0x4] */
    II(0x0014cea7, 0x5)   and_(memb_a16(es, bx + 0x26), -0x2 /* 0xfe */); /* and byte [es:bx+0x26], 0xfe */
    II(0x0014ceac, 0x4)   cmp(memw_a16(ss, bp - 0x18), 0x10);   /* cmp word [bp-0x18], 0x10 */
    II(0x0014ceb0, 0x2)   jbw(0x0014ced6, 0x24);                /* jb 0x14ced6 */
    II(0x0014ceb2, 0x3)   mov(al, memb_a16(ds, 0x980));         /* mov al, [0x980] */
    II(0x0014ceb5, 0x1)   cbw();                                /* cbw  */
    II(0x0014ceb6, 0x2)   jmpw(0x0014cebd, 0x5);                /* jmp 0x14cebd */
l_0x0014ceb8:
    II(0x0014ceb8, 0x3)   inc(memb_a16(ss, bp - 0x4));          /* inc byte [bp-0x4] */
    II(0x0014cebb, 0x2)   jmpw(0x0014cf12, 0x55);               /* jmp 0x14cf12 */
l_0x0014cebd:
    II(0x0014cebd, 0x3)   cmp(ax, 0x5);                         /* cmp ax, 0x5 */
    II(0x0014cec0, 0x2)   jaw(0x0014cf12, 0x50);                /* ja 0x14cf12 */
    II(0x0014cec2, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0014cec4, 0x1)   xchg(bx, ax);                         /* xchg bx, ax */
    II(0x0014cec5, 0x5)   jmpw_abs_switch(memw_a16(cs, bx + 0x33aa), (0x0014ceb8)(0x0014cf12)(0x0014d052)); /* jmp word near [cs:bx+0x33aa] */
//    II(0x0014ceca, 0xc)   /* Служебная область с абсолютными адресами переходов. {0x0014d052, 0x0014ceb8, 0x0014d052, 0x0014cf12, 0x0014cf12, 0x0014cf12}. */
l_0x0014ced6:
    II(0x0014ced6, 0x3)   mov(al, memb_a16(ds, 0x980));         /* mov al, [0x980] */
    II(0x0014ced9, 0x1)   cbw();                                /* cbw  */
    II(0x0014ceda, 0x2)   jmpw(0x0014cef9, 0x1d);               /* jmp 0x14cef9 */
l_0x0014cedc:
    II(0x0014cedc, 0x3)   inc(memb_a16(ss, bp - 0x4));          /* inc byte [bp-0x4] */
    II(0x0014cedf, 0x2)   jmpw(0x0014cf12, 0x31);               /* jmp 0x14cf12 */
l_0x0014cee1:
    II(0x0014cee1, 0x4)   test(di, 0x3);                        /* test di, 0x3 */
    II(0x0014cee5, 0x2)   jnzw(0x0014cf12, 0x2b);               /* jnz 0x14cf12 */
l_0x0014cee7:
    II(0x0014cee7, 0x3)   pushw(memw_a16(ss, bp - 0x18));       /* push word [bp-0x18] */
    II(0x0014ceea, 0x3)   pushw(memw_a16(ss, bp - 0x1a));       /* push word [bp-0x1a] */
    II(0x0014ceed, 0x3)   callw(0x0014dbbc, 0xccc);             /* call 0x14dbbc */
    II(0x0014cef0, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cef1, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cef2, 0x2)   cmp(ax, di);                          /* cmp ax, di */
    II(0x0014cef4, 0x2)   jnzw(0x0014cf12, 0x1c);               /* jnz 0x14cf12 */
    II(0x0014cef6, 0x3)   jmpw(0x0014d052, 0x159);              /* jmp 0x14d052 */
l_0x0014cef9:
    II(0x0014cef9, 0x3)   cmp(ax, 0x5);                         /* cmp ax, 0x5 */
    II(0x0014cefc, 0x2)   jaw(0x0014cf12, 0x14);                /* ja 0x14cf12 */
    II(0x0014cefe, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0014cf00, 0x1)   xchg(bx, ax);                         /* xchg bx, ax */
    II(0x0014cf01, 0x5)   jmpw_abs_switch(memw_a16(cs, bx + 0x33e6), (0x0014cedc)(0x0014cee1)(0x0014cee7)(0x0014cf12)(0x0014d052)); /* jmp word near [cs:bx+0x33e6] */
//    II(0x0014cf06, 0xc)   /* Служебная область с абсолютными адресами переходов. {0x0014cedc, 0x0014d052, 0x0014cf12, 0x0014d052, 0x0014cee7, 0x0014cee1}. */
l_0x0014cf12:
    II(0x0014cf12, 0x3)   pushw(memw_a16(ss, bp - 0x16));       /* push word [bp-0x16] */
    II(0x0014cf15, 0x3)   callw(0x0014daf7, 0xbdf);             /* call 0x14daf7 */
    II(0x0014cf18, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cf19, 0x3)   les(bx, ss, bp + 0x4);                /* les bx, [bp+0x4] */
    II(0x0014cf1c, 0x4)   mov(memw_a16(es, bx + 0x10), ax);     /* mov [es:bx+0x10], ax */
    II(0x0014cf20, 0x4)   mov(bx, memw_a16(ds, 0x996));         /* mov bx, [0x996] */
    II(0x0014cf24, 0x3)   mov(memw_a16(ds, bx + 0x10), ax);     /* mov [bx+0x10], ax */
    II(0x0014cf27, 0x3)   mov(ax, 0x4800);                      /* mov ax, 0x4800 */
    II(0x0014cf2a, 0x3)   les(bx, ss, bp + 0x4);                /* les bx, [bp+0x4] */
    II(0x0014cf2d, 0x4)   mov(memw_a16(es, bx + 0x16), ax);     /* mov [es:bx+0x16], ax */
    II(0x0014cf31, 0x4)   mov(bx, memw_a16(ds, 0x996));         /* mov bx, [0x996] */
    II(0x0014cf35, 0x3)   mov(memw_a16(ds, bx + 0x16), ax);     /* mov [bx+0x16], ax */
    II(0x0014cf38, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0014cf3a, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x0014cf3d, 0x3)   pushw(memw_a16(ss, bp + 0x4));        /* push word [bp+0x4] */
    II(0x0014cf40, 0x3)   callw(0x0014c85e, -0x6e5);            /* call 0x14c85e */
    II(0x0014cf43, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x0014cf46, 0x3)   les(bx, ss, bp + 0x4);                /* les bx, [bp+0x4] */
    II(0x0014cf49, 0x5)   test(memb_a16(es, bx + 0x26), 0x1);   /* test byte [es:bx+0x26], 0x1 */
    II(0x0014cf4e, 0x2)   jzw(0x0014cf53, 0x3);                 /* jz 0x14cf53 */
    II(0x0014cf50, 0x3)   jmpw(0x0014ce8a, -0xc9);              /* jmp 0x14ce8a */
l_0x0014cf53:
    II(0x0014cf53, 0x4)   mov(si, memw_a16(es, bx + 0x16));     /* mov si, [es:bx+0x16] */
    II(0x0014cf57, 0x4)   test(memb_a16(ss, bp - 0x6), 0xc0);   /* test byte [bp-0x6], 0xc0 */
    II(0x0014cf5b, 0x2)   jzw(0x0014cf7b, 0x1e);                /* jz 0x14cf7b */
    II(0x0014cf5d, 0x3)   pushw(memw_a16(ss, bp - 0x6));        /* push word [bp-0x6] */
    II(0x0014cf60, 0x1)   pushw(si);                            /* push si */
    II(0x0014cf61, 0x3)   callw(0x0014a786, -0x27de);           /* call 0x14a786 */
    II(0x0014cf64, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cf65, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cf66, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0014cf68, 0x2)   jnzw(0x0014cf7b, 0x11);               /* jnz 0x14cf7b */
    II(0x0014cf6a, 0x3)   les(bx, ss, bp + 0x4);                /* les bx, [bp+0x4] */
    II(0x0014cf6d, 0x4)   mov(memw_a16(es, bx + 0x6), si);      /* mov [es:bx+0x6], si */
    II(0x0014cf71, 0x1)   pushw(es);                            /* push es */
    II(0x0014cf72, 0x1)   pushw(bx);                            /* push bx */
    II(0x0014cf73, 0x3)   callw(0x0014ccf7, -0x27f);            /* call 0x14ccf7 */
    II(0x0014cf76, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cf77, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cf78, 0x3)   jmpw(0x0014ce8a, -0xf1);              /* jmp 0x14ce8a */
l_0x0014cf7b:
    II(0x0014cf7b, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0014cf7d, 0x3)   callw(0x0014a5a9, -0x29d7);           /* call 0x14a5a9 */
    II(0x0014cf80, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cf81, 0x3)   lea(ax, bp - 0x10);                   /* lea ax, [bp-0x10] */
    II(0x0014cf84, 0x1)   pushw(ax);                            /* push ax */
    II(0x0014cf85, 0x1)   pushw(si);                            /* push si */
    II(0x0014cf86, 0x3)   callw(0x0014dc8e, 0xd05);             /* call 0x14dc8e */
    II(0x0014cf89, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cf8a, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cf8b, 0x5)   cmp(memb_a16(ds, 0x980), 0x4);        /* cmp byte [0x980], 0x4 */
    II(0x0014cf90, 0x2)   jnzw(0x0014cf96, 0x4);                /* jnz 0x14cf96 */
    II(0x0014cf92, 0x4)   or_(memb_a16(ss, bp - 0x2), 0x60);    /* or byte [bp-0x2], 0x60 */
l_0x0014cf96:
    II(0x0014cf96, 0x1)   pushw(di);                            /* push di */
    II(0x0014cf97, 0x3)   callw(0x0014d0fa, 0x160);             /* call 0x14d0fa */
    II(0x0014cf9a, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cf9b, 0x3)   les(bx, ss, bp + 0x4);                /* les bx, [bp+0x4] */
    II(0x0014cf9e, 0x4)   mov(memw_a16(es, bx + 0x6), ax);      /* mov [es:bx+0x6], ax */
    II(0x0014cfa2, 0x3)   mov(al, memb_a16(ss, bp - 0x6));      /* mov al, [bp-0x6] */
    II(0x0014cfa5, 0x2)   mov(bx, di);                          /* mov bx, di */
    II(0x0014cfa7, 0x3)   shr(bx, 0x3);                         /* shr bx, 0x3 */
    II(0x0014cfaa, 0x4)   add(bx, memw_a16(ds, 0xaa0));         /* add bx, [0xaa0] */
    II(0x0014cfae, 0x4)   mov(es, memw_a16(ds, 0xaa2));         /* mov es, [0xaa2] */
    II(0x0014cfb2, 0x3)   mov(memb_a16(es, bx), al);            /* mov [es:bx], al */
    II(0x0014cfb5, 0x1)   pushw(di);                            /* push di */
    II(0x0014cfb6, 0x3)   pushw(memw_a16(ss, bp - 0xe));        /* push word [bp-0xe] */
    II(0x0014cfb9, 0x3)   pushw(memw_a16(ss, bp - 0x10));       /* push word [bp-0x10] */
    II(0x0014cfbc, 0x3)   callw(0x0014dbbc, 0xbfd);             /* call 0x14dbbc */
    II(0x0014cfbf, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cfc0, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cfc1, 0x1)   pushw(dx);                            /* push dx */
    II(0x0014cfc2, 0x1)   pushw(ax);                            /* push ax */
    II(0x0014cfc3, 0x3)   callw(0x0014d9ca, 0xa04);             /* call 0x14d9ca */
    II(0x0014cfc6, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x0014cfc9, 0x5)   cmp(memb_a16(ds, 0x980), 0x4);        /* cmp byte [0x980], 0x4 */
    II(0x0014cfce, 0x2)   jlw(0x0014cfee, 0x1e);                /* jl 0x14cfee */
    II(0x0014cfd0, 0x3)   mov(al, memb_a16(ss, bp - 0x6));      /* mov al, [bp-0x6] */
    II(0x0014cfd3, 0x2)   and_(al, 0x10);                       /* and al, 0x10 */
    II(0x0014cfd5, 0x2)   mov(bx, si);                          /* mov bx, si */
    II(0x0014cfd7, 0x3)   shr(bx, 0x3);                         /* shr bx, 0x3 */
    II(0x0014cfda, 0x4)   add(bx, memw_a16(ds, 0xaa0));         /* add bx, [0xaa0] */
    II(0x0014cfde, 0x4)   mov(es, memw_a16(ds, 0xaa2));         /* mov es, [0xaa2] */
    II(0x0014cfe2, 0x3)   or_(memb_a16(es, bx), al);            /* or [es:bx], al */
    II(0x0014cfe5, 0x1)   pushw(di);                            /* push di */
    II(0x0014cfe6, 0x3)   callw(0x0014dd01, 0xd18);             /* call 0x14dd01 */
    II(0x0014cfe9, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cfea, 0x2)   mov(di, si);                          /* mov di, si */
    II(0x0014cfec, 0x2)   jmpw(0x0014cff3, 0x5);                /* jmp 0x14cff3 */
l_0x0014cfee:
    II(0x0014cfee, 0x1)   pushw(si);                            /* push si */
    II(0x0014cfef, 0x3)   callw(0x0014dd01, 0xd0f);             /* call 0x14dd01 */
    II(0x0014cff2, 0x1)   popw(bx);                             /* pop bx */
l_0x0014cff3:
    II(0x0014cff3, 0x3)   mov(al, memb_a16(ss, bp - 0x2));      /* mov al, [bp-0x2] */
    II(0x0014cff6, 0x3)   mov(memb_a16(ss, bp - 0x8), al);      /* mov [bp-0x8], al */
    II(0x0014cff9, 0x3)   lea(ax, bp - 0x10);                   /* lea ax, [bp-0x10] */
    II(0x0014cffc, 0x1)   pushw(ax);                            /* push ax */
    II(0x0014cffd, 0x1)   pushw(di);                            /* push di */
    II(0x0014cffe, 0x3)   callw(0x0014dc28, 0xc27);             /* call 0x14dc28 */
    II(0x0014d001, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014d002, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014d003, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0014d005, 0x2)   jnzw(0x0014d00e, 0x7);                /* jnz 0x14d00e */
    II(0x0014d007, 0x3)   pushw(0x102);                         /* push word 0x102 */
    II(0x0014d00a, 0x3)   callw(0x0014d9c5, 0x9b8);             /* call 0x14d9c5 */
    II(0x0014d00d, 0x1)   popw(bx);                             /* pop bx */
l_0x0014d00e:
    II(0x0014d00e, 0x3)   les(bx, ss, bp + 0x4);                /* les bx, [bp+0x4] */
    II(0x0014d011, 0x4)   mov(bx, memw_a16(es, bx + 0x6));      /* mov bx, [es:bx+0x6] */
    II(0x0014d015, 0x3)   shr(bx, 0x3);                         /* shr bx, 0x3 */
    II(0x0014d018, 0x4)   add(bx, memw_a16(ds, 0xaa0));         /* add bx, [0xaa0] */
    II(0x0014d01c, 0x4)   mov(es, memw_a16(ds, 0xaa2));         /* mov es, [0xaa2] */
    II(0x0014d020, 0x4)   mov(memb_a16(es, bx), 0x1);           /* mov byte [es:bx], 0x1 */
    II(0x0014d024, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x0014d027, 0x3)   pushw(memw_a16(ss, bp + 0x4));        /* push word [bp+0x4] */
    II(0x0014d02a, 0x3)   callw(0x0014ccf7, -0x336);            /* call 0x14ccf7 */
    II(0x0014d02d, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014d02e, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014d02f, 0x3)   pushw(memw_a16(ss, bp - 0xe));        /* push word [bp-0xe] */
    II(0x0014d032, 0x3)   pushw(memw_a16(ss, bp - 0x10));       /* push word [bp-0x10] */
    II(0x0014d035, 0x3)   pushw(memw_a16(ss, bp - 0x16));       /* push word [bp-0x16] */
    II(0x0014d038, 0x3)   pushw(memw_a16(ss, bp - 0x18));       /* push word [bp-0x18] */
    II(0x0014d03b, 0x3)   pushw(memw_a16(ss, bp - 0x1a));       /* push word [bp-0x1a] */
    II(0x0014d03e, 0x1)   pushw(di);                            /* push di */
    II(0x0014d03f, 0x3)   callw(0x0014d585, 0x543);             /* call 0x14d585 */
    II(0x0014d042, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x0014d045, 0x2)   pushw(0x1);                           /* push 0x1 */
    II(0x0014d047, 0x3)   callw(0x0014a5a9, -0x2aa1);           /* call 0x14a5a9 */
    II(0x0014d04a, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014d04b, 0x3)   les(bx, ss, bp + 0x4);                /* les bx, [bp+0x4] */
    II(0x0014d04e, 0x4)   mov(memw_a16(es, bx + 0x6), di);      /* mov [es:bx+0x6], di */
l_0x0014d052:
    II(0x0014d052, 0x1)   popw(si);                             /* pop si */
    II(0x0014d053, 0x1)   popw(di);                             /* pop di */
    II(0x0014d054, 0x1)   leavew();                             /* leave  */
    II(0x0014d055, 0x1)   retw();                               /* ret  */
FUNC_END

