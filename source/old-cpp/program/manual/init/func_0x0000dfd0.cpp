FUNC_BEGIN(0x0000dfd0, 0xf366c3d8b5ab0a5c, 0x10, ({0xc8, 0xc, 0, 0, 0x57, 0x56, 0x8b, 0x46, 0x4, 0x8b, 0x56, 0x6, 0x39, 0x16, 0x9a, 0, 0x76, 0x3, 0xe9, 0x73, 0x2, 0x72, 0x6, 0x39, 0x6, 0x98, 0, 0x77, 0xc, 0x3, 0x46, 0x8, 0x13, 0x56, 0xa, 0x3b, 0x16, 0x9e, 0, 0x76, 0x3, 0xe9, 0x5c, 0x2, 0x72, 0x6, 0x3b, 0x6, 0x9c, 0, 0x77, 0x8, 0x8b, 0x46, 0xa, 0xb, 0x46, 0x8, 0x75, 0x3, 0xe9, 0x49, 0x2, 0xf6, 0x6, 0x47, 0, 0x80, 0x74, 0x6, 0x68, 0x1c, 0x11, 0xe8, 0xa8, 0xff, 0xfa, 0x6a, 0, 0xa1, 0x98, 0, 0x8b, 0x16, 0x9a, 0, 0x89, 0x46, 0xf8, 0x89, 0x56, 0xfa, 0x52, 0x50, 0xe8, 0xe0, 0x1a, 0x83, 0xc4, 0x6, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0x8b, 0x46, 0x4, 0x8b, 0x56, 0x6, 0x39, 0x56, 0xfe, 0x77, 0x1f, 0x72, 0x5, 0x39, 0x46, 0xfc, 0x73, 0x18, 0x8b, 0x46, 0xfe, 0xb, 0x46, 0xfc, 0x74, 0x10, 0x8b, 0x46, 0xfc, 0x8b, 0x56, 0xfe, 0x89, 0x46, 0xf8, 0x89, 0x56, 0xfa, 0x6a, 0, 0xeb, 0xc8, 0x8b, 0x46, 0x4, 0x8b, 0x56, 0x6, 0x39, 0x46, 0xfc, 0x75, 0x8, 0x39, 0x56, 0xfe, 0x75, 0x3, 0xe9, 0xd4, 0x1, 0x8b, 0x46, 0xfe, 0xb, 0x46, 0xfc, 0x74, 0x1e, 0x8b, 0x46, 0x8, 0x8b, 0x56, 0xa, 0x3, 0x46, 0x4, 0x13, 0x56, 0x6, 0x3b, 0x56, 0xfe, 0x72, 0xd, 0x76, 0x3, 0xe9, 0xb6, 0x1, 0x3b, 0x46, 0xfc, 0x76, 0x3, 0xe9, 0xae, 0x1, 0x6a, 0x4, 0xff, 0x76, 0xfa, 0xff, 0x76, 0xf8, 0xe8, 0x69, 0x1a, 0x83, 0xc4, 0x6, 0x3, 0x46, 0xf8, 0x13, 0x56, 0xfa, 0x3b, 0x56, 0x6, 0x72, 0xa, 0x77, 0x5, 0x3b, 0x46, 0x4, 0x76, 0x3, 0xe9, 0x8b, 0x1, 0xff, 0x76, 0x6, 0xff, 0x76, 0x4, 0x6a, 0, 0xff, 0x76, 0xfa, 0xff, 0x76, 0xf8, 0xe8, 0x56, 0x1a, 0x83, 0xc4, 0xa, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0x6a, 0, 0xff, 0x76, 0x6, 0xff, 0x76, 0x4, 0xe8, 0x42, 0x1a, 0x83, 0xc4, 0xa, 0x8b, 0x46, 0x8, 0x8b, 0x56, 0xa, 0x89, 0x46, 0xf4, 0x89, 0x56, 0xf6, 0x6a, 0x4, 0xff, 0x76, 0xfa, 0xff, 0x76, 0xf8, 0xe8, 0x12, 0x1a, 0x83, 0xc4, 0x6, 0x3, 0x46, 0xf8, 0x13, 0x56, 0xfa, 0x3b, 0x46, 0x4, 0x75, 0x51, 0x3b, 0x56, 0x6, 0x75, 0x4c, 0x6a, 0x4, 0xff, 0x76, 0xfa, 0xff, 0x76, 0xf8, 0xe8, 0xf4, 0x19, 0x83, 0xc4, 0x6, 0x3, 0x46, 0xf4, 0x13, 0x56, 0xf6, 0x89, 0x46, 0xf4, 0x89, 0x56, 0xf6, 0x52, 0x50, 0x6a, 0x4, 0xff, 0x76, 0xfa, 0xff, 0x76, 0xf8, 0xe8, 0xee, 0x19, 0x83, 0xc4, 0xa, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0x6a, 0, 0xff, 0x76, 0xfa, 0xff, 0x76, 0xf8, 0xe8, 0xda, 0x19, 0x83, 0xc4, 0xa, 0x8b, 0x46, 0xf8, 0x8b, 0x56, 0xfa, 0x89, 0x46, 0x4, 0x89, 0x56, 0x6, 0xeb, 0x14, 0xff, 0x76, 0xa, 0xff, 0x76, 0x8, 0x6a, 0x4, 0xff, 0x76, 0x6, 0xff, 0x76, 0x4, 0xe8, 0xb8, 0x19, 0x83, 0xc4, 0xa, 0x6a, 0x4, 0xff, 0x76, 0x6, 0xff, 0x76, 0x4, 0xe8, 0x94, 0x19, 0x83, 0xc4, 0x6, 0x3, 0x46, 0x4, 0x13, 0x56, 0x6, 0x3b, 0x46, 0xfc, 0x75, 0x59, 0x3b, 0x56, 0xfe, 0x75, 0x54, 0x6a, 0x4, 0x52, 0x50, 0xe8, 0x7a, 0x19, 0x83, 0xc4, 0x6, 0x6a, 0x4, 0xff, 0x76, 0x6, 0xff, 0x76, 0x4, 0x8b, 0xf0, 0x8b, 0xfa, 0xe8, 0x68, 0x19, 0x83, 0xc4, 0x6, 0x3, 0xf0, 0x13, 0xfa, 0x89, 0x76, 0xf4, 0x89, 0x7e, 0xf6, 0x57, 0x56, 0x6a, 0x4, 0xff, 0x76, 0x6, 0xff, 0x76, 0x4, 0xe8, 0x64, 0x19, 0x83, 0xc4, 0xa, 0x6a, 0, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0xe8, 0x40, 0x19, 0x83, 0xc4, 0x6, 0x52, 0x50, 0x6a, 0, 0xff, 0x76, 0x6, 0xff, 0x76, 0x4, 0xe8, 0x46, 0x19, 0x83, 0xc4, 0xa, 0xff, 0x76, 0xa, 0xff, 0x76, 0x8, 0xe8, 0x75, 0xfb, 0x5b, 0x5b, 0xfb, 0x80, 0x3e, 0x2e, 0, 0xb, 0x75, 0x54, 0x8a, 0x26, 0x15, 0, 0x25, 0, 0x40, 0x3d, 0x1, 0, 0x1b, 0xc0, 0x40, 0x8a, 0xe, 0x47, 0, 0x80, 0xe1, 0x80, 0x80, 0xf9, 0x1, 0x1b, 0xc9, 0x41, 0x33, 0xc1, 0x74, 0x36, 0x80, 0x3e, 0xf8, 0x9, 0x1, 0x1b, 0xc0, 0x80, 0xe4, 0x7, 0x80, 0xc4, 0xf0, 0x50, 0x8b, 0x46, 0xf4, 0x8b, 0x56, 0xf6, 0x3, 0x46, 0x4, 0x13, 0x56, 0x6, 0x2d, 0x1, 0, 0x83, 0xda, 0, 0x52, 0x50, 0x8b, 0x46, 0x4, 0x8b, 0x56, 0x6, 0x5, 0x1, 0, 0x83, 0xd2, 0, 0x52, 0x50, 0xe8, 0xc, 0x31, 0x83, 0xc4, 0xa, 0xf6, 0x6, 0x47, 0, 0x80, 0x74, 0x6, 0x68, 0x1b, 0x11, 0xe8, 0x6c, 0xfd, 0x5e, 0x5f, 0xc9, 0xc3}))
    II(0x0000dfd0, 0x4)   enterw(0xc, 0);                       /* enter 0xc, 0x0 */
    II(0x0000dfd4, 0x1)   pushw(di);                            /* push di */
    II(0x0000dfd5, 0x1)   pushw(si);                            /* push si */
    II(0x0000dfd6, 0x3)   mov(ax, memw_a16(ss, bp + 0x4));      /* mov ax, [bp+0x4] */
    II(0x0000dfd9, 0x3)   mov(dx, memw_a16(ss, bp + 0x6));      /* mov dx, [bp+0x6] */
    II(0x0000dfdc, 0x4)   cmp(memw_a16(ds, 0x9a), dx);          /* cmp [0x9a], dx */
    II(0x0000dfe0, 0x2)   jbew(0x0000dfe5, 0x3);                /* jbe 0xdfe5 */
    II(0x0000dfe2, 0x3)   jmpw(0x0000e258, 0x273);              /* jmp 0xe258 */
l_0x0000dfe5:
    II(0x0000dfe5, 0x2)   jbw(0x0000dfed, 0x6);                 /* jb 0xdfed */
    II(0x0000dfe7, 0x4)   cmp(memw_a16(ds, 0x98), ax);          /* cmp [0x98], ax */
    II(0x0000dfeb, 0x2)   jaw(0x0000dff9, 0xc);                 /* ja 0xdff9 */
l_0x0000dfed:
    II(0x0000dfed, 0x3)   add(ax, memw_a16(ss, bp + 0x8));      /* add ax, [bp+0x8] */
    II(0x0000dff0, 0x3)   adc(dx, memw_a16(ss, bp + 0xa));      /* adc dx, [bp+0xa] */
    II(0x0000dff3, 0x4)   cmp(dx, memw_a16(ds, 0x9e));          /* cmp dx, [0x9e] */
    II(0x0000dff7, 0x2)   jbew(0x0000dffc, 0x3);                /* jbe 0xdffc */
l_0x0000dff9:
    II(0x0000dff9, 0x3)   jmpw(0x0000e258, 0x25c);              /* jmp 0xe258 */
l_0x0000dffc:
    II(0x0000dffc, 0x2)   jbw(0x0000e004, 0x6);                 /* jb 0xe004 */
    II(0x0000dffe, 0x4)   cmp(ax, memw_a16(ds, 0x9c));          /* cmp ax, [0x9c] */
    II(0x0000e002, 0x2)   jaw(0x0000e00c, 0x8);                 /* ja 0xe00c */
l_0x0000e004:
    II(0x0000e004, 0x3)   mov(ax, memw_a16(ss, bp + 0xa));      /* mov ax, [bp+0xa] */
    II(0x0000e007, 0x3)   or_(ax, memw_a16(ss, bp + 0x8));      /* or ax, [bp+0x8] */
    II(0x0000e00a, 0x2)   jnzw(0x0000e00f, 0x3);                /* jnz 0xe00f */
l_0x0000e00c:
    II(0x0000e00c, 0x3)   jmpw(0x0000e258, 0x249);              /* jmp 0xe258 */
l_0x0000e00f:
    II(0x0000e00f, 0x5)   test(memb_a16(ds, 0x47), 0x80);       /* test byte [0x47], 0x80 */
    II(0x0000e014, 0x2)   jzw(0x0000e01c, 0x6);                 /* jz 0xe01c */
    II(0x0000e016, 0x3)   pushw(0x111c);                        /* push word 0x111c */
    II(0x0000e019, 0x3)   callw(0x0000dfc4, -0x58);             /* call 0xdfc4 */
l_0x0000e01c:
    II(0x0000e01c, 0x1)   cli();                                /* cli  */
    II(0x0000e01d, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0000e01f, 0x3)   mov(ax, memw_a16(ds, 0x98));          /* mov ax, [0x98] */
    II(0x0000e022, 0x4)   mov(dx, memw_a16(ds, 0x9a));          /* mov dx, [0x9a] */
    II(0x0000e026, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x0000e029, 0x3)   mov(memw_a16(ss, bp - 0x6), dx);      /* mov [bp-0x6], dx */
l_0x0000e02c:
    II(0x0000e02c, 0x1)   pushw(dx);                            /* push dx */
    II(0x0000e02d, 0x1)   pushw(ax);                            /* push ax */
    II(0x0000e02e, 0x3)   callw(0x0000fb11, 0x1ae0);            /* call 0xfb11 */
    II(0x0000e031, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x0000e034, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x0000e037, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
    II(0x0000e03a, 0x3)   mov(ax, memw_a16(ss, bp + 0x4));      /* mov ax, [bp+0x4] */
    II(0x0000e03d, 0x3)   mov(dx, memw_a16(ss, bp + 0x6));      /* mov dx, [bp+0x6] */
    II(0x0000e040, 0x3)   cmp(memw_a16(ss, bp - 0x2), dx);      /* cmp [bp-0x2], dx */
    II(0x0000e043, 0x2)   jaw(0x0000e064, 0x1f);                /* ja 0xe064 */
    II(0x0000e045, 0x2)   jbw(0x0000e04c, 0x5);                 /* jb 0xe04c */
    II(0x0000e047, 0x3)   cmp(memw_a16(ss, bp - 0x4), ax);      /* cmp [bp-0x4], ax */
    II(0x0000e04a, 0x2)   jaew(0x0000e064, 0x18);               /* jae 0xe064 */
l_0x0000e04c:
    II(0x0000e04c, 0x3)   mov(ax, memw_a16(ss, bp - 0x2));      /* mov ax, [bp-0x2] */
    II(0x0000e04f, 0x3)   or_(ax, memw_a16(ss, bp - 0x4));      /* or ax, [bp-0x4] */
    II(0x0000e052, 0x2)   jzw(0x0000e064, 0x10);                /* jz 0xe064 */
    II(0x0000e054, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x0000e057, 0x3)   mov(dx, memw_a16(ss, bp - 0x2));      /* mov dx, [bp-0x2] */
    II(0x0000e05a, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x0000e05d, 0x3)   mov(memw_a16(ss, bp - 0x6), dx);      /* mov [bp-0x6], dx */
    II(0x0000e060, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0000e062, 0x2)   jmpw(0x0000e02c, -0x38);              /* jmp 0xe02c */
l_0x0000e064:
    II(0x0000e064, 0x3)   mov(ax, memw_a16(ss, bp + 0x4));      /* mov ax, [bp+0x4] */
    II(0x0000e067, 0x3)   mov(dx, memw_a16(ss, bp + 0x6));      /* mov dx, [bp+0x6] */
    II(0x0000e06a, 0x3)   cmp(memw_a16(ss, bp - 0x4), ax);      /* cmp [bp-0x4], ax */
    II(0x0000e06d, 0x2)   jnzw(0x0000e077, 0x8);                /* jnz 0xe077 */
    II(0x0000e06f, 0x3)   cmp(memw_a16(ss, bp - 0x2), dx);      /* cmp [bp-0x2], dx */
    II(0x0000e072, 0x2)   jnzw(0x0000e077, 0x3);                /* jnz 0xe077 */
    II(0x0000e074, 0x3)   jmpw(0x0000e24b, 0x1d4);              /* jmp 0xe24b */
l_0x0000e077:
    II(0x0000e077, 0x3)   mov(ax, memw_a16(ss, bp - 0x2));      /* mov ax, [bp-0x2] */
    II(0x0000e07a, 0x3)   or_(ax, memw_a16(ss, bp - 0x4));      /* or ax, [bp-0x4] */
    II(0x0000e07d, 0x2)   jzw(0x0000e09d, 0x1e);                /* jz 0xe09d */
    II(0x0000e07f, 0x3)   mov(ax, memw_a16(ss, bp + 0x8));      /* mov ax, [bp+0x8] */
    II(0x0000e082, 0x3)   mov(dx, memw_a16(ss, bp + 0xa));      /* mov dx, [bp+0xa] */
    II(0x0000e085, 0x3)   add(ax, memw_a16(ss, bp + 0x4));      /* add ax, [bp+0x4] */
    II(0x0000e088, 0x3)   adc(dx, memw_a16(ss, bp + 0x6));      /* adc dx, [bp+0x6] */
    II(0x0000e08b, 0x3)   cmp(dx, memw_a16(ss, bp - 0x2));      /* cmp dx, [bp-0x2] */
    II(0x0000e08e, 0x2)   jbw(0x0000e09d, 0xd);                 /* jb 0xe09d */
    II(0x0000e090, 0x2)   jbew(0x0000e095, 0x3);                /* jbe 0xe095 */
    II(0x0000e092, 0x3)   jmpw(0x0000e24b, 0x1b6);              /* jmp 0xe24b */
l_0x0000e095:
    II(0x0000e095, 0x3)   cmp(ax, memw_a16(ss, bp - 0x4));      /* cmp ax, [bp-0x4] */
    II(0x0000e098, 0x2)   jbew(0x0000e09d, 0x3);                /* jbe 0xe09d */
    II(0x0000e09a, 0x3)   jmpw(0x0000e24b, 0x1ae);              /* jmp 0xe24b */
l_0x0000e09d:
    II(0x0000e09d, 0x2)   pushw(0x4);                           /* push 0x4 */
    II(0x0000e09f, 0x3)   pushw(memw_a16(ss, bp - 0x6));        /* push word [bp-0x6] */
    II(0x0000e0a2, 0x3)   pushw(memw_a16(ss, bp - 0x8));        /* push word [bp-0x8] */
    II(0x0000e0a5, 0x3)   callw(0x0000fb11, 0x1a69);            /* call 0xfb11 */
    II(0x0000e0a8, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x0000e0ab, 0x3)   add(ax, memw_a16(ss, bp - 0x8));      /* add ax, [bp-0x8] */
    II(0x0000e0ae, 0x3)   adc(dx, memw_a16(ss, bp - 0x6));      /* adc dx, [bp-0x6] */
    II(0x0000e0b1, 0x3)   cmp(dx, memw_a16(ss, bp + 0x6));      /* cmp dx, [bp+0x6] */
    II(0x0000e0b4, 0x2)   jbw(0x0000e0c0, 0xa);                 /* jb 0xe0c0 */
    II(0x0000e0b6, 0x2)   jaw(0x0000e0bd, 0x5);                 /* ja 0xe0bd */
    II(0x0000e0b8, 0x3)   cmp(ax, memw_a16(ss, bp + 0x4));      /* cmp ax, [bp+0x4] */
    II(0x0000e0bb, 0x2)   jbew(0x0000e0c0, 0x3);                /* jbe 0xe0c0 */
l_0x0000e0bd:
    II(0x0000e0bd, 0x3)   jmpw(0x0000e24b, 0x18b);              /* jmp 0xe24b */
l_0x0000e0c0:
    II(0x0000e0c0, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x0000e0c3, 0x3)   pushw(memw_a16(ss, bp + 0x4));        /* push word [bp+0x4] */
    II(0x0000e0c6, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0000e0c8, 0x3)   pushw(memw_a16(ss, bp - 0x6));        /* push word [bp-0x6] */
    II(0x0000e0cb, 0x3)   pushw(memw_a16(ss, bp - 0x8));        /* push word [bp-0x8] */
    II(0x0000e0ce, 0x3)   callw(0x0000fb27, 0x1a56);            /* call 0xfb27 */
    II(0x0000e0d1, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x0000e0d4, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x0000e0d7, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x0000e0da, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0000e0dc, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x0000e0df, 0x3)   pushw(memw_a16(ss, bp + 0x4));        /* push word [bp+0x4] */
    II(0x0000e0e2, 0x3)   callw(0x0000fb27, 0x1a42);            /* call 0xfb27 */
    II(0x0000e0e5, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x0000e0e8, 0x3)   mov(ax, memw_a16(ss, bp + 0x8));      /* mov ax, [bp+0x8] */
    II(0x0000e0eb, 0x3)   mov(dx, memw_a16(ss, bp + 0xa));      /* mov dx, [bp+0xa] */
    II(0x0000e0ee, 0x3)   mov(memw_a16(ss, bp - 0xc), ax);      /* mov [bp-0xc], ax */
    II(0x0000e0f1, 0x3)   mov(memw_a16(ss, bp - 0xa), dx);      /* mov [bp-0xa], dx */
    II(0x0000e0f4, 0x2)   pushw(0x4);                           /* push 0x4 */
    II(0x0000e0f6, 0x3)   pushw(memw_a16(ss, bp - 0x6));        /* push word [bp-0x6] */
    II(0x0000e0f9, 0x3)   pushw(memw_a16(ss, bp - 0x8));        /* push word [bp-0x8] */
    II(0x0000e0fc, 0x3)   callw(0x0000fb11, 0x1a12);            /* call 0xfb11 */
    II(0x0000e0ff, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x0000e102, 0x3)   add(ax, memw_a16(ss, bp - 0x8));      /* add ax, [bp-0x8] */
    II(0x0000e105, 0x3)   adc(dx, memw_a16(ss, bp - 0x6));      /* adc dx, [bp-0x6] */
    II(0x0000e108, 0x3)   cmp(ax, memw_a16(ss, bp + 0x4));      /* cmp ax, [bp+0x4] */
    II(0x0000e10b, 0x2)   jnzw(0x0000e15e, 0x51);               /* jnz 0xe15e */
    II(0x0000e10d, 0x3)   cmp(dx, memw_a16(ss, bp + 0x6));      /* cmp dx, [bp+0x6] */
    II(0x0000e110, 0x2)   jnzw(0x0000e15e, 0x4c);               /* jnz 0xe15e */
    II(0x0000e112, 0x2)   pushw(0x4);                           /* push 0x4 */
    II(0x0000e114, 0x3)   pushw(memw_a16(ss, bp - 0x6));        /* push word [bp-0x6] */
    II(0x0000e117, 0x3)   pushw(memw_a16(ss, bp - 0x8));        /* push word [bp-0x8] */
    II(0x0000e11a, 0x3)   callw(0x0000fb11, 0x19f4);            /* call 0xfb11 */
    II(0x0000e11d, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x0000e120, 0x3)   add(ax, memw_a16(ss, bp - 0xc));      /* add ax, [bp-0xc] */
    II(0x0000e123, 0x3)   adc(dx, memw_a16(ss, bp - 0xa));      /* adc dx, [bp-0xa] */
    II(0x0000e126, 0x3)   mov(memw_a16(ss, bp - 0xc), ax);      /* mov [bp-0xc], ax */
    II(0x0000e129, 0x3)   mov(memw_a16(ss, bp - 0xa), dx);      /* mov [bp-0xa], dx */
    II(0x0000e12c, 0x1)   pushw(dx);                            /* push dx */
    II(0x0000e12d, 0x1)   pushw(ax);                            /* push ax */
    II(0x0000e12e, 0x2)   pushw(0x4);                           /* push 0x4 */
    II(0x0000e130, 0x3)   pushw(memw_a16(ss, bp - 0x6));        /* push word [bp-0x6] */
    II(0x0000e133, 0x3)   pushw(memw_a16(ss, bp - 0x8));        /* push word [bp-0x8] */
    II(0x0000e136, 0x3)   callw(0x0000fb27, 0x19ee);            /* call 0xfb27 */
    II(0x0000e139, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x0000e13c, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x0000e13f, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x0000e142, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0000e144, 0x3)   pushw(memw_a16(ss, bp - 0x6));        /* push word [bp-0x6] */
    II(0x0000e147, 0x3)   pushw(memw_a16(ss, bp - 0x8));        /* push word [bp-0x8] */
    II(0x0000e14a, 0x3)   callw(0x0000fb27, 0x19da);            /* call 0xfb27 */
    II(0x0000e14d, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x0000e150, 0x3)   mov(ax, memw_a16(ss, bp - 0x8));      /* mov ax, [bp-0x8] */
    II(0x0000e153, 0x3)   mov(dx, memw_a16(ss, bp - 0x6));      /* mov dx, [bp-0x6] */
    II(0x0000e156, 0x3)   mov(memw_a16(ss, bp + 0x4), ax);      /* mov [bp+0x4], ax */
    II(0x0000e159, 0x3)   mov(memw_a16(ss, bp + 0x6), dx);      /* mov [bp+0x6], dx */
    II(0x0000e15c, 0x2)   jmpw(0x0000e172, 0x14);               /* jmp 0xe172 */
l_0x0000e15e:
    II(0x0000e15e, 0x3)   pushw(memw_a16(ss, bp + 0xa));        /* push word [bp+0xa] */
    II(0x0000e161, 0x3)   pushw(memw_a16(ss, bp + 0x8));        /* push word [bp+0x8] */
    II(0x0000e164, 0x2)   pushw(0x4);                           /* push 0x4 */
    II(0x0000e166, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x0000e169, 0x3)   pushw(memw_a16(ss, bp + 0x4));        /* push word [bp+0x4] */
    II(0x0000e16c, 0x3)   callw(0x0000fb27, 0x19b8);            /* call 0xfb27 */
    II(0x0000e16f, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
l_0x0000e172:
    II(0x0000e172, 0x2)   pushw(0x4);                           /* push 0x4 */
    II(0x0000e174, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x0000e177, 0x3)   pushw(memw_a16(ss, bp + 0x4));        /* push word [bp+0x4] */
    II(0x0000e17a, 0x3)   callw(0x0000fb11, 0x1994);            /* call 0xfb11 */
    II(0x0000e17d, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x0000e180, 0x3)   add(ax, memw_a16(ss, bp + 0x4));      /* add ax, [bp+0x4] */
    II(0x0000e183, 0x3)   adc(dx, memw_a16(ss, bp + 0x6));      /* adc dx, [bp+0x6] */
    II(0x0000e186, 0x3)   cmp(ax, memw_a16(ss, bp - 0x4));      /* cmp ax, [bp-0x4] */
    II(0x0000e189, 0x2)   jnzw(0x0000e1e4, 0x59);               /* jnz 0xe1e4 */
    II(0x0000e18b, 0x3)   cmp(dx, memw_a16(ss, bp - 0x2));      /* cmp dx, [bp-0x2] */
    II(0x0000e18e, 0x2)   jnzw(0x0000e1e4, 0x54);               /* jnz 0xe1e4 */
    II(0x0000e190, 0x2)   pushw(0x4);                           /* push 0x4 */
    II(0x0000e192, 0x1)   pushw(dx);                            /* push dx */
    II(0x0000e193, 0x1)   pushw(ax);                            /* push ax */
    II(0x0000e194, 0x3)   callw(0x0000fb11, 0x197a);            /* call 0xfb11 */
    II(0x0000e197, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x0000e19a, 0x2)   pushw(0x4);                           /* push 0x4 */
    II(0x0000e19c, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x0000e19f, 0x3)   pushw(memw_a16(ss, bp + 0x4));        /* push word [bp+0x4] */
    II(0x0000e1a2, 0x2)   mov(si, ax);                          /* mov si, ax */
    II(0x0000e1a4, 0x2)   mov(di, dx);                          /* mov di, dx */
    II(0x0000e1a6, 0x3)   callw(0x0000fb11, 0x1968);            /* call 0xfb11 */
    II(0x0000e1a9, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x0000e1ac, 0x2)   add(si, ax);                          /* add si, ax */
    II(0x0000e1ae, 0x2)   adc(di, dx);                          /* adc di, dx */
    II(0x0000e1b0, 0x3)   mov(memw_a16(ss, bp - 0xc), si);      /* mov [bp-0xc], si */
    II(0x0000e1b3, 0x3)   mov(memw_a16(ss, bp - 0xa), di);      /* mov [bp-0xa], di */
    II(0x0000e1b6, 0x1)   pushw(di);                            /* push di */
    II(0x0000e1b7, 0x1)   pushw(si);                            /* push si */
    II(0x0000e1b8, 0x2)   pushw(0x4);                           /* push 0x4 */
    II(0x0000e1ba, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x0000e1bd, 0x3)   pushw(memw_a16(ss, bp + 0x4));        /* push word [bp+0x4] */
    II(0x0000e1c0, 0x3)   callw(0x0000fb27, 0x1964);            /* call 0xfb27 */
    II(0x0000e1c3, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x0000e1c6, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0000e1c8, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x0000e1cb, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x0000e1ce, 0x3)   callw(0x0000fb11, 0x1940);            /* call 0xfb11 */
    II(0x0000e1d1, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x0000e1d4, 0x1)   pushw(dx);                            /* push dx */
    II(0x0000e1d5, 0x1)   pushw(ax);                            /* push ax */
    II(0x0000e1d6, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0000e1d8, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x0000e1db, 0x3)   pushw(memw_a16(ss, bp + 0x4));        /* push word [bp+0x4] */
    II(0x0000e1de, 0x3)   callw(0x0000fb27, 0x1946);            /* call 0xfb27 */
    II(0x0000e1e1, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
l_0x0000e1e4:
    II(0x0000e1e4, 0x3)   pushw(memw_a16(ss, bp + 0xa));        /* push word [bp+0xa] */
    II(0x0000e1e7, 0x3)   pushw(memw_a16(ss, bp + 0x8));        /* push word [bp+0x8] */
    II(0x0000e1ea, 0x3)   callw(0x0000dd62, -0x48b);            /* call 0xdd62 */
    II(0x0000e1ed, 0x1)   popw(bx);                             /* pop bx */
    II(0x0000e1ee, 0x1)   popw(bx);                             /* pop bx */
    II(0x0000e1ef, 0x1)   sti();                                /* sti  */
    II(0x0000e1f0, 0x5)   cmp(memb_a16(ds, 0x2e), 0xb);         /* cmp byte [0x2e], 0xb */
    II(0x0000e1f5, 0x2)   jnzw(0x0000e24b, 0x54);               /* jnz 0xe24b */
    II(0x0000e1f7, 0x4)   mov(ah, memb_a16(ds, 0x15));          /* mov ah, [0x15] */
    II(0x0000e1fb, 0x3)   and_(ax, 0x4000);                     /* and ax, 0x4000 */
    II(0x0000e1fe, 0x3)   cmp(ax, 0x1);                         /* cmp ax, 0x1 */
    II(0x0000e201, 0x2)   sbb(ax, ax);                          /* sbb ax, ax */
    II(0x0000e203, 0x1)   inc(ax);                              /* inc ax */
    II(0x0000e204, 0x4)   mov(cl, memb_a16(ds, 0x47));          /* mov cl, [0x47] */
    II(0x0000e208, 0x3)   and_(cl, 0x80);                       /* and cl, 0x80 */
    II(0x0000e20b, 0x3)   cmp(cl, 0x1);                         /* cmp cl, 0x1 */
    II(0x0000e20e, 0x2)   sbb(cx, cx);                          /* sbb cx, cx */
    II(0x0000e210, 0x1)   inc(cx);                              /* inc cx */
    II(0x0000e211, 0x2)   xor_(ax, cx);                         /* xor ax, cx */
    II(0x0000e213, 0x2)   jzw(0x0000e24b, 0x36);                /* jz 0xe24b */
    II(0x0000e215, 0x5)   cmp(memb_a16(ds, 0x9f8), 0x1);        /* cmp byte [0x9f8], 0x1 */
    II(0x0000e21a, 0x2)   sbb(ax, ax);                          /* sbb ax, ax */
    II(0x0000e21c, 0x3)   and_(ah, 0x7);                        /* and ah, 0x7 */
    II(0x0000e21f, 0x3)   add(ah, -0x10 /* 0xf0 */);            /* add ah, 0xf0 */
    II(0x0000e222, 0x1)   pushw(ax);                            /* push ax */
    II(0x0000e223, 0x3)   mov(ax, memw_a16(ss, bp - 0xc));      /* mov ax, [bp-0xc] */
    II(0x0000e226, 0x3)   mov(dx, memw_a16(ss, bp - 0xa));      /* mov dx, [bp-0xa] */
    II(0x0000e229, 0x3)   add(ax, memw_a16(ss, bp + 0x4));      /* add ax, [bp+0x4] */
    II(0x0000e22c, 0x3)   adc(dx, memw_a16(ss, bp + 0x6));      /* adc dx, [bp+0x6] */
    II(0x0000e22f, 0x3)   sub(ax, 0x1);                         /* sub ax, 0x1 */
    II(0x0000e232, 0x3)   sbb(dx, 0);                           /* sbb dx, 0x0 */
    II(0x0000e235, 0x1)   pushw(dx);                            /* push dx */
    II(0x0000e236, 0x1)   pushw(ax);                            /* push ax */
    II(0x0000e237, 0x3)   mov(ax, memw_a16(ss, bp + 0x4));      /* mov ax, [bp+0x4] */
    II(0x0000e23a, 0x3)   mov(dx, memw_a16(ss, bp + 0x6));      /* mov dx, [bp+0x6] */
    II(0x0000e23d, 0x3)   add(ax, 0x1);                         /* add ax, 0x1 */
    II(0x0000e240, 0x3)   adc(dx, 0);                           /* adc dx, 0x0 */
    II(0x0000e243, 0x1)   pushw(dx);                            /* push dx */
    II(0x0000e244, 0x1)   pushw(ax);                            /* push ax */
    II(0x0000e245, 0x3)   callw(0x00011354, 0x310c);            /* call 0x11354 */
    II(0x0000e248, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
l_0x0000e24b:
    II(0x0000e24b, 0x5)   test(memb_a16(ds, 0x47), 0x80);       /* test byte [0x47], 0x80 */
    II(0x0000e250, 0x2)   jzw(0x0000e258, 0x6);                 /* jz 0xe258 */
    II(0x0000e252, 0x3)   pushw(0x111b);                        /* push word 0x111b */
    II(0x0000e255, 0x3)   callw(0x0000dfc4, -0x294);            /* call 0xdfc4 */
l_0x0000e258:
    II(0x0000e258, 0x1)   popw(si);                             /* pop si */
    II(0x0000e259, 0x1)   popw(di);                             /* pop di */
    II(0x0000e25a, 0x1)   leavew();                             /* leave  */
    II(0x0000e25b, 0x1)   retw();                               /* ret  */
FUNC_END

