FUNC_BEGIN(0x0015de46, 0x4c188f0fe84d6fcc, 0x10, ({0xc8, 0x30, 0, 0, 0x56, 0xc7, 0x46, 0xea, 0, 0, 0xc6, 0x46, 0xe2, 0, 0x8e, 0x6, 0xc8, 0x3f, 0x26, 0xa1, 0x84, 0x3b, 0xc7, 0x46, 0xe4, 0, 0, 0x89, 0x46, 0xe6, 0x26, 0xa1, 0x72, 0x3b, 0xc7, 0x46, 0xdc, 0, 0, 0x89, 0x46, 0xde, 0xf7, 0x46, 0x6, 0xff, 0xff, 0x74, 0x6, 0x2b, 0xc0, 0x99, 0xe9, 0xf6, 0, 0x83, 0x7e, 0xc, 0, 0x74, 0x3b, 0x83, 0x7e, 0xe, 0, 0x7c, 0x35, 0x8e, 0x6, 0xca, 0x3f, 0x26, 0xa1, 0xae, 0x32, 0x26, 0xb, 0x6, 0xac, 0x32, 0x74, 0x26, 0xff, 0x76, 0xe, 0x68, 0x8, 0x1, 0x6a, 0, 0x6a, 0xf, 0x26, 0xff, 0x1e, 0xac, 0x32, 0x83, 0xc4, 0x8, 0x89, 0x46, 0xd8, 0x89, 0x56, 0xda, 0x8b, 0xc2, 0x89, 0x46, 0xea, 0xfe, 0x46, 0xe2, 0x50, 0xe8, 0x41, 0xff, 0xeb, 0xa, 0x33, 0xc0, 0x33, 0xc9, 0x41, 0xcd, 0x31, 0x89, 0x46, 0xea, 0x83, 0x7e, 0xea, 0, 0x74, 0xa9, 0x8d, 0x46, 0xd0, 0x16, 0x50, 0xff, 0x76, 0xea, 0x9a, 0x82, 0x4f, 0x80, 0, 0x83, 0xc4, 0x6, 0x8a, 0x46, 0xd5, 0x24, 0x60, 0x88, 0x46, 0xe8, 0xb8, 0x7, 0, 0x8b, 0x5e, 0xea, 0x8b, 0x4e, 0xa, 0x8b, 0x56, 0x8, 0xcd, 0x31, 0x40, 0x8b, 0x4e, 0x6, 0x8b, 0x56, 0x4, 0xcd, 0x31, 0x40, 0xb9, 0x92, 0, 0xb, 0x4e, 0xe8, 0xcd, 0x31, 0x80, 0x7e, 0xe2, 0, 0x74, 0x62, 0xa1, 0x92, 0x32, 0xb, 0x6, 0x90, 0x32, 0x74, 0x59, 0x83, 0x7e, 0xe, 0, 0x7c, 0x53, 0x83, 0x7e, 0xc, 0x2, 0x74, 0x4d, 0x8b, 0x46, 0xea, 0x2b, 0xc9, 0x50, 0x51, 0x8d, 0x46, 0xe, 0x16, 0x50, 0x6a, 0x6, 0xff, 0x1e, 0x90, 0x32, 0x83, 0xc4, 0xa, 0x89, 0x46, 0xe0, 0x8b, 0x5e, 0xea, 0xc1, 0xeb, 0x3, 0xc4, 0x76, 0xe4, 0x26, 0x8a, 0, 0x98, 0x50, 0x8b, 0x5e, 0xea, 0x80, 0xe3, 0xf8, 0xc4, 0x76, 0xdc, 0x26, 0xff, 0x70, 0x6, 0x26, 0xff, 0x70, 0x4, 0x26, 0xff, 0x70, 0x2, 0x26, 0xff, 0x30, 0xff, 0x76, 0xea, 0x8e, 0x6, 0xcc, 0x3f, 0x26, 0xff, 0x1e, 0xb0, 0x32, 0x83, 0xc4, 0xc, 0x8b, 0x56, 0xea, 0x2b, 0xc0, 0x5e, 0xc9, 0xc2, 0xc, 0}))
    II(0x0015de46, 0x4)   enterw(0x30, 0);                      /* enter 0x30, 0x0 */
    II(0x0015de4a, 0x1)   pushw(si);                            /* push si */
    II(0x0015de4b, 0x5)   mov(memw_a16(ss, bp - 0x16), 0);      /* mov word [bp-0x16], 0x0 */
    II(0x0015de50, 0x4)   mov(memb_a16(ss, bp - 0x1e), 0);      /* mov byte [bp-0x1e], 0x0 */
    II(0x0015de54, 0x4)   mov(es, memw_a16(ds, 0x3fc8));        /* mov es, [0x3fc8] */
    II(0x0015de58, 0x4)   mov(ax, memw_a16(es, 0x3b84));        /* mov ax, [es:0x3b84] */
    II(0x0015de5c, 0x5)   mov(memw_a16(ss, bp - 0x1c), 0);      /* mov word [bp-0x1c], 0x0 */
    II(0x0015de61, 0x3)   mov(memw_a16(ss, bp - 0x1a), ax);     /* mov [bp-0x1a], ax */
    II(0x0015de64, 0x4)   mov(ax, memw_a16(es, 0x3b72));        /* mov ax, [es:0x3b72] */
    II(0x0015de68, 0x5)   mov(memw_a16(ss, bp - 0x24), 0);      /* mov word [bp-0x24], 0x0 */
    II(0x0015de6d, 0x3)   mov(memw_a16(ss, bp - 0x22), ax);     /* mov [bp-0x22], ax */
    II(0x0015de70, 0x5)   test(memw_a16(ss, bp + 0x6), 0xffff); /* test word [bp+0x6], 0xffff */
    II(0x0015de75, 0x2)   jzw(0x0015de7d, 0x6);                 /* jz 0x15de7d */
l_0x0015de77:
    II(0x0015de77, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0015de79, 0x1)   cwd();                                /* cwd  */
    II(0x0015de7a, 0x3)   jmpw(0x0015df73, 0xf6);               /* jmp 0x15df73 */
l_0x0015de7d:
    II(0x0015de7d, 0x4)   cmp(memw_a16(ss, bp + 0xc), 0);       /* cmp word [bp+0xc], 0x0 */
    II(0x0015de81, 0x2)   jzw(0x0015debe, 0x3b);                /* jz 0x15debe */
    II(0x0015de83, 0x4)   cmp(memw_a16(ss, bp + 0xe), 0);       /* cmp word [bp+0xe], 0x0 */
    II(0x0015de87, 0x2)   jlw(0x0015debe, 0x35);                /* jl 0x15debe */
    II(0x0015de89, 0x4)   mov(es, memw_a16(ds, 0x3fca));        /* mov es, [0x3fca] */
    II(0x0015de8d, 0x4)   mov(ax, memw_a16(es, 0x32ae));        /* mov ax, [es:0x32ae] */
    II(0x0015de91, 0x5)   or_(ax, memw_a16(es, 0x32ac));        /* or ax, [es:0x32ac] */
    II(0x0015de96, 0x2)   jzw(0x0015debe, 0x26);                /* jz 0x15debe */
    II(0x0015de98, 0x3)   pushw(memw_a16(ss, bp + 0xe));        /* push word [bp+0xe] */
    II(0x0015de9b, 0x3)   pushw(0x108);                         /* push word 0x108 */
    II(0x0015de9e, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0015dea0, 0x2)   pushw(0xf);                           /* push 0xf */
    II(0x0015dea2, 0x5)   callw_a16_far_ind(es, 0x32ac);        /* call word far [es:0x32ac] */
    II(0x0015dea7, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0015deaa, 0x3)   mov(memw_a16(ss, bp - 0x28), ax);     /* mov [bp-0x28], ax */
    II(0x0015dead, 0x3)   mov(memw_a16(ss, bp - 0x26), dx);     /* mov [bp-0x26], dx */
    II(0x0015deb0, 0x2)   mov(ax, dx);                          /* mov ax, dx */
    II(0x0015deb2, 0x3)   mov(memw_a16(ss, bp - 0x16), ax);     /* mov [bp-0x16], ax */
    II(0x0015deb5, 0x3)   inc(memb_a16(ss, bp - 0x1e));         /* inc byte [bp-0x1e] */
    II(0x0015deb8, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015deb9, 0x3)   callw(0x0015ddfd, -0xbf);             /* call 0x15ddfd */
    II(0x0015debc, 0x2)   jmpw(0x0015dec8, 0xa);                /* jmp 0x15dec8 */
l_0x0015debe:
    II(0x0015debe, 0x2)   xor_(ax, ax);                         /* xor ax, ax */
    II(0x0015dec0, 0x2)   xor_(cx, cx);                         /* xor cx, cx */
    II(0x0015dec2, 0x1)   inc(cx);                              /* inc cx */
    II(0x0015dec3, 0x2)   int_(0x31);                           /* int 0x31 */
    II(0x0015dec5, 0x3)   mov(memw_a16(ss, bp - 0x16), ax);     /* mov [bp-0x16], ax */
l_0x0015dec8:
    II(0x0015dec8, 0x4)   cmp(memw_a16(ss, bp - 0x16), 0);      /* cmp word [bp-0x16], 0x0 */
    II(0x0015decc, 0x2)   jzw(0x0015de77, -0x57);               /* jz 0x15de77 */
    II(0x0015dece, 0x3)   lea(ax, bp - 0x30);                   /* lea ax, [bp-0x30] */
    II(0x0015ded1, 0x1)   pushw(ss);                            /* push ss */
    II(0x0015ded2, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015ded3, 0x3)   pushw(memw_a16(ss, bp - 0x16));       /* push word [bp-0x16] */
    II(0x0015ded6, 0x5)   callw_far_abs(0x80, 0x4f82);          /* call word 0x80:0x4f82 */
    II(0x0015dedb, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x0015dede, 0x3)   mov(al, memb_a16(ss, bp - 0x2b));     /* mov al, [bp-0x2b] */
    II(0x0015dee1, 0x2)   and_(al, 0x60);                       /* and al, 0x60 */
    II(0x0015dee3, 0x3)   mov(memb_a16(ss, bp - 0x18), al);     /* mov [bp-0x18], al */
    II(0x0015dee6, 0x3)   mov(ax, 0x7);                         /* mov ax, 0x7 */
    II(0x0015dee9, 0x3)   mov(bx, memw_a16(ss, bp - 0x16));     /* mov bx, [bp-0x16] */
    II(0x0015deec, 0x3)   mov(cx, memw_a16(ss, bp + 0xa));      /* mov cx, [bp+0xa] */
    II(0x0015deef, 0x3)   mov(dx, memw_a16(ss, bp + 0x8));      /* mov dx, [bp+0x8] */
    II(0x0015def2, 0x2)   int_(0x31);                           /* int 0x31 */
    II(0x0015def4, 0x1)   inc(ax);                              /* inc ax */
    II(0x0015def5, 0x3)   mov(cx, memw_a16(ss, bp + 0x6));      /* mov cx, [bp+0x6] */
    II(0x0015def8, 0x3)   mov(dx, memw_a16(ss, bp + 0x4));      /* mov dx, [bp+0x4] */
    II(0x0015defb, 0x2)   int_(0x31);                           /* int 0x31 */
    II(0x0015defd, 0x1)   inc(ax);                              /* inc ax */
    II(0x0015defe, 0x3)   mov(cx, 0x92);                        /* mov cx, 0x92 */
    II(0x0015df01, 0x3)   or_(cx, memw_a16(ss, bp - 0x18));     /* or cx, [bp-0x18] */
    II(0x0015df04, 0x2)   int_(0x31);                           /* int 0x31 */
    II(0x0015df06, 0x4)   cmp(memb_a16(ss, bp - 0x1e), 0);      /* cmp byte [bp-0x1e], 0x0 */
    II(0x0015df0a, 0x2)   jzw(0x0015df6e, 0x62);                /* jz 0x15df6e */
    II(0x0015df0c, 0x3)   mov(ax, memw_a16(ds, 0x3292));        /* mov ax, [0x3292] */
    II(0x0015df0f, 0x4)   or_(ax, memw_a16(ds, 0x3290));        /* or ax, [0x3290] */
    II(0x0015df13, 0x2)   jzw(0x0015df6e, 0x59);                /* jz 0x15df6e */
    II(0x0015df15, 0x4)   cmp(memw_a16(ss, bp + 0xe), 0);       /* cmp word [bp+0xe], 0x0 */
    II(0x0015df19, 0x2)   jlw(0x0015df6e, 0x53);                /* jl 0x15df6e */
    II(0x0015df1b, 0x4)   cmp(memw_a16(ss, bp + 0xc), 0x2);     /* cmp word [bp+0xc], 0x2 */
    II(0x0015df1f, 0x2)   jzw(0x0015df6e, 0x4d);                /* jz 0x15df6e */
    II(0x0015df21, 0x3)   mov(ax, memw_a16(ss, bp - 0x16));     /* mov ax, [bp-0x16] */
    II(0x0015df24, 0x2)   sub(cx, cx);                          /* sub cx, cx */
    II(0x0015df26, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015df27, 0x1)   pushw(cx);                            /* push cx */
    II(0x0015df28, 0x3)   lea(ax, bp + 0xe);                    /* lea ax, [bp+0xe] */
    II(0x0015df2b, 0x1)   pushw(ss);                            /* push ss */
    II(0x0015df2c, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015df2d, 0x2)   pushw(0x6);                           /* push 0x6 */
    II(0x0015df2f, 0x4)   callw_a16_far_ind(ds, 0x3290);        /* call word far [0x3290] */
    II(0x0015df33, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x0015df36, 0x3)   mov(memw_a16(ss, bp - 0x20), ax);     /* mov [bp-0x20], ax */
    II(0x0015df39, 0x3)   mov(bx, memw_a16(ss, bp - 0x16));     /* mov bx, [bp-0x16] */
    II(0x0015df3c, 0x3)   shr(bx, 0x3);                         /* shr bx, 0x3 */
    II(0x0015df3f, 0x3)   les(si, ss, bp - 0x1c);               /* les si, [bp-0x1c] */
    II(0x0015df42, 0x3)   mov(al, memb_a16(es, bx + si));       /* mov al, [es:bx+si] */
    II(0x0015df45, 0x1)   cbw();                                /* cbw  */
    II(0x0015df46, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015df47, 0x3)   mov(bx, memw_a16(ss, bp - 0x16));     /* mov bx, [bp-0x16] */
    II(0x0015df4a, 0x3)   and_(bl, 0xf8);                       /* and bl, 0xf8 */
    II(0x0015df4d, 0x3)   les(si, ss, bp - 0x24);               /* les si, [bp-0x24] */
    II(0x0015df50, 0x4)   pushw(memw_a16(es, bx + si + 0x6));   /* push word [es:bx+si+0x6] */
    II(0x0015df54, 0x4)   pushw(memw_a16(es, bx + si + 0x4));   /* push word [es:bx+si+0x4] */
    II(0x0015df58, 0x4)   pushw(memw_a16(es, bx + si + 0x2));   /* push word [es:bx+si+0x2] */
    II(0x0015df5c, 0x3)   pushw(memw_a16(es, bx + si));         /* push word [es:bx+si] */
    II(0x0015df5f, 0x3)   pushw(memw_a16(ss, bp - 0x16));       /* push word [bp-0x16] */
    II(0x0015df62, 0x4)   mov(es, memw_a16(ds, 0x3fcc));        /* mov es, [0x3fcc] */
    II(0x0015df66, 0x5)   callw_a16_far_ind(es, 0x32b0);        /* call word far [es:0x32b0] */
    II(0x0015df6b, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
l_0x0015df6e:
    II(0x0015df6e, 0x3)   mov(dx, memw_a16(ss, bp - 0x16));     /* mov dx, [bp-0x16] */
    II(0x0015df71, 0x2)   sub(ax, ax);                          /* sub ax, ax */
l_0x0015df73:
    II(0x0015df73, 0x1)   popw(si);                             /* pop si */
    II(0x0015df74, 0x1)   leavew();                             /* leave  */
    II(0x0015df75, 0x3)   retw(0xc);                            /* ret 0xc */
FUNC_END

