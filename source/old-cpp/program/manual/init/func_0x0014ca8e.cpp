FUNC_BEGIN(0x0014ca8e, 0x69416f5f2fe38922, 0x10, ({0xc8, 0x1a, 0, 0, 0x57, 0x56, 0xc7, 0x6, 0x38, 0, 0, 0, 0xc6, 0x46, 0xfa, 0, 0xc4, 0x5e, 0x4, 0x26, 0xc7, 0x47, 0x16, 0x1, 0, 0x26, 0x8b, 0x7f, 0x10, 0x81, 0xff, 0, 0x10, 0x77, 0x25, 0xb, 0xff, 0x74, 0x21, 0x26, 0x8b, 0x47, 0x6, 0x89, 0x46, 0xfe, 0x3b, 0x6, 0x7c, 0x9, 0x73, 0x14, 0x8d, 0x4e, 0xe8, 0x51, 0x50, 0xe8, 0xc4, 0x11, 0x5b, 0x5b, 0xb, 0xc0, 0x74, 0x6, 0xf6, 0x46, 0xf0, 0x10, 0x75, 0x3, 0xe9, 0x1a, 0x2, 0xff, 0x76, 0xec, 0xe8, 0x18, 0x10, 0x5b, 0x8b, 0xf0, 0xff, 0x76, 0xea, 0xff, 0x76, 0xe8, 0xe8, 0xd1, 0x10, 0x5b, 0x5b, 0x89, 0x46, 0xf2, 0x89, 0x56, 0xf4, 0x89, 0x46, 0xf6, 0x89, 0x56, 0xf8, 0xb, 0xd0, 0x74, 0x17, 0x8b, 0x5e, 0xfe, 0xc1, 0xeb, 0x3, 0x3, 0x1e, 0xa0, 0xa, 0x8e, 0x6, 0xa2, 0xa, 0x26, 0xf6, 0x7, 0x1, 0x75, 0x3, 0xe9, 0xdf, 0x1, 0xc4, 0x5e, 0x4, 0x26, 0xc7, 0x47, 0x16, 0x8, 0, 0x26, 0xc7, 0x47, 0x10, 0, 0, 0x8b, 0x46, 0xf8, 0xb, 0x46, 0xf6, 0x75, 0x7, 0x80, 0x3e, 0x80, 0x9, 0x3, 0x7c, 0x9, 0x83, 0x7e, 0xea, 0x10, 0x73, 0x3, 0xe9, 0xe3, 0, 0x3b, 0xf7, 0x75, 0x1e, 0x80, 0x3e, 0x80, 0x9, 0x3, 0x7c, 0x17, 0xff, 0x76, 0x4, 0xe8, 0xc, 0xe5, 0x5b, 0x89, 0x46, 0xf6, 0x89, 0x56, 0xf8, 0x8b, 0xc2, 0xb, 0x46, 0xf6, 0x75, 0x79, 0xe9, 0x96, 0x1, 0x3b, 0xf7, 0x76, 0x1b, 0x8b, 0xc6, 0x2b, 0xd2, 0x2b, 0xc9, 0x2b, 0xc7, 0x1b, 0xd1, 0x52, 0x50, 0x8b, 0xc7, 0x8b, 0xd1, 0x3, 0x46, 0xf2, 0x13, 0x56, 0xf4, 0x52, 0x50, 0xe9, 0x82, 0, 0x3b, 0xf7, 0x72, 0x3, 0xe9, 0xbc, 0, 0x6a, 0, 0x57, 0x6a, 0, 0x56, 0xff, 0x76, 0xf4, 0xff, 0x76, 0xf2, 0xe8, 0xa, 0xf7, 0x83, 0xc4, 0xc, 0xb, 0xc0, 0x74, 0x3, 0xe9, 0xa3, 0, 0x6a, 0, 0x57, 0xe8, 0x39, 0xf2, 0x5b, 0x5b, 0x89, 0x46, 0xf6, 0x89, 0x56, 0xf8, 0xb, 0xd0, 0x75, 0x25, 0x80, 0x3e, 0x80, 0x9, 0x2, 0x74, 0x1b, 0x8b, 0x1e, 0x96, 0x9, 0x89, 0x7f, 0x10, 0xff, 0x76, 0x4, 0xe8, 0x96, 0xe4, 0x5b, 0x89, 0x46, 0xf6, 0x89, 0x56, 0xf8, 0x8b, 0xc2, 0xb, 0x46, 0xf6, 0x75, 0x3, 0xe9, 0x20, 0x1, 0xb, 0xf6, 0x74, 0x68, 0x6a, 0, 0xe8, 0xcd, 0xd9, 0x5b, 0xfe, 0x46, 0xfa, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xf8, 0xff, 0x76, 0xf6, 0xe8, 0xde, 0xd, 0x83, 0xc4, 0x6, 0x83, 0x7e, 0xea, 0x10, 0x72, 0x11, 0x6a, 0, 0x56, 0xff, 0x76, 0xf4, 0xff, 0x76, 0xf2, 0xe8, 0xf, 0xf4, 0x83, 0xc4, 0x8, 0xeb, 0x39, 0x8b, 0x1e, 0x96, 0x9, 0xc7, 0x47, 0x16, 0, 0x49, 0x8b, 0x46, 0xf2, 0x89, 0x47, 0x6, 0xff, 0x76, 0x4, 0xe8, 0x94, 0xe4, 0x5b, 0xeb, 0x21, 0xff, 0x76, 0x4, 0xe8, 0xb1, 0xe4, 0x5b, 0x89, 0x46, 0xf6, 0x89, 0x56, 0xf8, 0x8b, 0xc2, 0xb, 0x46, 0xf6, 0x75, 0xd, 0x80, 0x3e, 0x80, 0x9, 0x3, 0x7c, 0x3, 0xe9, 0xb7, 0, 0xe9, 0x5d, 0xff, 0x8b, 0xc7, 0xc1, 0xe0, 0x4, 0x48, 0x89, 0x46, 0xec, 0x8b, 0x46, 0xe8, 0x8b, 0x56, 0xea, 0x89, 0x46, 0xf2, 0x89, 0x56, 0xf4, 0x8b, 0x46, 0xf6, 0xc1, 0xe0, 0x4, 0x89, 0x46, 0xe8, 0x8b, 0x46, 0xf8, 0xc1, 0xe0, 0x4, 0x8b, 0x4e, 0xf6, 0xc1, 0xe9, 0xc, 0x3, 0xc1, 0x89, 0x46, 0xea, 0x8d, 0x46, 0xe8, 0x50, 0xff, 0x76, 0xfe, 0xe8, 0xb0, 0xf, 0x5b, 0x5b, 0x8b, 0x5e, 0xfe, 0xc1, 0xeb, 0x3, 0x3, 0x1e, 0xa0, 0xa, 0x8e, 0x6, 0xa2, 0xa, 0x26, 0x80, 0xf, 0x1, 0xff, 0x76, 0xea, 0xff, 0x76, 0xe8, 0x8b, 0xc6, 0xc1, 0xe0, 0x4, 0x8b, 0xc8, 0x48, 0x50, 0xff, 0x76, 0xf4, 0xff, 0x76, 0xf2, 0xff, 0x76, 0xfe, 0x89, 0x4e, 0xe6, 0xe8, 0xdb, 0x8, 0x83, 0xc4, 0xc, 0x3b, 0xf7, 0x73, 0x2a, 0xa0, 0x14, 0, 0x25, 0x60, 0, 0x89, 0x46, 0xfc, 0xb, 0xc0, 0x74, 0x1d, 0x25, 0x20, 0, 0x3d, 0x1, 0, 0x1b, 0xc0, 0x50, 0x8b, 0xc7, 0x2b, 0xc6, 0xc1, 0xe0, 0x4, 0x50, 0xff, 0x76, 0xe6, 0xff, 0x76, 0xfe, 0xe8, 0xfb, 0xd, 0x83, 0xc4, 0x8, 0xc4, 0x5e, 0x4, 0x26, 0x80, 0x67, 0x26, 0xfe, 0x26, 0x89, 0x7f, 0x10, 0x80, 0x7e, 0xfa, 0, 0x74, 0x6, 0x6a, 0x1, 0xe8, 0xb7, 0xd8, 0x5b, 0x5e, 0x5f, 0xc9, 0xc3}))
    II(0x0014ca8e, 0x4)   enterw(0x1a, 0);                      /* enter 0x1a, 0x0 */
    II(0x0014ca92, 0x1)   pushw(di);                            /* push di */
    II(0x0014ca93, 0x1)   pushw(si);                            /* push si */
    II(0x0014ca94, 0x6)   mov(memw_a16(ds, 0x38), 0);           /* mov word [0x38], 0x0 */
    II(0x0014ca9a, 0x4)   mov(memb_a16(ss, bp - 0x6), 0);       /* mov byte [bp-0x6], 0x0 */
    II(0x0014ca9e, 0x3)   les(bx, ss, bp + 0x4);                /* les bx, [bp+0x4] */
    II(0x0014caa1, 0x6)   mov(memw_a16(es, bx + 0x16), 0x1);    /* mov word [es:bx+0x16], 0x1 */
    II(0x0014caa7, 0x4)   mov(di, memw_a16(es, bx + 0x10));     /* mov di, [es:bx+0x10] */
    II(0x0014caab, 0x4)   cmp(di, 0x1000);                      /* cmp di, 0x1000 */
    II(0x0014caaf, 0x2)   jaw(0x0014cad6, 0x25);                /* ja 0x14cad6 */
    II(0x0014cab1, 0x2)   or_(di, di);                          /* or di, di */
    II(0x0014cab3, 0x2)   jzw(0x0014cad6, 0x21);                /* jz 0x14cad6 */
    II(0x0014cab5, 0x4)   mov(ax, memw_a16(es, bx + 0x6));      /* mov ax, [es:bx+0x6] */
    II(0x0014cab9, 0x3)   mov(memw_a16(ss, bp - 0x2), ax);      /* mov [bp-0x2], ax */
    II(0x0014cabc, 0x4)   cmp(ax, memw_a16(ds, 0x97c));         /* cmp ax, [0x97c] */
    II(0x0014cac0, 0x2)   jaew(0x0014cad6, 0x14);               /* jae 0x14cad6 */
    II(0x0014cac2, 0x3)   lea(cx, bp - 0x18);                   /* lea cx, [bp-0x18] */
    II(0x0014cac5, 0x1)   pushw(cx);                            /* push cx */
    II(0x0014cac6, 0x1)   pushw(ax);                            /* push ax */
    II(0x0014cac7, 0x3)   callw(0x0014dc8e, 0x11c4);            /* call 0x14dc8e */
    II(0x0014caca, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cacb, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cacc, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0014cace, 0x2)   jzw(0x0014cad6, 0x6);                 /* jz 0x14cad6 */
    II(0x0014cad0, 0x4)   test(memb_a16(ss, bp - 0x10), 0x10);  /* test byte [bp-0x10], 0x10 */
    II(0x0014cad4, 0x2)   jnzw(0x0014cad9, 0x3);                /* jnz 0x14cad9 */
l_0x0014cad6:
    II(0x0014cad6, 0x3)   jmpw(0x0014ccf3, 0x21a);              /* jmp 0x14ccf3 */
l_0x0014cad9:
    II(0x0014cad9, 0x3)   pushw(memw_a16(ss, bp - 0x14));       /* push word [bp-0x14] */
    II(0x0014cadc, 0x3)   callw(0x0014daf7, 0x1018);            /* call 0x14daf7 */
    II(0x0014cadf, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cae0, 0x2)   mov(si, ax);                          /* mov si, ax */
    II(0x0014cae2, 0x3)   pushw(memw_a16(ss, bp - 0x16));       /* push word [bp-0x16] */
    II(0x0014cae5, 0x3)   pushw(memw_a16(ss, bp - 0x18));       /* push word [bp-0x18] */
    II(0x0014cae8, 0x3)   callw(0x0014dbbc, 0x10d1);            /* call 0x14dbbc */
    II(0x0014caeb, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014caec, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014caed, 0x3)   mov(memw_a16(ss, bp - 0xe), ax);      /* mov [bp-0xe], ax */
    II(0x0014caf0, 0x3)   mov(memw_a16(ss, bp - 0xc), dx);      /* mov [bp-0xc], dx */
    II(0x0014caf3, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x0014caf6, 0x3)   mov(memw_a16(ss, bp - 0x8), dx);      /* mov [bp-0x8], dx */
    II(0x0014caf9, 0x2)   or_(dx, ax);                          /* or dx, ax */
    II(0x0014cafb, 0x2)   jzw(0x0014cb14, 0x17);                /* jz 0x14cb14 */
    II(0x0014cafd, 0x3)   mov(bx, memw_a16(ss, bp - 0x2));      /* mov bx, [bp-0x2] */
    II(0x0014cb00, 0x3)   shr(bx, 0x3);                         /* shr bx, 0x3 */
    II(0x0014cb03, 0x4)   add(bx, memw_a16(ds, 0xaa0));         /* add bx, [0xaa0] */
    II(0x0014cb07, 0x4)   mov(es, memw_a16(ds, 0xaa2));         /* mov es, [0xaa2] */
    II(0x0014cb0b, 0x4)   test(memb_a16(es, bx), 0x1);          /* test byte [es:bx], 0x1 */
    II(0x0014cb0f, 0x2)   jnzw(0x0014cb14, 0x3);                /* jnz 0x14cb14 */
    II(0x0014cb11, 0x3)   jmpw(0x0014ccf3, 0x1df);              /* jmp 0x14ccf3 */
l_0x0014cb14:
    II(0x0014cb14, 0x3)   les(bx, ss, bp + 0x4);                /* les bx, [bp+0x4] */
    II(0x0014cb17, 0x6)   mov(memw_a16(es, bx + 0x16), 0x8);    /* mov word [es:bx+0x16], 0x8 */
    II(0x0014cb1d, 0x6)   mov(memw_a16(es, bx + 0x10), 0);      /* mov word [es:bx+0x10], 0x0 */
    II(0x0014cb23, 0x3)   mov(ax, memw_a16(ss, bp - 0x8));      /* mov ax, [bp-0x8] */
    II(0x0014cb26, 0x3)   or_(ax, memw_a16(ss, bp - 0xa));      /* or ax, [bp-0xa] */
    II(0x0014cb29, 0x2)   jnzw(0x0014cb32, 0x7);                /* jnz 0x14cb32 */
    II(0x0014cb2b, 0x5)   cmp(memb_a16(ds, 0x980), 0x3);        /* cmp byte [0x980], 0x3 */
    II(0x0014cb30, 0x2)   jlw(0x0014cb3b, 0x9);                 /* jl 0x14cb3b */
l_0x0014cb32:
    II(0x0014cb32, 0x4)   cmp(memw_a16(ss, bp - 0x16), 0x10);   /* cmp word [bp-0x16], 0x10 */
    II(0x0014cb36, 0x2)   jaew(0x0014cb3b, 0x3);                /* jae 0x14cb3b */
    II(0x0014cb38, 0x3)   jmpw(0x0014cc1e, 0xe3);               /* jmp 0x14cc1e */
l_0x0014cb3b:
    II(0x0014cb3b, 0x2)   cmp(si, di);                          /* cmp si, di */
    II(0x0014cb3d, 0x2)   jnzw(0x0014cb5d, 0x1e);               /* jnz 0x14cb5d */
    II(0x0014cb3f, 0x5)   cmp(memb_a16(ds, 0x980), 0x3);        /* cmp byte [0x980], 0x3 */
    II(0x0014cb44, 0x2)   jlw(0x0014cb5d, 0x17);                /* jl 0x14cb5d */
    II(0x0014cb46, 0x3)   pushw(memw_a16(ss, bp + 0x4));        /* push word [bp+0x4] */
    II(0x0014cb49, 0x3)   callw(0x0014b058, -0x1af4);           /* call 0x14b058 */
    II(0x0014cb4c, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cb4d, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x0014cb50, 0x3)   mov(memw_a16(ss, bp - 0x8), dx);      /* mov [bp-0x8], dx */
    II(0x0014cb53, 0x2)   mov(ax, dx);                          /* mov ax, dx */
    II(0x0014cb55, 0x3)   or_(ax, memw_a16(ss, bp - 0xa));      /* or ax, [bp-0xa] */
    II(0x0014cb58, 0x2)   jnzw(0x0014cbd3, 0x79);               /* jnz 0x14cbd3 */
    II(0x0014cb5a, 0x3)   jmpw(0x0014ccf3, 0x196);              /* jmp 0x14ccf3 */
l_0x0014cb5d:
    II(0x0014cb5d, 0x2)   cmp(si, di);                          /* cmp si, di */
    II(0x0014cb5f, 0x2)   jbew(0x0014cb7c, 0x1b);               /* jbe 0x14cb7c */
    II(0x0014cb61, 0x2)   mov(ax, si);                          /* mov ax, si */
    II(0x0014cb63, 0x2)   sub(dx, dx);                          /* sub dx, dx */
    II(0x0014cb65, 0x2)   sub(cx, cx);                          /* sub cx, cx */
    II(0x0014cb67, 0x2)   sub(ax, di);                          /* sub ax, di */
    II(0x0014cb69, 0x2)   sbb(dx, cx);                          /* sbb dx, cx */
    II(0x0014cb6b, 0x1)   pushw(dx);                            /* push dx */
    II(0x0014cb6c, 0x1)   pushw(ax);                            /* push ax */
    II(0x0014cb6d, 0x2)   mov(ax, di);                          /* mov ax, di */
    II(0x0014cb6f, 0x2)   mov(dx, cx);                          /* mov dx, cx */
    II(0x0014cb71, 0x3)   add(ax, memw_a16(ss, bp - 0xe));      /* add ax, [bp-0xe] */
    II(0x0014cb74, 0x3)   adc(dx, memw_a16(ss, bp - 0xc));      /* adc dx, [bp-0xc] */
    II(0x0014cb77, 0x1)   pushw(dx);                            /* push dx */
    II(0x0014cb78, 0x1)   pushw(ax);                            /* push ax */
    II(0x0014cb79, 0x3)   jmpw(0x0014cbfe, 0x82);               /* jmp 0x14cbfe */
l_0x0014cb7c:
    II(0x0014cb7c, 0x2)   cmp(si, di);                          /* cmp si, di */
    II(0x0014cb7e, 0x2)   jbw(0x0014cb83, 0x3);                 /* jb 0x14cb83 */
    II(0x0014cb80, 0x3)   jmpw(0x0014cc3f, 0xbc);               /* jmp 0x14cc3f */
l_0x0014cb83:
    II(0x0014cb83, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0014cb85, 0x1)   pushw(di);                            /* push di */
    II(0x0014cb86, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0014cb88, 0x1)   pushw(si);                            /* push si */
    II(0x0014cb89, 0x3)   pushw(memw_a16(ss, bp - 0xc));        /* push word [bp-0xc] */
    II(0x0014cb8c, 0x3)   pushw(memw_a16(ss, bp - 0xe));        /* push word [bp-0xe] */
    II(0x0014cb8f, 0x3)   callw(0x0014c29c, -0x8f6);            /* call 0x14c29c */
    II(0x0014cb92, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x0014cb95, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0014cb97, 0x2)   jzw(0x0014cb9c, 0x3);                 /* jz 0x14cb9c */
    II(0x0014cb99, 0x3)   jmpw(0x0014cc3f, 0xa3);               /* jmp 0x14cc3f */
l_0x0014cb9c:
    II(0x0014cb9c, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0014cb9e, 0x1)   pushw(di);                            /* push di */
    II(0x0014cb9f, 0x3)   callw(0x0014bddb, -0xdc7);            /* call 0x14bddb */
    II(0x0014cba2, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cba3, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cba4, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x0014cba7, 0x3)   mov(memw_a16(ss, bp - 0x8), dx);      /* mov [bp-0x8], dx */
    II(0x0014cbaa, 0x2)   or_(dx, ax);                          /* or dx, ax */
    II(0x0014cbac, 0x2)   jnzw(0x0014cbd3, 0x25);               /* jnz 0x14cbd3 */
    II(0x0014cbae, 0x5)   cmp(memb_a16(ds, 0x980), 0x2);        /* cmp byte [0x980], 0x2 */
    II(0x0014cbb3, 0x2)   jzw(0x0014cbd0, 0x1b);                /* jz 0x14cbd0 */
    II(0x0014cbb5, 0x4)   mov(bx, memw_a16(ds, 0x996));         /* mov bx, [0x996] */
    II(0x0014cbb9, 0x3)   mov(memw_a16(ds, bx + 0x10), di);     /* mov [bx+0x10], di */
    II(0x0014cbbc, 0x3)   pushw(memw_a16(ss, bp + 0x4));        /* push word [bp+0x4] */
    II(0x0014cbbf, 0x3)   callw(0x0014b058, -0x1b6a);           /* call 0x14b058 */
    II(0x0014cbc2, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cbc3, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x0014cbc6, 0x3)   mov(memw_a16(ss, bp - 0x8), dx);      /* mov [bp-0x8], dx */
    II(0x0014cbc9, 0x2)   mov(ax, dx);                          /* mov ax, dx */
    II(0x0014cbcb, 0x3)   or_(ax, memw_a16(ss, bp - 0xa));      /* or ax, [bp-0xa] */
    II(0x0014cbce, 0x2)   jnzw(0x0014cbd3, 0x3);                /* jnz 0x14cbd3 */
l_0x0014cbd0:
    II(0x0014cbd0, 0x3)   jmpw(0x0014ccf3, 0x120);              /* jmp 0x14ccf3 */
l_0x0014cbd3:
    II(0x0014cbd3, 0x2)   or_(si, si);                          /* or si, si */
    II(0x0014cbd5, 0x2)   jzw(0x0014cc3f, 0x68);                /* jz 0x14cc3f */
    II(0x0014cbd7, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0014cbd9, 0x3)   callw(0x0014a5a9, -0x2633);           /* call 0x14a5a9 */
    II(0x0014cbdc, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cbdd, 0x3)   inc(memb_a16(ss, bp - 0x6));          /* inc byte [bp-0x6] */
    II(0x0014cbe0, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x0014cbe3, 0x3)   pushw(memw_a16(ss, bp - 0x8));        /* push word [bp-0x8] */
    II(0x0014cbe6, 0x3)   pushw(memw_a16(ss, bp - 0xa));        /* push word [bp-0xa] */
    II(0x0014cbe9, 0x3)   callw(0x0014d9ca, 0xdde);             /* call 0x14d9ca */
    II(0x0014cbec, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x0014cbef, 0x4)   cmp(memw_a16(ss, bp - 0x16), 0x10);   /* cmp word [bp-0x16], 0x10 */
    II(0x0014cbf3, 0x2)   jbw(0x0014cc06, 0x11);                /* jb 0x14cc06 */
    II(0x0014cbf5, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0014cbf7, 0x1)   pushw(si);                            /* push si */
    II(0x0014cbf8, 0x3)   pushw(memw_a16(ss, bp - 0xc));        /* push word [bp-0xc] */
    II(0x0014cbfb, 0x3)   pushw(memw_a16(ss, bp - 0xe));        /* push word [bp-0xe] */
l_0x0014cbfe:
    II(0x0014cbfe, 0x3)   callw(0x0014c010, -0xbf1);            /* call 0x14c010 */
    II(0x0014cc01, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0014cc04, 0x2)   jmpw(0x0014cc3f, 0x39);               /* jmp 0x14cc3f */
l_0x0014cc06:
    II(0x0014cc06, 0x4)   mov(bx, memw_a16(ds, 0x996));         /* mov bx, [0x996] */
    II(0x0014cc0a, 0x5)   mov(memw_a16(ds, bx + 0x16), 0x4900); /* mov word [bx+0x16], 0x4900 */
    II(0x0014cc0f, 0x3)   mov(ax, memw_a16(ss, bp - 0xe));      /* mov ax, [bp-0xe] */
    II(0x0014cc12, 0x3)   mov(memw_a16(ds, bx + 0x6), ax);      /* mov [bx+0x6], ax */
    II(0x0014cc15, 0x3)   pushw(memw_a16(ss, bp + 0x4));        /* push word [bp+0x4] */
    II(0x0014cc18, 0x3)   callw(0x0014b0af, -0x1b6c);           /* call 0x14b0af */
    II(0x0014cc1b, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cc1c, 0x2)   jmpw(0x0014cc3f, 0x21);               /* jmp 0x14cc3f */
l_0x0014cc1e:
    II(0x0014cc1e, 0x3)   pushw(memw_a16(ss, bp + 0x4));        /* push word [bp+0x4] */
    II(0x0014cc21, 0x3)   callw(0x0014b0d5, -0x1b4f);           /* call 0x14b0d5 */
    II(0x0014cc24, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cc25, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x0014cc28, 0x3)   mov(memw_a16(ss, bp - 0x8), dx);      /* mov [bp-0x8], dx */
    II(0x0014cc2b, 0x2)   mov(ax, dx);                          /* mov ax, dx */
    II(0x0014cc2d, 0x3)   or_(ax, memw_a16(ss, bp - 0xa));      /* or ax, [bp-0xa] */
    II(0x0014cc30, 0x2)   jnzw(0x0014cc3f, 0xd);                /* jnz 0x14cc3f */
    II(0x0014cc32, 0x5)   cmp(memb_a16(ds, 0x980), 0x3);        /* cmp byte [0x980], 0x3 */
    II(0x0014cc37, 0x2)   jlw(0x0014cc3c, 0x3);                 /* jl 0x14cc3c */
    II(0x0014cc39, 0x3)   jmpw(0x0014ccf3, 0xb7);               /* jmp 0x14ccf3 */
l_0x0014cc3c:
    II(0x0014cc3c, 0x3)   jmpw(0x0014cb9c, -0xa3);              /* jmp 0x14cb9c */
l_0x0014cc3f:
    II(0x0014cc3f, 0x2)   mov(ax, di);                          /* mov ax, di */
    II(0x0014cc41, 0x3)   shl(ax, 0x4);                         /* shl ax, 0x4 */
    II(0x0014cc44, 0x1)   dec(ax);                              /* dec ax */
    II(0x0014cc45, 0x3)   mov(memw_a16(ss, bp - 0x14), ax);     /* mov [bp-0x14], ax */
    II(0x0014cc48, 0x3)   mov(ax, memw_a16(ss, bp - 0x18));     /* mov ax, [bp-0x18] */
    II(0x0014cc4b, 0x3)   mov(dx, memw_a16(ss, bp - 0x16));     /* mov dx, [bp-0x16] */
    II(0x0014cc4e, 0x3)   mov(memw_a16(ss, bp - 0xe), ax);      /* mov [bp-0xe], ax */
    II(0x0014cc51, 0x3)   mov(memw_a16(ss, bp - 0xc), dx);      /* mov [bp-0xc], dx */
    II(0x0014cc54, 0x3)   mov(ax, memw_a16(ss, bp - 0xa));      /* mov ax, [bp-0xa] */
    II(0x0014cc57, 0x3)   shl(ax, 0x4);                         /* shl ax, 0x4 */
    II(0x0014cc5a, 0x3)   mov(memw_a16(ss, bp - 0x18), ax);     /* mov [bp-0x18], ax */
    II(0x0014cc5d, 0x3)   mov(ax, memw_a16(ss, bp - 0x8));      /* mov ax, [bp-0x8] */
    II(0x0014cc60, 0x3)   shl(ax, 0x4);                         /* shl ax, 0x4 */
    II(0x0014cc63, 0x3)   mov(cx, memw_a16(ss, bp - 0xa));      /* mov cx, [bp-0xa] */
    II(0x0014cc66, 0x3)   shr(cx, 0xc);                         /* shr cx, 0xc */
    II(0x0014cc69, 0x2)   add(ax, cx);                          /* add ax, cx */
    II(0x0014cc6b, 0x3)   mov(memw_a16(ss, bp - 0x16), ax);     /* mov [bp-0x16], ax */
    II(0x0014cc6e, 0x3)   lea(ax, bp - 0x18);                   /* lea ax, [bp-0x18] */
    II(0x0014cc71, 0x1)   pushw(ax);                            /* push ax */
    II(0x0014cc72, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x0014cc75, 0x3)   callw(0x0014dc28, 0xfb0);             /* call 0x14dc28 */
    II(0x0014cc78, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cc79, 0x1)   popw(bx);                             /* pop bx */
    II(0x0014cc7a, 0x3)   mov(bx, memw_a16(ss, bp - 0x2));      /* mov bx, [bp-0x2] */
    II(0x0014cc7d, 0x3)   shr(bx, 0x3);                         /* shr bx, 0x3 */
    II(0x0014cc80, 0x4)   add(bx, memw_a16(ds, 0xaa0));         /* add bx, [0xaa0] */
    II(0x0014cc84, 0x4)   mov(es, memw_a16(ds, 0xaa2));         /* mov es, [0xaa2] */
    II(0x0014cc88, 0x4)   or_(memb_a16(es, bx), 0x1);           /* or byte [es:bx], 0x1 */
    II(0x0014cc8c, 0x3)   pushw(memw_a16(ss, bp - 0x16));       /* push word [bp-0x16] */
    II(0x0014cc8f, 0x3)   pushw(memw_a16(ss, bp - 0x18));       /* push word [bp-0x18] */
    II(0x0014cc92, 0x2)   mov(ax, si);                          /* mov ax, si */
    II(0x0014cc94, 0x3)   shl(ax, 0x4);                         /* shl ax, 0x4 */
    II(0x0014cc97, 0x2)   mov(cx, ax);                          /* mov cx, ax */
    II(0x0014cc99, 0x1)   dec(ax);                              /* dec ax */
    II(0x0014cc9a, 0x1)   pushw(ax);                            /* push ax */
    II(0x0014cc9b, 0x3)   pushw(memw_a16(ss, bp - 0xc));        /* push word [bp-0xc] */
    II(0x0014cc9e, 0x3)   pushw(memw_a16(ss, bp - 0xe));        /* push word [bp-0xe] */
    II(0x0014cca1, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x0014cca4, 0x3)   mov(memw_a16(ss, bp - 0x1a), cx);     /* mov [bp-0x1a], cx */
    II(0x0014cca7, 0x3)   callw(0x0014d585, 0x8db);             /* call 0x14d585 */
    II(0x0014ccaa, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x0014ccad, 0x2)   cmp(si, di);                          /* cmp si, di */
    II(0x0014ccaf, 0x2)   jaew(0x0014ccdb, 0x2a);               /* jae 0x14ccdb */
    II(0x0014ccb1, 0x3)   mov(al, memb_a16(ds, 0x14));          /* mov al, [0x14] */
    II(0x0014ccb4, 0x3)   and_(ax, 0x60);                       /* and ax, 0x60 */
    II(0x0014ccb7, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x0014ccba, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0014ccbc, 0x2)   jzw(0x0014ccdb, 0x1d);                /* jz 0x14ccdb */
    II(0x0014ccbe, 0x3)   and_(ax, 0x20);                       /* and ax, 0x20 */
    II(0x0014ccc1, 0x3)   cmp(ax, 0x1);                         /* cmp ax, 0x1 */
    II(0x0014ccc4, 0x2)   sbb(ax, ax);                          /* sbb ax, ax */
    II(0x0014ccc6, 0x1)   pushw(ax);                            /* push ax */
    II(0x0014ccc7, 0x2)   mov(ax, di);                          /* mov ax, di */
    II(0x0014ccc9, 0x2)   sub(ax, si);                          /* sub ax, si */
    II(0x0014cccb, 0x3)   shl(ax, 0x4);                         /* shl ax, 0x4 */
    II(0x0014ccce, 0x1)   pushw(ax);                            /* push ax */
    II(0x0014cccf, 0x3)   pushw(memw_a16(ss, bp - 0x1a));       /* push word [bp-0x1a] */
    II(0x0014ccd2, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x0014ccd5, 0x3)   callw(0x0014dad3, 0xdfb);             /* call 0x14dad3 */
    II(0x0014ccd8, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
l_0x0014ccdb:
    II(0x0014ccdb, 0x3)   les(bx, ss, bp + 0x4);                /* les bx, [bp+0x4] */
    II(0x0014ccde, 0x5)   and_(memb_a16(es, bx + 0x26), -0x2 /* 0xfe */); /* and byte [es:bx+0x26], 0xfe */
    II(0x0014cce3, 0x4)   mov(memw_a16(es, bx + 0x10), di);     /* mov [es:bx+0x10], di */
    II(0x0014cce7, 0x4)   cmp(memb_a16(ss, bp - 0x6), 0);       /* cmp byte [bp-0x6], 0x0 */
    II(0x0014cceb, 0x2)   jzw(0x0014ccf3, 0x6);                 /* jz 0x14ccf3 */
    II(0x0014cced, 0x2)   pushw(0x1);                           /* push 0x1 */
    II(0x0014ccef, 0x3)   callw(0x0014a5a9, -0x2749);           /* call 0x14a5a9 */
    II(0x0014ccf2, 0x1)   popw(bx);                             /* pop bx */
l_0x0014ccf3:
    II(0x0014ccf3, 0x1)   popw(si);                             /* pop si */
    II(0x0014ccf4, 0x1)   popw(di);                             /* pop di */
    II(0x0014ccf5, 0x1)   leavew();                             /* leave  */
    II(0x0014ccf6, 0x1)   retw();                               /* ret  */
FUNC_END

