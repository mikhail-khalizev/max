FUNC_BEGIN(0x00137dac, 0xe59929ff48417b2e, 0x10, ({0xc8, 0x10, 0, 0, 0x57, 0x56, 0x1e, 0xb8, 0x68, 0x3e, 0x8e, 0xd8, 0x8b, 0x46, 0x6, 0x8b, 0x56, 0x8, 0x8a, 0xf2, 0x8a, 0xd4, 0x8a, 0xe0, 0x2a, 0xc0, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0x89, 0x46, 0xf4, 0x89, 0x56, 0xf6, 0x8b, 0x46, 0x6, 0x8b, 0x56, 0x8, 0x2d, 0, 0, 0x83, 0xda, 0x1, 0x89, 0x46, 0xf8, 0x89, 0x56, 0xfa, 0x52, 0x50, 0xff, 0x36, 0x8e, 0x4f, 0xff, 0x36, 0x8c, 0x4f, 0x8b, 0xf0, 0x8b, 0xfa, 0xe8, 0x9, 0x14, 0x83, 0xc4, 0x8, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0x8b, 0x5e, 0xa, 0xc1, 0xe3, 0x2, 0x8b, 0xc6, 0xc4, 0x36, 0xa0, 0x4f, 0x89, 0x46, 0xf0, 0x89, 0x7e, 0xf2, 0x26, 0x8b, 0, 0x26, 0x8b, 0x50, 0x2, 0x8a, 0xf2, 0x8a, 0xd4, 0x8a, 0xe0, 0x2a, 0xc0, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0x8b, 0xc8, 0x8b, 0xf2, 0x33, 0x46, 0xfc, 0x80, 0xe4, 0xf, 0x2b, 0xd2, 0x33, 0xc8, 0x33, 0xf2, 0x89, 0x4e, 0xfc, 0x89, 0x76, 0xfe, 0x80, 0x4e, 0xfc, 0x1, 0x80, 0x66, 0xfc, 0xe7, 0x56, 0xff, 0x76, 0xfc, 0x57, 0xff, 0x76, 0xf0, 0xff, 0x36, 0x8e, 0x4f, 0xff, 0x36, 0x8c, 0x4f, 0x8b, 0xf3, 0xe8, 0xc9, 0x13, 0x83, 0xc4, 0xc, 0x90, 0xe, 0xe8, 0x23, 0x10, 0x8b, 0x46, 0x6, 0x8b, 0x56, 0x8, 0x2a, 0xf6, 0xc4, 0x1e, 0xa4, 0x4f, 0x26, 0x89, 0, 0x26, 0x89, 0x50, 0x2, 0x8b, 0x5e, 0xa, 0xc4, 0x36, 0x9c, 0x4f, 0x26, 0x80, 0x8, 0x7f, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb}))
    II(0x00137dac, 0x4)   enterw(0x10, 0);                      /* enter 0x10, 0x0 */
    II(0x00137db0, 0x1)   pushw(di);                            /* push di */
    II(0x00137db1, 0x1)   pushw(si);                            /* push si */
    II(0x00137db2, 0x1)   pushw(ds);                            /* push ds */
    II(0x00137db3, 0x3)   mov(ax, 0x3e68);                      /* mov ax, 0x3e68 */
    II(0x00137db6, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x00137db8, 0x3)   mov(ax, memw_a16(ss, bp + 0x6));      /* mov ax, [bp+0x6] */
    II(0x00137dbb, 0x3)   mov(dx, memw_a16(ss, bp + 0x8));      /* mov dx, [bp+0x8] */
    II(0x00137dbe, 0x2)   mov(dh, dl);                          /* mov dh, dl */
    II(0x00137dc0, 0x2)   mov(dl, ah);                          /* mov dl, ah */
    II(0x00137dc2, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x00137dc4, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x00137dc6, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00137dc8, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00137dca, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00137dcc, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00137dce, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00137dd0, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00137dd2, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00137dd4, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00137dd6, 0x3)   mov(memw_a16(ss, bp - 0xc), ax);      /* mov [bp-0xc], ax */
    II(0x00137dd9, 0x3)   mov(memw_a16(ss, bp - 0xa), dx);      /* mov [bp-0xa], dx */
    II(0x00137ddc, 0x3)   mov(ax, memw_a16(ss, bp + 0x6));      /* mov ax, [bp+0x6] */
    II(0x00137ddf, 0x3)   mov(dx, memw_a16(ss, bp + 0x8));      /* mov dx, [bp+0x8] */
    II(0x00137de2, 0x3)   sub(ax, 0);                           /* sub ax, 0x0 */
    II(0x00137de5, 0x3)   sbb(dx, 0x1);                         /* sbb dx, 0x1 */
    II(0x00137de8, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x00137deb, 0x3)   mov(memw_a16(ss, bp - 0x6), dx);      /* mov [bp-0x6], dx */
    II(0x00137dee, 0x1)   pushw(dx);                            /* push dx */
    II(0x00137def, 0x1)   pushw(ax);                            /* push ax */
    II(0x00137df0, 0x4)   pushw(memw_a16(ds, 0x4f8e));          /* push word [0x4f8e] */
    II(0x00137df4, 0x4)   pushw(memw_a16(ds, 0x4f8c));          /* push word [0x4f8c] */
    II(0x00137df8, 0x2)   mov(si, ax);                          /* mov si, ax */
    II(0x00137dfa, 0x2)   mov(di, dx);                          /* mov di, dx */
    II(0x00137dfc, 0x3)   callw(0x00139208, 0x1409);            /* call 0x139208 */
    II(0x00137dff, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x00137e02, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x00137e05, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
    II(0x00137e08, 0x3)   mov(bx, memw_a16(ss, bp + 0xa));      /* mov bx, [bp+0xa] */
    II(0x00137e0b, 0x3)   shl(bx, 0x2);                         /* shl bx, 0x2 */
    II(0x00137e0e, 0x2)   mov(ax, si);                          /* mov ax, si */
    II(0x00137e10, 0x4)   les(si, ds, 0x4fa0);                  /* les si, [0x4fa0] */
    II(0x00137e14, 0x3)   mov(memw_a16(ss, bp - 0x10), ax);     /* mov [bp-0x10], ax */
    II(0x00137e17, 0x3)   mov(memw_a16(ss, bp - 0xe), di);      /* mov [bp-0xe], di */
    II(0x00137e1a, 0x3)   mov(ax, memw_a16(es, bx + si));       /* mov ax, [es:bx+si] */
    II(0x00137e1d, 0x4)   mov(dx, memw_a16(es, bx + si + 0x2)); /* mov dx, [es:bx+si+0x2] */
    II(0x00137e21, 0x2)   mov(dh, dl);                          /* mov dh, dl */
    II(0x00137e23, 0x2)   mov(dl, ah);                          /* mov dl, ah */
    II(0x00137e25, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x00137e27, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x00137e29, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00137e2b, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00137e2d, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00137e2f, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00137e31, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00137e33, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00137e35, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00137e37, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00137e39, 0x2)   mov(cx, ax);                          /* mov cx, ax */
    II(0x00137e3b, 0x2)   mov(si, dx);                          /* mov si, dx */
    II(0x00137e3d, 0x3)   xor_(ax, memw_a16(ss, bp - 0x4));     /* xor ax, [bp-0x4] */
    II(0x00137e40, 0x3)   and_(ah, 0xf);                        /* and ah, 0xf */
    II(0x00137e43, 0x2)   sub(dx, dx);                          /* sub dx, dx */
    II(0x00137e45, 0x2)   xor_(cx, ax);                         /* xor cx, ax */
    II(0x00137e47, 0x2)   xor_(si, dx);                         /* xor si, dx */
    II(0x00137e49, 0x3)   mov(memw_a16(ss, bp - 0x4), cx);      /* mov [bp-0x4], cx */
    II(0x00137e4c, 0x3)   mov(memw_a16(ss, bp - 0x2), si);      /* mov [bp-0x2], si */
    II(0x00137e4f, 0x4)   or_(memb_a16(ss, bp - 0x4), 0x1);     /* or byte [bp-0x4], 0x1 */
    II(0x00137e53, 0x4)   and_(memb_a16(ss, bp - 0x4), -0x19 /* 0xe7 */); /* and byte [bp-0x4], 0xe7 */
    II(0x00137e57, 0x1)   pushw(si);                            /* push si */
    II(0x00137e58, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x00137e5b, 0x1)   pushw(di);                            /* push di */
    II(0x00137e5c, 0x3)   pushw(memw_a16(ss, bp - 0x10));       /* push word [bp-0x10] */
    II(0x00137e5f, 0x4)   pushw(memw_a16(ds, 0x4f8e));          /* push word [0x4f8e] */
    II(0x00137e63, 0x4)   pushw(memw_a16(ds, 0x4f8c));          /* push word [0x4f8c] */
    II(0x00137e67, 0x2)   mov(si, bx);                          /* mov si, bx */
    II(0x00137e69, 0x3)   callw(0x00139235, 0x13c9);            /* call 0x139235 */
    II(0x00137e6c, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
//    II(0x00137e6f, 0x1)   nop();                                /* nop  */
    II(0x00137e70, 0x1)   pushw(cs);                            /* push cs */
    II(0x00137e71, 0x3)   callw(0x00138e97, 0x1023);            /* call 0x138e97 */
    II(0x00137e74, 0x3)   mov(ax, memw_a16(ss, bp + 0x6));      /* mov ax, [bp+0x6] */
    II(0x00137e77, 0x3)   mov(dx, memw_a16(ss, bp + 0x8));      /* mov dx, [bp+0x8] */
    II(0x00137e7a, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x00137e7c, 0x4)   les(bx, ds, 0x4fa4);                  /* les bx, [0x4fa4] */
    II(0x00137e80, 0x3)   mov(memw_a16(es, bx + si), ax);       /* mov [es:bx+si], ax */
    II(0x00137e83, 0x4)   mov(memw_a16(es, bx + si + 0x2), dx); /* mov [es:bx+si+0x2], dx */
    II(0x00137e87, 0x3)   mov(bx, memw_a16(ss, bp + 0xa));      /* mov bx, [bp+0xa] */
    II(0x00137e8a, 0x4)   les(si, ds, 0x4f9c);                  /* les si, [0x4f9c] */
    II(0x00137e8e, 0x4)   or_(memb_a16(es, bx + si), 0x7f);     /* or byte [es:bx+si], 0x7f */
    II(0x00137e92, 0x1)   popw(ds);                             /* pop ds */
    II(0x00137e93, 0x1)   popw(si);                             /* pop si */
    II(0x00137e94, 0x1)   popw(di);                             /* pop di */
    II(0x00137e95, 0x1)   leavew();                             /* leave  */
    II(0x00137e96, 0x1)   retfw();                              /* retf  */
FUNC_END

