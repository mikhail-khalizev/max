FUNC_BEGIN(0x00154eb0, 0xd721362d2153edf4, 0x10, ({0xc8, 0x6, 0, 0, 0x1e, 0xb8, 0xa8, 0, 0x8e, 0xd8, 0xc7, 0x46, 0xfa, 0, 0, 0xc4, 0x5e, 0x6, 0x26, 0x8b, 0x47, 0xc, 0x26, 0x8b, 0x57, 0xe, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0xeb, 0x7, 0xff, 0x46, 0xfa, 0x83, 0x46, 0xfc, 0x8, 0x8b, 0x46, 0xfa, 0xc4, 0x5e, 0x6, 0x26, 0x39, 0x47, 0xa, 0x7e, 0x29, 0xc4, 0x5e, 0xfc, 0x26, 0xff, 0x77, 0x2, 0x26, 0xff, 0x37, 0xff, 0x76, 0xc, 0xff, 0x76, 0xa, 0xe, 0xe8, 0x6f, 0xff, 0x83, 0xc4, 0x8, 0xb, 0xc0, 0x74, 0xd2, 0xc4, 0x5e, 0xfc, 0x26, 0x8b, 0x47, 0x4, 0x26, 0x8b, 0x57, 0x6, 0x1f, 0xc9, 0xcb, 0xc7, 0x46, 0xfa, 0, 0, 0x26, 0x8b, 0x47, 0x12, 0x26, 0x8b, 0x57, 0x14, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0xeb, 0x8, 0x90, 0xff, 0x46, 0xfa, 0x83, 0x46, 0xfc, 0x8, 0x8b, 0x46, 0xfa, 0xc4, 0x5e, 0x6, 0x26, 0x39, 0x47, 0x10, 0x7e, 0x1d, 0xc4, 0x5e, 0xfc, 0x26, 0xff, 0x77, 0x2, 0x26, 0xff, 0x37, 0xff, 0x76, 0xc, 0xff, 0x76, 0xa, 0xe, 0xe8, 0x1d, 0xff, 0x83, 0xc4, 0x8, 0xb, 0xc0, 0x74, 0xd2, 0xeb, 0xac, 0x2b, 0xc0, 0x99, 0x1f, 0xc9, 0xcb}))
    II(0x00154eb0, 0x4)   enterw(0x6, 0);                       /* enter 0x6, 0x0 */
    II(0x00154eb4, 0x1)   pushw(ds);                            /* push ds */
    II(0x00154eb5, 0x3)   mov(ax, 0xa8);                        /* mov ax, 0xa8 */
    II(0x00154eb8, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x00154eba, 0x5)   mov(memw_a16(ss, bp - 0x6), 0);       /* mov word [bp-0x6], 0x0 */
    II(0x00154ebf, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00154ec2, 0x4)   mov(ax, memw_a16(es, bx + 0xc));      /* mov ax, [es:bx+0xc] */
    II(0x00154ec6, 0x4)   mov(dx, memw_a16(es, bx + 0xe));      /* mov dx, [es:bx+0xe] */
    II(0x00154eca, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x00154ecd, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
    II(0x00154ed0, 0x2)   jmpw(0x00154ed9, 0x7);                /* jmp 0x154ed9 */
l_0x00154ed2:
    II(0x00154ed2, 0x3)   inc(memw_a16(ss, bp - 0x6));          /* inc word [bp-0x6] */
    II(0x00154ed5, 0x4)   add(memw_a16(ss, bp - 0x4), 0x8);     /* add word [bp-0x4], 0x8 */
l_0x00154ed9:
    II(0x00154ed9, 0x3)   mov(ax, memw_a16(ss, bp - 0x6));      /* mov ax, [bp-0x6] */
    II(0x00154edc, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00154edf, 0x4)   cmp(memw_a16(es, bx + 0xa), ax);      /* cmp [es:bx+0xa], ax */
    II(0x00154ee3, 0x2)   jlew(0x00154f0e, 0x29);               /* jle 0x154f0e */
    II(0x00154ee5, 0x3)   les(bx, ss, bp - 0x4);                /* les bx, [bp-0x4] */
    II(0x00154ee8, 0x4)   pushw(memw_a16(es, bx + 0x2));        /* push word [es:bx+0x2] */
    II(0x00154eec, 0x3)   pushw(memw_a16(es, bx));              /* push word [es:bx] */
    II(0x00154eef, 0x3)   pushw(memw_a16(ss, bp + 0xc));        /* push word [bp+0xc] */
    II(0x00154ef2, 0x3)   pushw(memw_a16(ss, bp + 0xa));        /* push word [bp+0xa] */
    II(0x00154ef5, 0x1)   pushw(cs);                            /* push cs */
    II(0x00154ef6, 0x3)   callw(0x00154e68, -0x91);             /* call 0x154e68 */
    II(0x00154ef9, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x00154efc, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x00154efe, 0x2)   jzw(0x00154ed2, -0x2e);               /* jz 0x154ed2 */
l_0x00154f00:
    II(0x00154f00, 0x3)   les(bx, ss, bp - 0x4);                /* les bx, [bp-0x4] */
    II(0x00154f03, 0x4)   mov(ax, memw_a16(es, bx + 0x4));      /* mov ax, [es:bx+0x4] */
    II(0x00154f07, 0x4)   mov(dx, memw_a16(es, bx + 0x6));      /* mov dx, [es:bx+0x6] */
    II(0x00154f0b, 0x1)   popw(ds);                             /* pop ds */
    II(0x00154f0c, 0x1)   leavew();                             /* leave  */
    II(0x00154f0d, 0x1)   retfw();                              /* retf  */
l_0x00154f0e:
    II(0x00154f0e, 0x5)   mov(memw_a16(ss, bp - 0x6), 0);       /* mov word [bp-0x6], 0x0 */
    II(0x00154f13, 0x4)   mov(ax, memw_a16(es, bx + 0x12));     /* mov ax, [es:bx+0x12] */
    II(0x00154f17, 0x4)   mov(dx, memw_a16(es, bx + 0x14));     /* mov dx, [es:bx+0x14] */
    II(0x00154f1b, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x00154f1e, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
    II(0x00154f21, 0x2)   jmpw(0x00154f2b, 0x8);                /* jmp 0x154f2b */
//    II(0x00154f23, 0x1)   /* Недостижимый код. */
l_0x00154f24:
    II(0x00154f24, 0x3)   inc(memw_a16(ss, bp - 0x6));          /* inc word [bp-0x6] */
    II(0x00154f27, 0x4)   add(memw_a16(ss, bp - 0x4), 0x8);     /* add word [bp-0x4], 0x8 */
l_0x00154f2b:
    II(0x00154f2b, 0x3)   mov(ax, memw_a16(ss, bp - 0x6));      /* mov ax, [bp-0x6] */
    II(0x00154f2e, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00154f31, 0x4)   cmp(memw_a16(es, bx + 0x10), ax);     /* cmp [es:bx+0x10], ax */
    II(0x00154f35, 0x2)   jlew(0x00154f54, 0x1d);               /* jle 0x154f54 */
    II(0x00154f37, 0x3)   les(bx, ss, bp - 0x4);                /* les bx, [bp-0x4] */
    II(0x00154f3a, 0x4)   pushw(memw_a16(es, bx + 0x2));        /* push word [es:bx+0x2] */
    II(0x00154f3e, 0x3)   pushw(memw_a16(es, bx));              /* push word [es:bx] */
    II(0x00154f41, 0x3)   pushw(memw_a16(ss, bp + 0xc));        /* push word [bp+0xc] */
    II(0x00154f44, 0x3)   pushw(memw_a16(ss, bp + 0xa));        /* push word [bp+0xa] */
    II(0x00154f47, 0x1)   pushw(cs);                            /* push cs */
    II(0x00154f48, 0x3)   callw(0x00154e68, -0xe3);             /* call 0x154e68 */
    II(0x00154f4b, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x00154f4e, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x00154f50, 0x2)   jzw(0x00154f24, -0x2e);               /* jz 0x154f24 */
    II(0x00154f52, 0x2)   jmpw(0x00154f00, -0x54);              /* jmp 0x154f00 */
l_0x00154f54:
    II(0x00154f54, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x00154f56, 0x1)   cwd();                                /* cwd  */
    II(0x00154f57, 0x1)   popw(ds);                             /* pop ds */
    II(0x00154f58, 0x1)   leavew();                             /* leave  */
    II(0x00154f59, 0x1)   retfw();                              /* retf  */
FUNC_END

