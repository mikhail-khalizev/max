FUNC_BEGIN(0x0015c4ae, 0x439b0ec9277f15cb, 0x10, ({0xc8, 0x14, 0, 0, 0xc7, 0x46, 0xee, 0, 0, 0x8b, 0x46, 0x6, 0x89, 0x46, 0xec, 0x8b, 0x46, 0x4, 0x89, 0x46, 0xfa, 0x8d, 0x46, 0xec, 0x16, 0x50, 0x68, 0, 0x3d, 0x9a, 0x9f, 0x4c, 0x80, 0, 0x83, 0xc4, 0x6, 0xb, 0xc0, 0x74, 0x5, 0x8b, 0x46, 0xfe, 0xeb, 0x3, 0xb8, 0xff, 0xff, 0xc9, 0xc2, 0x4, 0}))
    II(0x0015c4ae, 0x4)   enterw(0x14, 0);                      /* enter 0x14, 0x0 */
    II(0x0015c4b2, 0x5)   mov(memw_a16(ss, bp - 0x12), 0);      /* mov word [bp-0x12], 0x0 */
    II(0x0015c4b7, 0x3)   mov(ax, memw_a16(ss, bp + 0x6));      /* mov ax, [bp+0x6] */
    II(0x0015c4ba, 0x3)   mov(memw_a16(ss, bp - 0x14), ax);     /* mov [bp-0x14], ax */
    II(0x0015c4bd, 0x3)   mov(ax, memw_a16(ss, bp + 0x4));      /* mov ax, [bp+0x4] */
    II(0x0015c4c0, 0x3)   mov(memw_a16(ss, bp - 0x6), ax);      /* mov [bp-0x6], ax */
    II(0x0015c4c3, 0x3)   lea(ax, bp - 0x14);                   /* lea ax, [bp-0x14] */
    II(0x0015c4c6, 0x1)   pushw(ss);                            /* push ss */
    II(0x0015c4c7, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015c4c8, 0x3)   pushw(0x3d00);                        /* push word 0x3d00 */
    II(0x0015c4cb, 0x5)   callw_far_abs(0x80, 0x4c9f);          /* call word 0x80:0x4c9f */
    II(0x0015c4d0, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x0015c4d3, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0015c4d5, 0x2)   jzw(0x0015c4dc, 0x5);                 /* jz 0x15c4dc */
    II(0x0015c4d7, 0x3)   mov(ax, memw_a16(ss, bp - 0x2));      /* mov ax, [bp-0x2] */
    II(0x0015c4da, 0x2)   jmpw(0x0015c4df, 0x3);                /* jmp 0x15c4df */
l_0x0015c4dc:
    II(0x0015c4dc, 0x3)   mov(ax, 0xffff);                      /* mov ax, 0xffff */
l_0x0015c4df:
    II(0x0015c4df, 0x1)   leavew();                             /* leave  */
    II(0x0015c4e0, 0x3)   retw(0x4);                            /* ret 0x4 */
FUNC_END

