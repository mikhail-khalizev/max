FUNC_BEGIN(0x00136b2c, 0x6d6a2044958ea1a8, 0x10, ({0xc8, 0x36, 0, 0, 0x57, 0x56, 0x1e, 0xb8, 0x68, 0x3e, 0x8e, 0xd8, 0xc7, 0x46, 0xf4, 0, 0, 0xc7, 0x46, 0xe4, 0, 0, 0xa1, 0x8c, 0, 0x8b, 0x16, 0x8e, 0, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x89, 0x46, 0xf6, 0x89, 0x56, 0xf8, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x89, 0x46, 0xfe, 0x8b, 0x4e, 0xf6, 0x80, 0xe5, 0x3, 0xb, 0xc9, 0x74, 0x4, 0x40, 0x89, 0x46, 0xfe, 0x8b, 0x46, 0xf6, 0x8b, 0xc8, 0xc1, 0xe0, 0x2, 0x50, 0xff, 0x76, 0xfe, 0x8b, 0xf0, 0x8b, 0xf9, 0xe, 0xe8, 0xda, 0x8, 0x83, 0xc4, 0x2, 0x89, 0x46, 0xce, 0x89, 0x56, 0xd0, 0x52, 0x50, 0x90, 0xe, 0xe8, 0xbe, 0x7d, 0x83, 0xc4, 0x6, 0x89, 0x46, 0xe0, 0x89, 0x56, 0xe2, 0x56, 0x52, 0x50, 0x90, 0xe, 0xe8, 0x13, 0x23, 0x83, 0xc4, 0x6, 0x6a, 0x1, 0xe, 0xe8, 0xb0, 0x8, 0x83, 0xc4, 0x2, 0xa3, 0x84, 0x4f, 0x89, 0x16, 0x86, 0x4f, 0x8b, 0x46, 0xce, 0x8b, 0x56, 0xd0, 0x89, 0x46, 0xd6, 0x89, 0x56, 0xd8, 0x68, 0, 0x10, 0xff, 0x36, 0x86, 0x4f, 0xff, 0x36, 0x84, 0x4f, 0x90, 0xe, 0xe8, 0x7e, 0x7d, 0x83, 0xc4, 0x6, 0x89, 0x46, 0xca, 0x89, 0x56, 0xcc, 0x89, 0x46, 0xf0, 0x89, 0x56, 0xf2, 0x68, 0, 0x10, 0x52, 0x50, 0x90, 0xe, 0xe8, 0xcb, 0x22, 0x83, 0xc4, 0x6, 0x8b, 0x46, 0xf6, 0x8b, 0x56, 0xf8, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x89, 0x46, 0xde, 0xf7, 0xc7, 0xff, 0x3, 0x74, 0x4, 0x40, 0x89, 0x46, 0xde, 0x2b, 0xc0, 0x89, 0x46, 0xd4, 0x89, 0x46, 0xd2, 0xeb, 0xa, 0x90, 0x81, 0x46, 0xd6, 0, 0x10, 0x83, 0x56, 0xd8, 0, 0x8b, 0x46, 0xde, 0x2b, 0xd2, 0x3b, 0x56, 0xd4, 0x72, 0x37, 0x77, 0x5, 0x3b, 0x46, 0xd2, 0x72, 0x30, 0xc4, 0x5e, 0xf0, 0x26, 0x8b, 0x7, 0x33, 0x46, 0xd6, 0x80, 0xe4, 0xf, 0x33, 0x46, 0xd6, 0x33, 0x56, 0xd8, 0x26, 0x89, 0x7, 0x26, 0x89, 0x57, 0x2, 0x26, 0x80, 0xf, 0x7, 0x26, 0x81, 0x27, 0x7, 0xf0, 0x83, 0x46, 0xf0, 0x4, 0x83, 0x46, 0xd2, 0x1, 0x83, 0x56, 0xd4, 0, 0xeb, 0xb6, 0x2b, 0xc0, 0x89, 0x46, 0xd8, 0x89, 0x46, 0xd6, 0x89, 0x46, 0xd4, 0x89, 0x46, 0xd2, 0xeb, 0x8, 0x83, 0x46, 0xd2, 0x1, 0x83, 0x56, 0xd4, 0, 0xa1, 0x8c, 0, 0x8b, 0x16, 0x8e, 0, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x3b, 0x56, 0xd4, 0x72, 0x64, 0x77, 0x5, 0x3b, 0x46, 0xd2, 0x76, 0x5d, 0x8b, 0x46, 0xd6, 0x8b, 0x56, 0xd8, 0x8a, 0xf2, 0x8a, 0xd4, 0x8a, 0xe0, 0x2a, 0xc0, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0x8b, 0xc8, 0x8b, 0xda, 0x8b, 0x76, 0xd2, 0xc1, 0xe6, 0x2, 0x3, 0x76, 0xe0, 0x8e, 0x46, 0xe2, 0x89, 0x76, 0xf0, 0x8c, 0x46, 0xf2, 0x26, 0x33, 0x4, 0x80, 0xe4, 0xf, 0x2b, 0xd2, 0x33, 0xc8, 0x33, 0xda, 0x26, 0x89, 0xc, 0x26, 0x89, 0x5c, 0x2, 0xc4, 0x5e, 0xf0, 0x26, 0x80, 0xf, 0x7, 0x83, 0x46, 0xf0, 0x4, 0x83, 0x46, 0xd6, 0x1, 0x83, 0x56, 0xd8, 0, 0xe9, 0x70, 0xff, 0x8b, 0x46, 0xca, 0x8b, 0x56, 0xcc, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb}))
    II(0x00136b2c, 0x4)   enterw(0x36, 0);                      /* enter 0x36, 0x0 */
    II(0x00136b30, 0x1)   pushw(di);                            /* push di */
    II(0x00136b31, 0x1)   pushw(si);                            /* push si */
    II(0x00136b32, 0x1)   pushw(ds);                            /* push ds */
    II(0x00136b33, 0x3)   mov(ax, 0x3e68);                      /* mov ax, 0x3e68 */
    II(0x00136b36, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x00136b38, 0x5)   mov(memw_a16(ss, bp - 0xc), 0);       /* mov word [bp-0xc], 0x0 */
    II(0x00136b3d, 0x5)   mov(memw_a16(ss, bp - 0x1c), 0);      /* mov word [bp-0x1c], 0x0 */
    II(0x00136b42, 0x3)   mov(ax, memw_a16(ds, 0x8c));          /* mov ax, [0x8c] */
    II(0x00136b45, 0x4)   mov(dx, memw_a16(ds, 0x8e));          /* mov dx, [0x8e] */
    II(0x00136b49, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x00136b4b, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x00136b4d, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x00136b4f, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x00136b51, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00136b53, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00136b55, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00136b57, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00136b59, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00136b5b, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00136b5d, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00136b5f, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00136b61, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x00136b64, 0x3)   mov(memw_a16(ss, bp - 0x8), dx);      /* mov [bp-0x8], dx */
    II(0x00136b67, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x00136b69, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x00136b6b, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x00136b6d, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x00136b6f, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00136b71, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00136b73, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00136b75, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00136b77, 0x3)   mov(memw_a16(ss, bp - 0x2), ax);      /* mov [bp-0x2], ax */
    II(0x00136b7a, 0x3)   mov(cx, memw_a16(ss, bp - 0xa));      /* mov cx, [bp-0xa] */
    II(0x00136b7d, 0x3)   and_(ch, 0x3);                        /* and ch, 0x3 */
    II(0x00136b80, 0x2)   or_(cx, cx);                          /* or cx, cx */
    II(0x00136b82, 0x2)   jzw(0x00136b88, 0x4);                 /* jz 0x136b88 */
    II(0x00136b84, 0x1)   inc(ax);                              /* inc ax */
    II(0x00136b85, 0x3)   mov(memw_a16(ss, bp - 0x2), ax);      /* mov [bp-0x2], ax */
l_0x00136b88:
    II(0x00136b88, 0x3)   mov(ax, memw_a16(ss, bp - 0xa));      /* mov ax, [bp-0xa] */
    II(0x00136b8b, 0x2)   mov(cx, ax);                          /* mov cx, ax */
    II(0x00136b8d, 0x3)   shl(ax, 0x2);                         /* shl ax, 0x2 */
    II(0x00136b90, 0x1)   pushw(ax);                            /* push ax */
    II(0x00136b91, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x00136b94, 0x2)   mov(si, ax);                          /* mov si, ax */
    II(0x00136b96, 0x2)   mov(di, cx);                          /* mov di, cx */
    II(0x00136b98, 0x1)   pushw(cs);                            /* push cs */
    II(0x00136b99, 0x3)   callw(0x00137476, 0x8da);             /* call 0x137476 */
    II(0x00136b9c, 0x3)   add(sp, 0x2);                         /* add sp, 0x2 */
    II(0x00136b9f, 0x3)   mov(memw_a16(ss, bp - 0x32), ax);     /* mov [bp-0x32], ax */
    II(0x00136ba2, 0x3)   mov(memw_a16(ss, bp - 0x30), dx);     /* mov [bp-0x30], dx */
    II(0x00136ba5, 0x1)   pushw(dx);                            /* push dx */
    II(0x00136ba6, 0x1)   pushw(ax);                            /* push ax */
//    II(0x00136ba7, 0x1)   nop();                                /* nop  */
    II(0x00136ba8, 0x1)   pushw(cs);                            /* push cs */
    II(0x00136ba9, 0x3)   callw(0x0013e96a, 0x7dbe);            /* call 0x13e96a */
    II(0x00136bac, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x00136baf, 0x3)   mov(memw_a16(ss, bp - 0x20), ax);     /* mov [bp-0x20], ax */
    II(0x00136bb2, 0x3)   mov(memw_a16(ss, bp - 0x1e), dx);     /* mov [bp-0x1e], dx */
    II(0x00136bb5, 0x1)   pushw(si);                            /* push si */
    II(0x00136bb6, 0x1)   pushw(dx);                            /* push dx */
    II(0x00136bb7, 0x1)   pushw(ax);                            /* push ax */
//    II(0x00136bb8, 0x1)   nop();                                /* nop  */
    II(0x00136bb9, 0x1)   pushw(cs);                            /* push cs */
    II(0x00136bba, 0x3)   callw(0x00138ed0, 0x2313);            /* call 0x138ed0 */
    II(0x00136bbd, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x00136bc0, 0x2)   pushw(0x1);                           /* push 0x1 */
    II(0x00136bc2, 0x1)   pushw(cs);                            /* push cs */
    II(0x00136bc3, 0x3)   callw(0x00137476, 0x8b0);             /* call 0x137476 */
    II(0x00136bc6, 0x3)   add(sp, 0x2);                         /* add sp, 0x2 */
    II(0x00136bc9, 0x3)   mov(memw_a16(ds, 0x4f84), ax);        /* mov [0x4f84], ax */
    II(0x00136bcc, 0x4)   mov(memw_a16(ds, 0x4f86), dx);        /* mov [0x4f86], dx */
    II(0x00136bd0, 0x3)   mov(ax, memw_a16(ss, bp - 0x32));     /* mov ax, [bp-0x32] */
    II(0x00136bd3, 0x3)   mov(dx, memw_a16(ss, bp - 0x30));     /* mov dx, [bp-0x30] */
    II(0x00136bd6, 0x3)   mov(memw_a16(ss, bp - 0x2a), ax);     /* mov [bp-0x2a], ax */
    II(0x00136bd9, 0x3)   mov(memw_a16(ss, bp - 0x28), dx);     /* mov [bp-0x28], dx */
    II(0x00136bdc, 0x3)   pushw(0x1000);                        /* push word 0x1000 */
    II(0x00136bdf, 0x4)   pushw(memw_a16(ds, 0x4f86));          /* push word [0x4f86] */
    II(0x00136be3, 0x4)   pushw(memw_a16(ds, 0x4f84));          /* push word [0x4f84] */
//    II(0x00136be7, 0x1)   nop();                                /* nop  */
    II(0x00136be8, 0x1)   pushw(cs);                            /* push cs */
    II(0x00136be9, 0x3)   callw(0x0013e96a, 0x7d7e);            /* call 0x13e96a */
    II(0x00136bec, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x00136bef, 0x3)   mov(memw_a16(ss, bp - 0x36), ax);     /* mov [bp-0x36], ax */
    II(0x00136bf2, 0x3)   mov(memw_a16(ss, bp - 0x34), dx);     /* mov [bp-0x34], dx */
    II(0x00136bf5, 0x3)   mov(memw_a16(ss, bp - 0x10), ax);     /* mov [bp-0x10], ax */
    II(0x00136bf8, 0x3)   mov(memw_a16(ss, bp - 0xe), dx);      /* mov [bp-0xe], dx */
    II(0x00136bfb, 0x3)   pushw(0x1000);                        /* push word 0x1000 */
    II(0x00136bfe, 0x1)   pushw(dx);                            /* push dx */
    II(0x00136bff, 0x1)   pushw(ax);                            /* push ax */
//    II(0x00136c00, 0x1)   nop();                                /* nop  */
    II(0x00136c01, 0x1)   pushw(cs);                            /* push cs */
    II(0x00136c02, 0x3)   callw(0x00138ed0, 0x22cb);            /* call 0x138ed0 */
    II(0x00136c05, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x00136c08, 0x3)   mov(ax, memw_a16(ss, bp - 0xa));      /* mov ax, [bp-0xa] */
    II(0x00136c0b, 0x3)   mov(dx, memw_a16(ss, bp - 0x8));      /* mov dx, [bp-0x8] */
    II(0x00136c0e, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x00136c10, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x00136c12, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x00136c14, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x00136c16, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00136c18, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00136c1a, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00136c1c, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00136c1e, 0x3)   mov(memw_a16(ss, bp - 0x22), ax);     /* mov [bp-0x22], ax */
    II(0x00136c21, 0x4)   test(di, 0x3ff);                      /* test di, 0x3ff */
    II(0x00136c25, 0x2)   jzw(0x00136c2b, 0x4);                 /* jz 0x136c2b */
    II(0x00136c27, 0x1)   inc(ax);                              /* inc ax */
    II(0x00136c28, 0x3)   mov(memw_a16(ss, bp - 0x22), ax);     /* mov [bp-0x22], ax */
l_0x00136c2b:
    II(0x00136c2b, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x00136c2d, 0x3)   mov(memw_a16(ss, bp - 0x2c), ax);     /* mov [bp-0x2c], ax */
    II(0x00136c30, 0x3)   mov(memw_a16(ss, bp - 0x2e), ax);     /* mov [bp-0x2e], ax */
    II(0x00136c33, 0x2)   jmpw(0x00136c3f, 0xa);                /* jmp 0x136c3f */
//    II(0x00136c35, 0x1)   /* Недостижимый код. */
l_0x00136c36:
    II(0x00136c36, 0x5)   add(memw_a16(ss, bp - 0x2a), 0x1000); /* add word [bp-0x2a], 0x1000 */
    II(0x00136c3b, 0x4)   adc(memw_a16(ss, bp - 0x28), 0);      /* adc word [bp-0x28], 0x0 */
l_0x00136c3f:
    II(0x00136c3f, 0x3)   mov(ax, memw_a16(ss, bp - 0x22));     /* mov ax, [bp-0x22] */
    II(0x00136c42, 0x2)   sub(dx, dx);                          /* sub dx, dx */
    II(0x00136c44, 0x3)   cmp(dx, memw_a16(ss, bp - 0x2c));     /* cmp dx, [bp-0x2c] */
    II(0x00136c47, 0x2)   jbw(0x00136c80, 0x37);                /* jb 0x136c80 */
    II(0x00136c49, 0x2)   jaw(0x00136c50, 0x5);                 /* ja 0x136c50 */
    II(0x00136c4b, 0x3)   cmp(ax, memw_a16(ss, bp - 0x2e));     /* cmp ax, [bp-0x2e] */
    II(0x00136c4e, 0x2)   jbw(0x00136c80, 0x30);                /* jb 0x136c80 */
l_0x00136c50:
    II(0x00136c50, 0x3)   les(bx, ss, bp - 0x10);               /* les bx, [bp-0x10] */
    II(0x00136c53, 0x3)   mov(ax, memw_a16(es, bx));            /* mov ax, [es:bx] */
    II(0x00136c56, 0x3)   xor_(ax, memw_a16(ss, bp - 0x2a));    /* xor ax, [bp-0x2a] */
    II(0x00136c59, 0x3)   and_(ah, 0xf);                        /* and ah, 0xf */
    II(0x00136c5c, 0x3)   xor_(ax, memw_a16(ss, bp - 0x2a));    /* xor ax, [bp-0x2a] */
    II(0x00136c5f, 0x3)   xor_(dx, memw_a16(ss, bp - 0x28));    /* xor dx, [bp-0x28] */
    II(0x00136c62, 0x3)   mov(memw_a16(es, bx), ax);            /* mov [es:bx], ax */
    II(0x00136c65, 0x4)   mov(memw_a16(es, bx + 0x2), dx);      /* mov [es:bx+0x2], dx */
    II(0x00136c69, 0x4)   or_(memb_a16(es, bx), 0x7);           /* or byte [es:bx], 0x7 */
    II(0x00136c6d, 0x5)   and_(memw_a16(es, bx), 0xf007);       /* and word [es:bx], 0xf007 */
    II(0x00136c72, 0x4)   add(memw_a16(ss, bp - 0x10), 0x4);    /* add word [bp-0x10], 0x4 */
    II(0x00136c76, 0x4)   add(memw_a16(ss, bp - 0x2e), 0x1);    /* add word [bp-0x2e], 0x1 */
    II(0x00136c7a, 0x4)   adc(memw_a16(ss, bp - 0x2c), 0);      /* adc word [bp-0x2c], 0x0 */
    II(0x00136c7e, 0x2)   jmpw(0x00136c36, -0x4a);              /* jmp 0x136c36 */
l_0x00136c80:
    II(0x00136c80, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x00136c82, 0x3)   mov(memw_a16(ss, bp - 0x28), ax);     /* mov [bp-0x28], ax */
    II(0x00136c85, 0x3)   mov(memw_a16(ss, bp - 0x2a), ax);     /* mov [bp-0x2a], ax */
    II(0x00136c88, 0x3)   mov(memw_a16(ss, bp - 0x2c), ax);     /* mov [bp-0x2c], ax */
    II(0x00136c8b, 0x3)   mov(memw_a16(ss, bp - 0x2e), ax);     /* mov [bp-0x2e], ax */
    II(0x00136c8e, 0x2)   jmpw(0x00136c98, 0x8);                /* jmp 0x136c98 */
l_0x00136c90:
    II(0x00136c90, 0x4)   add(memw_a16(ss, bp - 0x2e), 0x1);    /* add word [bp-0x2e], 0x1 */
    II(0x00136c94, 0x4)   adc(memw_a16(ss, bp - 0x2c), 0);      /* adc word [bp-0x2c], 0x0 */
l_0x00136c98:
    II(0x00136c98, 0x3)   mov(ax, memw_a16(ds, 0x8c));          /* mov ax, [0x8c] */
    II(0x00136c9b, 0x4)   mov(dx, memw_a16(ds, 0x8e));          /* mov dx, [0x8e] */
    II(0x00136c9f, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x00136ca1, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x00136ca3, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x00136ca5, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x00136ca7, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00136ca9, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00136cab, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00136cad, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00136caf, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00136cb1, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00136cb3, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00136cb5, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00136cb7, 0x3)   cmp(dx, memw_a16(ss, bp - 0x2c));     /* cmp dx, [bp-0x2c] */
    II(0x00136cba, 0x2)   jbw(0x00136d20, 0x64);                /* jb 0x136d20 */
    II(0x00136cbc, 0x2)   jaw(0x00136cc3, 0x5);                 /* ja 0x136cc3 */
    II(0x00136cbe, 0x3)   cmp(ax, memw_a16(ss, bp - 0x2e));     /* cmp ax, [bp-0x2e] */
    II(0x00136cc1, 0x2)   jbew(0x00136d20, 0x5d);               /* jbe 0x136d20 */
l_0x00136cc3:
    II(0x00136cc3, 0x3)   mov(ax, memw_a16(ss, bp - 0x2a));     /* mov ax, [bp-0x2a] */
    II(0x00136cc6, 0x3)   mov(dx, memw_a16(ss, bp - 0x28));     /* mov dx, [bp-0x28] */
    II(0x00136cc9, 0x2)   mov(dh, dl);                          /* mov dh, dl */
    II(0x00136ccb, 0x2)   mov(dl, ah);                          /* mov dl, ah */
    II(0x00136ccd, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x00136ccf, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x00136cd1, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00136cd3, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00136cd5, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00136cd7, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00136cd9, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00136cdb, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00136cdd, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00136cdf, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00136ce1, 0x2)   mov(cx, ax);                          /* mov cx, ax */
    II(0x00136ce3, 0x2)   mov(bx, dx);                          /* mov bx, dx */
    II(0x00136ce5, 0x3)   mov(si, memw_a16(ss, bp - 0x2e));     /* mov si, [bp-0x2e] */
    II(0x00136ce8, 0x3)   shl(si, 0x2);                         /* shl si, 0x2 */
    II(0x00136ceb, 0x3)   add(si, memw_a16(ss, bp - 0x20));     /* add si, [bp-0x20] */
    II(0x00136cee, 0x3)   mov(es, memw_a16(ss, bp - 0x1e));     /* mov es, [bp-0x1e] */
    II(0x00136cf1, 0x3)   mov(memw_a16(ss, bp - 0x10), si);     /* mov [bp-0x10], si */
    II(0x00136cf4, 0x3)   mov(memw_a16(ss, bp - 0xe), es);      /* mov [bp-0xe], es */
    II(0x00136cf7, 0x3)   xor_(ax, memw_a16(es, si));           /* xor ax, [es:si] */
    II(0x00136cfa, 0x3)   and_(ah, 0xf);                        /* and ah, 0xf */
    II(0x00136cfd, 0x2)   sub(dx, dx);                          /* sub dx, dx */
    II(0x00136cff, 0x2)   xor_(cx, ax);                         /* xor cx, ax */
    II(0x00136d01, 0x2)   xor_(bx, dx);                         /* xor bx, dx */
    II(0x00136d03, 0x3)   mov(memw_a16(es, si), cx);            /* mov [es:si], cx */
    II(0x00136d06, 0x4)   mov(memw_a16(es, si + 0x2), bx);      /* mov [es:si+0x2], bx */
    II(0x00136d0a, 0x3)   les(bx, ss, bp - 0x10);               /* les bx, [bp-0x10] */
    II(0x00136d0d, 0x4)   or_(memb_a16(es, bx), 0x7);           /* or byte [es:bx], 0x7 */
    II(0x00136d11, 0x4)   add(memw_a16(ss, bp - 0x10), 0x4);    /* add word [bp-0x10], 0x4 */
    II(0x00136d15, 0x4)   add(memw_a16(ss, bp - 0x2a), 0x1);    /* add word [bp-0x2a], 0x1 */
    II(0x00136d19, 0x4)   adc(memw_a16(ss, bp - 0x28), 0);      /* adc word [bp-0x28], 0x0 */
    II(0x00136d1d, 0x3)   jmpw(0x00136c90, -0x90);              /* jmp 0x136c90 */
l_0x00136d20:
    II(0x00136d20, 0x3)   mov(ax, memw_a16(ss, bp - 0x36));     /* mov ax, [bp-0x36] */
    II(0x00136d23, 0x3)   mov(dx, memw_a16(ss, bp - 0x34));     /* mov dx, [bp-0x34] */
    II(0x00136d26, 0x1)   popw(ds);                             /* pop ds */
    II(0x00136d27, 0x1)   popw(si);                             /* pop si */
    II(0x00136d28, 0x1)   popw(di);                             /* pop di */
    II(0x00136d29, 0x1)   leavew();                             /* leave  */
    II(0x00136d2a, 0x1)   retfw();                              /* retf  */
FUNC_END

