FUNC_BEGIN(0x0013998a, 0xf655dee806a00b2c, 0x10, ({0xc8, 0x12, 0, 0, 0x57, 0x56, 0x1e, 0xb8, 0x68, 0x3e, 0x8e, 0xd8, 0xe, 0xe8, 0x6e, 0x21, 0xa3, 0xa8, 0x1f, 0x89, 0x16, 0xaa, 0x1f, 0xc7, 0x46, 0xf0, 0x24, 0, 0xc4, 0x5e, 0x6, 0x26, 0x8b, 0x47, 0x4, 0x26, 0x8b, 0x57, 0x6, 0x8b, 0xc8, 0x8b, 0xf2, 0xf7, 0xc2, 0xff, 0xff, 0x74, 0x35, 0x6a, 0x24, 0x26, 0x8b, 0x47, 0x2, 0x2b, 0xd2, 0x50, 0x52, 0x8b, 0xf9, 0x90, 0xe, 0xe8, 0x4e, 0x4f, 0x83, 0xc4, 0x4, 0x3, 0xc7, 0x13, 0xd6, 0x89, 0x46, 0xf2, 0x89, 0x56, 0xf4, 0x52, 0x50, 0x90, 0xe, 0xe8, 0x8a, 0x4f, 0x83, 0xc4, 0x6, 0x89, 0x46, 0xf6, 0x89, 0x56, 0xf8, 0xc6, 0x46, 0xfa, 0x1, 0xeb, 0xf, 0x90, 0x26, 0x8b, 0x47, 0x2, 0x89, 0x4e, 0xf6, 0x89, 0x46, 0xf8, 0xc6, 0x46, 0xfa, 0, 0xc7, 0x46, 0xfc, 0xa8, 0x1f, 0x8c, 0x5e, 0xfe, 0x8b, 0x46, 0xf0, 0xff, 0x4e, 0xf0, 0xb, 0xc0, 0x74, 0x14, 0xc4, 0x5e, 0xfc, 0xff, 0x46, 0xfc, 0x26, 0x8a, 0x7, 0xc4, 0x5e, 0xf6, 0xff, 0x46, 0xf6, 0x26, 0x88, 0x7, 0xeb, 0xe2, 0x80, 0x7e, 0xfa, 0, 0x74, 0xe, 0xff, 0x76, 0xf8, 0xff, 0x76, 0xf6, 0x90, 0xe, 0xe8, 0x23, 0x4d, 0x83, 0xc4, 0x4, 0xc4, 0x5e, 0x6, 0x26, 0x80, 0x67, 0x2c, 0xfe, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb}))
    II(0x0013998a, 0x4)   enterw(0x12, 0);                      /* enter 0x12, 0x0 */
    II(0x0013998e, 0x1)   pushw(di);                            /* push di */
    II(0x0013998f, 0x1)   pushw(si);                            /* push si */
    II(0x00139990, 0x1)   pushw(ds);                            /* push ds */
    II(0x00139991, 0x3)   mov(ax, 0x3e68);                      /* mov ax, 0x3e68 */
    II(0x00139994, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x00139996, 0x1)   pushw(cs);                            /* push cs */
    II(0x00139997, 0x3)   callw(0x0013bb08, 0x216e);            /* call 0x13bb08 */
    II(0x0013999a, 0x3)   mov(memw_a16(ds, 0x1fa8), ax);        /* mov [0x1fa8], ax */
    II(0x0013999d, 0x4)   mov(memw_a16(ds, 0x1faa), dx);        /* mov [0x1faa], dx */
    II(0x001399a1, 0x5)   mov(memw_a16(ss, bp - 0x10), 0x24);   /* mov word [bp-0x10], 0x24 */
    II(0x001399a6, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x001399a9, 0x4)   mov(ax, memw_a16(es, bx + 0x4));      /* mov ax, [es:bx+0x4] */
    II(0x001399ad, 0x4)   mov(dx, memw_a16(es, bx + 0x6));      /* mov dx, [es:bx+0x6] */
    II(0x001399b1, 0x2)   mov(cx, ax);                          /* mov cx, ax */
    II(0x001399b3, 0x2)   mov(si, dx);                          /* mov si, dx */
    II(0x001399b5, 0x4)   test(dx, 0xffff);                     /* test dx, 0xffff */
    II(0x001399b9, 0x2)   jzw(0x001399f0, 0x35);                /* jz 0x1399f0 */
    II(0x001399bb, 0x2)   pushw(0x24);                          /* push 0x24 */
    II(0x001399bd, 0x4)   mov(ax, memw_a16(es, bx + 0x2));      /* mov ax, [es:bx+0x2] */
    II(0x001399c1, 0x2)   sub(dx, dx);                          /* sub dx, dx */
    II(0x001399c3, 0x1)   pushw(ax);                            /* push ax */
    II(0x001399c4, 0x1)   pushw(dx);                            /* push dx */
    II(0x001399c5, 0x2)   mov(di, cx);                          /* mov di, cx */
//    II(0x001399c7, 0x1)   nop();                                /* nop  */
    II(0x001399c8, 0x1)   pushw(cs);                            /* push cs */
    II(0x001399c9, 0x3)   callw(0x0013e91a, 0x4f4e);            /* call 0x13e91a */
    II(0x001399cc, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x001399cf, 0x2)   add(ax, di);                          /* add ax, di */
    II(0x001399d1, 0x2)   adc(dx, si);                          /* adc dx, si */
    II(0x001399d3, 0x3)   mov(memw_a16(ss, bp - 0xe), ax);      /* mov [bp-0xe], ax */
    II(0x001399d6, 0x3)   mov(memw_a16(ss, bp - 0xc), dx);      /* mov [bp-0xc], dx */
    II(0x001399d9, 0x1)   pushw(dx);                            /* push dx */
    II(0x001399da, 0x1)   pushw(ax);                            /* push ax */
//    II(0x001399db, 0x1)   nop();                                /* nop  */
    II(0x001399dc, 0x1)   pushw(cs);                            /* push cs */
    II(0x001399dd, 0x3)   callw(0x0013e96a, 0x4f8a);            /* call 0x13e96a */
    II(0x001399e0, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x001399e3, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x001399e6, 0x3)   mov(memw_a16(ss, bp - 0x8), dx);      /* mov [bp-0x8], dx */
    II(0x001399e9, 0x4)   mov(memb_a16(ss, bp - 0x6), 0x1);     /* mov byte [bp-0x6], 0x1 */
    II(0x001399ed, 0x2)   jmpw(0x001399fe, 0xf);                /* jmp 0x1399fe */
//    II(0x001399ef, 0x1)   /* Недостижимый код. */
l_0x001399f0:
    II(0x001399f0, 0x4)   mov(ax, memw_a16(es, bx + 0x2));      /* mov ax, [es:bx+0x2] */
    II(0x001399f4, 0x3)   mov(memw_a16(ss, bp - 0xa), cx);      /* mov [bp-0xa], cx */
    II(0x001399f7, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x001399fa, 0x4)   mov(memb_a16(ss, bp - 0x6), 0);       /* mov byte [bp-0x6], 0x0 */
l_0x001399fe:
    II(0x001399fe, 0x5)   mov(memw_a16(ss, bp - 0x4), 0x1fa8);  /* mov word [bp-0x4], 0x1fa8 */
    II(0x00139a03, 0x3)   mov(memw_a16(ss, bp - 0x2), ds);      /* mov [bp-0x2], ds */
l_0x00139a06:
    II(0x00139a06, 0x3)   mov(ax, memw_a16(ss, bp - 0x10));     /* mov ax, [bp-0x10] */
    II(0x00139a09, 0x3)   dec(memw_a16(ss, bp - 0x10));         /* dec word [bp-0x10] */
    II(0x00139a0c, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x00139a0e, 0x2)   jzw(0x00139a24, 0x14);                /* jz 0x139a24 */
    II(0x00139a10, 0x3)   les(bx, ss, bp - 0x4);                /* les bx, [bp-0x4] */
    II(0x00139a13, 0x3)   inc(memw_a16(ss, bp - 0x4));          /* inc word [bp-0x4] */
    II(0x00139a16, 0x3)   mov(al, memb_a16(es, bx));            /* mov al, [es:bx] */
    II(0x00139a19, 0x3)   les(bx, ss, bp - 0xa);                /* les bx, [bp-0xa] */
    II(0x00139a1c, 0x3)   inc(memw_a16(ss, bp - 0xa));          /* inc word [bp-0xa] */
    II(0x00139a1f, 0x3)   mov(memb_a16(es, bx), al);            /* mov [es:bx], al */
    II(0x00139a22, 0x2)   jmpw(0x00139a06, -0x1e);              /* jmp 0x139a06 */
l_0x00139a24:
    II(0x00139a24, 0x4)   cmp(memb_a16(ss, bp - 0x6), 0);       /* cmp byte [bp-0x6], 0x0 */
    II(0x00139a28, 0x2)   jzw(0x00139a38, 0xe);                 /* jz 0x139a38 */
    II(0x00139a2a, 0x3)   pushw(memw_a16(ss, bp - 0x8));        /* push word [bp-0x8] */
    II(0x00139a2d, 0x3)   pushw(memw_a16(ss, bp - 0xa));        /* push word [bp-0xa] */
//    II(0x00139a30, 0x1)   nop();                                /* nop  */
    II(0x00139a31, 0x1)   pushw(cs);                            /* push cs */
    II(0x00139a32, 0x3)   callw(0x0013e758, 0x4d23);            /* call 0x13e758 */
    II(0x00139a35, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
l_0x00139a38:
    II(0x00139a38, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00139a3b, 0x5)   and_(memb_a16(es, bx + 0x2c), -0x2 /* 0xfe */); /* and byte [es:bx+0x2c], 0xfe */
    II(0x00139a40, 0x1)   popw(ds);                             /* pop ds */
    II(0x00139a41, 0x1)   popw(si);                             /* pop si */
    II(0x00139a42, 0x1)   popw(di);                             /* pop di */
    II(0x00139a43, 0x1)   leavew();                             /* leave  */
    II(0x00139a44, 0x1)   retfw();                              /* retf  */
FUNC_END

