FUNC_BEGIN(0x0015f76f, 0xf77cc91a9885c510, 0x10, ({0xc8, 0xc, 0, 0, 0x57, 0x56, 0xc7, 0x46, 0xfc, 0xd4, 0xa1, 0xc7, 0x46, 0xfe, 0x88, 0, 0x8b, 0x46, 0xfe, 0x89, 0x46, 0xf8, 0x8b, 0x46, 0xfc, 0x89, 0x46, 0xf4, 0xc7, 0x46, 0xf6, 0, 0, 0x8d, 0x46, 0xf4, 0x16, 0x50, 0x6a, 0x24, 0x9a, 0x38, 0xb, 0x80, 0, 0x83, 0xc4, 0x6, 0x89, 0x46, 0xfa, 0x8b, 0x76, 0xfa, 0x83, 0xe6, 0xf8, 0x8e, 0x6, 0xd8, 0x3f, 0x26, 0xc4, 0x1e, 0x22, 0x1, 0x26, 0xc6, 0, 0x3, 0x6a, 0x1, 0x6a, 0x24, 0x90, 0xe, 0xe8, 0xb1, 0x68, 0x83, 0xc4, 0x4, 0x5e, 0x5f, 0xc9, 0xcb}))
    II(0x0015f76f, 0x4)   enterw(0xc, 0);                       /* enter 0xc, 0x0 */
    II(0x0015f773, 0x1)   pushw(di);                            /* push di */
    II(0x0015f774, 0x1)   pushw(si);                            /* push si */
    II(0x0015f775, 0x5)   mov(memw_a16(ss, bp - 0x4), 0xa1d4);  /* mov word [bp-0x4], 0xa1d4 */
    II(0x0015f77a, 0x5)   mov(memw_a16(ss, bp - 0x2), 0x88);    /* mov word [bp-0x2], 0x88 */
    II(0x0015f77f, 0x3)   mov(ax, memw_a16(ss, bp - 0x2));      /* mov ax, [bp-0x2] */
    II(0x0015f782, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x0015f785, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x0015f788, 0x3)   mov(memw_a16(ss, bp - 0xc), ax);      /* mov [bp-0xc], ax */
    II(0x0015f78b, 0x5)   mov(memw_a16(ss, bp - 0xa), 0);       /* mov word [bp-0xa], 0x0 */
    II(0x0015f790, 0x3)   lea(ax, bp - 0xc);                    /* lea ax, [bp-0xc] */
    II(0x0015f793, 0x1)   pushw(ss);                            /* push ss */
    II(0x0015f794, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015f795, 0x2)   pushw(0x24);                          /* push 0x24 */
    II(0x0015f797, 0x5)   callw_far_abs(0x80, 0xb38);           /* call word 0x80:0xb38 */
    II(0x0015f79c, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x0015f79f, 0x3)   mov(memw_a16(ss, bp - 0x6), ax);      /* mov [bp-0x6], ax */
    II(0x0015f7a2, 0x3)   mov(si, memw_a16(ss, bp - 0x6));      /* mov si, [bp-0x6] */
    II(0x0015f7a5, 0x3)   and_(si, -0x8 /* 0xf8 */);            /* and si, 0xf8 */
    II(0x0015f7a8, 0x4)   mov(es, memw_a16(ds, 0x3fd8));        /* mov es, [0x3fd8] */
    II(0x0015f7ac, 0x5)   les(bx, es, 0x122);                   /* les bx, [es:0x122] */
    II(0x0015f7b1, 0x4)   mov(memb_a16(es, bx + si), 0x3);      /* mov byte [es:bx+si], 0x3 */
    II(0x0015f7b5, 0x2)   pushw(0x1);                           /* push 0x1 */
    II(0x0015f7b7, 0x2)   pushw(0x24);                          /* push 0x24 */
//    II(0x0015f7b9, 0x1)   nop();                                /* nop  */
    II(0x0015f7ba, 0x1)   pushw(cs);                            /* push cs */
    II(0x0015f7bb, 0x3)   callw(0x0016606f, 0x68b1);            /* call 0x16606f */
    II(0x0015f7be, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x0015f7c1, 0x1)   popw(si);                             /* pop si */
    II(0x0015f7c2, 0x1)   popw(di);                             /* pop di */
    II(0x0015f7c3, 0x1)   leavew();                             /* leave  */
    II(0x0015f7c4, 0x1)   retfw();                              /* retf  */
FUNC_END

