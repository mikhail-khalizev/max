FUNC_BEGIN(0x001578d4, 0xc52c641b697bd121, 0x10, ({0xc8, 0x10, 0, 0, 0x57, 0x56, 0x8d, 0x46, 0xf0, 0x16, 0x50, 0xff, 0x76, 0x4, 0x9a, 0x82, 0x4f, 0x80, 0, 0x83, 0xc4, 0x6, 0x8a, 0x46, 0xf7, 0x2a, 0xe4, 0xc1, 0xe0, 0x8, 0x8a, 0x4e, 0xf4, 0x2a, 0xed, 0x3, 0xc1, 0x8b, 0x4e, 0xf2, 0x8b, 0xd0, 0x3, 0x4e, 0x6, 0x13, 0x56, 0x8, 0x89, 0x4e, 0xfc, 0x89, 0x56, 0xfe, 0x8b, 0x46, 0xfc, 0x89, 0x46, 0xf2, 0x8a, 0x46, 0xfe, 0x88, 0x46, 0xf4, 0x8a, 0x46, 0xff, 0x2a, 0xe4, 0x88, 0x46, 0xf7, 0x8a, 0x46, 0xf6, 0x25, 0xf, 0, 0x8b, 0x4e, 0xf0, 0x89, 0x4e, 0xf8, 0x89, 0x46, 0xfa, 0xf6, 0x46, 0xf6, 0x80, 0x75, 0x3, 0xe9, 0x43, 0, 0x80, 0x66, 0xf6, 0x7f, 0x6a, 0xc, 0x8d, 0x46, 0xf8, 0x50, 0x9a, 0x3c, 0x43, 0x80, 0, 0x81, 0x4e, 0xf8, 0xff, 0xf, 0x83, 0x4e, 0xfa, 0, 0x8b, 0x46, 0x6, 0x8b, 0x56, 0x8, 0x29, 0x46, 0xf8, 0x19, 0x56, 0xfa, 0x83, 0x7e, 0xfa, 0, 0x76, 0x3, 0xe9, 0x9, 0, 0x83, 0x7e, 0xf8, 0xff, 0x77, 0x3, 0xe9, 0xa, 0, 0xc7, 0x46, 0xf8, 0xff, 0xff, 0xc7, 0x46, 0xfa, 0, 0, 0xe9, 0xc, 0, 0x8b, 0x46, 0x6, 0x8b, 0x56, 0x8, 0x29, 0x46, 0xf8, 0x19, 0x56, 0xfa, 0x8b, 0x46, 0xf8, 0x89, 0x46, 0xf0, 0xc6, 0x46, 0xf6, 0, 0x8d, 0x46, 0xf0, 0x16, 0x50, 0xff, 0x76, 0xa, 0x9a, 0xf4, 0x4f, 0x80, 0, 0x83, 0xc4, 0x6, 0x8b, 0x46, 0xa, 0xe9, 0, 0, 0x5e, 0x5f, 0xc9, 0xc3}))
    II(0x001578d4, 0x4)   enterw(0x10, 0);                      /* enter 0x10, 0x0 */
    II(0x001578d8, 0x1)   pushw(di);                            /* push di */
    II(0x001578d9, 0x1)   pushw(si);                            /* push si */
    II(0x001578da, 0x3)   lea(ax, bp - 0x10);                   /* lea ax, [bp-0x10] */
    II(0x001578dd, 0x1)   pushw(ss);                            /* push ss */
    II(0x001578de, 0x1)   pushw(ax);                            /* push ax */
    II(0x001578df, 0x3)   pushw(memw_a16(ss, bp + 0x4));        /* push word [bp+0x4] */
    II(0x001578e2, 0x5)   callw_far_abs(0x80, 0x4f82);          /* call word 0x80:0x4f82 */
    II(0x001578e7, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x001578ea, 0x3)   mov(al, memb_a16(ss, bp - 0x9));      /* mov al, [bp-0x9] */
    II(0x001578ed, 0x2)   sub(ah, ah);                          /* sub ah, ah */
    II(0x001578ef, 0x3)   shl(ax, 0x8);                         /* shl ax, 0x8 */
    II(0x001578f2, 0x3)   mov(cl, memb_a16(ss, bp - 0xc));      /* mov cl, [bp-0xc] */
    II(0x001578f5, 0x2)   sub(ch, ch);                          /* sub ch, ch */
    II(0x001578f7, 0x2)   add(ax, cx);                          /* add ax, cx */
    II(0x001578f9, 0x3)   mov(cx, memw_a16(ss, bp - 0xe));      /* mov cx, [bp-0xe] */
    II(0x001578fc, 0x2)   mov(dx, ax);                          /* mov dx, ax */
    II(0x001578fe, 0x3)   add(cx, memw_a16(ss, bp + 0x6));      /* add cx, [bp+0x6] */
    II(0x00157901, 0x3)   adc(dx, memw_a16(ss, bp + 0x8));      /* adc dx, [bp+0x8] */
    II(0x00157904, 0x3)   mov(memw_a16(ss, bp - 0x4), cx);      /* mov [bp-0x4], cx */
    II(0x00157907, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
    II(0x0015790a, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x0015790d, 0x3)   mov(memw_a16(ss, bp - 0xe), ax);      /* mov [bp-0xe], ax */
    II(0x00157910, 0x3)   mov(al, memb_a16(ss, bp - 0x2));      /* mov al, [bp-0x2] */
    II(0x00157913, 0x3)   mov(memb_a16(ss, bp - 0xc), al);      /* mov [bp-0xc], al */
    II(0x00157916, 0x3)   mov(al, memb_a16(ss, bp - 0x1));      /* mov al, [bp-0x1] */
    II(0x00157919, 0x2)   sub(ah, ah);                          /* sub ah, ah */
    II(0x0015791b, 0x3)   mov(memb_a16(ss, bp - 0x9), al);      /* mov [bp-0x9], al */
    II(0x0015791e, 0x3)   mov(al, memb_a16(ss, bp - 0xa));      /* mov al, [bp-0xa] */
    II(0x00157921, 0x3)   and_(ax, 0xf);                        /* and ax, 0xf */
    II(0x00157924, 0x3)   mov(cx, memw_a16(ss, bp - 0x10));     /* mov cx, [bp-0x10] */
    II(0x00157927, 0x3)   mov(memw_a16(ss, bp - 0x8), cx);      /* mov [bp-0x8], cx */
    II(0x0015792a, 0x3)   mov(memw_a16(ss, bp - 0x6), ax);      /* mov [bp-0x6], ax */
    II(0x0015792d, 0x4)   test(memb_a16(ss, bp - 0xa), 0x80);   /* test byte [bp-0xa], 0x80 */
    II(0x00157931, 0x2)   jnzw(0x00157936, 0x3);                /* jnz 0x157936 */
    II(0x00157933, 0x3)   jmpw(0x00157979, 0x43);               /* jmp 0x157979 */
l_0x00157936:
    II(0x00157936, 0x4)   and_(memb_a16(ss, bp - 0xa), 0x7f);   /* and byte [bp-0xa], 0x7f */
    II(0x0015793a, 0x2)   pushw(0xc);                           /* push 0xc */
    II(0x0015793c, 0x3)   lea(ax, bp - 0x8);                    /* lea ax, [bp-0x8] */
    II(0x0015793f, 0x1)   pushw(ax);                            /* push ax */
    II(0x00157940, 0x5)   callw_far_abs(0x80, 0x433c);          /* call word 0x80:0x433c */
    II(0x00157945, 0x5)   or_(memw_a16(ss, bp - 0x8), 0xfff);   /* or word [bp-0x8], 0xfff */
    II(0x0015794a, 0x4)   or_(memw_a16(ss, bp - 0x6), 0);       /* or word [bp-0x6], 0x0 */
    II(0x0015794e, 0x3)   mov(ax, memw_a16(ss, bp + 0x6));      /* mov ax, [bp+0x6] */
    II(0x00157951, 0x3)   mov(dx, memw_a16(ss, bp + 0x8));      /* mov dx, [bp+0x8] */
    II(0x00157954, 0x3)   sub(memw_a16(ss, bp - 0x8), ax);      /* sub [bp-0x8], ax */
    II(0x00157957, 0x3)   sbb(memw_a16(ss, bp - 0x6), dx);      /* sbb [bp-0x6], dx */
    II(0x0015795a, 0x4)   cmp(memw_a16(ss, bp - 0x6), 0);       /* cmp word [bp-0x6], 0x0 */
    II(0x0015795e, 0x2)   jbew(0x00157963, 0x3);                /* jbe 0x157963 */
    II(0x00157960, 0x3)   jmpw(0x0015796c, 0x9);                /* jmp 0x15796c */
l_0x00157963:
    II(0x00157963, 0x4)   cmp(memw_a16(ss, bp - 0x8), -0x1 /* 0xff */); /* cmp word [bp-0x8], 0xff */
    II(0x00157967, 0x2)   jaw(0x0015796c, 0x3);                 /* ja 0x15796c */
    II(0x00157969, 0x3)   jmpw(0x00157976, 0xa);                /* jmp 0x157976 */
l_0x0015796c:
    II(0x0015796c, 0x5)   mov(memw_a16(ss, bp - 0x8), 0xffff);  /* mov word [bp-0x8], 0xffff */
    II(0x00157971, 0x5)   mov(memw_a16(ss, bp - 0x6), 0);       /* mov word [bp-0x6], 0x0 */
l_0x00157976:
    II(0x00157976, 0x3)   jmpw(0x00157985, 0xc);                /* jmp 0x157985 */
l_0x00157979:
    II(0x00157979, 0x3)   mov(ax, memw_a16(ss, bp + 0x6));      /* mov ax, [bp+0x6] */
    II(0x0015797c, 0x3)   mov(dx, memw_a16(ss, bp + 0x8));      /* mov dx, [bp+0x8] */
    II(0x0015797f, 0x3)   sub(memw_a16(ss, bp - 0x8), ax);      /* sub [bp-0x8], ax */
    II(0x00157982, 0x3)   sbb(memw_a16(ss, bp - 0x6), dx);      /* sbb [bp-0x6], dx */
l_0x00157985:
    II(0x00157985, 0x3)   mov(ax, memw_a16(ss, bp - 0x8));      /* mov ax, [bp-0x8] */
    II(0x00157988, 0x3)   mov(memw_a16(ss, bp - 0x10), ax);     /* mov [bp-0x10], ax */
    II(0x0015798b, 0x4)   mov(memb_a16(ss, bp - 0xa), 0);       /* mov byte [bp-0xa], 0x0 */
    II(0x0015798f, 0x3)   lea(ax, bp - 0x10);                   /* lea ax, [bp-0x10] */
    II(0x00157992, 0x1)   pushw(ss);                            /* push ss */
    II(0x00157993, 0x1)   pushw(ax);                            /* push ax */
    II(0x00157994, 0x3)   pushw(memw_a16(ss, bp + 0xa));        /* push word [bp+0xa] */
    II(0x00157997, 0x5)   callw_far_abs(0x80, 0x4ff4);          /* call word 0x80:0x4ff4 */
    II(0x0015799c, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x0015799f, 0x3)   mov(ax, memw_a16(ss, bp + 0xa));      /* mov ax, [bp+0xa] */
    II(0x001579a2, 0x3)   jmpw(0x001579a5, 0);                  /* jmp 0x1579a5 */
l_0x001579a5:
    II(0x001579a5, 0x1)   popw(si);                             /* pop si */
    II(0x001579a6, 0x1)   popw(di);                             /* pop di */
    II(0x001579a7, 0x1)   leavew();                             /* leave  */
    II(0x001579a8, 0x1)   retw();                               /* ret  */
FUNC_END

