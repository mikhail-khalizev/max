FUNC_BEGIN(0x00134fae, 0x4464f58ce5be96ab, 0x10, ({0xc8, 0xc, 0, 0, 0x57, 0x56, 0x1e, 0xb8, 0x68, 0x3e, 0x8e, 0xd8, 0xb8, 0x70, 0, 0xba, 0x10, 0, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0x89, 0x46, 0xf4, 0x89, 0x56, 0xf6, 0x8e, 0xc2, 0xbb, 0x72, 0, 0x26, 0x8b, 0x7, 0xbb, 0x70, 0, 0x26, 0x8b, 0xf, 0x89, 0xe, 0x31, 0x51, 0xa3, 0x33, 0x51, 0xb8, 0x9e, 0, 0x1e, 0x8b, 0xf8, 0x8b, 0xf3, 0x1e, 0x7, 0x8e, 0xda, 0xa5, 0xa5, 0xa5, 0xa5, 0x1f, 0x6a, 0x68, 0x90, 0xe, 0xe8, 0xaf, 0x97, 0x83, 0xc4, 0x2, 0x89, 0x46, 0xf8, 0x89, 0x56, 0xfa, 0x8b, 0xc2, 0xb, 0x46, 0xf8, 0x75, 0x15, 0x1e, 0x68, 0x45, 0x1, 0x90, 0xe, 0xe8, 0x3d, 0xc0, 0x83, 0xc4, 0x4, 0xb8, 0x1, 0, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb, 0x90, 0x8b, 0xc2, 0xa3, 0xc2, 0x50, 0x6a, 0x68, 0x50, 0xff, 0x76, 0xf8, 0x90, 0xe, 0xe8, 0xa2, 0x3e, 0x83, 0xc4, 0x6, 0x83, 0x3e, 0xa0, 0x51, 0, 0x75, 0x29, 0xfa, 0xff, 0x36, 0xfa, 0x1e, 0xe, 0xe8, 0xe1, 0x5, 0x83, 0xc4, 0x2, 0x90, 0xe, 0xe8, 0x37, 0x3e, 0xc4, 0x1e, 0xf8, 0x1e, 0x26, 0x89, 0x47, 0x1c, 0x26, 0x89, 0x57, 0x1e, 0xff, 0x36, 0xfa, 0x1e, 0xe, 0xe8, 0x93, 0x5, 0x83, 0xc4, 0x2, 0xfb, 0x90, 0xe, 0xe8, 0x1a, 0x3e, 0xc4, 0x5e, 0xf8, 0x26, 0x89, 0x47, 0x1c, 0x26, 0x89, 0x57, 0x1e, 0xff, 0x76, 0xfa, 0xff, 0x76, 0xf8, 0xe, 0xe8, 0x39, 0x4, 0x83, 0xc4, 0x4, 0xff, 0x76, 0xfa, 0xe, 0xe8, 0x6b, 0x5, 0x83, 0xc4, 0x2, 0x8b, 0x46, 0xfa, 0xc4, 0x5e, 0xfc, 0x26, 0x89, 0x47, 0x2, 0x26, 0x8a, 0x47, 0x5, 0x24, 0xe5, 0xc, 0x5, 0x26, 0x88, 0x47, 0x5, 0x26, 0x80, 0x67, 0x5, 0x9f, 0x26, 0x80, 0x4f, 0x5, 0x80, 0x2b, 0xc0, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb}))
    II(0x00134fae, 0x4)   enterw(0xc, 0);                       /* enter 0xc, 0x0 */
    II(0x00134fb2, 0x1)   pushw(di);                            /* push di */
    II(0x00134fb3, 0x1)   pushw(si);                            /* push si */
    II(0x00134fb4, 0x1)   pushw(ds);                            /* push ds */
    II(0x00134fb5, 0x3)   mov(ax, 0x3e68);                      /* mov ax, 0x3e68 */
    II(0x00134fb8, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x00134fba, 0x3)   mov(ax, 0x70);                        /* mov ax, 0x70 */
    II(0x00134fbd, 0x3)   mov(dx, 0x10);                        /* mov dx, 0x10 */
    II(0x00134fc0, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x00134fc3, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
    II(0x00134fc6, 0x3)   mov(memw_a16(ss, bp - 0xc), ax);      /* mov [bp-0xc], ax */
    II(0x00134fc9, 0x3)   mov(memw_a16(ss, bp - 0xa), dx);      /* mov [bp-0xa], dx */
    II(0x00134fcc, 0x2)   mov(es, dx);                          /* mov es, dx */
    II(0x00134fce, 0x3)   mov(bx, 0x72);                        /* mov bx, 0x72 */
    II(0x00134fd1, 0x3)   mov(ax, memw_a16(es, bx));            /* mov ax, [es:bx] */
    II(0x00134fd4, 0x3)   mov(bx, 0x70);                        /* mov bx, 0x70 */
    II(0x00134fd7, 0x3)   mov(cx, memw_a16(es, bx));            /* mov cx, [es:bx] */
    II(0x00134fda, 0x4)   mov(memw_a16(ds, 0x5131), cx);        /* mov [0x5131], cx */
    II(0x00134fde, 0x3)   mov(memw_a16(ds, 0x5133), ax);        /* mov [0x5133], ax */
    II(0x00134fe1, 0x3)   mov(ax, 0x9e);                        /* mov ax, 0x9e */
    II(0x00134fe4, 0x1)   pushw(ds);                            /* push ds */
    II(0x00134fe5, 0x2)   mov(di, ax);                          /* mov di, ax */
    II(0x00134fe7, 0x2)   mov(si, bx);                          /* mov si, bx */
    II(0x00134fe9, 0x1)   pushw(ds);                            /* push ds */
    II(0x00134fea, 0x1)   popw(es);                             /* pop es */
    II(0x00134feb, 0x2)   mov(ds, dx);                          /* mov ds, dx */
    II(0x00134fed, 0x1)   movsw_a16();                          /* movsw  */
    II(0x00134fee, 0x1)   movsw_a16();                          /* movsw  */
    II(0x00134fef, 0x1)   movsw_a16();                          /* movsw  */
    II(0x00134ff0, 0x1)   movsw_a16();                          /* movsw  */
    II(0x00134ff1, 0x1)   popw(ds);                             /* pop ds */
    II(0x00134ff2, 0x2)   pushw(0x68);                          /* push 0x68 */
//    II(0x00134ff4, 0x1)   nop();                                /* nop  */
    II(0x00134ff5, 0x1)   pushw(cs);                            /* push cs */
    II(0x00134ff6, 0x3)   callw(0x0012e7a8, -0x6851);           /* call 0x12e7a8 */
    II(0x00134ff9, 0x3)   add(sp, 0x2);                         /* add sp, 0x2 */
    II(0x00134ffc, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x00134fff, 0x3)   mov(memw_a16(ss, bp - 0x6), dx);      /* mov [bp-0x6], dx */
    II(0x00135002, 0x2)   mov(ax, dx);                          /* mov ax, dx */
    II(0x00135004, 0x3)   or_(ax, memw_a16(ss, bp - 0x8));      /* or ax, [bp-0x8] */
    II(0x00135007, 0x2)   jnzw(0x0013501e, 0x15);               /* jnz 0x13501e */
    II(0x00135009, 0x1)   pushw(ds);                            /* push ds */
    II(0x0013500a, 0x3)   pushw(0x145);                         /* push word 0x145 */
//    II(0x0013500d, 0x1)   nop();                                /* nop  */
    II(0x0013500e, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013500f, 0x3)   callw(0x0013104f, -0x3fc3);           /* call 0x13104f */
    II(0x00135012, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x00135015, 0x3)   mov(ax, 0x1);                         /* mov ax, 0x1 */
    II(0x00135018, 0x1)   popw(ds);                             /* pop ds */
    II(0x00135019, 0x1)   popw(si);                             /* pop si */
    II(0x0013501a, 0x1)   popw(di);                             /* pop di */
    II(0x0013501b, 0x1)   leavew();                             /* leave  */
    II(0x0013501c, 0x1)   retfw();                              /* retf  */
//    II(0x0013501d, 0x1)   /* Недостижимый код. */
l_0x0013501e:
    II(0x0013501e, 0x2)   mov(ax, dx);                          /* mov ax, dx */
    II(0x00135020, 0x3)   mov(memw_a16(ds, 0x50c2), ax);        /* mov [0x50c2], ax */
    II(0x00135023, 0x2)   pushw(0x68);                          /* push 0x68 */
    II(0x00135025, 0x1)   pushw(ax);                            /* push ax */
    II(0x00135026, 0x3)   pushw(memw_a16(ss, bp - 0x8));        /* push word [bp-0x8] */
//    II(0x00135029, 0x1)   nop();                                /* nop  */
    II(0x0013502a, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013502b, 0x3)   callw(0x00138ed0, 0x3ea2);            /* call 0x138ed0 */
    II(0x0013502e, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x00135031, 0x5)   cmp(memw_a16(ds, 0x51a0), 0);         /* cmp word [0x51a0], 0x0 */
    II(0x00135036, 0x2)   jnzw(0x00135061, 0x29);               /* jnz 0x135061 */
    II(0x00135038, 0x1)   cli();                                /* cli  */
    II(0x00135039, 0x4)   pushw(memw_a16(ds, 0x1efa));          /* push word [0x1efa] */
    II(0x0013503d, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013503e, 0x3)   callw(0x00135622, 0x5e1);             /* call 0x135622 */
    II(0x00135041, 0x3)   add(sp, 0x2);                         /* add sp, 0x2 */
//    II(0x00135044, 0x1)   nop();                                /* nop  */
    II(0x00135045, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135046, 0x3)   callw(0x00138e80, 0x3e37);            /* call 0x138e80 */
    II(0x00135049, 0x4)   les(bx, ds, 0x1ef8);                  /* les bx, [0x1ef8] */
    II(0x0013504d, 0x4)   mov(memw_a16(es, bx + 0x1c), ax);     /* mov [es:bx+0x1c], ax */
    II(0x00135051, 0x4)   mov(memw_a16(es, bx + 0x1e), dx);     /* mov [es:bx+0x1e], dx */
    II(0x00135055, 0x4)   pushw(memw_a16(ds, 0x1efa));          /* push word [0x1efa] */
    II(0x00135059, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013505a, 0x3)   callw(0x001355f0, 0x593);             /* call 0x1355f0 */
    II(0x0013505d, 0x3)   add(sp, 0x2);                         /* add sp, 0x2 */
    II(0x00135060, 0x1)   sti();                                /* sti  */
l_0x00135061:
//    II(0x00135061, 0x1)   nop();                                /* nop  */
    II(0x00135062, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135063, 0x3)   callw(0x00138e80, 0x3e1a);            /* call 0x138e80 */
    II(0x00135066, 0x3)   les(bx, ss, bp - 0x8);                /* les bx, [bp-0x8] */
    II(0x00135069, 0x4)   mov(memw_a16(es, bx + 0x1c), ax);     /* mov [es:bx+0x1c], ax */
    II(0x0013506d, 0x4)   mov(memw_a16(es, bx + 0x1e), dx);     /* mov [es:bx+0x1e], dx */
    II(0x00135071, 0x3)   pushw(memw_a16(ss, bp - 0x6));        /* push word [bp-0x6] */
    II(0x00135074, 0x3)   pushw(memw_a16(ss, bp - 0x8));        /* push word [bp-0x8] */
    II(0x00135077, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135078, 0x3)   callw(0x001354b4, 0x439);             /* call 0x1354b4 */
    II(0x0013507b, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x0013507e, 0x3)   pushw(memw_a16(ss, bp - 0x6));        /* push word [bp-0x6] */
    II(0x00135081, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135082, 0x3)   callw(0x001355f0, 0x56b);             /* call 0x1355f0 */
    II(0x00135085, 0x3)   add(sp, 0x2);                         /* add sp, 0x2 */
    II(0x00135088, 0x3)   mov(ax, memw_a16(ss, bp - 0x6));      /* mov ax, [bp-0x6] */
    II(0x0013508b, 0x3)   les(bx, ss, bp - 0x4);                /* les bx, [bp-0x4] */
    II(0x0013508e, 0x4)   mov(memw_a16(es, bx + 0x2), ax);      /* mov [es:bx+0x2], ax */
    II(0x00135092, 0x4)   mov(al, memb_a16(es, bx + 0x5));      /* mov al, [es:bx+0x5] */
    II(0x00135096, 0x2)   and_(al, 0xe5);                       /* and al, 0xe5 */
    II(0x00135098, 0x2)   or_(al, 0x5);                         /* or al, 0x5 */
    II(0x0013509a, 0x4)   mov(memb_a16(es, bx + 0x5), al);      /* mov [es:bx+0x5], al */
    II(0x0013509e, 0x5)   and_(memb_a16(es, bx + 0x5), -0x61 /* 0x9f */); /* and byte [es:bx+0x5], 0x9f */
    II(0x001350a3, 0x5)   or_(memb_a16(es, bx + 0x5), -0x80 /* 0x80 */); /* or byte [es:bx+0x5], 0x80 */
    II(0x001350a8, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x001350aa, 0x1)   popw(ds);                             /* pop ds */
    II(0x001350ab, 0x1)   popw(si);                             /* pop si */
    II(0x001350ac, 0x1)   popw(di);                             /* pop di */
    II(0x001350ad, 0x1)   leavew();                             /* leave  */
    II(0x001350ae, 0x1)   retfw();                              /* retf  */
FUNC_END

