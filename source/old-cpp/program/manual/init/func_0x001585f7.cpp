FUNC_BEGIN(0x001585f7, 0x5a897c94e84c116e, 0x10, ({0xc8, 0xa, 0, 0, 0x57, 0x56, 0xff, 0x76, 0x8, 0xff, 0x76, 0x6, 0x90, 0xe, 0xe8, 0xe4, 0x72, 0x83, 0xc4, 0x4, 0xff, 0x76, 0x8, 0xff, 0x76, 0x6, 0x90, 0xe, 0xe8, 0xf3, 0xfc, 0x83, 0xc4, 0x4, 0x90, 0xe, 0xe8, 0x7b, 0xfd, 0xa1, 0xbc, 0x17, 0xb, 0x6, 0xba, 0x17, 0x75, 0x3, 0xe9, 0x5e, 0, 0xc4, 0x1e, 0xba, 0x17, 0x26, 0x8b, 0x47, 0x12, 0x26, 0xb, 0x47, 0x10, 0x75, 0x3, 0xe9, 0x4d, 0, 0xc4, 0x5e, 0x6, 0x26, 0x8b, 0x47, 0x36, 0x89, 0x46, 0xfa, 0xc4, 0x5e, 0x6, 0x26, 0x8b, 0x47, 0x32, 0x26, 0x8b, 0x57, 0x34, 0x89, 0x46, 0xf6, 0x89, 0x56, 0xf8, 0xff, 0x36, 0xc0, 0x17, 0xff, 0x36, 0xbe, 0x17, 0x8d, 0x46, 0xf6, 0x16, 0x50, 0xc4, 0x1e, 0xba, 0x17, 0x26, 0xff, 0x5f, 0x10, 0x83, 0xc4, 0x8, 0xb, 0xd0, 0x74, 0x3, 0xe9, 0x13, 0, 0xff, 0x76, 0xf8, 0xff, 0x76, 0xf6, 0xff, 0x76, 0xfa, 0x1e, 0x68, 0x84, 0x17, 0xe8, 0xd9, 0x89, 0x83, 0xc4, 0xa, 0x8e, 0x6, 0xb0, 0x3f, 0x26, 0x80, 0x3e, 0x84, 0xd, 0, 0x75, 0x3, 0xe9, 0xa3, 0, 0x8b, 0x46, 0x6, 0x8b, 0x56, 0x8, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0xc4, 0x5e, 0xfc, 0x26, 0x83, 0x3f, 0, 0x75, 0x3, 0xe9, 0x5b, 0, 0xc4, 0x5e, 0xfc, 0x26, 0x8b, 0x7, 0x89, 0x46, 0xfc, 0xc4, 0x5e, 0xfc, 0x26, 0x83, 0x7f, 0x36, 0, 0x74, 0x3, 0xe9, 0x13, 0, 0xc4, 0x5e, 0xfc, 0x26, 0x8b, 0x47, 0x34, 0x26, 0xb, 0x47, 0x32, 0x74, 0x3, 0xe9, 0x3, 0, 0xe9, 0xcb, 0xff, 0x1e, 0x68, 0xac, 0x17, 0xe8, 0x7f, 0x89, 0x83, 0xc4, 0x4, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0x90, 0xe, 0xe8, 0xff, 0x71, 0x83, 0xc4, 0x4, 0x83, 0x7e, 0xa, 0, 0x75, 0x3, 0xe9, 0xe, 0, 0xff, 0x76, 0xfe, 0xff, 0x76, 0xfc, 0x90, 0xe, 0xe8, 0x5, 0xfc, 0x83, 0xc4, 0x4, 0xe9, 0x99, 0xff, 0xff, 0x76, 0x8, 0xff, 0x76, 0x6, 0x90, 0xe, 0xe8, 0x47, 0xfd, 0x83, 0xc4, 0x4, 0xff, 0x76, 0xa, 0xc4, 0x5e, 0x6, 0x26, 0xff, 0x77, 0x1a, 0x26, 0xff, 0x77, 0x18, 0xc4, 0x5e, 0x6, 0x26, 0xff, 0x77, 0x2, 0x90, 0xe, 0xe8, 0x93, 0xfd, 0x83, 0xc4, 0x8, 0x90, 0xe, 0xe8, 0x26, 0xfe, 0x80, 0x3e, 0x7f, 0xd, 0, 0x75, 0x3, 0xe9, 0x5, 0, 0xcc, 0xe6, 0x99, 0xfa}))
    II(0x001585f7, 0x4)   enterw(0xa, 0);                       /* enter 0xa, 0x0 */
    II(0x001585fb, 0x1)   pushw(di);                            /* push di */
    II(0x001585fc, 0x1)   pushw(si);                            /* push si */
    II(0x001585fd, 0x3)   pushw(memw_a16(ss, bp + 0x8));        /* push word [bp+0x8] */
    II(0x00158600, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
//    II(0x00158603, 0x1)   nop();                                /* nop  */
    II(0x00158604, 0x1)   pushw(cs);                            /* push cs */
    II(0x00158605, 0x3)   callw(0x0015f8ec, 0x72e4);            /* call 0x15f8ec */
    II(0x00158608, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x0015860b, 0x3)   pushw(memw_a16(ss, bp + 0x8));        /* push word [bp+0x8] */
    II(0x0015860e, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
//    II(0x00158611, 0x1)   nop();                                /* nop  */
    II(0x00158612, 0x1)   pushw(cs);                            /* push cs */
    II(0x00158613, 0x3)   callw(0x00158309, -0x30d);            /* call 0x158309 */
    II(0x00158616, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
//    II(0x00158619, 0x1)   nop();                                /* nop  */
    II(0x0015861a, 0x1)   pushw(cs);                            /* push cs */
    II(0x0015861b, 0x3)   callw(0x00158399, -0x285);            /* call 0x158399 */
    II(0x0015861e, 0x3)   mov(ax, memw_a16(ds, 0x17bc));        /* mov ax, [0x17bc] */
    II(0x00158621, 0x4)   or_(ax, memw_a16(ds, 0x17ba));        /* or ax, [0x17ba] */
    II(0x00158625, 0x2)   jnzw(0x0015862a, 0x3);                /* jnz 0x15862a */
    II(0x00158627, 0x3)   jmpw(0x00158688, 0x5e);               /* jmp 0x158688 */
l_0x0015862a:
    II(0x0015862a, 0x4)   les(bx, ds, 0x17ba);                  /* les bx, [0x17ba] */
    II(0x0015862e, 0x4)   mov(ax, memw_a16(es, bx + 0x12));     /* mov ax, [es:bx+0x12] */
    II(0x00158632, 0x4)   or_(ax, memw_a16(es, bx + 0x10));     /* or ax, [es:bx+0x10] */
    II(0x00158636, 0x2)   jnzw(0x0015863b, 0x3);                /* jnz 0x15863b */
    II(0x00158638, 0x3)   jmpw(0x00158688, 0x4d);               /* jmp 0x158688 */
l_0x0015863b:
    II(0x0015863b, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x0015863e, 0x4)   mov(ax, memw_a16(es, bx + 0x36));     /* mov ax, [es:bx+0x36] */
    II(0x00158642, 0x3)   mov(memw_a16(ss, bp - 0x6), ax);      /* mov [bp-0x6], ax */
    II(0x00158645, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00158648, 0x4)   mov(ax, memw_a16(es, bx + 0x32));     /* mov ax, [es:bx+0x32] */
    II(0x0015864c, 0x4)   mov(dx, memw_a16(es, bx + 0x34));     /* mov dx, [es:bx+0x34] */
    II(0x00158650, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x00158653, 0x3)   mov(memw_a16(ss, bp - 0x8), dx);      /* mov [bp-0x8], dx */
    II(0x00158656, 0x4)   pushw(memw_a16(ds, 0x17c0));          /* push word [0x17c0] */
    II(0x0015865a, 0x4)   pushw(memw_a16(ds, 0x17be));          /* push word [0x17be] */
    II(0x0015865e, 0x3)   lea(ax, bp - 0xa);                    /* lea ax, [bp-0xa] */
    II(0x00158661, 0x1)   pushw(ss);                            /* push ss */
    II(0x00158662, 0x1)   pushw(ax);                            /* push ax */
    II(0x00158663, 0x4)   les(bx, ds, 0x17ba);                  /* les bx, [0x17ba] */
    II(0x00158667, 0x4)   callw_a16_far_ind(es, bx + 0x10);     /* call word far [es:bx+0x10] */
    II(0x0015866b, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0015866e, 0x2)   or_(dx, ax);                          /* or dx, ax */
    II(0x00158670, 0x2)   jzw(0x00158675, 0x3);                 /* jz 0x158675 */
    II(0x00158672, 0x3)   jmpw(0x00158688, 0x13);               /* jmp 0x158688 */
l_0x00158675:
    II(0x00158675, 0x3)   pushw(memw_a16(ss, bp - 0x8));        /* push word [bp-0x8] */
    II(0x00158678, 0x3)   pushw(memw_a16(ss, bp - 0xa));        /* push word [bp-0xa] */
    II(0x0015867b, 0x3)   pushw(memw_a16(ss, bp - 0x6));        /* push word [bp-0x6] */
    II(0x0015867e, 0x1)   pushw(ds);                            /* push ds */
    II(0x0015867f, 0x3)   pushw(0x1784);                        /* push word 0x1784 */
    II(0x00158682, 0x3)   callw(0x0015105e, -0x7627);           /* call 0x15105e */
    II(0x00158685, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
l_0x00158688:
    II(0x00158688, 0x4)   mov(es, memw_a16(ds, 0x3fb0));        /* mov es, [0x3fb0] */
    II(0x0015868c, 0x6)   cmp(memb_a16(es, 0xd84), 0);          /* cmp byte [es:0xd84], 0x0 */
    II(0x00158692, 0x2)   jnzw(0x00158697, 0x3);                /* jnz 0x158697 */
    II(0x00158694, 0x3)   jmpw(0x0015873a, 0xa3);               /* jmp 0x15873a */
l_0x00158697:
    II(0x00158697, 0x3)   mov(ax, memw_a16(ss, bp + 0x6));      /* mov ax, [bp+0x6] */
    II(0x0015869a, 0x3)   mov(dx, memw_a16(ss, bp + 0x8));      /* mov dx, [bp+0x8] */
    II(0x0015869d, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x001586a0, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
l_0x001586a3:
    II(0x001586a3, 0x3)   les(bx, ss, bp - 0x4);                /* les bx, [bp-0x4] */
    II(0x001586a6, 0x4)   cmp(memw_a16(es, bx), 0);             /* cmp word [es:bx], 0x0 */
    II(0x001586aa, 0x2)   jnzw(0x001586af, 0x3);                /* jnz 0x1586af */
    II(0x001586ac, 0x3)   jmpw(0x0015870a, 0x5b);               /* jmp 0x15870a */
l_0x001586af:
    II(0x001586af, 0x3)   les(bx, ss, bp - 0x4);                /* les bx, [bp-0x4] */
    II(0x001586b2, 0x3)   mov(ax, memw_a16(es, bx));            /* mov ax, [es:bx] */
    II(0x001586b5, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x001586b8, 0x3)   les(bx, ss, bp - 0x4);                /* les bx, [bp-0x4] */
    II(0x001586bb, 0x5)   cmp(memw_a16(es, bx + 0x36), 0);      /* cmp word [es:bx+0x36], 0x0 */
    II(0x001586c0, 0x2)   jzw(0x001586c5, 0x3);                 /* jz 0x1586c5 */
    II(0x001586c2, 0x3)   jmpw(0x001586d8, 0x13);               /* jmp 0x1586d8 */
l_0x001586c5:
    II(0x001586c5, 0x3)   les(bx, ss, bp - 0x4);                /* les bx, [bp-0x4] */
    II(0x001586c8, 0x4)   mov(ax, memw_a16(es, bx + 0x34));     /* mov ax, [es:bx+0x34] */
    II(0x001586cc, 0x4)   or_(ax, memw_a16(es, bx + 0x32));     /* or ax, [es:bx+0x32] */
    II(0x001586d0, 0x2)   jzw(0x001586d5, 0x3);                 /* jz 0x1586d5 */
    II(0x001586d2, 0x3)   jmpw(0x001586d8, 0x3);                /* jmp 0x1586d8 */
l_0x001586d5:
    II(0x001586d5, 0x3)   jmpw(0x001586a3, -0x35);              /* jmp 0x1586a3 */
l_0x001586d8:
    II(0x001586d8, 0x1)   pushw(ds);                            /* push ds */
    II(0x001586d9, 0x3)   pushw(0x17ac);                        /* push word 0x17ac */
    II(0x001586dc, 0x3)   callw(0x0015105e, -0x7681);           /* call 0x15105e */
    II(0x001586df, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x001586e2, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x001586e5, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
//    II(0x001586e8, 0x1)   nop();                                /* nop  */
    II(0x001586e9, 0x1)   pushw(cs);                            /* push cs */
    II(0x001586ea, 0x3)   callw(0x0015f8ec, 0x71ff);            /* call 0x15f8ec */
    II(0x001586ed, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x001586f0, 0x4)   cmp(memw_a16(ss, bp + 0xa), 0);       /* cmp word [bp+0xa], 0x0 */
    II(0x001586f4, 0x2)   jnzw(0x001586f9, 0x3);                /* jnz 0x1586f9 */
    II(0x001586f6, 0x3)   jmpw(0x00158707, 0xe);                /* jmp 0x158707 */
l_0x001586f9:
    II(0x001586f9, 0x3)   pushw(memw_a16(ss, bp - 0x2));        /* push word [bp-0x2] */
    II(0x001586fc, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
//    II(0x001586ff, 0x1)   nop();                                /* nop  */
    II(0x00158700, 0x1)   pushw(cs);                            /* push cs */
    II(0x00158701, 0x3)   callw(0x00158309, -0x3fb);            /* call 0x158309 */
    II(0x00158704, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
l_0x00158707:
    II(0x00158707, 0x3)   jmpw(0x001586a3, -0x67);              /* jmp 0x1586a3 */
l_0x0015870a:
    II(0x0015870a, 0x3)   pushw(memw_a16(ss, bp + 0x8));        /* push word [bp+0x8] */
    II(0x0015870d, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
//    II(0x00158710, 0x1)   nop();                                /* nop  */
    II(0x00158711, 0x1)   pushw(cs);                            /* push cs */
    II(0x00158712, 0x3)   callw(0x0015845c, -0x2b9);            /* call 0x15845c */
    II(0x00158715, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x00158718, 0x3)   pushw(memw_a16(ss, bp + 0xa));        /* push word [bp+0xa] */
    II(0x0015871b, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x0015871e, 0x4)   pushw(memw_a16(es, bx + 0x1a));       /* push word [es:bx+0x1a] */
    II(0x00158722, 0x4)   pushw(memw_a16(es, bx + 0x18));       /* push word [es:bx+0x18] */
    II(0x00158726, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00158729, 0x4)   pushw(memw_a16(es, bx + 0x2));        /* push word [es:bx+0x2] */
//    II(0x0015872d, 0x1)   nop();                                /* nop  */
    II(0x0015872e, 0x1)   pushw(cs);                            /* push cs */
    II(0x0015872f, 0x3)   callw(0x001584c5, -0x26d);            /* call 0x1584c5 */
    II(0x00158732, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
//    II(0x00158735, 0x1)   nop();                                /* nop  */
    II(0x00158736, 0x1)   pushw(cs);                            /* push cs */
    II(0x00158737, 0x3)   callw(0x00158560, -0x1da);            /* call 0x158560 */
l_0x0015873a:
    II(0x0015873a, 0x5)   cmp(memb_a16(ds, 0xd7f), 0);          /* cmp byte [0xd7f], 0x0 */
    II(0x0015873f, 0x2)   jnzw(0x00158744, 0x3);                /* jnz 0x158744 */
    II(0x00158741, 0x3)   jmpw_func(0x00158749, 0x5);           /* jmp 0x158749 */
l_0x00158744:
    II(0x00158744, 0x1)   int3();                               /* int3  */
    II(0x00158745, 0x2)   outb(0x99, al);                       /* out 0x99, al */
    II(0x00158747, 0x1)   cli();                                /* cli  */
    II(0x00158748, 0)     jmpd_func(0x00158748, 0);             /* Принудительное завершение функции. */
FUNC_END

