FUNC_BEGIN(0x00004218, 0xb324e049fbb6f5cc, 0x10, ({0x51, 0x33, 0xc9, 0xe4, 0x64, 0xa8, 0x2, 0x75, 0x2, 0x59, 0xc3, 0xe0, 0xf6, 0x74, 0xfa, 0x6a, 0x1a, 0xe8, 0x71, 0x16, 0xe8, 0x5c, 0, 0, 0xe8, 0x58, 0, 0x1, 0xe8, 0x54, 0, 0x2, 0xe8, 0x50, 0, 0x3, 0xe8, 0x4c, 0, 0x4, 0xe8, 0x48, 0, 0x5, 0xe8, 0x44, 0, 0x6, 0xe8, 0x40, 0, 0x7, 0xe8, 0x40, 0, 0x8, 0xe8, 0x38, 0, 0x9, 0xe8, 0x38, 0, 0xa, 0xe8, 0x34, 0, 0xb, 0xe8, 0x30, 0, 0xc, 0xe8, 0x2c, 0, 0xd, 0xe8, 0x28, 0, 0xe, 0xe8, 0x20, 0, 0xf, 0xe8, 0x1c, 0, 0x1e, 0xe8, 0x18, 0, 0x20, 0x1f, 0x58, 0x60, 0x6, 0x1e, 0x16, 0xb8, 0x20, 0, 0x8e, 0xd8, 0xff, 0x36, 0x96, 0x9, 0x8b, 0xec, 0x83, 0x46, 0xe, 0x6, 0xeb, 0x51}))
    II(0x00004218, 0x1)   pushw(cx);                            /* push cx */
    II(0x00004219, 0x2)   xor_(cx, cx);                         /* xor cx, cx */
l_0x0000421b:
    II(0x0000421b, 0x2)   inb(al, 0x64);                        /* in al, 0x64 */
    II(0x0000421d, 0x2)   test(al, 0x2);                        /* test al, 0x2 */
    II(0x0000421f, 0x2)   jnzw(0x00004223, 0x2);                /* jnz 0x4223 */
l_0x00004221:
    II(0x00004221, 0x1)   popw(cx);                             /* pop cx */
    II(0x00004222, 0x1)   retw();                               /* ret  */
l_0x00004223:
    II(0x00004223, 0x2)   loopnzw_a16(0x0000421b, -0xa);        /* loopnz 0x421b */
    II(0x00004225, 0x2)   jzw(0x00004221, -0x6);                /* jz 0x4221 */
    II(0x00004227, 0x2)   pushw(0x1a);                          /* push 0x1a */
    II(0x00004229, 0x3)   callw(0x0000589d, 0x1671);            /* call 0x589d */
    II(0x0000422c, 0x3)   callw(0x0000428b, 0x5c);              /* call 0x428b */
    II(0x0000422f, 0x2)   add(al, ch);                          /* add al, ch */
    II(0x00004231, 0x1)   popw(ax);                             /* pop ax */
    II(0x00004232, 0x2)   add(memb_a16(ds, bx + di), al);       /* add [bx+di], al */
    II(0x00004234, 0x3)   callw(0x0000428b, 0x54);              /* call 0x428b */
    II(0x00004237, 0x2)   add(ch, al);                          /* add ch, al */
    II(0x00004239, 0x1)   pushw(ax);                            /* push ax */
    II(0x0000423a, 0x2)   add(memb_a16(ss, bp + di), al);       /* add [bp+di], al */
    II(0x0000423c, 0x3)   callw(0x0000428b, 0x4c);              /* call 0x428b */
    II(0x0000423f, 0x2)   add(al, -0x18 /* 0xe8 */);            /* add al, 0xe8 */
    II(0x00004241, 0x1)   dec(ax);                              /* dec ax */
    II(0x00004242, 0x2)   add(memb_a16(ds, di), al);            /* add [di], al */
    II(0x00004244, 0x3)   callw(0x0000428b, 0x44);              /* call 0x428b */
    II(0x00004247, 0x1)   pushw(es);                            /* push es */
    II(0x00004248, 0x3)   callw(0x0000428b, 0x40);              /* call 0x428b */
    II(0x0000424b, 0x1)   popw(es);                             /* pop es */
    II(0x0000424c, 0x3)   callw(0x0000428f, 0x40);              /* call 0x428f */
    II(0x0000424f, 0x2)   or_(al, ch);                          /* or al, ch */
    II(0x00004251, 0x2)   cmp(memb_a16(ds, bx + si), al);       /* cmp [bx+si], al */
    II(0x00004253, 0x2)   or_(ax, bp);                          /* or ax, bp */
    II(0x00004255, 0x2)   cmp(memb_a16(ds, bx + si), al);       /* cmp [bx+si], al */
    II(0x00004257, 0x2)   or_(ch, al);                          /* or ch, al */
    II(0x00004259, 0x2)   xor_(al, 0);                          /* xor al, 0x0 */
    II(0x0000425b, 0x2)   or_(bp, ax);                          /* or bp, ax */
    II(0x0000425d, 0x2)   xor_(memb_a16(ds, bx + si), al);      /* xor [bx+si], al */
    II(0x0000425f, 0x2)   or_(al, 0xe8);                        /* or al, 0xe8 */
    II(0x00004261, 0x2)   sub(al, 0);                           /* sub al, 0x0 */
    II(0x00004263, 0x3)   or_(ax, 0x28e8);                      /* or ax, 0x28e8 */
    II(0x00004266, 0x4)   add(memb_a16(ds, 0x20e8), cl);        /* add [0x20e8], cl */
    II(0x0000426a, 0x2)   add(memb_a16(ds, bx), cl);            /* add [bx], cl */
    II(0x0000426c, 0x3)   callw(0x0000428b, 0x1c);              /* call 0x428b */
    II(0x0000426f, 0x1)   pushw(ds);                            /* push ds */
    II(0x00004270, 0x3)   callw(0x0000428b, 0x18);              /* call 0x428b */
    II(0x00004273, 0x2)   and_(memb_a16(ds, bx), bl);           /* and [bx], bl */
    II(0x00004275, 0x1)   popw(ax);                             /* pop ax */
    II(0x00004276, 0x1)   pusha();                              /* pusha  */
    II(0x00004277, 0x1)   pushw(es);                            /* push es */
    II(0x00004278, 0x1)   pushw(ds);                            /* push ds */
    II(0x00004279, 0x1)   pushw(ss);                            /* push ss */
    II(0x0000427a, 0x3)   mov(ax, 0x20);                        /* mov ax, 0x20 */
    II(0x0000427d, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x0000427f, 0x4)   pushw(memw_a16(ds, 0x996));           /* push word [0x996] */
    II(0x00004283, 0x2)   mov(bp, sp);                          /* mov bp, sp */
    II(0x00004285, 0x4)   add(memw_a16(ss, bp + 0xe), 0x6);     /* add word [bp+0xe], 0x6 */
    II(0x00004289, 0x2)   jmpw_func(0x000042dc, 0x51);          /* jmp 0x42dc */
FUNC_END

