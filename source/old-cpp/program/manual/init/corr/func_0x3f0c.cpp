FUNC_INFO_V4(0x00003f0c, func_0x00003f0c, 0x10, {0x33, 0xdb, 0xba, 0, 0, 0xb9, 0, 0x1, 0x33, 0xc0, 0x89, 0x87, 0xc6, 0, 0xc7, 0x87, 0xc4, 0, 0, 0x8e, 0xc7, 0x87, 0xc2, 0, 0x70, 0, 0x89, 0x97, 0xc0, 0, 0x83, 0xc2, 0x4, 0x83, 0xc3, 0x8, 0xe2, 0xe4, 0xb9, 0x11, 0, 0xba, 0x35, 0x42, 0x33, 0xdb, 0x89, 0x97, 0xc0, 0, 0x81, 0xc2, 0x1c, 0, 0x83, 0xc3, 0x8, 0xe2, 0xf3, 0xc7, 0x6, 0x28, 0x1, 0xb8, 0x1f, 0xc7, 0x6, 0xb8, 0x1, 0x84, 0, 0xc7, 0x6, 0xc0, 0x1, 0x80, 0xc, 0xc7, 0x6, 0xc2, 0x1, 0x18, 0, 0xc7, 0x6, 0xc8, 0x1, 0x9e, 0xc, 0xc7, 0x6, 0xd8, 0x1, 0xeb, 0x5, 0xc7, 0x6, 0x48, 0x2, 0xd6, 0x44, 0x80, 0x3e, 0x2e, 0, 0xb, 0x75, 0xc, 0xc7, 0x6, 0xf8, 0x3, 0x83, 0x2c, 0xc7, 0x6, 0xfa, 0x3, 0x18, 0, 0xe8, 0x9a, 0x1e, 0xf6, 0x6, 0x47, 0, 0x1, 0x74, 0x28, 0xc7, 0x6, 0x70, 0x1, 0xfa, 0x4, 0xc7, 0x6, 0xb0, 0x1, 0x7c, 0xc, 0xc7, 0x6, 0xb2, 0x1, 0x18, 0, 0x8a, 0x1e, 0x51, 0, 0xa, 0xdb, 0x74, 0xe, 0x80, 0xc3, 0x5, 0x32, 0xff, 0xc1, 0xe3, 0x3, 0xc7, 0x87, 0xc0, 0, 0x56, 0x5, 0x80, 0x3e, 0x3e, 0, 0, 0x74, 0x28, 0xdb, 0xe3, 0x8b, 0x1e, 0x82, 0xf, 0xb, 0xdb, 0x74, 0x2, 0xdd, 0x37, 0x2e, 0xc6, 0x6, 0x2c, 0x9, 0x9b, 0x2e, 0xc6, 0x6, 0x31, 0x9, 0x9b, 0xa0, 0x2e, 0, 0xa, 0xc0, 0x74, 0x6, 0x3c, 0xb, 0x74, 0x2, 0xf, 0x6, 0x9b, 0xdb, 0xe4, 0xc3})
{
    FUNC_START_V2(0x3f0c, 0x10);
    II(0x3f0c, 0x2)    xor_(bx, bx);                         /* xor bx, bx */
    II(0x3f0e, 0x3)    mov(dx, 0);                           /* mov dx, 0x0 */
    II(0x3f11, 0x3)    mov(cx, 0x100);                       /* mov cx, 0x100 */
    II(0x3f14, 0x2)    xor_(ax, ax);                         /* xor ax, ax */
l_0x3f16:
    II(0x3f16, 0x4)    mov(memw_a16(ds, bx + 0xc6), ax);     /* mov [bx+0xc6], ax */
    II(0x3f1a, 0x6)    mov(memw_a16(ds, bx + 0xc4), 0x8e00); /* mov word [bx+0xc4], 0x8e00 */
    II(0x3f20, 0x6)    mov(memw_a16(ds, bx + 0xc2), 0x70);   /* mov word [bx+0xc2], 0x70 */
    II(0x3f26, 0x4)    mov(memw_a16(ds, bx + 0xc0), dx);     /* mov [bx+0xc0], dx */
    II(0x3f2a, 0x3)    add(dx, 0x4);                         /* add dx, 0x4 */
    II(0x3f2d, 0x3)    add(bx, 0x8);                         /* add bx, 0x8 */
    II(0x3f30, 0x2)    loopw_a16(0x3f16, -0x1c);             /* loop 0x3f16 */
    II(0x3f32, 0x3)    mov(cx, 0x11);                        /* mov cx, 0x11 */
    II(0x3f35, 0x3)    mov(dx, 0x4235);                      /* mov dx, 0x4235 */
    II(0x3f38, 0x2)    xor_(bx, bx);                         /* xor bx, bx */
l_0x3f3a:
    II(0x3f3a, 0x4)    mov(memw_a16(ds, bx + 0xc0), dx);     /* mov [bx+0xc0], dx */
    II(0x3f3e, 0x4)    add(dx, 0x1c);                        /* add dx, 0x1c */
    II(0x3f42, 0x3)    add(bx, 0x8);                         /* add bx, 0x8 */
    II(0x3f45, 0x2)    loopw_a16(0x3f3a, -0xd);              /* loop 0x3f3a */
    II(0x3f47, 0x6)    mov(memw_a16(ds, 0x128), 0x1fb8);     /* mov word [0x128], 0x1fb8 */
    II(0x3f4d, 0x6)    mov(memw_a16(ds, 0x1b8), 0x84);       /* mov word [0x1b8], 0x84 */
    II(0x3f53, 0x6)    mov(memw_a16(ds, 0x1c0), 0xc80);      /* mov word [0x1c0], 0xc80 */
    II(0x3f59, 0x6)    mov(memw_a16(ds, 0x1c2), 0x18);       /* mov word [0x1c2], 0x18 */
    II(0x3f5f, 0x6)    mov(memw_a16(ds, 0x1c8), 0xc9e);      /* mov word [0x1c8], 0xc9e */
    II(0x3f65, 0x6)    mov(memw_a16(ds, 0x1d8), 0x5eb);      /* mov word [0x1d8], 0x5eb */
    II(0x3f6b, 0x6)    mov(memw_a16(ds, 0x248), 0x44d6);     /* mov word [0x248], 0x44d6 */
    II(0x3f71, 0x5)    cmp(memb_a16(ds, 0x2e), 0xb);         /* cmp byte [0x2e], 0xb */
    II(0x3f76, 0x2)    jnzw(0x3f84, 0xc);                    /* jnz 0x3f84 */
    II(0x3f78, 0x6)    mov(memw_a16(ds, 0x3f8), 0x2c83);     /* mov word [0x3f8], 0x2c83 */
    II(0x3f7e, 0x6)    mov(memw_a16(ds, 0x3fa), 0x18);       /* mov word [0x3fa], 0x18 */
l_0x3f84:
    II(0x3f84, 0x3)    callw(0x5e21, 0x1e9a);                /* call 0x5e21 */
    II(0x3f87, 0x5)    test(memb_a16(ds, 0x47), 0x1);        /* test byte [0x47], 0x1 */
    II(0x3f8c, 0x2)    jzw(0x3fb6, 0x28);                    /* jz 0x3fb6 */
    II(0x3f8e, 0x6)    mov(memw_a16(ds, 0x170), 0x4fa);      /* mov word [0x170], 0x4fa */
    II(0x3f94, 0x6)    mov(memw_a16(ds, 0x1b0), 0xc7c);      /* mov word [0x1b0], 0xc7c */
    II(0x3f9a, 0x6)    mov(memw_a16(ds, 0x1b2), 0x18);       /* mov word [0x1b2], 0x18 */
    II(0x3fa0, 0x4)    mov(bl, memb_a16(ds, 0x51));          /* mov bl, [0x51] */
    II(0x3fa4, 0x2)    or_(bl, bl);                          /* or bl, bl */
    II(0x3fa6, 0x2)    jzw(0x3fb6, 0xe);                     /* jz 0x3fb6 */
    II(0x3fa8, 0x3)    add(bl, 0x5);                         /* add bl, 0x5 */
    II(0x3fab, 0x2)    xor_(bh, bh);                         /* xor bh, bh */
    II(0x3fad, 0x3)    shl(bx, 0x3);                         /* shl bx, 0x3 */
    II(0x3fb0, 0x6)    mov(memw_a16(ds, bx + 0xc0), 0x556);  /* mov word [bx+0xc0], 0x556 */
l_0x3fb6:
    II(0x3fb6, 0x5)    cmp(memb_a16(ds, 0x3e), 0);           /* cmp byte [0x3e], 0x0 */
    II(0x3fbb, 0x2)    jzw(0x3fe5, 0x28);                    /* jz 0x3fe5 */
    II(0x3fbd, 0x2)    fninit();                             /* fninit  */
    II(0x3fbf, 0x4)    mov(bx, memw_a16(ds, 0xf82));         /* mov bx, [0xf82] */
    II(0x3fc3, 0x2)    or_(bx, bx);                          /* or bx, bx */
    II(0x3fc5, 0x2)    jzw(0x3fc9, 0x2);                     /* jz 0x3fc9 */
    II(0x3fc7, 0x2)    fnsavew_a16(ds, bx);                  /* fnsave [bx] */
l_0x3fc9:
    II(0x3fc9, 0x6)    mov(memb_a16(cs, 0x92c), 0x9b);       /* mov byte [cs:0x92c], 0x9b */
    II(0x3fcf, 0x6)    mov(memb_a16(cs, 0x931), 0x9b);       /* mov byte [cs:0x931], 0x9b */
    II(0x3fd5, 0x3)    mov(al, memb_a16(ds, 0x2e));          /* mov al, [0x2e] */
    II(0x3fd8, 0x2)    or_(al, al);                          /* or al, al */
    II(0x3fda, 0x2)    jzw(0x3fe2, 0x6);                     /* jz 0x3fe2 */
    II(0x3fdc, 0x2)    cmp(al, 0xb);                         /* cmp al, 0xb */
    II(0x3fde, 0x2)    jzw(0x3fe2, 0x2);                     /* jz 0x3fe2 */
    II(0x3fe0, 0x2)    clts();                               /* clts  */
l_0x3fe2:
    II(0x3fe2, 0x1)    wait();                               /* wait  */
    II(0x3fe3, 0x2)    // invalid();                            /* invalid  */
l_0x3fe5:
    II(0x3fe5, 0x1)    retw();                               /* ret  */
}

