FUNC_INFO_V4(0x0015bbb4, func_0x0015bbb4, 0x10, {0xc8, 0x36, 0, 0, 0x56, 0x8b, 0x46, 0x12, 0x89, 0x46, 0xf2, 0x8b, 0x46, 0xe, 0xb, 0x46, 0xc, 0x75, 0x3, 0xe9, 0x23, 0x6, 0xc7, 0x46, 0xd8, 0, 0, 0x2b, 0xc0, 0x89, 0x46, 0xdc, 0x89, 0x46, 0xda, 0x8b, 0x46, 0x10, 0x89, 0x46, 0xf0, 0xc4, 0x5e, 0xf0, 0x26, 0x8a, 0x7, 0x8b, 0xc8, 0x25, 0xf, 0, 0x89, 0x46, 0xfc, 0x8b, 0xd1, 0x80, 0xe1, 0x20, 0x80, 0xf9, 0x1, 0x1b, 0xc9, 0x41, 0x89, 0x4e, 0xce, 0x89, 0x4e, 0xf8, 0x26, 0x8a, 0x4f, 0x1, 0x8b, 0xd9, 0x83, 0xe1, 0x4, 0x89, 0x4e, 0xd4, 0xc7, 0x46, 0xd6, 0, 0, 0x80, 0xe2, 0x10, 0x88, 0x56, 0xfe, 0x89, 0x5e, 0xca, 0x3d, 0x2, 0, 0x75, 0x4, 0xb0, 0x1, 0xeb, 0x2, 0x2a, 0xc0, 0x88, 0x46, 0xfa, 0x8a, 0x46, 0xca, 0x2a, 0xe4, 0x89, 0x46, 0xcc, 0x2b, 0xc9, 0x89, 0x4e, 0xe4, 0x89, 0x4e, 0xe2, 0x25, 0x3, 0, 0x74, 0x36, 0x2d, 0x1, 0, 0x72, 0xe, 0x2d, 0x1, 0, 0x77, 0x3, 0xe9, 0xa7, 0x1, 0x48, 0x75, 0x3, 0xe9, 0x30, 0x4, 0x1e, 0x68, 0x3e, 0x21, 0x68, 0xe8, 0xc, 0xe8, 0, 0x54, 0x83, 0xc4, 0x6, 0xc7, 0x46, 0xd8, 0, 0, 0x2b, 0xc0, 0x89, 0x46, 0xdc, 0x89, 0x46, 0xda, 0x89, 0x46, 0xf6, 0x89, 0x46, 0xf4, 0xe9, 0x70, 0x1, 0xf6, 0x46, 0xcc, 0x40, 0x75, 0x3, 0xe9, 0xae, 0, 0x39, 0x4e, 0xce, 0x74, 0x56, 0x8b, 0x5e, 0xf0, 0x26, 0x8b, 0x47, 0x3, 0x89, 0x46, 0xea, 0x26, 0x8a, 0x47, 0x2, 0x2a, 0xe4, 0x48, 0x89, 0x46, 0xce, 0x80, 0x7e, 0xfa, 0, 0x74, 0x14, 0x2b, 0xc0, 0x89, 0x46, 0xe8, 0x89, 0x46, 0xe6, 0x8d, 0x47, 0x5, 0x89, 0x46, 0xf4, 0x8c, 0x46, 0xf6, 0xe9, 0x19, 0x1, 0xf6, 0x46, 0xcc, 0x10, 0x74, 0x13, 0x26, 0x8b, 0x47, 0x5, 0x26, 0x8b, 0x57, 0x7, 0x89, 0x46, 0xe6, 0x89, 0x56, 0xe8, 0x8d, 0x47, 0x9, 0xeb, 0xde, 0x26, 0x8b, 0x47, 0x5, 0x89, 0x46, 0xe6, 0x89, 0x4e, 0xe8, 0x8d, 0x47, 0x7, 0xeb, 0xcf, 0x8b, 0x5e, 0xf0, 0x26, 0x8b, 0x47, 0x4, 0x89, 0x46, 0xea, 0x8d, 0x47, 0x2, 0x89, 0x46, 0xf4, 0x8c, 0x46, 0xf6, 0x80, 0x7e, 0xfa, 0, 0x74, 0xb, 0x2b, 0xc0, 0x89, 0x46, 0xe8, 0x89, 0x46, 0xe6, 0xe9, 0xcd, 0, 0x8b, 0x46, 0xf0, 0x8c, 0xc2, 0x5, 0x6, 0, 0x89, 0x46, 0xe2, 0x89, 0x56, 0xe4, 0xf6, 0x46, 0xcc, 0x10, 0x75, 0x3, 0xe9, 0xa4, 0, 0x8b, 0xd8, 0x26, 0x8b, 0xf, 0x26, 0x8b, 0x77, 0x2, 0x89, 0x4e, 0xe6, 0x89, 0x76, 0xe8, 0x5, 0x4, 0, 0x89, 0x46, 0xe2, 0xe9, 0x9e, 0, 0x39, 0x4e, 0xce, 0x74, 0x52, 0x8b, 0x5e, 0xf0, 0x26, 0x8a, 0x47, 0x3, 0x2a, 0xe4, 0x89, 0x46, 0xea, 0x26, 0x8a, 0x47, 0x2, 0x48, 0x89, 0x46, 0xce, 0x80, 0x7e, 0xfa, 0, 0x74, 0xe, 0x2b, 0xc0, 0x89, 0x46, 0xe8, 0x89, 0x46, 0xe6, 0x8d, 0x47, 0x4, 0xe9, 0x4f, 0xff, 0xf6, 0x46, 0xcc, 0x10, 0x74, 0x14, 0x26, 0x8b, 0x47, 0x4, 0x26, 0x8b, 0x57, 0x6, 0x89, 0x46, 0xe6, 0x89, 0x56, 0xe8, 0x8d, 0x47, 0x8, 0xe9, 0x35, 0xff, 0x26, 0x8b, 0x47, 0x4, 0x89, 0x46, 0xe6, 0x89, 0x4e, 0xe8, 0x8d, 0x47, 0x6, 0xe9, 0x25, 0xff, 0x8b, 0x5e, 0xf0, 0x26, 0x8a, 0x47, 0x4, 0x2a, 0xe4, 0x89, 0x46, 0xea, 0x8d, 0x47, 0x2, 0x89, 0x46, 0xf4, 0x8c, 0x46, 0xf6, 0x80, 0x7e, 0xfa, 0, 0x74, 0x3, 0xe9, 0x51, 0xff, 0x8b, 0x46, 0xf0, 0x8c, 0xc2, 0x5, 0x5, 0, 0x89, 0x46, 0xe2, 0x89, 0x56, 0xe4, 0xf6, 0x46, 0xcc, 0x10, 0x74, 0x3, 0xe9, 0x5c, 0xff, 0xc4, 0x5e, 0xe2, 0x83, 0x46, 0xe2, 0x2, 0x26, 0x8b, 0x7, 0x89, 0x46, 0xe6, 0xc7, 0x46, 0xe8, 0, 0, 0xff, 0x76, 0x16, 0xff, 0x76, 0x14, 0xff, 0x76, 0xea, 0xff, 0x76, 0xe8, 0xff, 0x76, 0xe6, 0x8d, 0x46, 0xd8, 0x16, 0x50, 0x8a, 0x46, 0xfe, 0x50, 0xe8, 0xd, 0x13, 0x8b, 0x46, 0xf6, 0xb, 0x46, 0xf4, 0x74, 0x3, 0xe9, 0x69, 0x3, 0xe9, 0, 0x4, 0xf6, 0x46, 0xcc, 0x40, 0x75, 0x3, 0xe9, 0x4, 0x1, 0x39, 0x4e, 0xce, 0x75, 0x3, 0xe9, 0x86, 0, 0x8b, 0x5e, 0xf0, 0x26, 0x8b, 0x47, 0x3, 0x89, 0x46, 0xec, 0x89, 0x4e, 0xee, 0x26, 0x8a, 0x47, 0x2, 0x2a, 0xe4, 0x48, 0x89, 0x46, 0xce, 0xf6, 0x46, 0xcc, 0x10, 0x74, 0x3a, 0x26, 0x8b, 0x47, 0x5, 0x26, 0x8b, 0x57, 0x7, 0x89, 0x46, 0xd0, 0x89, 0x56, 0xd2, 0x8d, 0x47, 0x9, 0x89, 0x46, 0xf4, 0x8c, 0x46, 0xf6, 0x8b, 0x4e, 0xd6, 0xb, 0x4e, 0xd4, 0x75, 0x3, 0xe9, 0xe1, 0x1, 0x8b, 0xd8, 0x26, 0x8b, 0xf, 0x26, 0x8b, 0x57, 0x2, 0x89, 0x4e, 0xd4, 0x89, 0x56, 0xd6, 0x5, 0x4, 0, 0x89, 0x46, 0xf4, 0xe9, 0xc9, 0x1, 0x26, 0x8b, 0x47, 0x5, 0x89, 0x46, 0xd0, 0x89, 0x4e, 0xd2, 0x8d, 0x47, 0x7, 0x89, 0x46, 0xf4, 0x8c, 0x46, 0xf6, 0x8b, 0x4e, 0xd6, 0xb, 0x4e, 0xd4, 0x75, 0x3, 0xe9, 0xab, 0x1, 0x8b, 0xd8, 0x26, 0x8b, 0xf, 0x89, 0x4e, 0xd4, 0xc7, 0x46, 0xd6, 0, 0, 0x40, 0x40, 0xeb, 0xcb, 0x8b, 0x5e, 0xf0, 0x26, 0x8b, 0x47, 0x4, 0x89, 0x46, 0xec, 0x89, 0x4e, 0xee, 0x8d, 0x47, 0x2, 0x89, 0x46, 0xf4, 0x8c, 0x46, 0xf6, 0x8d, 0x47, 0x6, 0x89, 0x46, 0xe2, 0x8c, 0x46, 0xe4, 0xf6, 0x46, 0xcc, 0x10, 0x74, 0x17, 0x8b, 0xd8, 0x26, 0x8b, 0xf, 0x26, 0x8b, 0x57, 0x2, 0x89, 0x4e, 0xd0, 0x89, 0x56, 0xd2, 0x5, 0x4, 0, 0x89, 0x46, 0xe2, 0xeb, 0x12, 0xc4, 0x5e, 0xe2, 0x83, 0x46, 0xe2, 0x2, 0x26, 0x8b, 0x7, 0x89, 0x46, 0xd0, 0xc7, 0x46, 0xd2, 0, 0, 0x8b, 0x46, 0xd6, 0xb, 0x46, 0xd4, 0x74, 0x6, 0xf6, 0x46, 0xcc, 0x20, 0x75, 0x3, 0xe9, 0x21, 0x1, 0xc4, 0x5e, 0xe2, 0x83, 0x46, 0xe2, 0x4, 0x26, 0x8b, 0x7, 0x26, 0x8b, 0x57, 0x2, 0x89, 0x46, 0xd4, 0x89, 0x56, 0xd6, 0xe9, 0x24, 0x1, 0x39, 0x4e, 0xce, 0x75, 0x3, 0xe9, 0x87, 0, 0x8b, 0x5e, 0xf0, 0x26, 0x8a, 0x47, 0x3, 0x2a, 0xe4, 0x89, 0x46, 0xec, 0x89, 0x4e, 0xee, 0x26, 0x8a, 0x47, 0x2, 0x48, 0x89, 0x46, 0xce, 0xf6, 0x46, 0xcc, 0x80, 0x74, 0x11, 0x26, 0x8a, 0x47, 0x4, 0x2a, 0xe4, 0x89, 0x46, 0xd0, 0x89, 0x4e, 0xd2, 0x8d, 0x47, 0x5, 0xeb, 0x26, 0xf6, 0x46, 0xcc, 0x10, 0x74, 0x13, 0x26, 0x8b, 0x47, 0x4, 0x26, 0x8b, 0x57, 0x6, 0x89, 0x46, 0xd0, 0x89, 0x56, 0xd2, 0x8d, 0x47, 0x8, 0xeb, 0xd, 0x26, 0x8b, 0x47, 0x4, 0x89, 0x46, 0xd0, 0x89, 0x4e, 0xd2, 0x8d, 0x47, 0x6, 0x89, 0x46, 0xf4, 0x8c, 0x46, 0xf6, 0x8b, 0x46, 0xd6, 0xb, 0x46, 0xd4, 0x74, 0x10, 0xf6, 0x46, 0xcc, 0x20, 0x74, 0xa, 0x8b, 0x5e, 0xf4, 0x83, 0x46, 0xf4, 0x4, 0xe9, 0x76, 0xff, 0x8b, 0x46, 0xd6, 0xb, 0x46, 0xd4, 0x75, 0x3, 0xe9, 0x9f, 0, 0xc4, 0x5e, 0xf4, 0x83, 0x46, 0xf4, 0x2, 0xe9, 0x8a, 0, 0x8b, 0x5e, 0xf0, 0x26, 0x8a, 0x47, 0x4, 0x2a, 0xe4, 0x89, 0x46, 0xec, 0x89, 0x4e, 0xee, 0x8d, 0x47, 0x2, 0x89, 0x46, 0xf4, 0x8c, 0x46, 0xf6, 0x8d, 0x47, 0x5, 0x89, 0x46, 0xe2, 0x8c, 0x46, 0xe4, 0xf6, 0x46, 0xcc, 0x80, 0x74, 0x15, 0x8b, 0xd8, 0x26, 0x8a, 0xf, 0x2a, 0xed, 0x89, 0x4e, 0xd0, 0xc7, 0x46, 0xd2, 0, 0, 0x40, 0x89, 0x46, 0xe2, 0xeb, 0x2e, 0xf6, 0x46, 0xcc, 0x10, 0x74, 0x16, 0xc4, 0x5e, 0xe2, 0x83, 0x46, 0xe2, 0x4, 0x26, 0x8b, 0x7, 0x26, 0x8b, 0x57, 0x2, 0x89, 0x46, 0xd0, 0x89, 0x56, 0xd2, 0xeb, 0x12, 0xc4, 0x5e, 0xe2, 0x83, 0x46, 0xe2, 0x2, 0x26, 0x8b, 0x7, 0x89, 0x46, 0xd0, 0xc7, 0x46, 0xd2, 0, 0, 0x8b, 0x46, 0xd6, 0xb, 0x46, 0xd4, 0x74, 0x9, 0xf6, 0x46, 0xcc, 0x20, 0x74, 0x3, 0xe9, 0xdf, 0xfe, 0x8b, 0x46, 0xd6, 0xb, 0x46, 0xd4, 0x74, 0x12, 0xc4, 0x5e, 0xe2, 0x83, 0x46, 0xe2, 0x2, 0x26, 0x8b, 0x7, 0x89, 0x46, 0xd4, 0xc7, 0x46, 0xd6, 0, 0, 0xf6, 0x46, 0xcc, 0x80, 0x74, 0xd, 0x8a, 0x46, 0xd0, 0x2a, 0xe4, 0x89, 0x46, 0xd0, 0xc7, 0x46, 0xd2, 0, 0, 0x8a, 0x46, 0xcc, 0x24, 0x3, 0x3c, 0x1, 0x75, 0x21, 0xff, 0x76, 0x16, 0xff, 0x76, 0x14, 0xff, 0x76, 0xee, 0xff, 0x76, 0xec, 0xff, 0x76, 0xd2, 0xff, 0x76, 0xd0, 0x8d, 0x46, 0xd8, 0x16, 0x50, 0x8a, 0x46, 0xfe, 0x50, 0xe8, 0x80, 0x13, 0xe9, 0x84, 0xfd, 0xff, 0x76, 0x16, 0xff, 0x76, 0x14, 0xff, 0x76, 0xee, 0xff, 0x76, 0xec, 0xff, 0x76, 0xd2, 0xff, 0x76, 0xd0, 0x8d, 0x46, 0xd8, 0x16, 0x50, 0x8a, 0x46, 0xfe, 0x50, 0xe8, 0x1c, 0x12, 0xe9, 0x63, 0xfd, 0x39, 0x4e, 0xce, 0x74, 0x53, 0x8b, 0x5e, 0xf0, 0x26, 0x8a, 0x47, 0x2, 0x2a, 0xe4, 0x48, 0x89, 0x46, 0xce, 0x26, 0x8a, 0x47, 0x3, 0x2a, 0xe4, 0x89, 0x46, 0xd0, 0x89, 0x4e, 0xd2, 0x8d, 0x47, 0x4, 0x89, 0x46, 0xf4, 0x8c, 0x46, 0xf6, 0x8b, 0x4e, 0xd6, 0xb, 0x4e, 0xd4, 0x75, 0x3, 0xe9, 0x91, 0, 0xf6, 0x46, 0xcc, 0x20, 0x74, 0x17, 0x8b, 0xd8, 0x26, 0x8b, 0xf, 0x26, 0x8b, 0x57, 0x2, 0x89, 0x4e, 0xd4, 0x89, 0x56, 0xd6, 0x5, 0x4, 0, 0x89, 0x46, 0xf4, 0xeb, 0x74, 0xc4, 0x5e, 0xf4, 0x83, 0x46, 0xf4, 0x2, 0xeb, 0x60, 0x8b, 0x46, 0xf0, 0x8c, 0xc2, 0x40, 0x40, 0x89, 0x46, 0xf4, 0x89, 0x56, 0xf6, 0x8b, 0x46, 0xf0, 0x5, 0x4, 0, 0x89, 0x46, 0xe2, 0x89, 0x56, 0xe4, 0x8b, 0xd8, 0x26, 0x8a, 0xf, 0x2a, 0xed, 0x89, 0x4e, 0xd0, 0xc7, 0x46, 0xd2, 0, 0, 0x40, 0x89, 0x46, 0xe2, 0x8b, 0x4e, 0xd6, 0xb, 0x4e, 0xd4, 0x74, 0x1d, 0xf6, 0x46, 0xcc, 0x20, 0x74, 0x17, 0x8b, 0xd8, 0x26, 0x8b, 0xf, 0x26, 0x8b, 0x77, 0x2, 0x89, 0x4e, 0xd4, 0x89, 0x76, 0xd6, 0x5, 0x4, 0, 0x89, 0x46, 0xe2, 0xeb, 0x1a, 0x8b, 0x46, 0xd6, 0xb, 0x46, 0xd4, 0x74, 0x12, 0xc4, 0x5e, 0xe2, 0x83, 0x46, 0xe2, 0x2, 0x26, 0x8b, 0x7, 0x89, 0x46, 0xd4, 0xc7, 0x46, 0xd6, 0, 0, 0xff, 0x76, 0x16, 0xff, 0x76, 0x14, 0xff, 0x76, 0xd0, 0x8d, 0x46, 0xd8, 0x16, 0x50, 0xe8, 0x20, 0xd, 0xe9, 0x8c, 0xfc, 0x8b, 0x46, 0xdc, 0xb, 0x46, 0xda, 0x75, 0xc, 0x83, 0x7e, 0xd8, 0, 0x75, 0x6, 0xb8, 0x21, 0x5, 0xe9, 0x88, 0, 0x8b, 0x46, 0xd4, 0x8b, 0x56, 0xd6, 0x1, 0x46, 0xda, 0x11, 0x56, 0xdc, 0xff, 0x76, 0xf6, 0xff, 0x76, 0xf4, 0xff, 0x46, 0xce, 0x8b, 0x46, 0xce, 0x50, 0xff, 0x76, 0xdc, 0xff, 0x76, 0xda, 0xff, 0x76, 0xd8, 0xff, 0x76, 0xfc, 0xff, 0x76, 0x6, 0xff, 0x76, 0x4, 0xff, 0x76, 0xa, 0xff, 0x76, 0x8, 0xe, 0xe8, 0xab, 0xf8, 0x83, 0xc4, 0x16, 0x8b, 0x46, 0xf4, 0x2b, 0x46, 0xf0, 0x89, 0x46, 0xe0, 0x83, 0x7e, 0xf8, 0, 0x74, 0x9, 0x8b, 0x4e, 0xce, 0xd1, 0xe1, 0x3, 0xc1, 0xeb, 0x22, 0x8b, 0x46, 0xe4, 0xb, 0x46, 0xe2, 0x75, 0x14, 0x8a, 0x46, 0xcc, 0x25, 0x40, 0, 0x3d, 0x1, 0, 0x1b, 0xc0, 0x40, 0x40, 0x40, 0x40, 0x1, 0x46, 0xe0, 0xeb, 0x9, 0x8b, 0x46, 0xe2, 0x2b, 0x46, 0xf0, 0x89, 0x46, 0xe0, 0x8b, 0x46, 0xe0, 0x1, 0x46, 0x10, 0x2b, 0xd2, 0x29, 0x46, 0xc, 0x19, 0x56, 0xe, 0xe9, 0xd2, 0xf9, 0x2b, 0xc0, 0x5e, 0xc9, 0xc2, 0x14, 0})
{
    FUNC_START_V2(0x15bbb4, 0x10);
    II(0x15bbb4, 0x4)    enterw(0x36, 0);                    /* enter 0x36, 0x0 */
    II(0x15bbb8, 0x1)    pushw(si);                          /* push si */
    II(0x15bbb9, 0x3)    mov(ax, memw_a16(ss, bp + 0x12));   /* mov ax, [bp+0x12] */
    II(0x15bbbc, 0x3)    mov(memw_a16(ss, bp - 0xe), ax);    /* mov [bp-0xe], ax */
l_0x15bbbf:
    II(0x15bbbf, 0x3)    mov(ax, memw_a16(ss, bp + 0xe));    /* mov ax, [bp+0xe] */
    II(0x15bbc2, 0x3)    or_(ax, memw_a16(ss, bp + 0xc));    /* or ax, [bp+0xc] */
    II(0x15bbc5, 0x2)    jnzw(0x15bbca, 0x3);                /* jnz 0x15bbca */
    II(0x15bbc7, 0x3)    jmpw(0x15c1ed, 0x623);              /* jmp 0x15c1ed */
l_0x15bbca:
    II(0x15bbca, 0x5)    mov(memw_a16(ss, bp - 0x28), 0);    /* mov word [bp-0x28], 0x0 */
    II(0x15bbcf, 0x2)    sub(ax, ax);                        /* sub ax, ax */
    II(0x15bbd1, 0x3)    mov(memw_a16(ss, bp - 0x24), ax);   /* mov [bp-0x24], ax */
    II(0x15bbd4, 0x3)    mov(memw_a16(ss, bp - 0x26), ax);   /* mov [bp-0x26], ax */
    II(0x15bbd7, 0x3)    mov(ax, memw_a16(ss, bp + 0x10));   /* mov ax, [bp+0x10] */   // addr of  type (0 .. 7)
    II(0x15bbda, 0x3)    mov(memw_a16(ss, bp - 0x10), ax);   /* mov [bp-0x10], ax */
    II(0x15bbdd, 0x3)    les(bx, ss, bp - 0x10);             /* les bx, [bp-0x10] */
    II(0x15bbe0, 0x3)    mov(al, memb_a16(es, bx));          /* mov al, [es:bx] */
    II(0x15bbe3, 0x2)    mov(cx, ax);                        /* mov cx, ax */
    II(0x15bbe5, 0x3)    and_(ax, 0xf);                      /* and ax, 0xf */
    II(0x15bbe8, 0x3)    mov(memw_a16(ss, bp - 0x4), ax);    /* mov [bp-0x4], ax */
    II(0x15bbeb, 0x2)    mov(dx, cx);                        /* mov dx, cx */
    II(0x15bbed, 0x3)    and_(cl, 0x20);                     /* and cl, 0x20 */
    II(0x15bbf0, 0x3)    cmp(cl, 0x1);                       /* cmp cl, 0x1 */
    II(0x15bbf3, 0x2)    sbb(cx, cx);                        /* sbb cx, cx */
    II(0x15bbf5, 0x1)    inc(cx);                            /* inc cx */
    II(0x15bbf6, 0x3)    mov(memw_a16(ss, bp - 0x32), cx);   /* mov [bp-0x32], cx */
    II(0x15bbf9, 0x3)    mov(memw_a16(ss, bp - 0x8), cx);    /* mov [bp-0x8], cx */
    II(0x15bbfc, 0x4)    mov(cl, memb_a16(es, bx + 0x1));    /* mov cl, [es:bx+0x1] */
    II(0x15bc00, 0x2)    mov(bx, cx);                        /* mov bx, cx */
    II(0x15bc02, 0x3)    and_(cx, 0x4);                      /* and cx, 0x4 */
    II(0x15bc05, 0x3)    mov(memw_a16(ss, bp - 0x2c), cx);   /* mov [bp-0x2c], cx */
    II(0x15bc08, 0x5)    mov(memw_a16(ss, bp - 0x2a), 0);    /* mov word [bp-0x2a], 0x0 */
    II(0x15bc0d, 0x3)    and_(dl, 0x10);                     /* and dl, 0x10 */
    II(0x15bc10, 0x3)    mov(memb_a16(ss, bp - 0x2), dl);    /* mov [bp-0x2], dl */
    II(0x15bc13, 0x3)    mov(memw_a16(ss, bp - 0x36), bx);   /* mov [bp-0x36], bx */
    II(0x15bc16, 0x3)    cmp(ax, 0x2);                       /* cmp ax, 0x2 */
    II(0x15bc19, 0x2)    jnzw(0x15bc1f, 0x4);                /* jnz 0x15bc1f */
    II(0x15bc1b, 0x2)    mov(al, 0x1);                       /* mov al, 0x1 */
    II(0x15bc1d, 0x2)    jmpw(0x15bc21, 0x2);                /* jmp 0x15bc21 */
l_0x15bc1f:
    II(0x15bc1f, 0x2)    sub(al, al);                        /* sub al, al */
l_0x15bc21:
    II(0x15bc21, 0x3)    mov(memb_a16(ss, bp - 0x6), al);    /* mov [bp-0x6], al */
    II(0x15bc24, 0x3)    mov(al, memb_a16(ss, bp - 0x36));   /* mov al, [bp-0x36] */
    II(0x15bc27, 0x2)    sub(ah, ah);                        /* sub ah, ah */
    II(0x15bc29, 0x3)    mov(memw_a16(ss, bp - 0x34), ax);   /* mov [bp-0x34], ax */
    II(0x15bc2c, 0x2)    sub(cx, cx);                        /* sub cx, cx */
    II(0x15bc2e, 0x3)    mov(memw_a16(ss, bp - 0x1c), cx);   /* mov [bp-0x1c], cx */
    II(0x15bc31, 0x3)    mov(memw_a16(ss, bp - 0x1e), cx);   /* mov [bp-0x1e], cx */
    II(0x15bc34, 0x3)    and_(ax, 0x3);                      /* and ax, 0x3 */
    II(0x15bc37, 0x2)    jzw(0x15bc6f, 0x36);                /* jz 0x15bc6f */
    II(0x15bc39, 0x3)    sub(ax, 0x1);                       /* sub ax, 0x1 */
    II(0x15bc3c, 0x2)    jbw(0x15bc4c, 0xe);                 /* jb 0x15bc4c */
    II(0x15bc3e, 0x3)    sub(ax, 0x1);                       /* sub ax, 0x1 */
    II(0x15bc41, 0x2)    jaw(0x15bc46, 0x3);                 /* ja 0x15bc46 */
    II(0x15bc43, 0x3)    jmpw(0x15bded, 0x1a7);              /* jmp 0x15bded */
l_0x15bc46:
    II(0x15bc46, 0x1)    dec(ax);                            /* dec ax */
    II(0x15bc47, 0x2)    jnzw(0x15bc4c, 0x3);                /* jnz 0x15bc4c */
    II(0x15bc49, 0x3)    jmpw(0x15c07c, 0x430);              /* jmp 0x15c07c */
l_0x15bc4c:
    II(0x15bc4c, 0x1)    pushw(ds);                          /* push ds */
    II(0x15bc4d, 0x3)    pushw(0x213e);                      /* push word 0x213e */
    II(0x15bc50, 0x3)    pushw(0xce8);                       /* push word 0xce8 */
    II(0x15bc53, 0x3)    callw(0x161056, 0x5400);            /* call 0x161056 */
    II(0x15bc56, 0x3)    add(sp, 0x6);                       /* add sp, 0x6 */
    II(0x15bc59, 0x5)    mov(memw_a16(ss, bp - 0x28), 0);    /* mov word [bp-0x28], 0x0 */
    II(0x15bc5e, 0x2)    sub(ax, ax);                        /* sub ax, ax */
    II(0x15bc60, 0x3)    mov(memw_a16(ss, bp - 0x24), ax);   /* mov [bp-0x24], ax */
    II(0x15bc63, 0x3)    mov(memw_a16(ss, bp - 0x26), ax);   /* mov [bp-0x26], ax */
    II(0x15bc66, 0x3)    mov(memw_a16(ss, bp - 0xa), ax);    /* mov [bp-0xa], ax */
    II(0x15bc69, 0x3)    mov(memw_a16(ss, bp - 0xc), ax);    /* mov [bp-0xc], ax */
    II(0x15bc6c, 0x3)    jmpw(0x15bddf, 0x170);              /* jmp 0x15bddf */
l_0x15bc6f:
    II(0x15bc6f, 0x4)    test(memb_a16(ss, bp - 0x34), 0x40); /* test byte [bp-0x34], 0x40 */
    II(0x15bc73, 0x2)    jnzw(0x15bc78, 0x3);                /* jnz 0x15bc78 */
    II(0x15bc75, 0x3)    jmpw(0x15bd26, 0xae);               /* jmp 0x15bd26 */
l_0x15bc78:
    II(0x15bc78, 0x3)    cmp(memw_a16(ss, bp - 0x32), cx);   /* cmp [bp-0x32], cx */
    II(0x15bc7b, 0x2)    jzw(0x15bcd3, 0x56);                /* jz 0x15bcd3 */
    II(0x15bc7d, 0x3)    mov(bx, memw_a16(ss, bp - 0x10));   /* mov bx, [bp-0x10] */
    II(0x15bc80, 0x4)    mov(ax, memw_a16(es, bx + 0x3));    /* mov ax, [es:bx+0x3] */
    II(0x15bc84, 0x3)    mov(memw_a16(ss, bp - 0x16), ax);   /* mov [bp-0x16], ax */
    II(0x15bc87, 0x4)    mov(al, memb_a16(es, bx + 0x2));    /* mov al, [es:bx+0x2] */
    II(0x15bc8b, 0x2)    sub(ah, ah);                        /* sub ah, ah */
    II(0x15bc8d, 0x1)    dec(ax);                            /* dec ax */
    II(0x15bc8e, 0x3)    mov(memw_a16(ss, bp - 0x32), ax);   /* mov [bp-0x32], ax */
    II(0x15bc91, 0x4)    cmp(memb_a16(ss, bp - 0x6), 0);     /* cmp byte [bp-0x6], 0x0 */
    II(0x15bc95, 0x2)    jzw(0x15bcab, 0x14);                /* jz 0x15bcab */
    II(0x15bc97, 0x2)    sub(ax, ax);                        /* sub ax, ax */
    II(0x15bc99, 0x3)    mov(memw_a16(ss, bp - 0x18), ax);   /* mov [bp-0x18], ax */
    II(0x15bc9c, 0x3)    mov(memw_a16(ss, bp - 0x1a), ax);   /* mov [bp-0x1a], ax */
    II(0x15bc9f, 0x3)    lea(ax, bx + 0x5);                  /* lea ax, [bx+0x5] */
l_0x15bca2:
    II(0x15bca2, 0x3)    mov(memw_a16(ss, bp - 0xc), ax);    /* mov [bp-0xc], ax */
    II(0x15bca5, 0x3)    mov(memw_a16(ss, bp - 0xa), es);    /* mov [bp-0xa], es */
    II(0x15bca8, 0x3)    jmpw(0x15bdc4, 0x119);              /* jmp 0x15bdc4 */
l_0x15bcab:
    II(0x15bcab, 0x4)    test(memb_a16(ss, bp - 0x34), 0x10); /* test byte [bp-0x34], 0x10 */
    II(0x15bcaf, 0x2)    jzw(0x15bcc4, 0x13);                /* jz 0x15bcc4 */
    II(0x15bcb1, 0x4)    mov(ax, memw_a16(es, bx + 0x5));    /* mov ax, [es:bx+0x5] */
    II(0x15bcb5, 0x4)    mov(dx, memw_a16(es, bx + 0x7));    /* mov dx, [es:bx+0x7] */
    II(0x15bcb9, 0x3)    mov(memw_a16(ss, bp - 0x1a), ax);   /* mov [bp-0x1a], ax */
    II(0x15bcbc, 0x3)    mov(memw_a16(ss, bp - 0x18), dx);   /* mov [bp-0x18], dx */
    II(0x15bcbf, 0x3)    lea(ax, bx + 0x9);                  /* lea ax, [bx+0x9] */
    II(0x15bcc2, 0x2)    jmpw(0x15bca2, -0x22);              /* jmp 0x15bca2 */
l_0x15bcc4:
    II(0x15bcc4, 0x4)    mov(ax, memw_a16(es, bx + 0x5));    /* mov ax, [es:bx+0x5] */
    II(0x15bcc8, 0x3)    mov(memw_a16(ss, bp - 0x1a), ax);   /* mov [bp-0x1a], ax */
    II(0x15bccb, 0x3)    mov(memw_a16(ss, bp - 0x18), cx);   /* mov [bp-0x18], cx */
    II(0x15bcce, 0x3)    lea(ax, bx + 0x7);                  /* lea ax, [bx+0x7] */
    II(0x15bcd1, 0x2)    jmpw(0x15bca2, -0x31);              /* jmp 0x15bca2 */
l_0x15bcd3:
    II(0x15bcd3, 0x3)    mov(bx, memw_a16(ss, bp - 0x10));   /* mov bx, [bp-0x10] */
    II(0x15bcd6, 0x4)    mov(ax, memw_a16(es, bx + 0x4));    /* mov ax, [es:bx+0x4] */
    II(0x15bcda, 0x3)    mov(memw_a16(ss, bp - 0x16), ax);   /* mov [bp-0x16], ax */
    II(0x15bcdd, 0x3)    lea(ax, bx + 0x2);                  /* lea ax, [bx+0x2] */
    II(0x15bce0, 0x3)    mov(memw_a16(ss, bp - 0xc), ax);    /* mov [bp-0xc], ax */
    II(0x15bce3, 0x3)    mov(memw_a16(ss, bp - 0xa), es);    /* mov [bp-0xa], es */
    II(0x15bce6, 0x4)    cmp(memb_a16(ss, bp - 0x6), 0);     /* cmp byte [bp-0x6], 0x0 */
    II(0x15bcea, 0x2)    jzw(0x15bcf7, 0xb);                 /* jz 0x15bcf7 */
l_0x15bcec:
    II(0x15bcec, 0x2)    sub(ax, ax);                        /* sub ax, ax */
    II(0x15bcee, 0x3)    mov(memw_a16(ss, bp - 0x18), ax);   /* mov [bp-0x18], ax */
    II(0x15bcf1, 0x3)    mov(memw_a16(ss, bp - 0x1a), ax);   /* mov [bp-0x1a], ax */
    II(0x15bcf4, 0x3)    jmpw(0x15bdc4, 0xcd);               /* jmp 0x15bdc4 */
l_0x15bcf7:
    II(0x15bcf7, 0x3)    mov(ax, memw_a16(ss, bp - 0x10));   /* mov ax, [bp-0x10] */
    II(0x15bcfa, 0x2)    mov(dx, es);                        /* mov dx, es */
    II(0x15bcfc, 0x3)    add(ax, 0x6);                       /* add ax, 0x6 */
    II(0x15bcff, 0x3)    mov(memw_a16(ss, bp - 0x1e), ax);   /* mov [bp-0x1e], ax */
    II(0x15bd02, 0x3)    mov(memw_a16(ss, bp - 0x1c), dx);   /* mov [bp-0x1c], dx */
    II(0x15bd05, 0x4)    test(memb_a16(ss, bp - 0x34), 0x10); /* test byte [bp-0x34], 0x10 */
    II(0x15bd09, 0x2)    jnzw(0x15bd0e, 0x3);                /* jnz 0x15bd0e */
    II(0x15bd0b, 0x3)    jmpw(0x15bdb2, 0xa4);               /* jmp 0x15bdb2 */
l_0x15bd0e:
    II(0x15bd0e, 0x2)    mov(bx, ax);                        /* mov bx, ax */
    II(0x15bd10, 0x3)    mov(cx, memw_a16(es, bx));          /* mov cx, [es:bx] */
    II(0x15bd13, 0x4)    mov(si, memw_a16(es, bx + 0x2));    /* mov si, [es:bx+0x2] */
    II(0x15bd17, 0x3)    mov(memw_a16(ss, bp - 0x1a), cx);   /* mov [bp-0x1a], cx */
    II(0x15bd1a, 0x3)    mov(memw_a16(ss, bp - 0x18), si);   /* mov [bp-0x18], si */
    II(0x15bd1d, 0x3)    add(ax, 0x4);                       /* add ax, 0x4 */
    II(0x15bd20, 0x3)    mov(memw_a16(ss, bp - 0x1e), ax);   /* mov [bp-0x1e], ax */
    II(0x15bd23, 0x3)    jmpw(0x15bdc4, 0x9e);               /* jmp 0x15bdc4 */
l_0x15bd26:
    II(0x15bd26, 0x3)    cmp(memw_a16(ss, bp - 0x32), cx);   /* cmp [bp-0x32], cx */
    II(0x15bd29, 0x2)    jzw(0x15bd7d, 0x52);                /* jz 0x15bd7d */
    II(0x15bd2b, 0x3)    mov(bx, memw_a16(ss, bp - 0x10));   /* mov bx, [bp-0x10] */
    II(0x15bd2e, 0x4)    mov(al, memb_a16(es, bx + 0x3));    /* mov al, [es:bx+0x3] */
    II(0x15bd32, 0x2)    sub(ah, ah);                        /* sub ah, ah */
    II(0x15bd34, 0x3)    mov(memw_a16(ss, bp - 0x16), ax);   /* mov [bp-0x16], ax */
    II(0x15bd37, 0x4)    mov(al, memb_a16(es, bx + 0x2));    /* mov al, [es:bx+0x2] */
    II(0x15bd3b, 0x1)    dec(ax);                            /* dec ax */
    II(0x15bd3c, 0x3)    mov(memw_a16(ss, bp - 0x32), ax);   /* mov [bp-0x32], ax */
    II(0x15bd3f, 0x4)    cmp(memb_a16(ss, bp - 0x6), 0);     /* cmp byte [bp-0x6], 0x0 */
    II(0x15bd43, 0x2)    jzw(0x15bd53, 0xe);                 /* jz 0x15bd53 */
    II(0x15bd45, 0x2)    sub(ax, ax);                        /* sub ax, ax */
    II(0x15bd47, 0x3)    mov(memw_a16(ss, bp - 0x18), ax);   /* mov [bp-0x18], ax */
    II(0x15bd4a, 0x3)    mov(memw_a16(ss, bp - 0x1a), ax);   /* mov [bp-0x1a], ax */
    II(0x15bd4d, 0x3)    lea(ax, bx + 0x4);                  /* lea ax, [bx+0x4] */
    II(0x15bd50, 0x3)    jmpw(0x15bca2, -0xb1);              /* jmp 0x15bca2 */
l_0x15bd53:
    II(0x15bd53, 0x4)    test(memb_a16(ss, bp - 0x34), 0x10); /* test byte [bp-0x34], 0x10 */
    II(0x15bd57, 0x2)    jzw(0x15bd6d, 0x14);                /* jz 0x15bd6d */
    II(0x15bd59, 0x4)    mov(ax, memw_a16(es, bx + 0x4));    /* mov ax, [es:bx+0x4] */
    II(0x15bd5d, 0x4)    mov(dx, memw_a16(es, bx + 0x6));    /* mov dx, [es:bx+0x6] */
    II(0x15bd61, 0x3)    mov(memw_a16(ss, bp - 0x1a), ax);   /* mov [bp-0x1a], ax */
    II(0x15bd64, 0x3)    mov(memw_a16(ss, bp - 0x18), dx);   /* mov [bp-0x18], dx */
    II(0x15bd67, 0x3)    lea(ax, bx + 0x8);                  /* lea ax, [bx+0x8] */
    II(0x15bd6a, 0x3)    jmpw(0x15bca2, -0xcb);              /* jmp 0x15bca2 */
l_0x15bd6d:
    II(0x15bd6d, 0x4)    mov(ax, memw_a16(es, bx + 0x4));    /* mov ax, [es:bx+0x4] */
    II(0x15bd71, 0x3)    mov(memw_a16(ss, bp - 0x1a), ax);   /* mov [bp-0x1a], ax */
    II(0x15bd74, 0x3)    mov(memw_a16(ss, bp - 0x18), cx);   /* mov [bp-0x18], cx */
    II(0x15bd77, 0x3)    lea(ax, bx + 0x6);                  /* lea ax, [bx+0x6] */
    II(0x15bd7a, 0x3)    jmpw(0x15bca2, -0xdb);              /* jmp 0x15bca2 */
l_0x15bd7d:
    II(0x15bd7d, 0x3)    mov(bx, memw_a16(ss, bp - 0x10));   /* mov bx, [bp-0x10] */
    II(0x15bd80, 0x4)    mov(al, memb_a16(es, bx + 0x4));    /* mov al, [es:bx+0x4] */
    II(0x15bd84, 0x2)    sub(ah, ah);                        /* sub ah, ah */
    II(0x15bd86, 0x3)    mov(memw_a16(ss, bp - 0x16), ax);   /* mov [bp-0x16], ax */
    II(0x15bd89, 0x3)    lea(ax, bx + 0x2);                  /* lea ax, [bx+0x2] */
    II(0x15bd8c, 0x3)    mov(memw_a16(ss, bp - 0xc), ax);    /* mov [bp-0xc], ax */
    II(0x15bd8f, 0x3)    mov(memw_a16(ss, bp - 0xa), es);    /* mov [bp-0xa], es */
    II(0x15bd92, 0x4)    cmp(memb_a16(ss, bp - 0x6), 0);     /* cmp byte [bp-0x6], 0x0 */
    II(0x15bd96, 0x2)    jzw(0x15bd9b, 0x3);                 /* jz 0x15bd9b */
    II(0x15bd98, 0x3)    jmpw(0x15bcec, -0xaf);              /* jmp 0x15bcec */
l_0x15bd9b:
    II(0x15bd9b, 0x3)    mov(ax, memw_a16(ss, bp - 0x10));   /* mov ax, [bp-0x10] */
    II(0x15bd9e, 0x2)    mov(dx, es);                        /* mov dx, es */
    II(0x15bda0, 0x3)    add(ax, 0x5);                       /* add ax, 0x5 */
    II(0x15bda3, 0x3)    mov(memw_a16(ss, bp - 0x1e), ax);   /* mov [bp-0x1e], ax */
    II(0x15bda6, 0x3)    mov(memw_a16(ss, bp - 0x1c), dx);   /* mov [bp-0x1c], dx */
    II(0x15bda9, 0x4)    test(memb_a16(ss, bp - 0x34), 0x10); /* test byte [bp-0x34], 0x10 */
    II(0x15bdad, 0x2)    jzw(0x15bdb2, 0x3);                 /* jz 0x15bdb2 */
    II(0x15bdaf, 0x3)    jmpw(0x15bd0e, -0xa4);              /* jmp 0x15bd0e */
l_0x15bdb2:
    II(0x15bdb2, 0x3)    les(bx, ss, bp - 0x1e);        /* les bx, [bp-0x1e] */
    II(0x15bdb5, 0x4)    add(memw_a16(ss, bp - 0x1e), 0x2);  /* add word [bp-0x1e], 0x2 */
    II(0x15bdb9, 0x3)    mov(ax, memw_a16(es, bx));          /* mov ax, [es:bx] */
    II(0x15bdbc, 0x3)    mov(memw_a16(ss, bp - 0x1a), ax);   /* mov [bp-0x1a], ax */
    II(0x15bdbf, 0x5)    mov(memw_a16(ss, bp - 0x18), 0);    /* mov word [bp-0x18], 0x0 */
l_0x15bdc4:
    II(0x15bdc4, 0x3)    pushw(memw_a16(ss, bp + 0x16));     /* push word [bp+0x16] */
    II(0x15bdc7, 0x3)    pushw(memw_a16(ss, bp + 0x14));     /* push word [bp+0x14] */
    II(0x15bdca, 0x3)    pushw(memw_a16(ss, bp - 0x16));     /* push word [bp-0x16] */
    II(0x15bdcd, 0x3)    pushw(memw_a16(ss, bp - 0x18));     /* push word [bp-0x18] */ // addr hi  plus
    II(0x15bdd0, 0x3)    pushw(memw_a16(ss, bp - 0x1a));     /* push word [bp-0x1a] */ // addr lo  plus
    II(0x15bdd3, 0x3)    lea(ax, bp - 0x28);                 /* lea ax, [bp-0x28] */
    II(0x15bdd6, 0x1)    pushw(ss);                          /* push ss */
    II(0x15bdd7, 0x1)    pushw(ax);                          /* push ax */
    II(0x15bdd8, 0x3)    mov(al, memb_a16(ss, bp - 0x2));    /* mov al, [bp-0x2] */
    II(0x15bddb, 0x1)    pushw(ax);                          /* push ax */
    II(0x15bddc, 0x3)    callw(0x15d0ec, 0x130d);            /* call 0x15d0ec */     // Заполнение addr hi, addr lo?
l_0x15bddf:
    II(0x15bddf, 0x3)    mov(ax, memw_a16(ss, bp - 0xa));    /* mov ax, [bp-0xa] */
    II(0x15bde2, 0x3)    or_(ax, memw_a16(ss, bp - 0xc));    /* or ax, [bp-0xc] */
    II(0x15bde5, 0x2)    jzw(0x15bdea, 0x3);                 /* jz 0x15bdea */
    II(0x15bde7, 0x3)    jmpw(0x15c153, 0x369);              /* jmp 0x15c153 */
l_0x15bdea:
    II(0x15bdea, 0x3)    jmpw(0x15c1ed, 0x400);              /* jmp 0x15c1ed */
l_0x15bded:
    II(0x15bded, 0x4)    test(memb_a16(ss, bp - 0x34), 0x40); /* test byte [bp-0x34], 0x40 */
    II(0x15bdf1, 0x2)    jnzw(0x15bdf6, 0x3);                /* jnz 0x15bdf6 */
    II(0x15bdf3, 0x3)    jmpw(0x15befa, 0x104);              /* jmp 0x15befa */
l_0x15bdf6:
    II(0x15bdf6, 0x3)    cmp(memw_a16(ss, bp - 0x32), cx);   /* cmp [bp-0x32], cx */
    II(0x15bdf9, 0x2)    jnzw(0x15bdfe, 0x3);                /* jnz 0x15bdfe */
    II(0x15bdfb, 0x3)    jmpw(0x15be84, 0x86);               /* jmp 0x15be84 */
l_0x15bdfe:
    II(0x15bdfe, 0x3)    mov(bx, memw_a16(ss, bp - 0x10));   /* mov bx, [bp-0x10] */
    II(0x15be01, 0x4)    mov(ax, memw_a16(es, bx + 0x3));    /* mov ax, [es:bx+0x3] */
    II(0x15be05, 0x3)    mov(memw_a16(ss, bp - 0x14), ax);   /* mov [bp-0x14], ax */
    II(0x15be08, 0x3)    mov(memw_a16(ss, bp - 0x12), cx);   /* mov [bp-0x12], cx */
    II(0x15be0b, 0x4)    mov(al, memb_a16(es, bx + 0x2));    /* mov al, [es:bx+0x2] */
    II(0x15be0f, 0x2)    sub(ah, ah);                        /* sub ah, ah */
    II(0x15be11, 0x1)    dec(ax);                            /* dec ax */
    II(0x15be12, 0x3)    mov(memw_a16(ss, bp - 0x32), ax);   /* mov [bp-0x32], ax */
    II(0x15be15, 0x4)    test(memb_a16(ss, bp - 0x34), 0x10); /* test byte [bp-0x34], 0x10 */
    II(0x15be19, 0x2)    jzw(0x15be55, 0x3a);                /* jz 0x15be55 */
    II(0x15be1b, 0x4)    mov(ax, memw_a16(es, bx + 0x5));    /* mov ax, [es:bx+0x5] */
    II(0x15be1f, 0x4)    mov(dx, memw_a16(es, bx + 0x7));    /* mov dx, [es:bx+0x7] */
    II(0x15be23, 0x3)    mov(memw_a16(ss, bp - 0x30), ax);   /* mov [bp-0x30], ax */
    II(0x15be26, 0x3)    mov(memw_a16(ss, bp - 0x2e), dx);   /* mov [bp-0x2e], dx */
    II(0x15be29, 0x3)    lea(ax, bx + 0x9);                  /* lea ax, [bx+0x9] */
    II(0x15be2c, 0x3)    mov(memw_a16(ss, bp - 0xc), ax);    /* mov [bp-0xc], ax */
    II(0x15be2f, 0x3)    mov(memw_a16(ss, bp - 0xa), es);    /* mov [bp-0xa], es */
    II(0x15be32, 0x3)    mov(cx, memw_a16(ss, bp - 0x2a));   /* mov cx, [bp-0x2a] */
    II(0x15be35, 0x3)    or_(cx, memw_a16(ss, bp - 0x2c));   /* or cx, [bp-0x2c] */
    II(0x15be38, 0x2)    jnzw(0x15be3d, 0x3);                /* jnz 0x15be3d */
    II(0x15be3a, 0x3)    jmpw(0x15c01e, 0x1e1);              /* jmp 0x15c01e */
l_0x15be3d:
    II(0x15be3d, 0x2)    mov(bx, ax);                        /* mov bx, ax */
    II(0x15be3f, 0x3)    mov(cx, memw_a16(es, bx));          /* mov cx, [es:bx] */
    II(0x15be42, 0x4)    mov(dx, memw_a16(es, bx + 0x2));    /* mov dx, [es:bx+0x2] */
    II(0x15be46, 0x3)    mov(memw_a16(ss, bp - 0x2c), cx);   /* mov [bp-0x2c], cx */
    II(0x15be49, 0x3)    mov(memw_a16(ss, bp - 0x2a), dx);   /* mov [bp-0x2a], dx */
    II(0x15be4c, 0x3)    add(ax, 0x4);                       /* add ax, 0x4 */
l_0x15be4f:
    II(0x15be4f, 0x3)    mov(memw_a16(ss, bp - 0xc), ax);    /* mov [bp-0xc], ax */
    II(0x15be52, 0x3)    jmpw(0x15c01e, 0x1c9);              /* jmp 0x15c01e */
l_0x15be55:
    II(0x15be55, 0x4)    mov(ax, memw_a16(es, bx + 0x5));    /* mov ax, [es:bx+0x5] */
    II(0x15be59, 0x3)    mov(memw_a16(ss, bp - 0x30), ax);   /* mov [bp-0x30], ax */
    II(0x15be5c, 0x3)    mov(memw_a16(ss, bp - 0x2e), cx);   /* mov [bp-0x2e], cx */
    II(0x15be5f, 0x3)    lea(ax, bx + 0x7);                  /* lea ax, [bx+0x7] */
    II(0x15be62, 0x3)    mov(memw_a16(ss, bp - 0xc), ax);    /* mov [bp-0xc], ax */
    II(0x15be65, 0x3)    mov(memw_a16(ss, bp - 0xa), es);    /* mov [bp-0xa], es */
    II(0x15be68, 0x3)    mov(cx, memw_a16(ss, bp - 0x2a));   /* mov cx, [bp-0x2a] */
    II(0x15be6b, 0x3)    or_(cx, memw_a16(ss, bp - 0x2c));   /* or cx, [bp-0x2c] */
    II(0x15be6e, 0x2)    jnzw(0x15be73, 0x3);                /* jnz 0x15be73 */
    II(0x15be70, 0x3)    jmpw(0x15c01e, 0x1ab);              /* jmp 0x15c01e */
l_0x15be73:
    II(0x15be73, 0x2)    mov(bx, ax);                        /* mov bx, ax */
    II(0x15be75, 0x3)    mov(cx, memw_a16(es, bx));          /* mov cx, [es:bx] */
    II(0x15be78, 0x3)    mov(memw_a16(ss, bp - 0x2c), cx);   /* mov [bp-0x2c], cx */
    II(0x15be7b, 0x5)    mov(memw_a16(ss, bp - 0x2a), 0);    /* mov word [bp-0x2a], 0x0 */
    II(0x15be80, 0x1)    inc(ax);                            /* inc ax */
    II(0x15be81, 0x1)    inc(ax);                            /* inc ax */
    II(0x15be82, 0x2)    jmpw(0x15be4f, -0x35);              /* jmp 0x15be4f */
l_0x15be84:
    II(0x15be84, 0x3)    mov(bx, memw_a16(ss, bp - 0x10));   /* mov bx, [bp-0x10] */
    II(0x15be87, 0x4)    mov(ax, memw_a16(es, bx + 0x4));    /* mov ax, [es:bx+0x4] */
    II(0x15be8b, 0x3)    mov(memw_a16(ss, bp - 0x14), ax);   /* mov [bp-0x14], ax */
    II(0x15be8e, 0x3)    mov(memw_a16(ss, bp - 0x12), cx);   /* mov [bp-0x12], cx */
    II(0x15be91, 0x3)    lea(ax, bx + 0x2);                  /* lea ax, [bx+0x2] */
    II(0x15be94, 0x3)    mov(memw_a16(ss, bp - 0xc), ax);    /* mov [bp-0xc], ax */
    II(0x15be97, 0x3)    mov(memw_a16(ss, bp - 0xa), es);    /* mov [bp-0xa], es */
    II(0x15be9a, 0x3)    lea(ax, bx + 0x6);                  /* lea ax, [bx+0x6] */
    II(0x15be9d, 0x3)    mov(memw_a16(ss, bp - 0x1e), ax);   /* mov [bp-0x1e], ax */
    II(0x15bea0, 0x3)    mov(memw_a16(ss, bp - 0x1c), es);   /* mov [bp-0x1c], es */
    II(0x15bea3, 0x4)    test(memb_a16(ss, bp - 0x34), 0x10); /* test byte [bp-0x34], 0x10 */
    II(0x15bea7, 0x2)    jzw(0x15bec0, 0x17);                /* jz 0x15bec0 */
    II(0x15bea9, 0x2)    mov(bx, ax);                        /* mov bx, ax */
    II(0x15beab, 0x3)    mov(cx, memw_a16(es, bx));          /* mov cx, [es:bx] */
    II(0x15beae, 0x4)    mov(dx, memw_a16(es, bx + 0x2));    /* mov dx, [es:bx+0x2] */
    II(0x15beb2, 0x3)    mov(memw_a16(ss, bp - 0x30), cx);   /* mov [bp-0x30], cx */
    II(0x15beb5, 0x3)    mov(memw_a16(ss, bp - 0x2e), dx);   /* mov [bp-0x2e], dx */
    II(0x15beb8, 0x3)    add(ax, 0x4);                       /* add ax, 0x4 */
    II(0x15bebb, 0x3)    mov(memw_a16(ss, bp - 0x1e), ax);   /* mov [bp-0x1e], ax */
    II(0x15bebe, 0x2)    jmpw(0x15bed2, 0x12);               /* jmp 0x15bed2 */
l_0x15bec0:
    II(0x15bec0, 0x3)    les(bx, ss, bp - 0x1e);        /* les bx, [bp-0x1e] */
    II(0x15bec3, 0x4)    add(memw_a16(ss, bp - 0x1e), 0x2);  /* add word [bp-0x1e], 0x2 */
    II(0x15bec7, 0x3)    mov(ax, memw_a16(es, bx));          /* mov ax, [es:bx] */
    II(0x15beca, 0x3)    mov(memw_a16(ss, bp - 0x30), ax);   /* mov [bp-0x30], ax */
    II(0x15becd, 0x5)    mov(memw_a16(ss, bp - 0x2e), 0);    /* mov word [bp-0x2e], 0x0 */
l_0x15bed2:
    II(0x15bed2, 0x3)    mov(ax, memw_a16(ss, bp - 0x2a));   /* mov ax, [bp-0x2a] */
    II(0x15bed5, 0x3)    or_(ax, memw_a16(ss, bp - 0x2c));   /* or ax, [bp-0x2c] */
    II(0x15bed8, 0x2)    jzw(0x15bee0, 0x6);                 /* jz 0x15bee0 */
    II(0x15beda, 0x4)    test(memb_a16(ss, bp - 0x34), 0x20); /* test byte [bp-0x34], 0x20 */
    II(0x15bede, 0x2)    jnzw(0x15bee3, 0x3);                /* jnz 0x15bee3 */
l_0x15bee0:
    II(0x15bee0, 0x3)    jmpw(0x15c004, 0x121);              /* jmp 0x15c004 */
l_0x15bee3:
    II(0x15bee3, 0x3)    les(bx, ss, bp - 0x1e);        /* les bx, [bp-0x1e] */
    II(0x15bee6, 0x4)    add(memw_a16(ss, bp - 0x1e), 0x4);  /* add word [bp-0x1e], 0x4 */
l_0x15beea:
    II(0x15beea, 0x3)    mov(ax, memw_a16(es, bx));          /* mov ax, [es:bx] */
    II(0x15beed, 0x4)    mov(dx, memw_a16(es, bx + 0x2));    /* mov dx, [es:bx+0x2] */
    II(0x15bef1, 0x3)    mov(memw_a16(ss, bp - 0x2c), ax);   /* mov [bp-0x2c], ax */
    II(0x15bef4, 0x3)    mov(memw_a16(ss, bp - 0x2a), dx);   /* mov [bp-0x2a], dx */
    II(0x15bef7, 0x3)    jmpw(0x15c01e, 0x124);              /* jmp 0x15c01e */
l_0x15befa:
    II(0x15befa, 0x3)    cmp(memw_a16(ss, bp - 0x32), cx);   /* cmp [bp-0x32], cx */
    II(0x15befd, 0x2)    jnzw(0x15bf02, 0x3);                /* jnz 0x15bf02 */
    II(0x15beff, 0x3)    jmpw(0x15bf89, 0x87);               /* jmp 0x15bf89 */
l_0x15bf02:
    II(0x15bf02, 0x3)    mov(bx, memw_a16(ss, bp - 0x10));   /* mov bx, [bp-0x10] */
    II(0x15bf05, 0x4)    mov(al, memb_a16(es, bx + 0x3));    /* mov al, [es:bx+0x3] */
    II(0x15bf09, 0x2)    sub(ah, ah);                        /* sub ah, ah */
    II(0x15bf0b, 0x3)    mov(memw_a16(ss, bp - 0x14), ax);   /* mov [bp-0x14], ax */
    II(0x15bf0e, 0x3)    mov(memw_a16(ss, bp - 0x12), cx);   /* mov [bp-0x12], cx */
    II(0x15bf11, 0x4)    mov(al, memb_a16(es, bx + 0x2));    /* mov al, [es:bx+0x2] */
    II(0x15bf15, 0x1)    dec(ax);                            /* dec ax */
    II(0x15bf16, 0x3)    mov(memw_a16(ss, bp - 0x32), ax);   /* mov [bp-0x32], ax */
    II(0x15bf19, 0x4)    test(memb_a16(ss, bp - 0x34), 0x80); /* test byte [bp-0x34], 0x80 */
    II(0x15bf1d, 0x2)    jzw(0x15bf30, 0x11);                /* jz 0x15bf30 */
    II(0x15bf1f, 0x4)    mov(al, memb_a16(es, bx + 0x4));    /* mov al, [es:bx+0x4] */
    II(0x15bf23, 0x2)    sub(ah, ah);                        /* sub ah, ah */
    II(0x15bf25, 0x3)    mov(memw_a16(ss, bp - 0x30), ax);   /* mov [bp-0x30], ax */
    II(0x15bf28, 0x3)    mov(memw_a16(ss, bp - 0x2e), cx);   /* mov [bp-0x2e], cx */
    II(0x15bf2b, 0x3)    lea(ax, bx + 0x5);                  /* lea ax, [bx+0x5] */
    II(0x15bf2e, 0x2)    jmpw(0x15bf56, 0x26);               /* jmp 0x15bf56 */
l_0x15bf30:
    II(0x15bf30, 0x4)    test(memb_a16(ss, bp - 0x34), 0x10); /* test byte [bp-0x34], 0x10 */
    II(0x15bf34, 0x2)    jzw(0x15bf49, 0x13);                /* jz 0x15bf49 */
    II(0x15bf36, 0x4)    mov(ax, memw_a16(es, bx + 0x4));    /* mov ax, [es:bx+0x4] */
    II(0x15bf3a, 0x4)    mov(dx, memw_a16(es, bx + 0x6));    /* mov dx, [es:bx+0x6] */
    II(0x15bf3e, 0x3)    mov(memw_a16(ss, bp - 0x30), ax);   /* mov [bp-0x30], ax */
    II(0x15bf41, 0x3)    mov(memw_a16(ss, bp - 0x2e), dx);   /* mov [bp-0x2e], dx */
    II(0x15bf44, 0x3)    lea(ax, bx + 0x8);                  /* lea ax, [bx+0x8] */
    II(0x15bf47, 0x2)    jmpw(0x15bf56, 0xd);                /* jmp 0x15bf56 */
l_0x15bf49:
    II(0x15bf49, 0x4)    mov(ax, memw_a16(es, bx + 0x4));    /* mov ax, [es:bx+0x4] */
    II(0x15bf4d, 0x3)    mov(memw_a16(ss, bp - 0x30), ax);   /* mov [bp-0x30], ax */
    II(0x15bf50, 0x3)    mov(memw_a16(ss, bp - 0x2e), cx);   /* mov [bp-0x2e], cx */
    II(0x15bf53, 0x3)    lea(ax, bx + 0x6);                  /* lea ax, [bx+0x6] */
l_0x15bf56:
    II(0x15bf56, 0x3)    mov(memw_a16(ss, bp - 0xc), ax);    /* mov [bp-0xc], ax */
    II(0x15bf59, 0x3)    mov(memw_a16(ss, bp - 0xa), es);    /* mov [bp-0xa], es */
    II(0x15bf5c, 0x3)    mov(ax, memw_a16(ss, bp - 0x2a));   /* mov ax, [bp-0x2a] */
    II(0x15bf5f, 0x3)    or_(ax, memw_a16(ss, bp - 0x2c));   /* or ax, [bp-0x2c] */
    II(0x15bf62, 0x2)    jzw(0x15bf74, 0x10);                /* jz 0x15bf74 */
    II(0x15bf64, 0x4)    test(memb_a16(ss, bp - 0x34), 0x20); /* test byte [bp-0x34], 0x20 */
    II(0x15bf68, 0x2)    jzw(0x15bf74, 0xa);                 /* jz 0x15bf74 */
    II(0x15bf6a, 0x3)    mov(bx, memw_a16(ss, bp - 0xc));    /* mov bx, [bp-0xc] */
    II(0x15bf6d, 0x4)    add(memw_a16(ss, bp - 0xc), 0x4);   /* add word [bp-0xc], 0x4 */
    II(0x15bf71, 0x3)    jmpw(0x15beea, -0x8a);              /* jmp 0x15beea */
l_0x15bf74:
    II(0x15bf74, 0x3)    mov(ax, memw_a16(ss, bp - 0x2a));   /* mov ax, [bp-0x2a] */
    II(0x15bf77, 0x3)    or_(ax, memw_a16(ss, bp - 0x2c));   /* or ax, [bp-0x2c] */
    II(0x15bf7a, 0x2)    jnzw(0x15bf7f, 0x3);                /* jnz 0x15bf7f */
    II(0x15bf7c, 0x3)    jmpw(0x15c01e, 0x9f);               /* jmp 0x15c01e */
l_0x15bf7f:
    II(0x15bf7f, 0x3)    les(bx, ss, bp - 0xc);         /* les bx, [bp-0xc] */
    II(0x15bf82, 0x4)    add(memw_a16(ss, bp - 0xc), 0x2);   /* add word [bp-0xc], 0x2 */
    II(0x15bf86, 0x3)    jmpw(0x15c013, 0x8a);               /* jmp 0x15c013 */
l_0x15bf89:
    II(0x15bf89, 0x3)    mov(bx, memw_a16(ss, bp - 0x10));   /* mov bx, [bp-0x10] */
    II(0x15bf8c, 0x4)    mov(al, memb_a16(es, bx + 0x4));    /* mov al, [es:bx+0x4] */
    II(0x15bf90, 0x2)    sub(ah, ah);                        /* sub ah, ah */
    II(0x15bf92, 0x3)    mov(memw_a16(ss, bp - 0x14), ax);   /* mov [bp-0x14], ax */
    II(0x15bf95, 0x3)    mov(memw_a16(ss, bp - 0x12), cx);   /* mov [bp-0x12], cx */
    II(0x15bf98, 0x3)    lea(ax, bx + 0x2);                  /* lea ax, [bx+0x2] */
    II(0x15bf9b, 0x3)    mov(memw_a16(ss, bp - 0xc), ax);    /* mov [bp-0xc], ax */
    II(0x15bf9e, 0x3)    mov(memw_a16(ss, bp - 0xa), es);    /* mov [bp-0xa], es */
    II(0x15bfa1, 0x3)    lea(ax, bx + 0x5);                  /* lea ax, [bx+0x5] */
    II(0x15bfa4, 0x3)    mov(memw_a16(ss, bp - 0x1e), ax);   /* mov [bp-0x1e], ax */
    II(0x15bfa7, 0x3)    mov(memw_a16(ss, bp - 0x1c), es);   /* mov [bp-0x1c], es */
    II(0x15bfaa, 0x4)    test(memb_a16(ss, bp - 0x34), 0x80); /* test byte [bp-0x34], 0x80 */
    II(0x15bfae, 0x2)    jzw(0x15bfc5, 0x15);                /* jz 0x15bfc5 */
    II(0x15bfb0, 0x2)    mov(bx, ax);                        /* mov bx, ax */
    II(0x15bfb2, 0x3)    mov(cl, memb_a16(es, bx));          /* mov cl, [es:bx] */
    II(0x15bfb5, 0x2)    sub(ch, ch);                        /* sub ch, ch */
    II(0x15bfb7, 0x3)    mov(memw_a16(ss, bp - 0x30), cx);   /* mov [bp-0x30], cx */
    II(0x15bfba, 0x5)    mov(memw_a16(ss, bp - 0x2e), 0);    /* mov word [bp-0x2e], 0x0 */
    II(0x15bfbf, 0x1)    inc(ax);                            /* inc ax */
    II(0x15bfc0, 0x3)    mov(memw_a16(ss, bp - 0x1e), ax);   /* mov [bp-0x1e], ax */
    II(0x15bfc3, 0x2)    jmpw(0x15bff3, 0x2e);               /* jmp 0x15bff3 */
l_0x15bfc5:
    II(0x15bfc5, 0x4)    test(memb_a16(ss, bp - 0x34), 0x10); /* test byte [bp-0x34], 0x10 */
    II(0x15bfc9, 0x2)    jzw(0x15bfe1, 0x16);                /* jz 0x15bfe1 */
    II(0x15bfcb, 0x3)    les(bx, ss, bp - 0x1e);        /* les bx, [bp-0x1e] */
    II(0x15bfce, 0x4)    add(memw_a16(ss, bp - 0x1e), 0x4);  /* add word [bp-0x1e], 0x4 */
    II(0x15bfd2, 0x3)    mov(ax, memw_a16(es, bx));          /* mov ax, [es:bx] */
    II(0x15bfd5, 0x4)    mov(dx, memw_a16(es, bx + 0x2));    /* mov dx, [es:bx+0x2] */
    II(0x15bfd9, 0x3)    mov(memw_a16(ss, bp - 0x30), ax);   /* mov [bp-0x30], ax */
    II(0x15bfdc, 0x3)    mov(memw_a16(ss, bp - 0x2e), dx);   /* mov [bp-0x2e], dx */
    II(0x15bfdf, 0x2)    jmpw(0x15bff3, 0x12);               /* jmp 0x15bff3 */
l_0x15bfe1:
    II(0x15bfe1, 0x3)    les(bx, ss, bp - 0x1e);        /* les bx, [bp-0x1e] */
    II(0x15bfe4, 0x4)    add(memw_a16(ss, bp - 0x1e), 0x2);  /* add word [bp-0x1e], 0x2 */
    II(0x15bfe8, 0x3)    mov(ax, memw_a16(es, bx));          /* mov ax, [es:bx] */
    II(0x15bfeb, 0x3)    mov(memw_a16(ss, bp - 0x30), ax);   /* mov [bp-0x30], ax */
    II(0x15bfee, 0x5)    mov(memw_a16(ss, bp - 0x2e), 0);    /* mov word [bp-0x2e], 0x0 */
l_0x15bff3:
    II(0x15bff3, 0x3)    mov(ax, memw_a16(ss, bp - 0x2a));   /* mov ax, [bp-0x2a] */
    II(0x15bff6, 0x3)    or_(ax, memw_a16(ss, bp - 0x2c));   /* or ax, [bp-0x2c] */
    II(0x15bff9, 0x2)    jzw(0x15c004, 0x9);                 /* jz 0x15c004 */
    II(0x15bffb, 0x4)    test(memb_a16(ss, bp - 0x34), 0x20); /* test byte [bp-0x34], 0x20 */
    II(0x15bfff, 0x2)    jzw(0x15c004, 0x3);                 /* jz 0x15c004 */
    II(0x15c001, 0x3)    jmpw(0x15bee3, -0x121);             /* jmp 0x15bee3 */
l_0x15c004:
    II(0x15c004, 0x3)    mov(ax, memw_a16(ss, bp - 0x2a));   /* mov ax, [bp-0x2a] */
    II(0x15c007, 0x3)    or_(ax, memw_a16(ss, bp - 0x2c));   /* or ax, [bp-0x2c] */
    II(0x15c00a, 0x2)    jzw(0x15c01e, 0x12);                /* jz 0x15c01e */
    II(0x15c00c, 0x3)    les(bx, ss, bp - 0x1e);        /* les bx, [bp-0x1e] */
    II(0x15c00f, 0x4)    add(memw_a16(ss, bp - 0x1e), 0x2);  /* add word [bp-0x1e], 0x2 */
l_0x15c013:
    II(0x15c013, 0x3)    mov(ax, memw_a16(es, bx));          /* mov ax, [es:bx] */
    II(0x15c016, 0x3)    mov(memw_a16(ss, bp - 0x2c), ax);   /* mov [bp-0x2c], ax */
    II(0x15c019, 0x5)    mov(memw_a16(ss, bp - 0x2a), 0);    /* mov word [bp-0x2a], 0x0 */
l_0x15c01e:
    II(0x15c01e, 0x4)    test(memb_a16(ss, bp - 0x34), 0x80); /* test byte [bp-0x34], 0x80 */
    II(0x15c022, 0x2)    jzw(0x15c031, 0xd);                 /* jz 0x15c031 */
    II(0x15c024, 0x3)    mov(al, memb_a16(ss, bp - 0x30));   /* mov al, [bp-0x30] */
    II(0x15c027, 0x2)    sub(ah, ah);                        /* sub ah, ah */
    II(0x15c029, 0x3)    mov(memw_a16(ss, bp - 0x30), ax);   /* mov [bp-0x30], ax */
    II(0x15c02c, 0x5)    mov(memw_a16(ss, bp - 0x2e), 0);    /* mov word [bp-0x2e], 0x0 */
l_0x15c031:
    II(0x15c031, 0x3)    mov(al, memb_a16(ss, bp - 0x34));   /* mov al, [bp-0x34] */
    II(0x15c034, 0x2)    and_(al, 0x3);                      /* and al, 0x3 */
    II(0x15c036, 0x2)    cmp(al, 0x1);                       /* cmp al, 0x1 */
    II(0x15c038, 0x2)    jnzw(0x15c05b, 0x21);               /* jnz 0x15c05b */
    II(0x15c03a, 0x3)    pushw(memw_a16(ss, bp + 0x16));     /* push word [bp+0x16] */
    II(0x15c03d, 0x3)    pushw(memw_a16(ss, bp + 0x14));     /* push word [bp+0x14] */
    II(0x15c040, 0x3)    pushw(memw_a16(ss, bp - 0x12));     /* push word [bp-0x12] */
    II(0x15c043, 0x3)    pushw(memw_a16(ss, bp - 0x14));     /* push word [bp-0x14] */
    II(0x15c046, 0x3)    pushw(memw_a16(ss, bp - 0x2e));     /* push word [bp-0x2e] */
    II(0x15c049, 0x3)    pushw(memw_a16(ss, bp - 0x30));     /* push word [bp-0x30] */
    II(0x15c04c, 0x3)    lea(ax, bp - 0x28);                 /* lea ax, [bp-0x28] */
    II(0x15c04f, 0x1)    pushw(ss);                          /* push ss */
    II(0x15c050, 0x1)    pushw(ax);                          /* push ax */
    II(0x15c051, 0x3)    mov(al, memb_a16(ss, bp - 0x2));    /* mov al, [bp-0x2] */
    II(0x15c054, 0x1)    pushw(ax);                          /* push ax */
    II(0x15c055, 0x3)    callw(0x15d3d8, 0x1380);            /* call 0x15d3d8 */
    II(0x15c058, 0x3)    jmpw(0x15bddf, -0x27c);             /* jmp 0x15bddf */
l_0x15c05b:
    II(0x15c05b, 0x3)    pushw(memw_a16(ss, bp + 0x16));     /* push word [bp+0x16] */
    II(0x15c05e, 0x3)    pushw(memw_a16(ss, bp + 0x14));     /* push word [bp+0x14] */
    II(0x15c061, 0x3)    pushw(memw_a16(ss, bp - 0x12));     /* push word [bp-0x12] */
    II(0x15c064, 0x3)    pushw(memw_a16(ss, bp - 0x14));     /* push word [bp-0x14] */
    II(0x15c067, 0x3)    pushw(memw_a16(ss, bp - 0x2e));     /* push word [bp-0x2e] */
    II(0x15c06a, 0x3)    pushw(memw_a16(ss, bp - 0x30));     /* push word [bp-0x30] */
    II(0x15c06d, 0x3)    lea(ax, bp - 0x28);                 /* lea ax, [bp-0x28] */
    II(0x15c070, 0x1)    pushw(ss);                          /* push ss */
    II(0x15c071, 0x1)    pushw(ax);                          /* push ax */
    II(0x15c072, 0x3)    mov(al, memb_a16(ss, bp - 0x2));    /* mov al, [bp-0x2] */
    II(0x15c075, 0x1)    pushw(ax);                          /* push ax */
    II(0x15c076, 0x3)    callw(0x15d295, 0x121c);            /* call 0x15d295 */
    II(0x15c079, 0x3)    jmpw(0x15bddf, -0x29d);             /* jmp 0x15bddf */
l_0x15c07c:
    II(0x15c07c, 0x3)    cmp(memw_a16(ss, bp - 0x32), cx);   /* cmp [bp-0x32], cx */
    II(0x15c07f, 0x2)    jzw(0x15c0d4, 0x53);                /* jz 0x15c0d4 */
    II(0x15c081, 0x3)    mov(bx, memw_a16(ss, bp - 0x10));   /* mov bx, [bp-0x10] */
    II(0x15c084, 0x4)    mov(al, memb_a16(es, bx + 0x2));    /* mov al, [es:bx+0x2] */
    II(0x15c088, 0x2)    sub(ah, ah);                        /* sub ah, ah */
    II(0x15c08a, 0x1)    dec(ax);                            /* dec ax */
    II(0x15c08b, 0x3)    mov(memw_a16(ss, bp - 0x32), ax);   /* mov [bp-0x32], ax */
    II(0x15c08e, 0x4)    mov(al, memb_a16(es, bx + 0x3));    /* mov al, [es:bx+0x3] */
    II(0x15c092, 0x2)    sub(ah, ah);                        /* sub ah, ah */
    II(0x15c094, 0x3)    mov(memw_a16(ss, bp - 0x30), ax);   /* mov [bp-0x30], ax */
    II(0x15c097, 0x3)    mov(memw_a16(ss, bp - 0x2e), cx);   /* mov [bp-0x2e], cx */
    II(0x15c09a, 0x3)    lea(ax, bx + 0x4);                  /* lea ax, [bx+0x4] */
    II(0x15c09d, 0x3)    mov(memw_a16(ss, bp - 0xc), ax);    /* mov [bp-0xc], ax */
    II(0x15c0a0, 0x3)    mov(memw_a16(ss, bp - 0xa), es);    /* mov [bp-0xa], es */
    II(0x15c0a3, 0x3)    mov(cx, memw_a16(ss, bp - 0x2a));   /* mov cx, [bp-0x2a] */
    II(0x15c0a6, 0x3)    or_(cx, memw_a16(ss, bp - 0x2c));   /* or cx, [bp-0x2c] */
    II(0x15c0a9, 0x2)    jnzw(0x15c0ae, 0x3);                /* jnz 0x15c0ae */
    II(0x15c0ab, 0x3)    jmpw(0x15c13f, 0x91);               /* jmp 0x15c13f */
l_0x15c0ae:
    II(0x15c0ae, 0x4)    test(memb_a16(ss, bp - 0x34), 0x20); /* test byte [bp-0x34], 0x20 */
    II(0x15c0b2, 0x2)    jzw(0x15c0cb, 0x17);                /* jz 0x15c0cb */
    II(0x15c0b4, 0x2)    mov(bx, ax);                        /* mov bx, ax */
    II(0x15c0b6, 0x3)    mov(cx, memw_a16(es, bx));          /* mov cx, [es:bx] */
    II(0x15c0b9, 0x4)    mov(dx, memw_a16(es, bx + 0x2));    /* mov dx, [es:bx+0x2] */
    II(0x15c0bd, 0x3)    mov(memw_a16(ss, bp - 0x2c), cx);   /* mov [bp-0x2c], cx */
    II(0x15c0c0, 0x3)    mov(memw_a16(ss, bp - 0x2a), dx);   /* mov [bp-0x2a], dx */
    II(0x15c0c3, 0x3)    add(ax, 0x4);                       /* add ax, 0x4 */
    II(0x15c0c6, 0x3)    mov(memw_a16(ss, bp - 0xc), ax);    /* mov [bp-0xc], ax */
    II(0x15c0c9, 0x2)    jmpw(0x15c13f, 0x74);               /* jmp 0x15c13f */
l_0x15c0cb:
    II(0x15c0cb, 0x3)    les(bx, ss, bp - 0xc);         /* les bx, [bp-0xc] */
    II(0x15c0ce, 0x4)    add(memw_a16(ss, bp - 0xc), 0x2);   /* add word [bp-0xc], 0x2 */
    II(0x15c0d2, 0x2)    jmpw(0x15c134, 0x60);               /* jmp 0x15c134 */
l_0x15c0d4:
    II(0x15c0d4, 0x3)    mov(ax, memw_a16(ss, bp - 0x10));   /* mov ax, [bp-0x10] */
    II(0x15c0d7, 0x2)    mov(dx, es);                        /* mov dx, es */
    II(0x15c0d9, 0x1)    inc(ax);                            /* inc ax */
    II(0x15c0da, 0x1)    inc(ax);                            /* inc ax */
    II(0x15c0db, 0x3)    mov(memw_a16(ss, bp - 0xc), ax);    /* mov [bp-0xc], ax */
    II(0x15c0de, 0x3)    mov(memw_a16(ss, bp - 0xa), dx);    /* mov [bp-0xa], dx */
    II(0x15c0e1, 0x3)    mov(ax, memw_a16(ss, bp - 0x10));   /* mov ax, [bp-0x10] */
    II(0x15c0e4, 0x3)    add(ax, 0x4);                       /* add ax, 0x4 */
    II(0x15c0e7, 0x3)    mov(memw_a16(ss, bp - 0x1e), ax);   /* mov [bp-0x1e], ax */
    II(0x15c0ea, 0x3)    mov(memw_a16(ss, bp - 0x1c), dx);   /* mov [bp-0x1c], dx */
    II(0x15c0ed, 0x2)    mov(bx, ax);                        /* mov bx, ax */
    II(0x15c0ef, 0x3)    mov(cl, memb_a16(es, bx));          /* mov cl, [es:bx] */
    II(0x15c0f2, 0x2)    sub(ch, ch);                        /* sub ch, ch */
    II(0x15c0f4, 0x3)    mov(memw_a16(ss, bp - 0x30), cx);   /* mov [bp-0x30], cx */
    II(0x15c0f7, 0x5)    mov(memw_a16(ss, bp - 0x2e), 0);    /* mov word [bp-0x2e], 0x0 */
    II(0x15c0fc, 0x1)    inc(ax);                            /* inc ax */
    II(0x15c0fd, 0x3)    mov(memw_a16(ss, bp - 0x1e), ax);   /* mov [bp-0x1e], ax */
    II(0x15c100, 0x3)    mov(cx, memw_a16(ss, bp - 0x2a));   /* mov cx, [bp-0x2a] */
    II(0x15c103, 0x3)    or_(cx, memw_a16(ss, bp - 0x2c));   /* or cx, [bp-0x2c] */
    II(0x15c106, 0x2)    jzw(0x15c125, 0x1d);                /* jz 0x15c125 */
    II(0x15c108, 0x4)    test(memb_a16(ss, bp - 0x34), 0x20); /* test byte [bp-0x34], 0x20 */
    II(0x15c10c, 0x2)    jzw(0x15c125, 0x17);                /* jz 0x15c125 */
    II(0x15c10e, 0x2)    mov(bx, ax);                        /* mov bx, ax */
    II(0x15c110, 0x3)    mov(cx, memw_a16(es, bx));          /* mov cx, [es:bx] */
    II(0x15c113, 0x4)    mov(si, memw_a16(es, bx + 0x2));    /* mov si, [es:bx+0x2] */
    II(0x15c117, 0x3)    mov(memw_a16(ss, bp - 0x2c), cx);   /* mov [bp-0x2c], cx */
    II(0x15c11a, 0x3)    mov(memw_a16(ss, bp - 0x2a), si);   /* mov [bp-0x2a], si */
    II(0x15c11d, 0x3)    add(ax, 0x4);                       /* add ax, 0x4 */
    II(0x15c120, 0x3)    mov(memw_a16(ss, bp - 0x1e), ax);   /* mov [bp-0x1e], ax */
    II(0x15c123, 0x2)    jmpw(0x15c13f, 0x1a);               /* jmp 0x15c13f */
l_0x15c125:
    II(0x15c125, 0x3)    mov(ax, memw_a16(ss, bp - 0x2a));   /* mov ax, [bp-0x2a] */
    II(0x15c128, 0x3)    or_(ax, memw_a16(ss, bp - 0x2c));   /* or ax, [bp-0x2c] */
    II(0x15c12b, 0x2)    jzw(0x15c13f, 0x12);                /* jz 0x15c13f */
    II(0x15c12d, 0x3)    les(bx, ss, bp - 0x1e);        /* les bx, [bp-0x1e] */
    II(0x15c130, 0x4)    add(memw_a16(ss, bp - 0x1e), 0x2);  /* add word [bp-0x1e], 0x2 */
l_0x15c134:
    II(0x15c134, 0x3)    mov(ax, memw_a16(es, bx));          /* mov ax, [es:bx] */
    II(0x15c137, 0x3)    mov(memw_a16(ss, bp - 0x2c), ax);   /* mov [bp-0x2c], ax */
    II(0x15c13a, 0x5)    mov(memw_a16(ss, bp - 0x2a), 0);    /* mov word [bp-0x2a], 0x0 */
l_0x15c13f:
    II(0x15c13f, 0x3)    pushw(memw_a16(ss, bp + 0x16));     /* push word [bp+0x16] */
    II(0x15c142, 0x3)    pushw(memw_a16(ss, bp + 0x14));     /* push word [bp+0x14] */
    II(0x15c145, 0x3)    pushw(memw_a16(ss, bp - 0x30));     /* push word [bp-0x30] */
    II(0x15c148, 0x3)    lea(ax, bp - 0x28);                 /* lea ax, [bp-0x28] */
    II(0x15c14b, 0x1)    pushw(ss);                          /* push ss */
    II(0x15c14c, 0x1)    pushw(ax);                          /* push ax */
    II(0x15c14d, 0x3)    callw(0x15ce70, 0xd20);             /* call 0x15ce70 */
    II(0x15c150, 0x3)    jmpw(0x15bddf, -0x374);             /* jmp 0x15bddf */
l_0x15c153:
    II(0x15c153, 0x3)    mov(ax, memw_a16(ss, bp - 0x24));   /* mov ax, [bp-0x24] */
    II(0x15c156, 0x3)    or_(ax, memw_a16(ss, bp - 0x26));   /* or ax, [bp-0x26] */
    II(0x15c159, 0x2)    jnzw(0x15c167, 0xc);                /* jnz 0x15c167 */
    II(0x15c15b, 0x4)    cmp(memw_a16(ss, bp - 0x28), 0);    /* cmp word [bp-0x28], 0x0 */
    II(0x15c15f, 0x2)    jnzw(0x15c167, 0x6);                /* jnz 0x15c167 */
    II(0x15c161, 0x3)    mov(ax, 0x521);                     /* mov ax, 0x521 */
    II(0x15c164, 0x3)    jmpw(0x15c1ef, 0x88);               /* jmp 0x15c1ef */
l_0x15c167:
    II(0x15c167, 0x3)    mov(ax, memw_a16(ss, bp - 0x2c));   /* mov ax, [bp-0x2c] */
    II(0x15c16a, 0x3)    mov(dx, memw_a16(ss, bp - 0x2a));   /* mov dx, [bp-0x2a] */
    II(0x15c16d, 0x3)    add(memw_a16(ss, bp - 0x26), ax);   /* add [bp-0x26], ax */
    II(0x15c170, 0x3)    adc(memw_a16(ss, bp - 0x24), dx);   /* adc [bp-0x24], dx */
    II(0x15c173, 0x3)    pushw(memw_a16(ss, bp - 0xa));      /* push word [bp-0xa] */
    II(0x15c176, 0x3)    pushw(memw_a16(ss, bp - 0xc));      /* push word [bp-0xc] */
    II(0x15c179, 0x3)    inc(memw_a16(ss, bp - 0x32));       /* inc word [bp-0x32] */
    II(0x15c17c, 0x3)    mov(ax, memw_a16(ss, bp - 0x32));   /* mov ax, [bp-0x32] */
    II(0x15c17f, 0x1)    pushw(ax);                          /* push ax */
    II(0x15c180, 0x3)    pushw(memw_a16(ss, bp - 0x24));     /* push word [bp-0x24] */  // addr hi
    II(0x15c183, 0x3)    pushw(memw_a16(ss, bp - 0x26));     /* push word [bp-0x26] */  // addr lo
    II(0x15c186, 0x3)    pushw(memw_a16(ss, bp - 0x28));     /* push word [bp-0x28] */  // seg
    II(0x15c189, 0x3)    pushw(memw_a16(ss, bp - 0x4));      /* push word [bp-0x4] */   // 0x7 - type of operation
    II(0x15c18c, 0x3)    pushw(memw_a16(ss, bp + 0x6));      /* push word [bp+0x6] */
    II(0x15c18f, 0x3)    pushw(memw_a16(ss, bp + 0x4));      /* push word [bp+0x4] */
    II(0x15c192, 0x3)    pushw(memw_a16(ss, bp + 0xa));      /* push word [bp+0xa] */   // seg dest
    II(0x15c195, 0x3)    pushw(memw_a16(ss, bp + 0x8));      /* push word [bp+0x8] */   // addr dest - 0x0.
    II(0x15c198, 0x1)    pushw(cs);                          /* push cs */
    II(0x15c199, 0x3)    callw(0x15ba47, -0x755);            /* call 0x15ba47 */
    II(0x15c19c, 0x3)    add(sp, 0x16);                      /* add sp, 0x16 */
    II(0x15c19f, 0x3)    mov(ax, memw_a16(ss, bp - 0xc));    /* mov ax, [bp-0xc] */
    II(0x15c1a2, 0x3)    sub(ax, memw_a16(ss, bp - 0x10));   /* sub ax, [bp-0x10] */
    II(0x15c1a5, 0x3)    mov(memw_a16(ss, bp - 0x20), ax);   /* mov [bp-0x20], ax */
    II(0x15c1a8, 0x4)    cmp(memw_a16(ss, bp - 0x8), 0);     /* cmp word [bp-0x8], 0x0 */
    II(0x15c1ac, 0x2)    jzw(0x15c1b7, 0x9);                 /* jz 0x15c1b7 */
    II(0x15c1ae, 0x3)    mov(cx, memw_a16(ss, bp - 0x32));   /* mov cx, [bp-0x32] */
    II(0x15c1b1, 0x2)    shl(cx, 0x1);                       /* shl cx, 1 */
    II(0x15c1b3, 0x2)    add(ax, cx);                        /* add ax, cx */
    II(0x15c1b5, 0x2)    jmpw(0x15c1d9, 0x22);               /* jmp 0x15c1d9 */
l_0x15c1b7:
    II(0x15c1b7, 0x3)    mov(ax, memw_a16(ss, bp - 0x1c));   /* mov ax, [bp-0x1c] */
    II(0x15c1ba, 0x3)    or_(ax, memw_a16(ss, bp - 0x1e));   /* or ax, [bp-0x1e] */
    II(0x15c1bd, 0x2)    jnzw(0x15c1d3, 0x14);               /* jnz 0x15c1d3 */
    II(0x15c1bf, 0x3)    mov(al, memb_a16(ss, bp - 0x34));   /* mov al, [bp-0x34] */
    II(0x15c1c2, 0x3)    and_(ax, 0x40);                     /* and ax, 0x40 */
    II(0x15c1c5, 0x3)    cmp(ax, 0x1);                       /* cmp ax, 0x1 */
    II(0x15c1c8, 0x2)    sbb(ax, ax);                        /* sbb ax, ax */
    II(0x15c1ca, 0x1)    inc(ax);                            /* inc ax */
    II(0x15c1cb, 0x1)    inc(ax);                            /* inc ax */
    II(0x15c1cc, 0x1)    inc(ax);                            /* inc ax */
    II(0x15c1cd, 0x1)    inc(ax);                            /* inc ax */
    II(0x15c1ce, 0x3)    add(memw_a16(ss, bp - 0x20), ax);   /* add [bp-0x20], ax */
    II(0x15c1d1, 0x2)    jmpw(0x15c1dc, 0x9);                /* jmp 0x15c1dc */
l_0x15c1d3:
    II(0x15c1d3, 0x3)    mov(ax, memw_a16(ss, bp - 0x1e));   /* mov ax, [bp-0x1e] */
    II(0x15c1d6, 0x3)    sub(ax, memw_a16(ss, bp - 0x10));   /* sub ax, [bp-0x10] */
l_0x15c1d9:
    II(0x15c1d9, 0x3)    mov(memw_a16(ss, bp - 0x20), ax);   /* mov [bp-0x20], ax */
l_0x15c1dc:
    II(0x15c1dc, 0x3)    mov(ax, memw_a16(ss, bp - 0x20));   /* mov ax, [bp-0x20] */
    II(0x15c1df, 0x3)    add(memw_a16(ss, bp + 0x10), ax);   /* add [bp+0x10], ax */
    II(0x15c1e2, 0x2)    sub(dx, dx);                        /* sub dx, dx */
    II(0x15c1e4, 0x3)    sub(memw_a16(ss, bp + 0xc), ax);    /* sub [bp+0xc], ax */
    II(0x15c1e7, 0x3)    sbb(memw_a16(ss, bp + 0xe), dx);    /* sbb [bp+0xe], dx */
    II(0x15c1ea, 0x3)    jmpw(0x15bbbf, -0x62e);             /* jmp 0x15bbbf */
l_0x15c1ed:
    II(0x15c1ed, 0x2)    sub(ax, ax);                        /* sub ax, ax */
l_0x15c1ef:
    II(0x15c1ef, 0x1)    popw(si);                           /* pop si */
    II(0x15c1f0, 0x1)    leavew();                           /* leave  */
    II(0x15c1f1, 0x3)    retw(0x14);                         /* ret 0x14 */
}

