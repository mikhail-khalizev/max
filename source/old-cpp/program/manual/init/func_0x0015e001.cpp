FUNC_BEGIN(0x0015e001, 0xe9b3654003ecdfc2, 0x10, ({0xc8, 0x4e, 0, 0, 0x57, 0x56, 0x1e, 0xb8, 0xa8, 0, 0x8e, 0xd8, 0x8b, 0x46, 0x6, 0x8b, 0x56, 0x8, 0xb1, 0xc, 0x9a, 0x24, 0x43, 0x80, 0, 0x89, 0x46, 0xba, 0x89, 0x56, 0xbc, 0x8d, 0x46, 0xce, 0x16, 0x50, 0xe8, 0xb6, 0x2, 0xfe, 0x6, 0xf2, 0x2b, 0x83, 0x7e, 0x14, 0, 0x74, 0x1b, 0xf6, 0x46, 0x16, 0x40, 0x75, 0x3, 0xe9, 0x52, 0x2, 0x8d, 0x46, 0xce, 0x16, 0x50, 0xe8, 0xf7, 0x2, 0xfe, 0xe, 0xf2, 0x2b, 0xb8, 0x1, 0, 0xe9, 0x4e, 0x2, 0xc7, 0x46, 0xcc, 0, 0, 0xe9, 0x10, 0x2, 0x69, 0xde, 0x34, 0x1, 0x3, 0x1e, 0x1a, 0x1f, 0x83, 0xc3, 0x12, 0x89, 0x5e, 0x10, 0x8c, 0x46, 0x12, 0x26, 0x8b, 0x47, 0x3c, 0x26, 0x8b, 0x57, 0x3e, 0x89, 0x46, 0xf0, 0x89, 0x56, 0xf2, 0xc7, 0x46, 0xca, 0, 0, 0xe9, 0xa7, 0x1, 0x6b, 0x76, 0xca, 0x18, 0x8b, 0x5e, 0xf0, 0x26, 0x8b, 0x40, 0x4, 0x26, 0x8b, 0x50, 0x6, 0x89, 0x46, 0xbe, 0x89, 0x56, 0xc0, 0x8b, 0x46, 0xba, 0x8b, 0x56, 0xbc, 0x39, 0x56, 0xc0, 0x76, 0x3, 0xe9, 0x81, 0x1, 0x72, 0x5, 0x39, 0x46, 0xbe, 0x77, 0x18, 0x6b, 0x5e, 0xca, 0x18, 0xc4, 0x76, 0xf0, 0x26, 0x8b, 0x8, 0x26, 0x8b, 0x78, 0x2, 0x3, 0x4e, 0xbe, 0x13, 0x7e, 0xc0, 0x3b, 0xfa, 0x73, 0x3, 0xe9, 0x5f, 0x1, 0x77, 0x7, 0x3b, 0xc8, 0x77, 0x3, 0xe9, 0x56, 0x1, 0xff, 0x76, 0x12, 0xff, 0x76, 0x10, 0xff, 0x76, 0xca, 0x2b, 0x46, 0xbe, 0x1b, 0x56, 0xc0, 0xb1, 0xc, 0x9a, 0x78, 0x43, 0x80, 0, 0x89, 0x46, 0xc8, 0x50, 0x8d, 0x4e, 0xb6, 0x16, 0x51, 0x8d, 0x56, 0xc4, 0x16, 0x52, 0x8d, 0x5e, 0xb2, 0x16, 0x53, 0xe8, 0x82, 0xfb, 0xff, 0x76, 0xc6, 0xff, 0x76, 0xc4, 0xff, 0x76, 0xc8, 0xff, 0x76, 0xca, 0x8b, 0x46, 0x10, 0x8b, 0x56, 0x12, 0x5, 0xea, 0, 0x52, 0x50, 0xff, 0x76, 0xbc, 0xff, 0x76, 0xba, 0x1e, 0x68, 0xf3, 0x2b, 0xe8, 0x4c, 0x2f, 0x83, 0xc4, 0x14, 0xc4, 0x5e, 0x10, 0x26, 0x8b, 0x47, 0x38, 0x26, 0x8b, 0x57, 0x3a, 0x5, 0x6, 0, 0x52, 0x50, 0xe8, 0xa, 0x2, 0x6a, 0, 0xff, 0x76, 0xc6, 0xff, 0x76, 0xc4, 0xc4, 0x5e, 0x10, 0x26, 0xc4, 0x77, 0x38, 0x26, 0xff, 0x74, 0x4, 0xff, 0x76, 0xbc, 0xff, 0x76, 0xba, 0xff, 0x1e, 0x8, 0x1a, 0x83, 0xc4, 0xc, 0xc4, 0x5e, 0x10, 0x26, 0x8b, 0x47, 0x54, 0x26, 0x8b, 0x57, 0x56, 0x89, 0x46, 0xf8, 0x89, 0x56, 0xfa, 0x8b, 0x76, 0xb2, 0xc1, 0xe6, 0x3, 0x3, 0xf0, 0x8e, 0xc2, 0x26, 0x8b, 0x44, 0x4, 0x26, 0x8b, 0x54, 0x6, 0x26, 0x2b, 0x4, 0x26, 0x1b, 0x54, 0x2, 0x89, 0x46, 0xf4, 0x89, 0x56, 0xf6, 0x8e, 0x46, 0x12, 0x26, 0x8b, 0x47, 0x48, 0x26, 0x8b, 0x57, 0x4a, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0xff, 0x36, 0xfc, 0x19, 0xff, 0x76, 0xbc, 0xff, 0x76, 0xba, 0x68, 0, 0x10, 0xe8, 0xff, 0, 0x83, 0x7e, 0xb8, 0, 0x75, 0x23, 0x81, 0x7e, 0xb6, 0, 0x10, 0x73, 0x1c, 0x6a, 0, 0xb8, 0, 0x10, 0x8b, 0x4e, 0xb6, 0x2b, 0xc1, 0x50, 0x3, 0xe, 0xfa, 0x19, 0xa1, 0xfc, 0x19, 0x50, 0x51, 0x90, 0xe, 0xe8, 0xe8, 0x2d, 0x83, 0xc4, 0x8, 0xff, 0x36, 0xf8, 0x19, 0x8b, 0x5e, 0xb2, 0xc1, 0xe3, 0x3, 0xc4, 0x76, 0xf8, 0x26, 0x8b, 0, 0x26, 0x8b, 0x50, 0x2, 0x3, 0x46, 0xfc, 0x13, 0x56, 0xfe, 0x52, 0x50, 0xff, 0x76, 0xf4, 0xe8, 0xb4, 0, 0xff, 0x76, 0x12, 0xff, 0x76, 0x10, 0xff, 0x36, 0xf8, 0x19, 0xff, 0x36, 0xf6, 0x19, 0xff, 0x76, 0xf6, 0xff, 0x76, 0xf4, 0xff, 0x36, 0xfc, 0x19, 0xff, 0x36, 0xfa, 0x19, 0x8b, 0x46, 0xba, 0x8b, 0x56, 0xbc, 0x2b, 0x6, 0xea, 0x19, 0x1b, 0x16, 0xec, 0x19, 0x52, 0x50, 0xe8, 0x99, 0xd9, 0x89, 0x46, 0xc2, 0xeb, 0x6d, 0xff, 0x46, 0xca, 0x8b, 0x46, 0xca, 0x2b, 0xd2, 0xc4, 0x5e, 0x10, 0x26, 0xc4, 0x5f, 0x1c, 0x26, 0x39, 0x57, 0x46, 0x72, 0x2d, 0x77, 0x6, 0x26, 0x39, 0x47, 0x44, 0x76, 0x25, 0x6b, 0xd8, 0x18, 0x3, 0x5e, 0xf0, 0x8e, 0x46, 0xf2, 0x26, 0xf6, 0x47, 0x9, 0x10, 0x75, 0x3, 0xe9, 0x2c, 0xfe, 0x26, 0x8b, 0x47, 0x14, 0x2b, 0xc9, 0x50, 0x51, 0x9a, 0xdc, 0x55, 0x80, 0, 0x5b, 0x5b, 0xe9, 0x29, 0xfe, 0xff, 0x46, 0xcc, 0x83, 0x7e, 0xcc, 0x10, 0x77, 0x22, 0x8b, 0x5e, 0xcc, 0xd1, 0xe3, 0x83, 0xbf, 0x24, 0x1f, 0, 0x74, 0xeb, 0xc4, 0x1e, 0x1a, 0x1f, 0x81, 0xc3, 0x52, 0x13, 0x8b, 0x76, 0xcc, 0x26, 0x80, 0x38, 0, 0x74, 0x3, 0xe9, 0xca, 0xfd, 0xeb, 0xd5, 0x8d, 0x46, 0xce, 0x16, 0x50, 0xe8, 0xa5, 0, 0xfe, 0xe, 0xf2, 0x2b, 0x2b, 0xc0, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb}))
    II(0x0015e001, 0x4)   enterw(0x4e, 0);                      /* enter 0x4e, 0x0 */
    II(0x0015e005, 0x1)   pushw(di);                            /* push di */
    II(0x0015e006, 0x1)   pushw(si);                            /* push si */
    II(0x0015e007, 0x1)   pushw(ds);                            /* push ds */
    II(0x0015e008, 0x3)   mov(ax, 0xa8);                        /* mov ax, 0xa8 */
    II(0x0015e00b, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x0015e00d, 0x3)   mov(ax, memw_a16(ss, bp + 0x6));      /* mov ax, [bp+0x6] */
    II(0x0015e010, 0x3)   mov(dx, memw_a16(ss, bp + 0x8));      /* mov dx, [bp+0x8] */
    II(0x0015e013, 0x2)   mov(cl, 0xc);                         /* mov cl, 0xc */
    II(0x0015e015, 0x5)   callw_far_abs(0x80, 0x4324);          /* call word 0x80:0x4324 */
    II(0x0015e01a, 0x3)   mov(memw_a16(ss, bp - 0x46), ax);     /* mov [bp-0x46], ax */
    II(0x0015e01d, 0x3)   mov(memw_a16(ss, bp - 0x44), dx);     /* mov [bp-0x44], dx */
    II(0x0015e020, 0x3)   lea(ax, bp - 0x32);                   /* lea ax, [bp-0x32] */
    II(0x0015e023, 0x1)   pushw(ss);                            /* push ss */
    II(0x0015e024, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015e025, 0x3)   callw(0x0015e2de, 0x2b6);             /* call 0x15e2de */
    II(0x0015e028, 0x4)   inc(memb_a16(ds, 0x2bf2));            /* inc byte [0x2bf2] */
    II(0x0015e02c, 0x4)   cmp(memw_a16(ss, bp + 0x14), 0);      /* cmp word [bp+0x14], 0x0 */
    II(0x0015e030, 0x2)   jzw(0x0015e04d, 0x1b);                /* jz 0x15e04d */
    II(0x0015e032, 0x4)   test(memb_a16(ss, bp + 0x16), 0x40);  /* test byte [bp+0x16], 0x40 */
    II(0x0015e036, 0x2)   jnzw(0x0015e03b, 0x3);                /* jnz 0x15e03b */
    II(0x0015e038, 0x3)   jmpw(0x0015e28d, 0x252);              /* jmp 0x15e28d */
l_0x0015e03b:
    II(0x0015e03b, 0x3)   lea(ax, bp - 0x32);                   /* lea ax, [bp-0x32] */
    II(0x0015e03e, 0x1)   pushw(ss);                            /* push ss */
    II(0x0015e03f, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015e040, 0x3)   callw(0x0015e33a, 0x2f7);             /* call 0x15e33a */
    II(0x0015e043, 0x4)   dec(memb_a16(ds, 0x2bf2));            /* dec byte [0x2bf2] */
    II(0x0015e047, 0x3)   mov(ax, 0x1);                         /* mov ax, 0x1 */
    II(0x0015e04a, 0x3)   jmpw(0x0015e29b, 0x24e);              /* jmp 0x15e29b */
l_0x0015e04d:
    II(0x0015e04d, 0x5)   mov(memw_a16(ss, bp - 0x34), 0);      /* mov word [bp-0x34], 0x0 */
    II(0x0015e052, 0x3)   jmpw(0x0015e265, 0x210);              /* jmp 0x15e265 */
l_0x0015e055:
    II(0x0015e055, 0x4)   imul(bx, si, 0x134);                  /* imul bx, si, 0x134 */
    II(0x0015e059, 0x4)   add(bx, memw_a16(ds, 0x1f1a));        /* add bx, [0x1f1a] */
    II(0x0015e05d, 0x3)   add(bx, 0x12);                        /* add bx, 0x12 */
    II(0x0015e060, 0x3)   mov(memw_a16(ss, bp + 0x10), bx);     /* mov [bp+0x10], bx */
    II(0x0015e063, 0x3)   mov(memw_a16(ss, bp + 0x12), es);     /* mov [bp+0x12], es */
    II(0x0015e066, 0x4)   mov(ax, memw_a16(es, bx + 0x3c));     /* mov ax, [es:bx+0x3c] */
    II(0x0015e06a, 0x4)   mov(dx, memw_a16(es, bx + 0x3e));     /* mov dx, [es:bx+0x3e] */
    II(0x0015e06e, 0x3)   mov(memw_a16(ss, bp - 0x10), ax);     /* mov [bp-0x10], ax */
    II(0x0015e071, 0x3)   mov(memw_a16(ss, bp - 0xe), dx);      /* mov [bp-0xe], dx */
    II(0x0015e074, 0x5)   mov(memw_a16(ss, bp - 0x36), 0);      /* mov word [bp-0x36], 0x0 */
    II(0x0015e079, 0x3)   jmpw(0x0015e223, 0x1a7);              /* jmp 0x15e223 */
l_0x0015e07c:
    II(0x0015e07c, 0x4)   imul(si, memw_a16(ss, bp - 0x36), 0x18); /* imul si, [bp-0x36], 0x18 */
    II(0x0015e080, 0x3)   mov(bx, memw_a16(ss, bp - 0x10));     /* mov bx, [bp-0x10] */
    II(0x0015e083, 0x4)   mov(ax, memw_a16(es, bx + si + 0x4)); /* mov ax, [es:bx+si+0x4] */
    II(0x0015e087, 0x4)   mov(dx, memw_a16(es, bx + si + 0x6)); /* mov dx, [es:bx+si+0x6] */
l_0x0015e08b:
    II(0x0015e08b, 0x3)   mov(memw_a16(ss, bp - 0x42), ax);     /* mov [bp-0x42], ax */
    II(0x0015e08e, 0x3)   mov(memw_a16(ss, bp - 0x40), dx);     /* mov [bp-0x40], dx */
    II(0x0015e091, 0x3)   mov(ax, memw_a16(ss, bp - 0x46));     /* mov ax, [bp-0x46] */
    II(0x0015e094, 0x3)   mov(dx, memw_a16(ss, bp - 0x44));     /* mov dx, [bp-0x44] */
    II(0x0015e097, 0x3)   cmp(memw_a16(ss, bp - 0x40), dx);     /* cmp [bp-0x40], dx */
    II(0x0015e09a, 0x2)   jbew(0x0015e09f, 0x3);                /* jbe 0x15e09f */
    II(0x0015e09c, 0x3)   jmpw(0x0015e220, 0x181);              /* jmp 0x15e220 */
l_0x0015e09f:
    II(0x0015e09f, 0x2)   jbw(0x0015e0a6, 0x5);                 /* jb 0x15e0a6 */
    II(0x0015e0a1, 0x3)   cmp(memw_a16(ss, bp - 0x42), ax);     /* cmp [bp-0x42], ax */
    II(0x0015e0a4, 0x2)   jaw(0x0015e0be, 0x18);                /* ja 0x15e0be */
l_0x0015e0a6:
    II(0x0015e0a6, 0x4)   imul(bx, memw_a16(ss, bp - 0x36), 0x18); /* imul bx, [bp-0x36], 0x18 */
    II(0x0015e0aa, 0x3)   les(si, ss, bp - 0x10);               /* les si, [bp-0x10] */
    II(0x0015e0ad, 0x3)   mov(cx, memw_a16(es, bx + si));       /* mov cx, [es:bx+si] */
    II(0x0015e0b0, 0x4)   mov(di, memw_a16(es, bx + si + 0x2)); /* mov di, [es:bx+si+0x2] */
    II(0x0015e0b4, 0x3)   add(cx, memw_a16(ss, bp - 0x42));     /* add cx, [bp-0x42] */
    II(0x0015e0b7, 0x3)   adc(di, memw_a16(ss, bp - 0x40));     /* adc di, [bp-0x40] */
    II(0x0015e0ba, 0x2)   cmp(di, dx);                          /* cmp di, dx */
    II(0x0015e0bc, 0x2)   jaew(0x0015e0c1, 0x3);                /* jae 0x15e0c1 */
l_0x0015e0be:
    II(0x0015e0be, 0x3)   jmpw(0x0015e220, 0x15f);              /* jmp 0x15e220 */
l_0x0015e0c1:
    II(0x0015e0c1, 0x2)   jaw(0x0015e0ca, 0x7);                 /* ja 0x15e0ca */
    II(0x0015e0c3, 0x2)   cmp(cx, ax);                          /* cmp cx, ax */
    II(0x0015e0c5, 0x2)   jaw(0x0015e0ca, 0x3);                 /* ja 0x15e0ca */
    II(0x0015e0c7, 0x3)   jmpw(0x0015e220, 0x156);              /* jmp 0x15e220 */
l_0x0015e0ca:
    II(0x0015e0ca, 0x3)   pushw(memw_a16(ss, bp + 0x12));       /* push word [bp+0x12] */
    II(0x0015e0cd, 0x3)   pushw(memw_a16(ss, bp + 0x10));       /* push word [bp+0x10] */
    II(0x0015e0d0, 0x3)   pushw(memw_a16(ss, bp - 0x36));       /* push word [bp-0x36] */
    II(0x0015e0d3, 0x3)   sub(ax, memw_a16(ss, bp - 0x42));     /* sub ax, [bp-0x42] */
    II(0x0015e0d6, 0x3)   sbb(dx, memw_a16(ss, bp - 0x40));     /* sbb dx, [bp-0x40] */
    II(0x0015e0d9, 0x2)   mov(cl, 0xc);                         /* mov cl, 0xc */
    II(0x0015e0db, 0x5)   callw_far_abs(0x80, 0x4378);          /* call word 0x80:0x4378 */
    II(0x0015e0e0, 0x3)   mov(memw_a16(ss, bp - 0x38), ax);     /* mov [bp-0x38], ax */
    II(0x0015e0e3, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015e0e4, 0x3)   lea(cx, bp - 0x4a);                   /* lea cx, [bp-0x4a] */
    II(0x0015e0e7, 0x1)   pushw(ss);                            /* push ss */
    II(0x0015e0e8, 0x1)   pushw(cx);                            /* push cx */
    II(0x0015e0e9, 0x3)   lea(dx, bp - 0x3c);                   /* lea dx, [bp-0x3c] */
    II(0x0015e0ec, 0x1)   pushw(ss);                            /* push ss */
    II(0x0015e0ed, 0x1)   pushw(dx);                            /* push dx */
    II(0x0015e0ee, 0x3)   lea(bx, bp - 0x4e);                   /* lea bx, [bp-0x4e] */
    II(0x0015e0f1, 0x1)   pushw(ss);                            /* push ss */
    II(0x0015e0f2, 0x1)   pushw(bx);                            /* push bx */
    II(0x0015e0f3, 0x3)   callw(0x0015dc78, -0x47e);            /* call 0x15dc78 */
    II(0x0015e0f6, 0x3)   pushw(memw_a16(ss, bp - 0x3a));       /* push word [bp-0x3a] */
    II(0x0015e0f9, 0x3)   pushw(memw_a16(ss, bp - 0x3c));       /* push word [bp-0x3c] */
    II(0x0015e0fc, 0x3)   pushw(memw_a16(ss, bp - 0x38));       /* push word [bp-0x38] */
    II(0x0015e0ff, 0x3)   pushw(memw_a16(ss, bp - 0x36));       /* push word [bp-0x36] */
    II(0x0015e102, 0x3)   mov(ax, memw_a16(ss, bp + 0x10));     /* mov ax, [bp+0x10] */
    II(0x0015e105, 0x3)   mov(dx, memw_a16(ss, bp + 0x12));     /* mov dx, [bp+0x12] */
    II(0x0015e108, 0x3)   add(ax, 0xea);                        /* add ax, 0xea */
    II(0x0015e10b, 0x1)   pushw(dx);                            /* push dx */
    II(0x0015e10c, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015e10d, 0x3)   pushw(memw_a16(ss, bp - 0x44));       /* push word [bp-0x44] */
    II(0x0015e110, 0x3)   pushw(memw_a16(ss, bp - 0x46));       /* push word [bp-0x46] */
    II(0x0015e113, 0x1)   pushw(ds);                            /* push ds */
    II(0x0015e114, 0x3)   pushw(0x2bf3);                        /* push word 0x2bf3 */
    II(0x0015e117, 0x3)   callw(0x00161066, 0x2f4c);            /* call 0x161066 */
    II(0x0015e11a, 0x3)   add(sp, 0x14);                        /* add sp, 0x14 */
    II(0x0015e11d, 0x3)   les(bx, ss, bp + 0x10);               /* les bx, [bp+0x10] */
    II(0x0015e120, 0x4)   mov(ax, memw_a16(es, bx + 0x38));     /* mov ax, [es:bx+0x38] */
    II(0x0015e124, 0x4)   mov(dx, memw_a16(es, bx + 0x3a));     /* mov dx, [es:bx+0x3a] */
    II(0x0015e128, 0x3)   add(ax, 0x6);                         /* add ax, 0x6 */
    II(0x0015e12b, 0x1)   pushw(dx);                            /* push dx */
    II(0x0015e12c, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015e12d, 0x3)   callw(0x0015e33a, 0x20a);             /* call 0x15e33a */
    II(0x0015e130, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0015e132, 0x3)   pushw(memw_a16(ss, bp - 0x3a));       /* push word [bp-0x3a] */
    II(0x0015e135, 0x3)   pushw(memw_a16(ss, bp - 0x3c));       /* push word [bp-0x3c] */
    II(0x0015e138, 0x3)   les(bx, ss, bp + 0x10);               /* les bx, [bp+0x10] */
    II(0x0015e13b, 0x4)   les(si, es, bx + 0x38);               /* les si, [es:bx+0x38] */
    II(0x0015e13f, 0x4)   pushw(memw_a16(es, si + 0x4));        /* push word [es:si+0x4] */
    II(0x0015e143, 0x3)   pushw(memw_a16(ss, bp - 0x44));       /* push word [bp-0x44] */
    II(0x0015e146, 0x3)   pushw(memw_a16(ss, bp - 0x46));       /* push word [bp-0x46] */
    II(0x0015e149, 0x4)   callw_a16_far_ind(ds, 0x1a08);        /* call word far [0x1a08] */
    II(0x0015e14d, 0x3)   add(sp, 0xc);                         /* add sp, 0xc */
    II(0x0015e150, 0x3)   les(bx, ss, bp + 0x10);               /* les bx, [bp+0x10] */
    II(0x0015e153, 0x4)   mov(ax, memw_a16(es, bx + 0x54));     /* mov ax, [es:bx+0x54] */
    II(0x0015e157, 0x4)   mov(dx, memw_a16(es, bx + 0x56));     /* mov dx, [es:bx+0x56] */
    II(0x0015e15b, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x0015e15e, 0x3)   mov(memw_a16(ss, bp - 0x6), dx);      /* mov [bp-0x6], dx */
    II(0x0015e161, 0x3)   mov(si, memw_a16(ss, bp - 0x4e));     /* mov si, [bp-0x4e] */
    II(0x0015e164, 0x3)   shl(si, 0x3);                         /* shl si, 0x3 */
    II(0x0015e167, 0x2)   add(si, ax);                          /* add si, ax */
    II(0x0015e169, 0x2)   mov(es, dx);                          /* mov es, dx */
    II(0x0015e16b, 0x4)   mov(ax, memw_a16(es, si + 0x4));      /* mov ax, [es:si+0x4] */
    II(0x0015e16f, 0x4)   mov(dx, memw_a16(es, si + 0x6));      /* mov dx, [es:si+0x6] */
    II(0x0015e173, 0x3)   sub(ax, memw_a16(es, si));            /* sub ax, [es:si] */
    II(0x0015e176, 0x4)   sbb(dx, memw_a16(es, si + 0x2));      /* sbb dx, [es:si+0x2] */
    II(0x0015e17a, 0x3)   mov(memw_a16(ss, bp - 0xc), ax);      /* mov [bp-0xc], ax */
    II(0x0015e17d, 0x3)   mov(memw_a16(ss, bp - 0xa), dx);      /* mov [bp-0xa], dx */
    II(0x0015e180, 0x3)   mov(es, memw_a16(ss, bp + 0x12));     /* mov es, [bp+0x12] */
    II(0x0015e183, 0x4)   mov(ax, memw_a16(es, bx + 0x48));     /* mov ax, [es:bx+0x48] */
    II(0x0015e187, 0x4)   mov(dx, memw_a16(es, bx + 0x4a));     /* mov dx, [es:bx+0x4a] */
    II(0x0015e18b, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x0015e18e, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
    II(0x0015e191, 0x4)   pushw(memw_a16(ds, 0x19fc));          /* push word [0x19fc] */
    II(0x0015e195, 0x3)   pushw(memw_a16(ss, bp - 0x44));       /* push word [bp-0x44] */
    II(0x0015e198, 0x3)   pushw(memw_a16(ss, bp - 0x46));       /* push word [bp-0x46] */
    II(0x0015e19b, 0x3)   pushw(0x1000);                        /* push word 0x1000 */
    II(0x0015e19e, 0x3)   callw(0x0015e2a0, 0xff);              /* call 0x15e2a0 */
    II(0x0015e1a1, 0x4)   cmp(memw_a16(ss, bp - 0x48), 0);      /* cmp word [bp-0x48], 0x0 */
    II(0x0015e1a5, 0x2)   jnzw(0x0015e1ca, 0x23);               /* jnz 0x15e1ca */
    II(0x0015e1a7, 0x5)   cmp(memw_a16(ss, bp - 0x4a), 0x1000); /* cmp word [bp-0x4a], 0x1000 */
    II(0x0015e1ac, 0x2)   jaew(0x0015e1ca, 0x1c);               /* jae 0x15e1ca */
    II(0x0015e1ae, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0015e1b0, 0x3)   mov(ax, 0x1000);                      /* mov ax, 0x1000 */
    II(0x0015e1b3, 0x3)   mov(cx, memw_a16(ss, bp - 0x4a));     /* mov cx, [bp-0x4a] */
    II(0x0015e1b6, 0x2)   sub(ax, cx);                          /* sub ax, cx */
    II(0x0015e1b8, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015e1b9, 0x4)   add(cx, memw_a16(ds, 0x19fa));        /* add cx, [0x19fa] */
    II(0x0015e1bd, 0x3)   mov(ax, memw_a16(ds, 0x19fc));        /* mov ax, [0x19fc] */
    II(0x0015e1c0, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015e1c1, 0x1)   pushw(cx);                            /* push cx */
//    II(0x0015e1c2, 0x1)   nop();                                /* nop  */
    II(0x0015e1c3, 0x1)   pushw(cs);                            /* push cs */
    II(0x0015e1c4, 0x3)   callw(0x00160faf, 0x2de8);            /* call 0x160faf */
    II(0x0015e1c7, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
l_0x0015e1ca:
    II(0x0015e1ca, 0x4)   pushw(memw_a16(ds, 0x19f8));          /* push word [0x19f8] */
    II(0x0015e1ce, 0x3)   mov(bx, memw_a16(ss, bp - 0x4e));     /* mov bx, [bp-0x4e] */
    II(0x0015e1d1, 0x3)   shl(bx, 0x3);                         /* shl bx, 0x3 */
    II(0x0015e1d4, 0x3)   les(si, ss, bp - 0x8);                /* les si, [bp-0x8] */
    II(0x0015e1d7, 0x3)   mov(ax, memw_a16(es, bx + si));       /* mov ax, [es:bx+si] */
    II(0x0015e1da, 0x4)   mov(dx, memw_a16(es, bx + si + 0x2)); /* mov dx, [es:bx+si+0x2] */
    II(0x0015e1de, 0x3)   add(ax, memw_a16(ss, bp - 0x4));      /* add ax, [bp-0x4] */
    II(0x0015e1e1, 0x3)   adc(dx, memw_a16(ss, bp - 0x2));      /* adc dx, [bp-0x2] */
    II(0x0015e1e4, 0x1)   pushw(dx);                            /* push dx */
    II(0x0015e1e5, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015e1e6, 0x3)   pushw(memw_a16(ss, bp - 0xc));        /* push word [bp-0xc] */
    II(0x0015e1e9, 0x3)   callw(0x0015e2a0, 0xb4);              /* call 0x15e2a0 */
    II(0x0015e1ec, 0x3)   pushw(memw_a16(ss, bp + 0x12));       /* push word [bp+0x12] */
    II(0x0015e1ef, 0x3)   pushw(memw_a16(ss, bp + 0x10));       /* push word [bp+0x10] */
    II(0x0015e1f2, 0x4)   pushw(memw_a16(ds, 0x19f8));          /* push word [0x19f8] */
    II(0x0015e1f6, 0x4)   pushw(memw_a16(ds, 0x19f6));          /* push word [0x19f6] */
    II(0x0015e1fa, 0x3)   pushw(memw_a16(ss, bp - 0xa));        /* push word [bp-0xa] */
    II(0x0015e1fd, 0x3)   pushw(memw_a16(ss, bp - 0xc));        /* push word [bp-0xc] */
    II(0x0015e200, 0x4)   pushw(memw_a16(ds, 0x19fc));          /* push word [0x19fc] */
    II(0x0015e204, 0x4)   pushw(memw_a16(ds, 0x19fa));          /* push word [0x19fa] */
    II(0x0015e208, 0x3)   mov(ax, memw_a16(ss, bp - 0x46));     /* mov ax, [bp-0x46] */
    II(0x0015e20b, 0x3)   mov(dx, memw_a16(ss, bp - 0x44));     /* mov dx, [bp-0x44] */
    II(0x0015e20e, 0x4)   sub(ax, memw_a16(ds, 0x19ea));        /* sub ax, [0x19ea] */
    II(0x0015e212, 0x4)   sbb(dx, memw_a16(ds, 0x19ec));        /* sbb dx, [0x19ec] */
    II(0x0015e216, 0x1)   pushw(dx);                            /* push dx */
    II(0x0015e217, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015e218, 0x3)   callw(0x0015bbb4, -0x2667);           /* call 0x15bbb4 */
    II(0x0015e21b, 0x3)   mov(memw_a16(ss, bp - 0x3e), ax);     /* mov [bp-0x3e], ax */
    II(0x0015e21e, 0x2)   jmpw(0x0015e28d, 0x6d);               /* jmp 0x15e28d */
l_0x0015e220:
    II(0x0015e220, 0x3)   inc(memw_a16(ss, bp - 0x36));         /* inc word [bp-0x36] */
l_0x0015e223:
    II(0x0015e223, 0x3)   mov(ax, memw_a16(ss, bp - 0x36));     /* mov ax, [bp-0x36] */
    II(0x0015e226, 0x2)   sub(dx, dx);                          /* sub dx, dx */
    II(0x0015e228, 0x3)   les(bx, ss, bp + 0x10);               /* les bx, [bp+0x10] */
    II(0x0015e22b, 0x4)   les(bx, es, bx + 0x1c);               /* les bx, [es:bx+0x1c] */
    II(0x0015e22f, 0x4)   cmp(memw_a16(es, bx + 0x46), dx);     /* cmp [es:bx+0x46], dx */
    II(0x0015e233, 0x2)   jbw(0x0015e262, 0x2d);                /* jb 0x15e262 */
    II(0x0015e235, 0x2)   jaw(0x0015e23d, 0x6);                 /* ja 0x15e23d */
    II(0x0015e237, 0x4)   cmp(memw_a16(es, bx + 0x44), ax);     /* cmp [es:bx+0x44], ax */
    II(0x0015e23b, 0x2)   jbew(0x0015e262, 0x25);               /* jbe 0x15e262 */
l_0x0015e23d:
    II(0x0015e23d, 0x3)   imul(bx, ax, 0x18);                   /* imul bx, ax, 0x18 */
    II(0x0015e240, 0x3)   add(bx, memw_a16(ss, bp - 0x10));     /* add bx, [bp-0x10] */
    II(0x0015e243, 0x3)   mov(es, memw_a16(ss, bp - 0xe));      /* mov es, [bp-0xe] */
    II(0x0015e246, 0x5)   test(memb_a16(es, bx + 0x9), 0x10);   /* test byte [es:bx+0x9], 0x10 */
    II(0x0015e24b, 0x2)   jnzw(0x0015e250, 0x3);                /* jnz 0x15e250 */
    II(0x0015e24d, 0x3)   jmpw(0x0015e07c, -0x1d4);             /* jmp 0x15e07c */
l_0x0015e250:
    II(0x0015e250, 0x4)   mov(ax, memw_a16(es, bx + 0x14));     /* mov ax, [es:bx+0x14] */
    II(0x0015e254, 0x2)   sub(cx, cx);                          /* sub cx, cx */
    II(0x0015e256, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015e257, 0x1)   pushw(cx);                            /* push cx */
    II(0x0015e258, 0x5)   callw_far_abs(0x80, 0x55dc);          /* call word 0x80:0x55dc */
    II(0x0015e25d, 0x1)   popw(bx);                             /* pop bx */
    II(0x0015e25e, 0x1)   popw(bx);                             /* pop bx */
    II(0x0015e25f, 0x3)   jmpw(0x0015e08b, -0x1d7);             /* jmp 0x15e08b */
l_0x0015e262:
    II(0x0015e262, 0x3)   inc(memw_a16(ss, bp - 0x34));         /* inc word [bp-0x34] */
l_0x0015e265:
    II(0x0015e265, 0x4)   cmp(memw_a16(ss, bp - 0x34), 0x10);   /* cmp word [bp-0x34], 0x10 */
    II(0x0015e269, 0x2)   jaw(0x0015e28d, 0x22);                /* ja 0x15e28d */
    II(0x0015e26b, 0x3)   mov(bx, memw_a16(ss, bp - 0x34));     /* mov bx, [bp-0x34] */
    II(0x0015e26e, 0x2)   shl(bx, 0x1);                         /* shl bx, 1 */
    II(0x0015e270, 0x5)   cmp(memw_a16(ds, bx + 0x1f24), 0);    /* cmp word [bx+0x1f24], 0x0 */
    II(0x0015e275, 0x2)   jzw(0x0015e262, -0x15);               /* jz 0x15e262 */
    II(0x0015e277, 0x4)   les(bx, ds, 0x1f1a);                  /* les bx, [0x1f1a] */
    II(0x0015e27b, 0x4)   add(bx, 0x1352);                      /* add bx, 0x1352 */
    II(0x0015e27f, 0x3)   mov(si, memw_a16(ss, bp - 0x34));     /* mov si, [bp-0x34] */
    II(0x0015e282, 0x4)   cmp(memb_a16(es, bx + si), 0);        /* cmp byte [es:bx+si], 0x0 */
    II(0x0015e286, 0x2)   jzw(0x0015e28b, 0x3);                 /* jz 0x15e28b */
    II(0x0015e288, 0x3)   jmpw(0x0015e055, -0x236);             /* jmp 0x15e055 */
l_0x0015e28b:
    II(0x0015e28b, 0x2)   jmpw(0x0015e262, -0x2b);              /* jmp 0x15e262 */
l_0x0015e28d:
    II(0x0015e28d, 0x3)   lea(ax, bp - 0x32);                   /* lea ax, [bp-0x32] */
    II(0x0015e290, 0x1)   pushw(ss);                            /* push ss */
    II(0x0015e291, 0x1)   pushw(ax);                            /* push ax */
    II(0x0015e292, 0x3)   callw(0x0015e33a, 0xa5);              /* call 0x15e33a */
    II(0x0015e295, 0x4)   dec(memb_a16(ds, 0x2bf2));            /* dec byte [0x2bf2] */
    II(0x0015e299, 0x2)   sub(ax, ax);                          /* sub ax, ax */
l_0x0015e29b:
    II(0x0015e29b, 0x1)   popw(ds);                             /* pop ds */
    II(0x0015e29c, 0x1)   popw(si);                             /* pop si */
    II(0x0015e29d, 0x1)   popw(di);                             /* pop di */
    II(0x0015e29e, 0x1)   leavew();                             /* leave  */
    II(0x0015e29f, 0x1)   retfw();                              /* retf  */
FUNC_END

