FUNC_BEGIN(0x0013567a, 0xc9de7523f7a97134, 0x10, ({0xc8, 0x10, 0, 0, 0x56, 0x1e, 0xb8, 0x68, 0x3e, 0x8e, 0xd8, 0x8b, 0x46, 0x6, 0x8b, 0x56, 0x8, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0x83, 0x3e, 0x56, 0x3, 0, 0x75, 0x19, 0x6a, 0, 0x6a, 0, 0x6a, 0, 0x90, 0xe, 0xe8, 0xc7, 0x92, 0x83, 0xc4, 0x6, 0x89, 0x46, 0xf0, 0x89, 0x56, 0xf2, 0x8b, 0xc2, 0xa3, 0x56, 0x3, 0xa1, 0x56, 0x3, 0xc7, 0x46, 0xf4, 0, 0, 0x89, 0x46, 0xf6, 0x83, 0x3e, 0xa0, 0x51, 0, 0x75, 0x4b, 0xc4, 0x1e, 0x92, 0x9, 0x26, 0x8b, 0xf, 0x26, 0x8b, 0x57, 0x2, 0x81, 0xe1, 0, 0xf0, 0x52, 0x51, 0x50, 0x90, 0xe, 0xe8, 0xe2, 0x32, 0x83, 0xc4, 0x6, 0x8b, 0x46, 0xfc, 0x8b, 0x56, 0xfe, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x8b, 0xd8, 0x80, 0xe3, 0xfc, 0xc4, 0x76, 0xf4, 0x26, 0x8b, 0, 0x26, 0x8b, 0x50, 0x2, 0x25, 0, 0xf0, 0x89, 0x46, 0xf8, 0x89, 0x56, 0xfa, 0xe9, 0x2b, 0x1, 0x8e, 0x6, 0xc8, 0x1d, 0x26, 0xf6, 0x6, 0x15, 0, 0x20, 0x75, 0x3, 0xe9, 0xc1, 0, 0xc4, 0x1e, 0x18, 0x20, 0x26, 0x83, 0x7f, 0x2, 0x4, 0x73, 0x3, 0xe9, 0xb3, 0, 0x77, 0x9, 0x26, 0x83, 0x3f, 0, 0x75, 0x3, 0xe9, 0xa8, 0, 0x83, 0x7e, 0x8, 0x40, 0x77, 0x5e, 0x72, 0x2, 0xeb, 0x5a, 0x26, 0x8b, 0x47, 0x12, 0x2b, 0xd2, 0x5, 0, 0x1, 0x13, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0x52, 0x50, 0xff, 0x36, 0x56, 0x3, 0x90, 0xe, 0xe8, 0x56, 0x32, 0x83, 0xc4, 0x6, 0x8b, 0x46, 0x6, 0x8b, 0x56, 0x8, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x8b, 0xd8, 0x80, 0xe3, 0xfc, 0xc4, 0x76, 0xf4, 0x26, 0x8b, 0, 0x26, 0x8b, 0x50, 0x2, 0x25, 0, 0xf0, 0x89, 0x46, 0xf8, 0x89, 0x56, 0xfa, 0xeb, 0x42, 0x90, 0x6a, 0x40, 0x6a, 0, 0x50, 0x90, 0xe, 0xe8, 0x18, 0x32, 0x83, 0xc4, 0x6, 0x8b, 0x46, 0x6, 0x8b, 0x56, 0x8, 0x2d, 0, 0, 0x83, 0xda, 0x40, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x8b, 0xd8, 0x80, 0xe3, 0xfc, 0xc4, 0x76, 0xf4, 0x26, 0x8b, 0, 0x26, 0x8b, 0x50, 0x2, 0x25, 0, 0xf0, 0x89, 0x46, 0xf8, 0x89, 0x56, 0xfa, 0xeb, 0x5c, 0x90, 0xc4, 0x1e, 0x18, 0x20, 0x26, 0x8b, 0x47, 0x12, 0x2b, 0xd2, 0x5, 0, 0x1, 0x13, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0x52, 0x50, 0xff, 0x36, 0x56, 0x3, 0x90, 0xe, 0xe8, 0xb4, 0x31, 0x83, 0xc4, 0x6, 0x8b, 0x46, 0x6, 0x8b, 0x56, 0x8, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x8b, 0xd8, 0x80, 0xe3, 0xfc, 0xc4, 0x76, 0xf4, 0x26, 0x8b, 0, 0x26, 0x8b, 0x50, 0x2, 0x25, 0, 0xf0, 0x89, 0x46, 0xf8, 0x89, 0x56, 0xfa, 0x8b, 0x46, 0xf8, 0x8b, 0x56, 0xfa, 0x1f, 0x5e, 0xc9, 0xcb}))
    II(0x0013567a, 0x4)   enterw(0x10, 0);                      /* enter 0x10, 0x0 */
    II(0x0013567e, 0x1)   pushw(si);                            /* push si */
    II(0x0013567f, 0x1)   pushw(ds);                            /* push ds */
    II(0x00135680, 0x3)   mov(ax, 0x3e68);                      /* mov ax, 0x3e68 */
    II(0x00135683, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x00135685, 0x3)   mov(ax, memw_a16(ss, bp + 0x6));      /* mov ax, [bp+0x6] */
    II(0x00135688, 0x3)   mov(dx, memw_a16(ss, bp + 0x8));      /* mov dx, [bp+0x8] */
    II(0x0013568b, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x0013568e, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
    II(0x00135691, 0x5)   cmp(memw_a16(ds, 0x356), 0);          /* cmp word [0x356], 0x0 */
    II(0x00135696, 0x2)   jnzw(0x001356b1, 0x19);               /* jnz 0x1356b1 */
    II(0x00135698, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0013569a, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0013569c, 0x2)   pushw(0);                             /* push 0x0 */
//    II(0x0013569e, 0x1)   nop();                                /* nop  */
    II(0x0013569f, 0x1)   pushw(cs);                            /* push cs */
    II(0x001356a0, 0x3)   callw(0x0012e96a, -0x6d39);           /* call 0x12e96a */
    II(0x001356a3, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x001356a6, 0x3)   mov(memw_a16(ss, bp - 0x10), ax);     /* mov [bp-0x10], ax */
    II(0x001356a9, 0x3)   mov(memw_a16(ss, bp - 0xe), dx);      /* mov [bp-0xe], dx */
    II(0x001356ac, 0x2)   mov(ax, dx);                          /* mov ax, dx */
    II(0x001356ae, 0x3)   mov(memw_a16(ds, 0x356), ax);         /* mov [0x356], ax */
l_0x001356b1:
    II(0x001356b1, 0x3)   mov(ax, memw_a16(ds, 0x356));         /* mov ax, [0x356] */
    II(0x001356b4, 0x5)   mov(memw_a16(ss, bp - 0xc), 0);       /* mov word [bp-0xc], 0x0 */
    II(0x001356b9, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x001356bc, 0x5)   cmp(memw_a16(ds, 0x51a0), 0);         /* cmp word [0x51a0], 0x0 */
    II(0x001356c1, 0x2)   jnzw(0x0013570e, 0x4b);               /* jnz 0x13570e */
    II(0x001356c3, 0x4)   les(bx, ds, 0x992);                   /* les bx, [0x992] */
    II(0x001356c7, 0x3)   mov(cx, memw_a16(es, bx));            /* mov cx, [es:bx] */
    II(0x001356ca, 0x4)   mov(dx, memw_a16(es, bx + 0x2));      /* mov dx, [es:bx+0x2] */
    II(0x001356ce, 0x4)   and_(cx, 0xf000);                     /* and cx, 0xf000 */
    II(0x001356d2, 0x1)   pushw(dx);                            /* push dx */
    II(0x001356d3, 0x1)   pushw(cx);                            /* push cx */
    II(0x001356d4, 0x1)   pushw(ax);                            /* push ax */
//    II(0x001356d5, 0x1)   nop();                                /* nop  */
    II(0x001356d6, 0x1)   pushw(cs);                            /* push cs */
    II(0x001356d7, 0x3)   callw(0x001389bc, 0x32e2);            /* call 0x1389bc */
    II(0x001356da, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x001356dd, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x001356e0, 0x3)   mov(dx, memw_a16(ss, bp - 0x2));      /* mov dx, [bp-0x2] */
    II(0x001356e3, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x001356e5, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x001356e7, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x001356e9, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x001356eb, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x001356ed, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x001356ef, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x001356f1, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x001356f3, 0x2)   mov(bx, ax);                          /* mov bx, ax */
    II(0x001356f5, 0x3)   and_(bl, 0xfc);                       /* and bl, 0xfc */
    II(0x001356f8, 0x3)   les(si, ss, bp - 0xc);                /* les si, [bp-0xc] */
    II(0x001356fb, 0x3)   mov(ax, memw_a16(es, bx + si));       /* mov ax, [es:bx+si] */
    II(0x001356fe, 0x4)   mov(dx, memw_a16(es, bx + si + 0x2)); /* mov dx, [es:bx+si+0x2] */
    II(0x00135702, 0x3)   and_(ax, 0xf000);                     /* and ax, 0xf000 */
    II(0x00135705, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x00135708, 0x3)   mov(memw_a16(ss, bp - 0x6), dx);      /* mov [bp-0x6], dx */
    II(0x0013570b, 0x3)   jmpw(0x00135839, 0x12b);              /* jmp 0x135839 */
l_0x0013570e:
    II(0x0013570e, 0x4)   mov(es, memw_a16(ds, 0x1dc8));        /* mov es, [0x1dc8] */
    II(0x00135712, 0x6)   test(memb_a16(es, 0x15), 0x20);       /* test byte [es:0x15], 0x20 */
    II(0x00135718, 0x2)   jnzw(0x0013571d, 0x3);                /* jnz 0x13571d */
    II(0x0013571a, 0x3)   jmpw(0x001357de, 0xc1);               /* jmp 0x1357de */
l_0x0013571d:
    II(0x0013571d, 0x4)   les(bx, ds, 0x2018);                  /* les bx, [0x2018] */
    II(0x00135721, 0x5)   cmp(memw_a16(es, bx + 0x2), 0x4);     /* cmp word [es:bx+0x2], 0x4 */
    II(0x00135726, 0x2)   jaew(0x0013572b, 0x3);                /* jae 0x13572b */
    II(0x00135728, 0x3)   jmpw(0x001357de, 0xb3);               /* jmp 0x1357de */
l_0x0013572b:
    II(0x0013572b, 0x2)   jaw(0x00135736, 0x9);                 /* ja 0x135736 */
    II(0x0013572d, 0x4)   cmp(memw_a16(es, bx), 0);             /* cmp word [es:bx], 0x0 */
    II(0x00135731, 0x2)   jnzw(0x00135736, 0x3);                /* jnz 0x135736 */
    II(0x00135733, 0x3)   jmpw(0x001357de, 0xa8);               /* jmp 0x1357de */
l_0x00135736:
    II(0x00135736, 0x4)   cmp(memw_a16(ss, bp + 0x8), 0x40);    /* cmp word [bp+0x8], 0x40 */
    II(0x0013573a, 0x2)   jaw(0x0013579a, 0x5e);                /* ja 0x13579a */
    II(0x0013573c, 0x2)   jbw(0x00135740, 0x2);                 /* jb 0x135740 */
    II(0x0013573e, 0x2)   jmpw(0x0013579a, 0x5a);               /* jmp 0x13579a */
l_0x00135740:
    II(0x00135740, 0x4)   mov(ax, memw_a16(es, bx + 0x12));     /* mov ax, [es:bx+0x12] */
    II(0x00135744, 0x2)   sub(dx, dx);                          /* sub dx, dx */
    II(0x00135746, 0x3)   add(ax, 0x100);                       /* add ax, 0x100 */
    II(0x00135749, 0x2)   adc(dx, dx);                          /* adc dx, dx */
    II(0x0013574b, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013574d, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013574f, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135751, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00135753, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135755, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x00135757, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x00135759, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013575b, 0x1)   pushw(dx);                            /* push dx */
    II(0x0013575c, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013575d, 0x4)   pushw(memw_a16(ds, 0x356));           /* push word [0x356] */
//    II(0x00135761, 0x1)   nop();                                /* nop  */
    II(0x00135762, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135763, 0x3)   callw(0x001389bc, 0x3256);            /* call 0x1389bc */
    II(0x00135766, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x00135769, 0x3)   mov(ax, memw_a16(ss, bp + 0x6));      /* mov ax, [bp+0x6] */
    II(0x0013576c, 0x3)   mov(dx, memw_a16(ss, bp + 0x8));      /* mov dx, [bp+0x8] */
    II(0x0013576f, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x00135771, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x00135773, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x00135775, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x00135777, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00135779, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013577b, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013577d, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013577f, 0x2)   mov(bx, ax);                          /* mov bx, ax */
    II(0x00135781, 0x3)   and_(bl, 0xfc);                       /* and bl, 0xfc */
    II(0x00135784, 0x3)   les(si, ss, bp - 0xc);                /* les si, [bp-0xc] */
    II(0x00135787, 0x3)   mov(ax, memw_a16(es, bx + si));       /* mov ax, [es:bx+si] */
    II(0x0013578a, 0x4)   mov(dx, memw_a16(es, bx + si + 0x2)); /* mov dx, [es:bx+si+0x2] */
    II(0x0013578e, 0x3)   and_(ax, 0xf000);                     /* and ax, 0xf000 */
    II(0x00135791, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x00135794, 0x3)   mov(memw_a16(ss, bp - 0x6), dx);      /* mov [bp-0x6], dx */
    II(0x00135797, 0x2)   jmpw(0x001357db, 0x42);               /* jmp 0x1357db */
//    II(0x00135799, 0x1)   /* Недостижимый код. */
l_0x0013579a:
    II(0x0013579a, 0x2)   pushw(0x40);                          /* push 0x40 */
    II(0x0013579c, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x0013579e, 0x1)   pushw(ax);                            /* push ax */
//    II(0x0013579f, 0x1)   nop();                                /* nop  */
    II(0x001357a0, 0x1)   pushw(cs);                            /* push cs */
    II(0x001357a1, 0x3)   callw(0x001389bc, 0x3218);            /* call 0x1389bc */
    II(0x001357a4, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x001357a7, 0x3)   mov(ax, memw_a16(ss, bp + 0x6));      /* mov ax, [bp+0x6] */
    II(0x001357aa, 0x3)   mov(dx, memw_a16(ss, bp + 0x8));      /* mov dx, [bp+0x8] */
    II(0x001357ad, 0x3)   sub(ax, 0);                           /* sub ax, 0x0 */
    II(0x001357b0, 0x3)   sbb(dx, 0x40);                        /* sbb dx, 0x40 */
    II(0x001357b3, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x001357b5, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x001357b7, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x001357b9, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x001357bb, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x001357bd, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x001357bf, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x001357c1, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x001357c3, 0x2)   mov(bx, ax);                          /* mov bx, ax */
    II(0x001357c5, 0x3)   and_(bl, 0xfc);                       /* and bl, 0xfc */
    II(0x001357c8, 0x3)   les(si, ss, bp - 0xc);                /* les si, [bp-0xc] */
    II(0x001357cb, 0x3)   mov(ax, memw_a16(es, bx + si));       /* mov ax, [es:bx+si] */
    II(0x001357ce, 0x4)   mov(dx, memw_a16(es, bx + si + 0x2)); /* mov dx, [es:bx+si+0x2] */
    II(0x001357d2, 0x3)   and_(ax, 0xf000);                     /* and ax, 0xf000 */
    II(0x001357d5, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x001357d8, 0x3)   mov(memw_a16(ss, bp - 0x6), dx);      /* mov [bp-0x6], dx */
l_0x001357db:
    II(0x001357db, 0x2)   jmpw(0x00135839, 0x5c);               /* jmp 0x135839 */
//    II(0x001357dd, 0x1)   /* Недостижимый код. */
l_0x001357de:
    II(0x001357de, 0x4)   les(bx, ds, 0x2018);                  /* les bx, [0x2018] */
    II(0x001357e2, 0x4)   mov(ax, memw_a16(es, bx + 0x12));     /* mov ax, [es:bx+0x12] */
    II(0x001357e6, 0x2)   sub(dx, dx);                          /* sub dx, dx */
    II(0x001357e8, 0x3)   add(ax, 0x100);                       /* add ax, 0x100 */
    II(0x001357eb, 0x2)   adc(dx, dx);                          /* adc dx, dx */
    II(0x001357ed, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x001357ef, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x001357f1, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x001357f3, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x001357f5, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x001357f7, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x001357f9, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x001357fb, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x001357fd, 0x1)   pushw(dx);                            /* push dx */
    II(0x001357fe, 0x1)   pushw(ax);                            /* push ax */
    II(0x001357ff, 0x4)   pushw(memw_a16(ds, 0x356));           /* push word [0x356] */
//    II(0x00135803, 0x1)   nop();                                /* nop  */
    II(0x00135804, 0x1)   pushw(cs);                            /* push cs */
    II(0x00135805, 0x3)   callw(0x001389bc, 0x31b4);            /* call 0x1389bc */
    II(0x00135808, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x0013580b, 0x3)   mov(ax, memw_a16(ss, bp + 0x6));      /* mov ax, [bp+0x6] */
    II(0x0013580e, 0x3)   mov(dx, memw_a16(ss, bp + 0x8));      /* mov dx, [bp+0x8] */
    II(0x00135811, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x00135813, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x00135815, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x00135817, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x00135819, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013581b, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013581d, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013581f, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00135821, 0x2)   mov(bx, ax);                          /* mov bx, ax */
    II(0x00135823, 0x3)   and_(bl, 0xfc);                       /* and bl, 0xfc */
    II(0x00135826, 0x3)   les(si, ss, bp - 0xc);                /* les si, [bp-0xc] */
    II(0x00135829, 0x3)   mov(ax, memw_a16(es, bx + si));       /* mov ax, [es:bx+si] */
    II(0x0013582c, 0x4)   mov(dx, memw_a16(es, bx + si + 0x2)); /* mov dx, [es:bx+si+0x2] */
    II(0x00135830, 0x3)   and_(ax, 0xf000);                     /* and ax, 0xf000 */
    II(0x00135833, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x00135836, 0x3)   mov(memw_a16(ss, bp - 0x6), dx);      /* mov [bp-0x6], dx */
l_0x00135839:
    II(0x00135839, 0x3)   mov(ax, memw_a16(ss, bp - 0x8));      /* mov ax, [bp-0x8] */
    II(0x0013583c, 0x3)   mov(dx, memw_a16(ss, bp - 0x6));      /* mov dx, [bp-0x6] */
    II(0x0013583f, 0x1)   popw(ds);                             /* pop ds */
    II(0x00135840, 0x1)   popw(si);                             /* pop si */
    II(0x00135841, 0x1)   leavew();                             /* leave  */
    II(0x00135842, 0x1)   retfw();                              /* retf  */
FUNC_END

