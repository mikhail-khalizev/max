FUNC_BEGIN(0x00139bac, 0x30ef202b845bec68, 0x10, ({0xc8, 0x4, 0, 0, 0x1e, 0xb8, 0x68, 0x3e, 0x8e, 0xd8, 0xc4, 0x5e, 0x6, 0x26, 0x83, 0x7f, 0x8, 0, 0x74, 0x14, 0x26, 0xc7, 0x47, 0x20, 0x23, 0x80, 0x26, 0xc7, 0x47, 0x22, 0, 0, 0x26, 0x80, 0x4f, 0x2c, 0x1, 0x1f, 0xc9, 0xcb, 0x26, 0x8b, 0x47, 0x4, 0x89, 0x46, 0xfc, 0x50, 0xe, 0xe8, 0x36, 0x22, 0x83, 0xc4, 0x2, 0x89, 0x46, 0xfe, 0xb, 0xc0, 0x74, 0x18, 0xc4, 0x5e, 0x6, 0x26, 0x89, 0x47, 0x20, 0x26, 0xc7, 0x47, 0x22, 0, 0, 0x26, 0x80, 0x4f, 0x2c, 0x1, 0x1f, 0xc9, 0xcb, 0x1f, 0xc9, 0xcb, 0xff, 0x76, 0xfc, 0xe, 0xe8, 0x61, 0x2b, 0x83, 0xc4, 0x2, 0xc4, 0x5e, 0x6, 0x26, 0x80, 0x67, 0x2c, 0xfe, 0x1f, 0xc9, 0xcb}))
    II(0x00139bac, 0x4)   enterw(0x4, 0);                       /* enter 0x4, 0x0 */
    II(0x00139bb0, 0x1)   pushw(ds);                            /* push ds */
    II(0x00139bb1, 0x3)   mov(ax, 0x3e68);                      /* mov ax, 0x3e68 */
    II(0x00139bb4, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x00139bb6, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00139bb9, 0x5)   cmp(memw_a16(es, bx + 0x8), 0);       /* cmp word [es:bx+0x8], 0x0 */
    II(0x00139bbe, 0x2)   jzw(0x00139bd4, 0x14);                /* jz 0x139bd4 */
    II(0x00139bc0, 0x6)   mov(memw_a16(es, bx + 0x20), 0x8023); /* mov word [es:bx+0x20], 0x8023 */
    II(0x00139bc6, 0x6)   mov(memw_a16(es, bx + 0x22), 0);      /* mov word [es:bx+0x22], 0x0 */
    II(0x00139bcc, 0x5)   or_(memb_a16(es, bx + 0x2c), 0x1);    /* or byte [es:bx+0x2c], 0x1 */
    II(0x00139bd1, 0x1)   popw(ds);                             /* pop ds */
    II(0x00139bd2, 0x1)   leavew();                             /* leave  */
    II(0x00139bd3, 0x1)   retfw();                              /* retf  */
l_0x00139bd4:
    II(0x00139bd4, 0x4)   mov(ax, memw_a16(es, bx + 0x4));      /* mov ax, [es:bx+0x4] */
    II(0x00139bd8, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x00139bdb, 0x1)   pushw(ax);                            /* push ax */
    II(0x00139bdc, 0x1)   pushw(cs);                            /* push cs */
    II(0x00139bdd, 0x3)   callw(0x0013be16, 0x2236);            /* call 0x13be16 */
    II(0x00139be0, 0x3)   add(sp, 0x2);                         /* add sp, 0x2 */
    II(0x00139be3, 0x3)   mov(memw_a16(ss, bp - 0x2), ax);      /* mov [bp-0x2], ax */
    II(0x00139be6, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x00139be8, 0x2)   jzw(0x00139c02, 0x18);                /* jz 0x139c02 */
    II(0x00139bea, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00139bed, 0x4)   mov(memw_a16(es, bx + 0x20), ax);     /* mov [es:bx+0x20], ax */
    II(0x00139bf1, 0x6)   mov(memw_a16(es, bx + 0x22), 0);      /* mov word [es:bx+0x22], 0x0 */
    II(0x00139bf7, 0x5)   or_(memb_a16(es, bx + 0x2c), 0x1);    /* or byte [es:bx+0x2c], 0x1 */
    II(0x00139bfc, 0x1)   popw(ds);                             /* pop ds */
    II(0x00139bfd, 0x1)   leavew();                             /* leave  */
    II(0x00139bfe, 0x1)   retfw();                              /* retf  */
//    II(0x00139bff, 0x3)   /* Недостижимый код. */
l_0x00139c02:
    II(0x00139c02, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x00139c05, 0x1)   pushw(cs);                            /* push cs */
    II(0x00139c06, 0x3)   callw(0x0013c76a, 0x2b61);            /* call 0x13c76a */
    II(0x00139c09, 0x3)   add(sp, 0x2);                         /* add sp, 0x2 */
    II(0x00139c0c, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x00139c0f, 0x5)   and_(memb_a16(es, bx + 0x2c), -0x2 /* 0xfe */); /* and byte [es:bx+0x2c], 0xfe */
    II(0x00139c14, 0x1)   popw(ds);                             /* pop ds */
    II(0x00139c15, 0x1)   leavew();                             /* leave  */
    II(0x00139c16, 0x1)   retfw();                              /* retf  */
FUNC_END

