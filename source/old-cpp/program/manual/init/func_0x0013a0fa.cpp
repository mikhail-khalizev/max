FUNC_BEGIN(0x0013a0fa, 0x6f9ac6536bdf7bb0, 0x10, ({0xc8, 0x26, 0, 0, 0x56, 0x1e, 0xb8, 0x68, 0x3e, 0x8e, 0xd8, 0xc7, 0x46, 0xf6, 0, 0, 0xc4, 0x5e, 0x6, 0x26, 0x8b, 0x47, 0x14, 0x26, 0x8b, 0x57, 0x16, 0x89, 0x46, 0xf8, 0x89, 0x56, 0xfa, 0x26, 0x8b, 0x47, 0x1c, 0x26, 0x8b, 0x57, 0x1e, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0x26, 0xf7, 0x47, 0xa, 0xff, 0xff, 0x74, 0x9, 0xc7, 0x46, 0xf6, 0x23, 0x80, 0xe9, 0x29, 0x1, 0x90, 0x26, 0x8b, 0x47, 0x8, 0x89, 0x46, 0xe0, 0x50, 0xe, 0xe8, 0x56, 0x26, 0x83, 0xc4, 0x2, 0x89, 0x46, 0xf2, 0x89, 0x56, 0xf4, 0x3d, 0xff, 0xff, 0x75, 0xc, 0x3b, 0xd0, 0x75, 0x8, 0xc7, 0x46, 0xf6, 0x23, 0x80, 0xe9, 0x2, 0x1, 0x8b, 0x46, 0xf8, 0x8b, 0x56, 0xfa, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x1, 0x46, 0xf2, 0x11, 0x56, 0xf4, 0x8b, 0x46, 0xf2, 0x8b, 0x56, 0xf4, 0x5, 0, 0, 0x83, 0xd2, 0x1, 0x8a, 0xf2, 0x8a, 0xd4, 0x8a, 0xe0, 0x2a, 0xc0, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0x89, 0x46, 0xee, 0x89, 0x56, 0xf0, 0xc4, 0x5e, 0x6, 0x26, 0x80, 0x67, 0x2c, 0xfe, 0x26, 0xff, 0x77, 0x1a, 0x26, 0xff, 0x77, 0x18, 0x26, 0xff, 0x77, 0x2, 0x90, 0xe, 0xe8, 0x99, 0xa6, 0x83, 0xc4, 0x6, 0xc7, 0x46, 0xe2, 0, 0, 0x89, 0x46, 0xe4, 0x8b, 0x46, 0xfc, 0x8b, 0x56, 0xfe, 0x83, 0x6e, 0xfc, 0x1, 0x83, 0x5e, 0xfe, 0, 0xb, 0xd2, 0x75, 0x4, 0xb, 0xc0, 0x74, 0x7a, 0xff, 0x76, 0xf4, 0xff, 0x76, 0xf2, 0xff, 0x36, 0x8e, 0x4f, 0xff, 0x36, 0x8c, 0x4f, 0xe8, 0xf, 0xf0, 0x83, 0xc4, 0x8, 0x89, 0x46, 0xe6, 0x89, 0x56, 0xe8, 0xbe, 0x18, 0, 0xff, 0x76, 0xf4, 0xff, 0x76, 0xf2, 0xff, 0x36, 0xa6, 0x1f, 0xff, 0x36, 0xa4, 0x1f, 0xe8, 0xae, 0xee, 0x83, 0xc4, 0x8, 0x89, 0x46, 0xde, 0xa0, 0xa6, 0x51, 0x2a, 0xe4, 0x3b, 0x46, 0xde, 0x75, 0x6, 0xbe, 0x1a, 0, 0xeb, 0x10, 0x90, 0xa0, 0xb5, 0x51, 0x2a, 0xe4, 0x3b, 0x46, 0xde, 0x75, 0x2, 0xeb, 0x3, 0x83, 0xce, 0x1, 0xf6, 0x46, 0xe6, 0x40, 0x74, 0x3, 0x83, 0xce, 0x20, 0xf6, 0x46, 0xe6, 0x20, 0x74, 0x3, 0x83, 0xce, 0x40, 0xc4, 0x5e, 0xe2, 0x83, 0x46, 0xe2, 0x2, 0x26, 0x89, 0x37, 0x83, 0x46, 0xea, 0x1, 0x83, 0x56, 0xec, 0, 0xe9, 0x70, 0xff, 0x83, 0x7e, 0xf6, 0, 0x74, 0x14, 0x8b, 0x46, 0xf6, 0x99, 0xc4, 0x5e, 0x6, 0x26, 0x89, 0x47, 0x20, 0x26, 0x89, 0x57, 0x22, 0x26, 0x80, 0x4f, 0x2c, 0x1, 0x90, 0xe, 0xe8, 0xd, 0xa6, 0x1f, 0x5e, 0xc9, 0xcb}))
    II(0x0013a0fa, 0x4)   enterw(0x26, 0);                      /* enter 0x26, 0x0 */
    II(0x0013a0fe, 0x1)   pushw(si);                            /* push si */
    II(0x0013a0ff, 0x1)   pushw(ds);                            /* push ds */
    II(0x0013a100, 0x3)   mov(ax, 0x3e68);                      /* mov ax, 0x3e68 */
    II(0x0013a103, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x0013a105, 0x5)   mov(memw_a16(ss, bp - 0xa), 0);       /* mov word [bp-0xa], 0x0 */
    II(0x0013a10a, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x0013a10d, 0x4)   mov(ax, memw_a16(es, bx + 0x14));     /* mov ax, [es:bx+0x14] */
    II(0x0013a111, 0x4)   mov(dx, memw_a16(es, bx + 0x16));     /* mov dx, [es:bx+0x16] */
    II(0x0013a115, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x0013a118, 0x3)   mov(memw_a16(ss, bp - 0x6), dx);      /* mov [bp-0x6], dx */
    II(0x0013a11b, 0x4)   mov(ax, memw_a16(es, bx + 0x1c));     /* mov ax, [es:bx+0x1c] */
    II(0x0013a11f, 0x4)   mov(dx, memw_a16(es, bx + 0x1e));     /* mov dx, [es:bx+0x1e] */
    II(0x0013a123, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x0013a126, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
    II(0x0013a129, 0x6)   test(memw_a16(es, bx + 0xa), 0xffff); /* test word [es:bx+0xa], 0xffff */
    II(0x0013a12f, 0x2)   jzw(0x0013a13a, 0x9);                 /* jz 0x13a13a */
    II(0x0013a131, 0x5)   mov(memw_a16(ss, bp - 0xa), 0x8023);  /* mov word [bp-0xa], 0x8023 */
    II(0x0013a136, 0x3)   jmpw(0x0013a262, 0x129);              /* jmp 0x13a262 */
//    II(0x0013a139, 0x1)   /* Недостижимый код. */
l_0x0013a13a:
    II(0x0013a13a, 0x4)   mov(ax, memw_a16(es, bx + 0x8));      /* mov ax, [es:bx+0x8] */
    II(0x0013a13e, 0x3)   mov(memw_a16(ss, bp - 0x20), ax);     /* mov [bp-0x20], ax */
    II(0x0013a141, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013a142, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013a143, 0x3)   callw(0x0013c79c, 0x2656);            /* call 0x13c79c */
    II(0x0013a146, 0x3)   add(sp, 0x2);                         /* add sp, 0x2 */
    II(0x0013a149, 0x3)   mov(memw_a16(ss, bp - 0xe), ax);      /* mov [bp-0xe], ax */
    II(0x0013a14c, 0x3)   mov(memw_a16(ss, bp - 0xc), dx);      /* mov [bp-0xc], dx */
    II(0x0013a14f, 0x3)   cmp(ax, 0xffff);                      /* cmp ax, 0xffff */
    II(0x0013a152, 0x2)   jnzw(0x0013a160, 0xc);                /* jnz 0x13a160 */
    II(0x0013a154, 0x2)   cmp(dx, ax);                          /* cmp dx, ax */
    II(0x0013a156, 0x2)   jnzw(0x0013a160, 0x8);                /* jnz 0x13a160 */
    II(0x0013a158, 0x5)   mov(memw_a16(ss, bp - 0xa), 0x8023);  /* mov word [bp-0xa], 0x8023 */
    II(0x0013a15d, 0x3)   jmpw(0x0013a262, 0x102);              /* jmp 0x13a262 */
l_0x0013a160:
    II(0x0013a160, 0x3)   mov(ax, memw_a16(ss, bp - 0x8));      /* mov ax, [bp-0x8] */
    II(0x0013a163, 0x3)   mov(dx, memw_a16(ss, bp - 0x6));      /* mov dx, [bp-0x6] */
    II(0x0013a166, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x0013a168, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x0013a16a, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x0013a16c, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x0013a16e, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013a170, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013a172, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013a174, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013a176, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013a178, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013a17a, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013a17c, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013a17e, 0x3)   add(memw_a16(ss, bp - 0xe), ax);      /* add [bp-0xe], ax */
    II(0x0013a181, 0x3)   adc(memw_a16(ss, bp - 0xc), dx);      /* adc [bp-0xc], dx */
    II(0x0013a184, 0x3)   mov(ax, memw_a16(ss, bp - 0xe));      /* mov ax, [bp-0xe] */
    II(0x0013a187, 0x3)   mov(dx, memw_a16(ss, bp - 0xc));      /* mov dx, [bp-0xc] */
    II(0x0013a18a, 0x3)   add(ax, 0);                           /* add ax, 0x0 */
    II(0x0013a18d, 0x3)   adc(dx, 0x1);                         /* adc dx, 0x1 */
    II(0x0013a190, 0x2)   mov(dh, dl);                          /* mov dh, dl */
    II(0x0013a192, 0x2)   mov(dl, ah);                          /* mov dl, ah */
    II(0x0013a194, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x0013a196, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x0013a198, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013a19a, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013a19c, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013a19e, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013a1a0, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013a1a2, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013a1a4, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013a1a6, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013a1a8, 0x3)   mov(memw_a16(ss, bp - 0x12), ax);     /* mov [bp-0x12], ax */
    II(0x0013a1ab, 0x3)   mov(memw_a16(ss, bp - 0x10), dx);     /* mov [bp-0x10], dx */
    II(0x0013a1ae, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x0013a1b1, 0x5)   and_(memb_a16(es, bx + 0x2c), -0x2 /* 0xfe */); /* and byte [es:bx+0x2c], 0xfe */
    II(0x0013a1b6, 0x4)   pushw(memw_a16(es, bx + 0x1a));       /* push word [es:bx+0x1a] */
    II(0x0013a1ba, 0x4)   pushw(memw_a16(es, bx + 0x18));       /* push word [es:bx+0x18] */
    II(0x0013a1be, 0x4)   pushw(memw_a16(es, bx + 0x2));        /* push word [es:bx+0x2] */
//    II(0x0013a1c2, 0x1)   nop();                                /* nop  */
    II(0x0013a1c3, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013a1c4, 0x3)   callw(0x00134860, -0x5967);           /* call 0x134860 */
    II(0x0013a1c7, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x0013a1ca, 0x5)   mov(memw_a16(ss, bp - 0x1e), 0);      /* mov word [bp-0x1e], 0x0 */
    II(0x0013a1cf, 0x3)   mov(memw_a16(ss, bp - 0x1c), ax);     /* mov [bp-0x1c], ax */
l_0x0013a1d2:
    II(0x0013a1d2, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x0013a1d5, 0x3)   mov(dx, memw_a16(ss, bp - 0x2));      /* mov dx, [bp-0x2] */
    II(0x0013a1d8, 0x4)   sub(memw_a16(ss, bp - 0x4), 0x1);     /* sub word [bp-0x4], 0x1 */
    II(0x0013a1dc, 0x4)   sbb(memw_a16(ss, bp - 0x2), 0);       /* sbb word [bp-0x2], 0x0 */
    II(0x0013a1e0, 0x2)   or_(dx, dx);                          /* or dx, dx */
    II(0x0013a1e2, 0x2)   jnzw(0x0013a1e8, 0x4);                /* jnz 0x13a1e8 */
    II(0x0013a1e4, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0013a1e6, 0x2)   jzw(0x0013a262, 0x7a);                /* jz 0x13a262 */
l_0x0013a1e8:
    II(0x0013a1e8, 0x3)   pushw(memw_a16(ss, bp - 0xc));        /* push word [bp-0xc] */
    II(0x0013a1eb, 0x3)   pushw(memw_a16(ss, bp - 0xe));        /* push word [bp-0xe] */
    II(0x0013a1ee, 0x4)   pushw(memw_a16(ds, 0x4f8e));          /* push word [0x4f8e] */
    II(0x0013a1f2, 0x4)   pushw(memw_a16(ds, 0x4f8c));          /* push word [0x4f8c] */
    II(0x0013a1f6, 0x3)   callw(0x00139208, -0xff1);            /* call 0x139208 */
    II(0x0013a1f9, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013a1fc, 0x3)   mov(memw_a16(ss, bp - 0x1a), ax);     /* mov [bp-0x1a], ax */
    II(0x0013a1ff, 0x3)   mov(memw_a16(ss, bp - 0x18), dx);     /* mov [bp-0x18], dx */
    II(0x0013a202, 0x3)   mov(si, 0x18);                        /* mov si, 0x18 */
    II(0x0013a205, 0x3)   pushw(memw_a16(ss, bp - 0xc));        /* push word [bp-0xc] */
    II(0x0013a208, 0x3)   pushw(memw_a16(ss, bp - 0xe));        /* push word [bp-0xe] */
    II(0x0013a20b, 0x4)   pushw(memw_a16(ds, 0x1fa6));          /* push word [0x1fa6] */
    II(0x0013a20f, 0x4)   pushw(memw_a16(ds, 0x1fa4));          /* push word [0x1fa4] */
    II(0x0013a213, 0x3)   callw(0x001390c4, -0x1152);           /* call 0x1390c4 */
    II(0x0013a216, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013a219, 0x3)   mov(memw_a16(ss, bp - 0x22), ax);     /* mov [bp-0x22], ax */
    II(0x0013a21c, 0x3)   mov(al, memb_a16(ds, 0x51a6));        /* mov al, [0x51a6] */
    II(0x0013a21f, 0x2)   sub(ah, ah);                          /* sub ah, ah */
    II(0x0013a221, 0x3)   cmp(ax, memw_a16(ss, bp - 0x22));     /* cmp ax, [bp-0x22] */
    II(0x0013a224, 0x2)   jnzw(0x0013a22c, 0x6);                /* jnz 0x13a22c */
    II(0x0013a226, 0x3)   mov(si, 0x1a);                        /* mov si, 0x1a */
    II(0x0013a229, 0x2)   jmpw(0x0013a23b, 0x10);               /* jmp 0x13a23b */
//    II(0x0013a22b, 0x1)   /* Недостижимый код. */
l_0x0013a22c:
    II(0x0013a22c, 0x3)   mov(al, memb_a16(ds, 0x51b5));        /* mov al, [0x51b5] */
    II(0x0013a22f, 0x2)   sub(ah, ah);                          /* sub ah, ah */
    II(0x0013a231, 0x3)   cmp(ax, memw_a16(ss, bp - 0x22));     /* cmp ax, [bp-0x22] */
    II(0x0013a234, 0x2)   jnzw(0x0013a238, 0x2);                /* jnz 0x13a238 */
    II(0x0013a236, 0x2)   jmpw(0x0013a23b, 0x3);                /* jmp 0x13a23b */
l_0x0013a238:
    II(0x0013a238, 0x3)   or_(si, 0x1);                         /* or si, 0x1 */
l_0x0013a23b:
    II(0x0013a23b, 0x4)   test(memb_a16(ss, bp - 0x1a), 0x40);  /* test byte [bp-0x1a], 0x40 */
    II(0x0013a23f, 0x2)   jzw(0x0013a244, 0x3);                 /* jz 0x13a244 */
    II(0x0013a241, 0x3)   or_(si, 0x20);                        /* or si, 0x20 */
l_0x0013a244:
    II(0x0013a244, 0x4)   test(memb_a16(ss, bp - 0x1a), 0x20);  /* test byte [bp-0x1a], 0x20 */
    II(0x0013a248, 0x2)   jzw(0x0013a24d, 0x3);                 /* jz 0x13a24d */
    II(0x0013a24a, 0x3)   or_(si, 0x40);                        /* or si, 0x40 */
l_0x0013a24d:
    II(0x0013a24d, 0x3)   les(bx, ss, bp - 0x1e);               /* les bx, [bp-0x1e] */
    II(0x0013a250, 0x4)   add(memw_a16(ss, bp - 0x1e), 0x2);    /* add word [bp-0x1e], 0x2 */
    II(0x0013a254, 0x3)   mov(memw_a16(es, bx), si);            /* mov [es:bx], si */
    II(0x0013a257, 0x4)   add(memw_a16(ss, bp - 0x16), 0x1);    /* add word [bp-0x16], 0x1 */
    II(0x0013a25b, 0x4)   adc(memw_a16(ss, bp - 0x14), 0);      /* adc word [bp-0x14], 0x0 */
    II(0x0013a25f, 0x3)   jmpw(0x0013a1d2, -0x90);              /* jmp 0x13a1d2 */
l_0x0013a262:
    II(0x0013a262, 0x4)   cmp(memw_a16(ss, bp - 0xa), 0);       /* cmp word [bp-0xa], 0x0 */
    II(0x0013a266, 0x2)   jzw(0x0013a27c, 0x14);                /* jz 0x13a27c */
    II(0x0013a268, 0x3)   mov(ax, memw_a16(ss, bp - 0xa));      /* mov ax, [bp-0xa] */
    II(0x0013a26b, 0x1)   cwd();                                /* cwd  */
    II(0x0013a26c, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x0013a26f, 0x4)   mov(memw_a16(es, bx + 0x20), ax);     /* mov [es:bx+0x20], ax */
    II(0x0013a273, 0x4)   mov(memw_a16(es, bx + 0x22), dx);     /* mov [es:bx+0x22], dx */
    II(0x0013a277, 0x5)   or_(memb_a16(es, bx + 0x2c), 0x1);    /* or byte [es:bx+0x2c], 0x1 */
l_0x0013a27c:
//    II(0x0013a27c, 0x1)   nop();                                /* nop  */
    II(0x0013a27d, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013a27e, 0x3)   callw(0x0013488e, -0x59f3);           /* call 0x13488e */
    II(0x0013a281, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013a282, 0x1)   popw(si);                             /* pop si */
    II(0x0013a283, 0x1)   leavew();                             /* leave  */
    II(0x0013a284, 0x1)   retfw();                              /* retf  */
FUNC_END

