FUNC_BEGIN(0x0000ea0f, 0x5d2e89c78ddedd01, 0x10, ({0xe8, 0xd6, 0, 0x73, 0x3, 0xe9, 0xd5, 0xfd, 0x8b, 0x3e, 0xa, 0, 0x89, 0x7f, 0x12, 0x8e, 0x5e, 0x4, 0x8b, 0x76, 0x12, 0x8a, 0xc, 0x32, 0xed, 0x41, 0x41, 0x1e, 0x51, 0x56, 0x57, 0xf3, 0xa4, 0x6, 0x1f, 0xe8, 0x2e, 0xfe, 0x5e, 0x5f, 0x59, 0x7, 0xf3, 0xa4, 0xe9, 0xca, 0xfd}))
    II(0x0000ea0f, 0x3)   callw(0x0000eae8, 0xd6);              /* call 0xeae8 */
    II(0x0000ea12, 0x2)   jaew(0x0000ea17, 0x3);                /* jae 0xea17 */
    II(0x0000ea14, 0x3)   jmpw_func(0x0000e7ec, -0x22b);        /* jmp 0xe7ec */
l_0x0000ea17:
    II(0x0000ea17, 0x4)   mov(di, memw_a16(ds, 0xa));           /* mov di, [0xa] */
    II(0x0000ea1b, 0x3)   mov(memw_a16(ds, bx + 0x12), di);     /* mov [bx+0x12], di */
    II(0x0000ea1e, 0x3)   mov(ds, memw_a16(ss, bp + 0x4));      /* mov ds, [bp+0x4] */
    II(0x0000ea21, 0x3)   mov(si, memw_a16(ss, bp + 0x12));     /* mov si, [bp+0x12] */
    II(0x0000ea24, 0x2)   mov(cl, memb_a16(ds, si));            /* mov cl, [si] */
    II(0x0000ea26, 0x2)   xor_(ch, ch);                         /* xor ch, ch */
    II(0x0000ea28, 0x1)   inc(cx);                              /* inc cx */
    II(0x0000ea29, 0x1)   inc(cx);                              /* inc cx */
    II(0x0000ea2a, 0x1)   pushw(ds);                            /* push ds */
    II(0x0000ea2b, 0x1)   pushw(cx);                            /* push cx */
    II(0x0000ea2c, 0x1)   pushw(si);                            /* push si */
    II(0x0000ea2d, 0x1)   pushw(di);                            /* push di */
    II(0x0000ea2e, 0x2)   rep_a16 movsb_a16();                  /* rep movsb  */
    II(0x0000ea30, 0x1)   pushw(es);                            /* push es */
    II(0x0000ea31, 0x1)   popw(ds);                             /* pop ds */
    II(0x0000ea32, 0x3)   callw(0x0000e863, -0x1d2);            /* call 0xe863 */
    II(0x0000ea35, 0x1)   popw(si);                             /* pop si */
    II(0x0000ea36, 0x1)   popw(di);                             /* pop di */
    II(0x0000ea37, 0x1)   popw(cx);                             /* pop cx */
    II(0x0000ea38, 0x1)   popw(es);                             /* pop es */
    II(0x0000ea39, 0x2)   rep_a16 movsb_a16();                  /* rep movsb  */
    II(0x0000ea3b, 0x3)   jmpw_func(0x0000e808, -0x236);        /* jmp 0xe808 */
FUNC_END

