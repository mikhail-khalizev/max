FUNC_BEGIN(0x0013e368, 0xe1b60c9d367302b7, 0x10, ({0x51, 0x57, 0xf6, 0x47, 0x2, 0x1, 0x74, 0x63, 0xe8, 0xd2, 0, 0x8b, 0xfe, 0x8b, 0x4, 0xa8, 0x1, 0x74, 0x3, 0x2b, 0xc8, 0x49, 0x41, 0x41, 0x8b, 0x77, 0x4, 0xb, 0xf6, 0x74, 0x4c, 0x3, 0xce, 0x73, 0x9, 0x33, 0xc0, 0xba, 0xf0, 0xff, 0xe3, 0x30, 0xeb, 0x3f, 0x16, 0x7, 0x26, 0xa1, 0xa8, 0x1d, 0x3d, 0, 0x20, 0x74, 0x16, 0xba, 0, 0x80, 0x3b, 0xd0, 0x72, 0x6, 0xd1, 0xea, 0x75, 0xf8, 0xeb, 0x22, 0x83, 0xfa, 0x8, 0x72, 0x1d, 0xd1, 0xe2, 0x8b, 0xc2, 0x48, 0x8b, 0xd0, 0x3, 0xc1, 0x73, 0x2, 0x33, 0xc0, 0xf7, 0xd2, 0x23, 0xc2, 0x52, 0xe8, 0x2e, 0, 0x5a, 0x73, 0xd, 0x83, 0xfa, 0xf0, 0x74, 0x5, 0xb8, 0x10, 0, 0xeb, 0xe2, 0xf9, 0xeb, 0x1b, 0x8b, 0xd0, 0x2b, 0x57, 0x4, 0x89, 0x47, 0x4, 0x89, 0x7f, 0x8, 0x8b, 0x77, 0xa, 0x4a, 0x89, 0x14, 0x42, 0x3, 0xf2, 0xc7, 0x4, 0xfe, 0xff, 0x89, 0x77, 0xa, 0x5f, 0x59, 0xc3}))
    II(0x0013e368, 0x1)   pushw(cx);                            /* push cx */
    II(0x0013e369, 0x1)   pushw(di);                            /* push di */
    II(0x0013e36a, 0x4)   test(memb_a16(ds, bx + 0x2), 0x1);    /* test byte [bx+0x2], 0x1 */
    II(0x0013e36e, 0x2)   jzw(0x0013e3d3, 0x63);                /* jz 0x13e3d3 */
    II(0x0013e370, 0x3)   callw(0x0013e445, 0xd2);              /* call 0x13e445 */
    II(0x0013e373, 0x2)   mov(di, si);                          /* mov di, si */
    II(0x0013e375, 0x2)   mov(ax, memw_a16(ds, si));            /* mov ax, [si] */
    II(0x0013e377, 0x2)   test(al, 0x1);                        /* test al, 0x1 */
    II(0x0013e379, 0x2)   jzw(0x0013e37e, 0x3);                 /* jz 0x13e37e */
    II(0x0013e37b, 0x2)   sub(cx, ax);                          /* sub cx, ax */
    II(0x0013e37d, 0x1)   dec(cx);                              /* dec cx */
l_0x0013e37e:
    II(0x0013e37e, 0x1)   inc(cx);                              /* inc cx */
    II(0x0013e37f, 0x1)   inc(cx);                              /* inc cx */
    II(0x0013e380, 0x3)   mov(si, memw_a16(ds, bx + 0x4));      /* mov si, [bx+0x4] */
    II(0x0013e383, 0x2)   or_(si, si);                          /* or si, si */
    II(0x0013e385, 0x2)   jzw(0x0013e3d3, 0x4c);                /* jz 0x13e3d3 */
    II(0x0013e387, 0x2)   add(cx, si);                          /* add cx, si */
    II(0x0013e389, 0x2)   jaew(0x0013e394, 0x9);                /* jae 0x13e394 */
    II(0x0013e38b, 0x2)   xor_(ax, ax);                         /* xor ax, ax */
    II(0x0013e38d, 0x3)   mov(dx, 0xfff0);                      /* mov dx, 0xfff0 */
    II(0x0013e390, 0x2)   jcxzw(0x0013e3c2, 0x30);              /* jcxz 0x13e3c2 */
    II(0x0013e392, 0x2)   jmpw(0x0013e3d3, 0x3f);               /* jmp 0x13e3d3 */
l_0x0013e394:
    II(0x0013e394, 0x1)   pushw(ss);                            /* push ss */
    II(0x0013e395, 0x1)   popw(es);                             /* pop es */
    II(0x0013e396, 0x4)   mov(ax, memw_a16(es, 0x1da8));        /* mov ax, [es:0x1da8] */
    II(0x0013e39a, 0x3)   cmp(ax, 0x2000);                      /* cmp ax, 0x2000 */
    II(0x0013e39d, 0x2)   jzw(0x0013e3b5, 0x16);                /* jz 0x13e3b5 */
    II(0x0013e39f, 0x3)   mov(dx, 0x8000);                      /* mov dx, 0x8000 */
l_0x0013e3a2:
    II(0x0013e3a2, 0x2)   cmp(dx, ax);                          /* cmp dx, ax */
    II(0x0013e3a4, 0x2)   jbw(0x0013e3ac, 0x6);                 /* jb 0x13e3ac */
    II(0x0013e3a6, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013e3a8, 0x2)   jnzw(0x0013e3a2, -0x8);               /* jnz 0x13e3a2 */
    II(0x0013e3aa, 0x2)   jmpw(0x0013e3ce, 0x22);               /* jmp 0x13e3ce */
l_0x0013e3ac:
    II(0x0013e3ac, 0x3)   cmp(dx, 0x8);                         /* cmp dx, 0x8 */
    II(0x0013e3af, 0x2)   jbw(0x0013e3ce, 0x1d);                /* jb 0x13e3ce */
    II(0x0013e3b1, 0x2)   shl(dx, 0x1);                         /* shl dx, 1 */
    II(0x0013e3b3, 0x2)   mov(ax, dx);                          /* mov ax, dx */
l_0x0013e3b5:
    II(0x0013e3b5, 0x1)   dec(ax);                              /* dec ax */
    II(0x0013e3b6, 0x2)   mov(dx, ax);                          /* mov dx, ax */
    II(0x0013e3b8, 0x2)   add(ax, cx);                          /* add ax, cx */
    II(0x0013e3ba, 0x2)   jaew(0x0013e3be, 0x2);                /* jae 0x13e3be */
    II(0x0013e3bc, 0x2)   xor_(ax, ax);                         /* xor ax, ax */
l_0x0013e3be:
    II(0x0013e3be, 0x2)   not_(dx);                             /* not dx */
    II(0x0013e3c0, 0x2)   and_(ax, dx);                         /* and ax, dx */
l_0x0013e3c2:
    II(0x0013e3c2, 0x1)   pushw(dx);                            /* push dx */
    II(0x0013e3c3, 0x3)   callw(0x0013e3f4, 0x2e);              /* call 0x13e3f4 */
    II(0x0013e3c6, 0x1)   popw(dx);                             /* pop dx */
    II(0x0013e3c7, 0x2)   jaew(0x0013e3d6, 0xd);                /* jae 0x13e3d6 */
    II(0x0013e3c9, 0x3)   cmp(dx, -0x10 /* 0xf0 */);            /* cmp dx, 0xf0 */
    II(0x0013e3cc, 0x2)   jzw(0x0013e3d3, 0x5);                 /* jz 0x13e3d3 */
l_0x0013e3ce:
    II(0x0013e3ce, 0x3)   mov(ax, 0x10);                        /* mov ax, 0x10 */
    II(0x0013e3d1, 0x2)   jmpw(0x0013e3b5, -0x1e);              /* jmp 0x13e3b5 */
l_0x0013e3d3:
    II(0x0013e3d3, 0x1)   stc();                                /* stc  */
    II(0x0013e3d4, 0x2)   jmpw(0x0013e3f1, 0x1b);               /* jmp 0x13e3f1 */
l_0x0013e3d6:
    II(0x0013e3d6, 0x2)   mov(dx, ax);                          /* mov dx, ax */
    II(0x0013e3d8, 0x3)   sub(dx, memw_a16(ds, bx + 0x4));      /* sub dx, [bx+0x4] */
    II(0x0013e3db, 0x3)   mov(memw_a16(ds, bx + 0x4), ax);      /* mov [bx+0x4], ax */
    II(0x0013e3de, 0x3)   mov(memw_a16(ds, bx + 0x8), di);      /* mov [bx+0x8], di */
    II(0x0013e3e1, 0x3)   mov(si, memw_a16(ds, bx + 0xa));      /* mov si, [bx+0xa] */
    II(0x0013e3e4, 0x1)   dec(dx);                              /* dec dx */
    II(0x0013e3e5, 0x2)   mov(memw_a16(ds, si), dx);            /* mov [si], dx */
    II(0x0013e3e7, 0x1)   inc(dx);                              /* inc dx */
    II(0x0013e3e8, 0x2)   add(si, dx);                          /* add si, dx */
    II(0x0013e3ea, 0x4)   mov(memw_a16(ds, si), 0xfffe);        /* mov word [si], 0xfffe */
    II(0x0013e3ee, 0x3)   mov(memw_a16(ds, bx + 0xa), si);      /* mov [bx+0xa], si */
l_0x0013e3f1:
    II(0x0013e3f1, 0x1)   popw(di);                             /* pop di */
    II(0x0013e3f2, 0x1)   popw(cx);                             /* pop cx */
    II(0x0013e3f3, 0x1)   retw();                               /* ret  */
FUNC_END

