FUNC_BEGIN(0x00137640, 0x44980fc325334265, 0x10, ({0xc8, 0x22, 0, 0, 0x57, 0x56, 0x1e, 0xb8, 0x68, 0x3e, 0x8e, 0xd8, 0xc7, 0x46, 0xf0, 0x1, 0, 0xc7, 0x46, 0xf2, 0x70, 0, 0xc7, 0x46, 0xf4, 0x10, 0, 0xb8, 0x70, 0, 0xba, 0x10, 0, 0x1e, 0x8d, 0x7e, 0xe4, 0x8b, 0xf0, 0x16, 0x7, 0x8e, 0xda, 0xa5, 0xa5, 0xa5, 0xa5, 0x1f, 0x8b, 0xf8, 0xbe, 0x9e, 0, 0x8e, 0xc2, 0xa5, 0xa5, 0xa5, 0xa5, 0xc4, 0x1e, 0xfc, 0x1e, 0x26, 0xfe, 0x7, 0x90, 0xe, 0xe8, 0x2d, 0x90, 0x90, 0xe, 0xe8, 0x16, 0x18, 0xfb, 0xc4, 0x5e, 0xa, 0x26, 0xff, 0x77, 0x22, 0x26, 0xff, 0x77, 0x20, 0x26, 0xff, 0x77, 0x4c, 0xff, 0x76, 0x8, 0xff, 0x76, 0x6, 0x1e, 0x68, 0xde, 0x8, 0x90, 0xe, 0xe8, 0xa4, 0x99, 0x83, 0xc4, 0xe, 0x83, 0x3e, 0x84, 0x9, 0, 0x74, 0x5e, 0xc4, 0x1e, 0xc4, 0x4f, 0x26, 0xc6, 0x7, 0x20, 0xa0, 0x30, 0x51, 0xc4, 0x1e, 0xc4, 0x4f, 0x26, 0x88, 0x47, 0x1, 0x8b, 0x46, 0x6, 0x8b, 0x56, 0x8, 0xc4, 0x1e, 0xc4, 0x4f, 0x26, 0x89, 0x47, 0x2, 0x26, 0x89, 0x57, 0x4, 0xc4, 0x5e, 0xa, 0x26, 0x8b, 0x47, 0x20, 0x26, 0x8b, 0x57, 0x22, 0xc4, 0x36, 0xc4, 0x4f, 0x26, 0x89, 0x44, 0x6, 0x26, 0x89, 0x54, 0x8, 0xc4, 0x5e, 0xa, 0x26, 0x8b, 0x47, 0x4c, 0xc4, 0x1e, 0xc4, 0x4f, 0x26, 0x89, 0x47, 0xa, 0xff, 0x36, 0x67, 0x51, 0xff, 0x36, 0xc6, 0x4f, 0xff, 0x36, 0xc4, 0x4f, 0x6a, 0xc, 0x90, 0xe, 0xe8, 0x51, 0x91, 0x8b, 0x46, 0x6, 0x8b, 0x56, 0x8, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x89, 0x46, 0xf6, 0x89, 0x56, 0xf8, 0xe, 0xe8, 0x19, 0x3, 0x89, 0x46, 0xe2, 0x3d, 0xff, 0xff, 0x75, 0x31, 0xff, 0x76, 0x8, 0xff, 0x76, 0x6, 0x68, 0x22, 0x9, 0x90, 0xe, 0xe8, 0x63, 0xfe, 0x83, 0xc4, 0x6, 0xc4, 0x1e, 0xfc, 0x1e, 0x26, 0xfe, 0xf, 0x1e, 0x8d, 0x76, 0xe4, 0x8c, 0xd0, 0x8e, 0xd8, 0xc4, 0x7e, 0xf2, 0xa5, 0xa5, 0xa5, 0xa5, 0x1f, 0x8b, 0x46, 0xf0, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb, 0x90, 0x60, 0xfb, 0x90, 0xfa, 0x61, 0x90, 0xe, 0xe8, 0x36, 0x8f, 0x90, 0xe, 0xe8, 0x1f, 0x17, 0x6a, 0, 0xff, 0x76, 0xe2, 0xff, 0x76, 0xf8, 0xff, 0x76, 0xf6, 0xe, 0xe8, 0x1a, 0x6, 0x83, 0xc4, 0x8, 0x8b, 0x46, 0xf6, 0x8b, 0x56, 0xf8, 0x2d, 0, 0, 0x83, 0xda, 0x1, 0x52, 0x50, 0xff, 0x36, 0x8e, 0x4f, 0xff, 0x36, 0x8c, 0x4f, 0xe8, 0x5a, 0x1a, 0x83, 0xc4, 0x8, 0x89, 0x46, 0xfa, 0x89, 0x56, 0xfc, 0x52, 0x50, 0xff, 0x76, 0xf8, 0xff, 0x76, 0xf6, 0xe, 0xe8, 0x39, 0x5, 0x83, 0xc4, 0x8, 0x89, 0x46, 0xfe, 0xb, 0xc0, 0x74, 0x1f, 0xc4, 0x1e, 0xfc, 0x1e, 0x26, 0xfe, 0xf, 0x1e, 0x8d, 0x76, 0xe4, 0x8c, 0xd0, 0x8e, 0xd8, 0xc4, 0x7e, 0xf2, 0xa5, 0xa5, 0xa5, 0xa5, 0x1f, 0x8b, 0x46, 0xf0, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb, 0xc4, 0x5e, 0xa, 0x26, 0x8b, 0x47, 0x50, 0xba, 0x8, 0, 0x89, 0x46, 0xec, 0x89, 0x56, 0xee, 0x8e, 0xc2, 0x8b, 0xd8, 0x26, 0x8b, 0x4f, 0x2, 0x26, 0x8a, 0x47, 0x4, 0x26, 0x8a, 0x57, 0x7, 0x2a, 0xf6, 0xc1, 0xe2, 0x8, 0x2a, 0xe4, 0x3, 0xd0, 0x8b, 0xf2, 0x8b, 0xc1, 0x89, 0x46, 0xf6, 0x89, 0x56, 0xf8, 0x26, 0xf6, 0x47, 0x6, 0x40, 0x74, 0x1a, 0xc4, 0x5e, 0xa, 0x26, 0x3, 0x47, 0x38, 0x26, 0x13, 0x57, 0x3a, 0x2d, 0x14, 0, 0x83, 0xda, 0, 0x89, 0x46, 0xf6, 0x89, 0x56, 0xf8, 0xeb, 0x15, 0x90, 0xc4, 0x5e, 0xa, 0x26, 0x8b, 0x47, 0x38, 0x2b, 0xd2, 0x2d, 0x14, 0, 0x1b, 0xd2, 0x1, 0x46, 0xf6, 0x11, 0x56, 0xf8, 0x6a, 0xc, 0x8d, 0x46, 0xf6, 0x16, 0x50, 0x90, 0xe, 0xe8, 0x5c, 0x65, 0x83, 0xfa, 0x1, 0x72, 0x70, 0x77, 0, 0x2d, 0, 0, 0x83, 0xda, 0x1, 0x52, 0x50, 0xff, 0x36, 0x8e, 0x4f, 0xff, 0x36, 0x8c, 0x4f, 0xe8, 0x8e, 0x19, 0x83, 0xc4, 0x8, 0x89, 0x46, 0xfa, 0x89, 0x56, 0xfc, 0x89, 0x46, 0xde, 0x89, 0x56, 0xe0, 0xf6, 0x46, 0xde, 0x1, 0x75, 0x46, 0xe, 0xe8, 0xc1, 0x1, 0x89, 0x46, 0xe2, 0x3d, 0xff, 0xff, 0x75, 0x11, 0xff, 0x76, 0x8, 0xff, 0x76, 0x6, 0x68, 0x22, 0x9, 0x90, 0xe, 0xe8, 0xb, 0xfd, 0x83, 0xc4, 0x6, 0x6a, 0, 0xff, 0x76, 0xe2, 0xff, 0x76, 0xf8, 0xff, 0x76, 0xf6, 0xe, 0xe8, 0xf1, 0x4, 0x83, 0xc4, 0x8, 0xff, 0x76, 0xfc, 0xff, 0x76, 0xfa, 0xff, 0x76, 0xf8, 0xff, 0x76, 0xf6, 0xe, 0xe8, 0x2e, 0x4, 0x83, 0xc4, 0x8, 0xb, 0xc0, 0x74, 0, 0xfe, 0xe, 0x96, 0x9, 0x1e, 0x68, 0xf2, 0x8, 0x90, 0xe, 0xe8, 0x6d, 0x97, 0x83, 0xc4, 0x4, 0xc4, 0x1e, 0xfc, 0x1e, 0x26, 0xfe, 0xf, 0x90, 0xe, 0xe8, 0xa6, 0x15, 0x1e, 0x8d, 0x76, 0xe4, 0x8c, 0xd0, 0x8e, 0xd8, 0xc4, 0x7e, 0xf2, 0xa5, 0xa5, 0xa5, 0xa5, 0x1f, 0x2b, 0xc0, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb}))
    II(0x00137640, 0x4)   enterw(0x22, 0);                      /* enter 0x22, 0x0 */
    II(0x00137644, 0x1)   pushw(di);                            /* push di */
    II(0x00137645, 0x1)   pushw(si);                            /* push si */
    II(0x00137646, 0x1)   pushw(ds);                            /* push ds */
    II(0x00137647, 0x3)   mov(ax, 0x3e68);                      /* mov ax, 0x3e68 */
    II(0x0013764a, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x0013764c, 0x5)   mov(memw_a16(ss, bp - 0x10), 0x1);    /* mov word [bp-0x10], 0x1 */
    II(0x00137651, 0x5)   mov(memw_a16(ss, bp - 0xe), 0x70);    /* mov word [bp-0xe], 0x70 */
    II(0x00137656, 0x5)   mov(memw_a16(ss, bp - 0xc), 0x10);    /* mov word [bp-0xc], 0x10 */
    II(0x0013765b, 0x3)   mov(ax, 0x70);                        /* mov ax, 0x70 */
    II(0x0013765e, 0x3)   mov(dx, 0x10);                        /* mov dx, 0x10 */
    II(0x00137661, 0x1)   pushw(ds);                            /* push ds */
    II(0x00137662, 0x3)   lea(di, bp - 0x1c);                   /* lea di, [bp-0x1c] */
    II(0x00137665, 0x2)   mov(si, ax);                          /* mov si, ax */
    II(0x00137667, 0x1)   pushw(ss);                            /* push ss */
    II(0x00137668, 0x1)   popw(es);                             /* pop es */
    II(0x00137669, 0x2)   mov(ds, dx);                          /* mov ds, dx */
    II(0x0013766b, 0x1)   movsw_a16();                          /* movsw  */
    II(0x0013766c, 0x1)   movsw_a16();                          /* movsw  */
    II(0x0013766d, 0x1)   movsw_a16();                          /* movsw  */
    II(0x0013766e, 0x1)   movsw_a16();                          /* movsw  */
    II(0x0013766f, 0x1)   popw(ds);                             /* pop ds */
    II(0x00137670, 0x2)   mov(di, ax);                          /* mov di, ax */
    II(0x00137672, 0x3)   mov(si, 0x9e);                        /* mov si, 0x9e */
    II(0x00137675, 0x2)   mov(es, dx);                          /* mov es, dx */
    II(0x00137677, 0x1)   movsw_a16();                          /* movsw  */
    II(0x00137678, 0x1)   movsw_a16();                          /* movsw  */
    II(0x00137679, 0x1)   movsw_a16();                          /* movsw  */
    II(0x0013767a, 0x1)   movsw_a16();                          /* movsw  */
    II(0x0013767b, 0x4)   les(bx, ds, 0x1efc);                  /* les bx, [0x1efc] */
    II(0x0013767f, 0x3)   inc(memb_a16(es, bx));                /* inc byte [es:bx] */
//    II(0x00137682, 0x1)   nop();                                /* nop  */
    II(0x00137683, 0x1)   pushw(cs);                            /* push cs */
    II(0x00137684, 0x3)   callw(0x001306b4, -0x6fd3);           /* call 0x1306b4 */
//    II(0x00137687, 0x1)   nop();                                /* nop  */
    II(0x00137688, 0x1)   pushw(cs);                            /* push cs */
    II(0x00137689, 0x3)   callw(0x00138ea2, 0x1816);            /* call 0x138ea2 */
    II(0x0013768c, 0x1)   sti();                                /* sti  */
    II(0x0013768d, 0x3)   les(bx, ss, bp + 0xa);                /* les bx, [bp+0xa] */
    II(0x00137690, 0x4)   pushw(memw_a16(es, bx + 0x22));       /* push word [es:bx+0x22] */
    II(0x00137694, 0x4)   pushw(memw_a16(es, bx + 0x20));       /* push word [es:bx+0x20] */
    II(0x00137698, 0x4)   pushw(memw_a16(es, bx + 0x4c));       /* push word [es:bx+0x4c] */
    II(0x0013769c, 0x3)   pushw(memw_a16(ss, bp + 0x8));        /* push word [bp+0x8] */
    II(0x0013769f, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x001376a2, 0x1)   pushw(ds);                            /* push ds */
    II(0x001376a3, 0x3)   pushw(0x8de);                         /* push word 0x8de */
//    II(0x001376a6, 0x1)   nop();                                /* nop  */
    II(0x001376a7, 0x1)   pushw(cs);                            /* push cs */
    II(0x001376a8, 0x3)   callw(0x0013104f, -0x665c);           /* call 0x13104f */
    II(0x001376ab, 0x3)   add(sp, 0xe);                         /* add sp, 0xe */
    II(0x001376ae, 0x5)   cmp(memw_a16(ds, 0x984), 0);          /* cmp word [0x984], 0x0 */
    II(0x001376b3, 0x2)   jzw(0x00137713, 0x5e);                /* jz 0x137713 */
    II(0x001376b5, 0x4)   les(bx, ds, 0x4fc4);                  /* les bx, [0x4fc4] */
    II(0x001376b9, 0x4)   mov(memb_a16(es, bx), 0x20);          /* mov byte [es:bx], 0x20 */
    II(0x001376bd, 0x3)   mov(al, memb_a16(ds, 0x5130));        /* mov al, [0x5130] */
    II(0x001376c0, 0x4)   les(bx, ds, 0x4fc4);                  /* les bx, [0x4fc4] */
    II(0x001376c4, 0x4)   mov(memb_a16(es, bx + 0x1), al);      /* mov [es:bx+0x1], al */
    II(0x001376c8, 0x3)   mov(ax, memw_a16(ss, bp + 0x6));      /* mov ax, [bp+0x6] */
    II(0x001376cb, 0x3)   mov(dx, memw_a16(ss, bp + 0x8));      /* mov dx, [bp+0x8] */
    II(0x001376ce, 0x4)   les(bx, ds, 0x4fc4);                  /* les bx, [0x4fc4] */
    II(0x001376d2, 0x4)   mov(memw_a16(es, bx + 0x2), ax);      /* mov [es:bx+0x2], ax */
    II(0x001376d6, 0x4)   mov(memw_a16(es, bx + 0x4), dx);      /* mov [es:bx+0x4], dx */
    II(0x001376da, 0x3)   les(bx, ss, bp + 0xa);                /* les bx, [bp+0xa] */
    II(0x001376dd, 0x4)   mov(ax, memw_a16(es, bx + 0x20));     /* mov ax, [es:bx+0x20] */
    II(0x001376e1, 0x4)   mov(dx, memw_a16(es, bx + 0x22));     /* mov dx, [es:bx+0x22] */
    II(0x001376e5, 0x4)   les(si, ds, 0x4fc4);                  /* les si, [0x4fc4] */
    II(0x001376e9, 0x4)   mov(memw_a16(es, si + 0x6), ax);      /* mov [es:si+0x6], ax */
    II(0x001376ed, 0x4)   mov(memw_a16(es, si + 0x8), dx);      /* mov [es:si+0x8], dx */
    II(0x001376f1, 0x3)   les(bx, ss, bp + 0xa);                /* les bx, [bp+0xa] */
    II(0x001376f4, 0x4)   mov(ax, memw_a16(es, bx + 0x4c));     /* mov ax, [es:bx+0x4c] */
    II(0x001376f8, 0x4)   les(bx, ds, 0x4fc4);                  /* les bx, [0x4fc4] */
    II(0x001376fc, 0x4)   mov(memw_a16(es, bx + 0xa), ax);      /* mov [es:bx+0xa], ax */
    II(0x00137700, 0x4)   pushw(memw_a16(ds, 0x5167));          /* push word [0x5167] */
    II(0x00137704, 0x4)   pushw(memw_a16(ds, 0x4fc6));          /* push word [0x4fc6] */
    II(0x00137708, 0x4)   pushw(memw_a16(ds, 0x4fc4));          /* push word [0x4fc4] */
    II(0x0013770c, 0x2)   pushw(0xc);                           /* push 0xc */
//    II(0x0013770e, 0x1)   nop();                                /* nop  */
    II(0x0013770f, 0x1)   pushw(cs);                            /* push cs */
    II(0x00137710, 0x3)   callw(0x00130864, -0x6eaf);           /* call 0x130864 */
l_0x00137713:
    II(0x00137713, 0x3)   mov(ax, memw_a16(ss, bp + 0x6));      /* mov ax, [bp+0x6] */
    II(0x00137716, 0x3)   mov(dx, memw_a16(ss, bp + 0x8));      /* mov dx, [bp+0x8] */
    II(0x00137719, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x0013771b, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x0013771d, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x0013771f, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x00137721, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00137723, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00137725, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x00137727, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00137729, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013772b, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013772d, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013772f, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x00137731, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x00137734, 0x3)   mov(memw_a16(ss, bp - 0x8), dx);      /* mov [bp-0x8], dx */
    II(0x00137737, 0x1)   pushw(cs);                            /* push cs */
    II(0x00137738, 0x3)   callw(0x00137a54, 0x319);             /* call 0x137a54 */
    II(0x0013773b, 0x3)   mov(memw_a16(ss, bp - 0x1e), ax);     /* mov [bp-0x1e], ax */
    II(0x0013773e, 0x3)   cmp(ax, 0xffff);                      /* cmp ax, 0xffff */
    II(0x00137741, 0x2)   jnzw(0x00137774, 0x31);               /* jnz 0x137774 */
    II(0x00137743, 0x3)   pushw(memw_a16(ss, bp + 0x8));        /* push word [bp+0x8] */
    II(0x00137746, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x00137749, 0x3)   pushw(0x922);                         /* push word 0x922 */
//    II(0x0013774c, 0x1)   nop();                                /* nop  */
    II(0x0013774d, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013774e, 0x3)   callw(0x001375b4, -0x19d);            /* call 0x1375b4 */
    II(0x00137751, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x00137754, 0x4)   les(bx, ds, 0x1efc);                  /* les bx, [0x1efc] */
    II(0x00137758, 0x3)   dec(memb_a16(es, bx));                /* dec byte [es:bx] */
    II(0x0013775b, 0x1)   pushw(ds);                            /* push ds */
    II(0x0013775c, 0x3)   lea(si, bp - 0x1c);                   /* lea si, [bp-0x1c] */
    II(0x0013775f, 0x2)   mov(ax, ss);                          /* mov ax, ss */
    II(0x00137761, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x00137763, 0x3)   les(di, ss, bp - 0xe);                /* les di, [bp-0xe] */
    II(0x00137766, 0x1)   movsw_a16();                          /* movsw  */
    II(0x00137767, 0x1)   movsw_a16();                          /* movsw  */
    II(0x00137768, 0x1)   movsw_a16();                          /* movsw  */
    II(0x00137769, 0x1)   movsw_a16();                          /* movsw  */
    II(0x0013776a, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013776b, 0x3)   mov(ax, memw_a16(ss, bp - 0x10));     /* mov ax, [bp-0x10] */
    II(0x0013776e, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013776f, 0x1)   popw(si);                             /* pop si */
    II(0x00137770, 0x1)   popw(di);                             /* pop di */
    II(0x00137771, 0x1)   leavew();                             /* leave  */
    II(0x00137772, 0x1)   retfw();                              /* retf  */
//    II(0x00137773, 0x1)   /* Недостижимый код. */
l_0x00137774:
    II(0x00137774, 0x1)   pusha();                              /* pusha  */
    II(0x00137775, 0x1)   sti();                                /* sti  */
//    II(0x00137776, 0x1)   nop();                                /* nop  */
    II(0x00137777, 0x1)   cli();                                /* cli  */
    II(0x00137778, 0x1)   popa();                               /* popa  */
//    II(0x00137779, 0x1)   nop();                                /* nop  */
    II(0x0013777a, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013777b, 0x3)   callw(0x001306b4, -0x70ca);           /* call 0x1306b4 */
//    II(0x0013777e, 0x1)   nop();                                /* nop  */
    II(0x0013777f, 0x1)   pushw(cs);                            /* push cs */
    II(0x00137780, 0x3)   callw(0x00138ea2, 0x171f);            /* call 0x138ea2 */
    II(0x00137783, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x00137785, 0x3)   pushw(memw_a16(ss, bp - 0x1e));       /* push word [bp-0x1e] */
    II(0x00137788, 0x3)   pushw(memw_a16(ss, bp - 0x8));        /* push word [bp-0x8] */
    II(0x0013778b, 0x3)   pushw(memw_a16(ss, bp - 0xa));        /* push word [bp-0xa] */
    II(0x0013778e, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013778f, 0x3)   callw(0x00137dac, 0x61a);             /* call 0x137dac */
    II(0x00137792, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x00137795, 0x3)   mov(ax, memw_a16(ss, bp - 0xa));      /* mov ax, [bp-0xa] */
    II(0x00137798, 0x3)   mov(dx, memw_a16(ss, bp - 0x8));      /* mov dx, [bp-0x8] */
    II(0x0013779b, 0x3)   sub(ax, 0);                           /* sub ax, 0x0 */
    II(0x0013779e, 0x3)   sbb(dx, 0x1);                         /* sbb dx, 0x1 */
    II(0x001377a1, 0x1)   pushw(dx);                            /* push dx */
    II(0x001377a2, 0x1)   pushw(ax);                            /* push ax */
    II(0x001377a3, 0x4)   pushw(memw_a16(ds, 0x4f8e));          /* push word [0x4f8e] */
    II(0x001377a7, 0x4)   pushw(memw_a16(ds, 0x4f8c));          /* push word [0x4f8c] */
    II(0x001377ab, 0x3)   callw(0x00139208, 0x1a5a);            /* call 0x139208 */
    II(0x001377ae, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x001377b1, 0x3)   mov(memw_a16(ss, bp - 0x6), ax);      /* mov [bp-0x6], ax */
    II(0x001377b4, 0x3)   mov(memw_a16(ss, bp - 0x4), dx);      /* mov [bp-0x4], dx */
    II(0x001377b7, 0x1)   pushw(dx);                            /* push dx */
    II(0x001377b8, 0x1)   pushw(ax);                            /* push ax */
    II(0x001377b9, 0x3)   pushw(memw_a16(ss, bp - 0x8));        /* push word [bp-0x8] */
    II(0x001377bc, 0x3)   pushw(memw_a16(ss, bp - 0xa));        /* push word [bp-0xa] */
    II(0x001377bf, 0x1)   pushw(cs);                            /* push cs */
    II(0x001377c0, 0x3)   callw(0x00137cfc, 0x539);             /* call 0x137cfc */
    II(0x001377c3, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x001377c6, 0x3)   mov(memw_a16(ss, bp - 0x2), ax);      /* mov [bp-0x2], ax */
    II(0x001377c9, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x001377cb, 0x2)   jzw(0x001377ec, 0x1f);                /* jz 0x1377ec */
    II(0x001377cd, 0x4)   les(bx, ds, 0x1efc);                  /* les bx, [0x1efc] */
    II(0x001377d1, 0x3)   dec(memb_a16(es, bx));                /* dec byte [es:bx] */
    II(0x001377d4, 0x1)   pushw(ds);                            /* push ds */
    II(0x001377d5, 0x3)   lea(si, bp - 0x1c);                   /* lea si, [bp-0x1c] */
    II(0x001377d8, 0x2)   mov(ax, ss);                          /* mov ax, ss */
    II(0x001377da, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x001377dc, 0x3)   les(di, ss, bp - 0xe);                /* les di, [bp-0xe] */
    II(0x001377df, 0x1)   movsw_a16();                          /* movsw  */
    II(0x001377e0, 0x1)   movsw_a16();                          /* movsw  */
    II(0x001377e1, 0x1)   movsw_a16();                          /* movsw  */
    II(0x001377e2, 0x1)   movsw_a16();                          /* movsw  */
    II(0x001377e3, 0x1)   popw(ds);                             /* pop ds */
    II(0x001377e4, 0x3)   mov(ax, memw_a16(ss, bp - 0x10));     /* mov ax, [bp-0x10] */
    II(0x001377e7, 0x1)   popw(ds);                             /* pop ds */
    II(0x001377e8, 0x1)   popw(si);                             /* pop si */
    II(0x001377e9, 0x1)   popw(di);                             /* pop di */
    II(0x001377ea, 0x1)   leavew();                             /* leave  */
    II(0x001377eb, 0x1)   retfw();                              /* retf  */
l_0x001377ec:
    II(0x001377ec, 0x3)   les(bx, ss, bp + 0xa);                /* les bx, [bp+0xa] */
    II(0x001377ef, 0x4)   mov(ax, memw_a16(es, bx + 0x50));     /* mov ax, [es:bx+0x50] */
    II(0x001377f3, 0x3)   mov(dx, 0x8);                         /* mov dx, 0x8 */
    II(0x001377f6, 0x3)   mov(memw_a16(ss, bp - 0x14), ax);     /* mov [bp-0x14], ax */
    II(0x001377f9, 0x3)   mov(memw_a16(ss, bp - 0x12), dx);     /* mov [bp-0x12], dx */
    II(0x001377fc, 0x2)   mov(es, dx);                          /* mov es, dx */
    II(0x001377fe, 0x2)   mov(bx, ax);                          /* mov bx, ax */
    II(0x00137800, 0x4)   mov(cx, memw_a16(es, bx + 0x2));      /* mov cx, [es:bx+0x2] */
    II(0x00137804, 0x4)   mov(al, memb_a16(es, bx + 0x4));      /* mov al, [es:bx+0x4] */
    II(0x00137808, 0x4)   mov(dl, memb_a16(es, bx + 0x7));      /* mov dl, [es:bx+0x7] */
    II(0x0013780c, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x0013780e, 0x3)   shl(dx, 0x8);                         /* shl dx, 0x8 */
    II(0x00137811, 0x2)   sub(ah, ah);                          /* sub ah, ah */
    II(0x00137813, 0x2)   add(dx, ax);                          /* add dx, ax */
    II(0x00137815, 0x2)   mov(si, dx);                          /* mov si, dx */
    II(0x00137817, 0x2)   mov(ax, cx);                          /* mov ax, cx */
    II(0x00137819, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x0013781c, 0x3)   mov(memw_a16(ss, bp - 0x8), dx);      /* mov [bp-0x8], dx */
    II(0x0013781f, 0x5)   test(memb_a16(es, bx + 0x6), 0x40);   /* test byte [es:bx+0x6], 0x40 */
    II(0x00137824, 0x2)   jzw(0x00137840, 0x1a);                /* jz 0x137840 */
    II(0x00137826, 0x3)   les(bx, ss, bp + 0xa);                /* les bx, [bp+0xa] */
    II(0x00137829, 0x4)   add(ax, memw_a16(es, bx + 0x38));     /* add ax, [es:bx+0x38] */
    II(0x0013782d, 0x4)   adc(dx, memw_a16(es, bx + 0x3a));     /* adc dx, [es:bx+0x3a] */
    II(0x00137831, 0x3)   sub(ax, 0x14);                        /* sub ax, 0x14 */
    II(0x00137834, 0x3)   sbb(dx, 0);                           /* sbb dx, 0x0 */
    II(0x00137837, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x0013783a, 0x3)   mov(memw_a16(ss, bp - 0x8), dx);      /* mov [bp-0x8], dx */
    II(0x0013783d, 0x2)   jmpw(0x00137854, 0x15);               /* jmp 0x137854 */
//    II(0x0013783f, 0x1)   /* Недостижимый код. */
l_0x00137840:
    II(0x00137840, 0x3)   les(bx, ss, bp + 0xa);                /* les bx, [bp+0xa] */
    II(0x00137843, 0x4)   mov(ax, memw_a16(es, bx + 0x38));     /* mov ax, [es:bx+0x38] */
    II(0x00137847, 0x2)   sub(dx, dx);                          /* sub dx, dx */
    II(0x00137849, 0x3)   sub(ax, 0x14);                        /* sub ax, 0x14 */
    II(0x0013784c, 0x2)   sbb(dx, dx);                          /* sbb dx, dx */
    II(0x0013784e, 0x3)   add(memw_a16(ss, bp - 0xa), ax);      /* add [bp-0xa], ax */
    II(0x00137851, 0x3)   adc(memw_a16(ss, bp - 0x8), dx);      /* adc [bp-0x8], dx */
l_0x00137854:
    II(0x00137854, 0x2)   pushw(0xc);                           /* push 0xc */
    II(0x00137856, 0x3)   lea(ax, bp - 0xa);                    /* lea ax, [bp-0xa] */
    II(0x00137859, 0x1)   pushw(ss);                            /* push ss */
    II(0x0013785a, 0x1)   pushw(ax);                            /* push ax */
//    II(0x0013785b, 0x1)   nop();                                /* nop  */
    II(0x0013785c, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013785d, 0x3)   callw(0x0013ddbc, 0x655c);            /* call 0x13ddbc */
    II(0x00137860, 0x3)   cmp(dx, 0x1);                         /* cmp dx, 0x1 */
    II(0x00137863, 0x2)   jbw(0x001378d5, 0x70);                /* jb 0x1378d5 */
    II(0x00137865, 0x2)   jaw(0x00137867, 0);                   /* ja 0x137867 */
l_0x00137867:
    II(0x00137867, 0x3)   sub(ax, 0);                           /* sub ax, 0x0 */
    II(0x0013786a, 0x3)   sbb(dx, 0x1);                         /* sbb dx, 0x1 */
    II(0x0013786d, 0x1)   pushw(dx);                            /* push dx */
    II(0x0013786e, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013786f, 0x4)   pushw(memw_a16(ds, 0x4f8e));          /* push word [0x4f8e] */
    II(0x00137873, 0x4)   pushw(memw_a16(ds, 0x4f8c));          /* push word [0x4f8c] */
    II(0x00137877, 0x3)   callw(0x00139208, 0x198e);            /* call 0x139208 */
    II(0x0013787a, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013787d, 0x3)   mov(memw_a16(ss, bp - 0x6), ax);      /* mov [bp-0x6], ax */
    II(0x00137880, 0x3)   mov(memw_a16(ss, bp - 0x4), dx);      /* mov [bp-0x4], dx */
    II(0x00137883, 0x3)   mov(memw_a16(ss, bp - 0x22), ax);     /* mov [bp-0x22], ax */
    II(0x00137886, 0x3)   mov(memw_a16(ss, bp - 0x20), dx);     /* mov [bp-0x20], dx */
    II(0x00137889, 0x4)   test(memb_a16(ss, bp - 0x22), 0x1);   /* test byte [bp-0x22], 0x1 */
    II(0x0013788d, 0x2)   jnzw(0x001378d5, 0x46);               /* jnz 0x1378d5 */
    II(0x0013788f, 0x1)   pushw(cs);                            /* push cs */
    II(0x00137890, 0x3)   callw(0x00137a54, 0x1c1);             /* call 0x137a54 */
    II(0x00137893, 0x3)   mov(memw_a16(ss, bp - 0x1e), ax);     /* mov [bp-0x1e], ax */
    II(0x00137896, 0x3)   cmp(ax, 0xffff);                      /* cmp ax, 0xffff */
    II(0x00137899, 0x2)   jnzw(0x001378ac, 0x11);               /* jnz 0x1378ac */
    II(0x0013789b, 0x3)   pushw(memw_a16(ss, bp + 0x8));        /* push word [bp+0x8] */
    II(0x0013789e, 0x3)   pushw(memw_a16(ss, bp + 0x6));        /* push word [bp+0x6] */
    II(0x001378a1, 0x3)   pushw(0x922);                         /* push word 0x922 */
//    II(0x001378a4, 0x1)   nop();                                /* nop  */
    II(0x001378a5, 0x1)   pushw(cs);                            /* push cs */
    II(0x001378a6, 0x3)   callw(0x001375b4, -0x2f5);            /* call 0x1375b4 */
    II(0x001378a9, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
l_0x001378ac:
    II(0x001378ac, 0x2)   pushw(0);                             /* push 0x0 */
    II(0x001378ae, 0x3)   pushw(memw_a16(ss, bp - 0x1e));       /* push word [bp-0x1e] */
    II(0x001378b1, 0x3)   pushw(memw_a16(ss, bp - 0x8));        /* push word [bp-0x8] */
    II(0x001378b4, 0x3)   pushw(memw_a16(ss, bp - 0xa));        /* push word [bp-0xa] */
    II(0x001378b7, 0x1)   pushw(cs);                            /* push cs */
    II(0x001378b8, 0x3)   callw(0x00137dac, 0x4f1);             /* call 0x137dac */
    II(0x001378bb, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x001378be, 0x3)   pushw(memw_a16(ss, bp - 0x4));        /* push word [bp-0x4] */
    II(0x001378c1, 0x3)   pushw(memw_a16(ss, bp - 0x6));        /* push word [bp-0x6] */
    II(0x001378c4, 0x3)   pushw(memw_a16(ss, bp - 0x8));        /* push word [bp-0x8] */
    II(0x001378c7, 0x3)   pushw(memw_a16(ss, bp - 0xa));        /* push word [bp-0xa] */
    II(0x001378ca, 0x1)   pushw(cs);                            /* push cs */
    II(0x001378cb, 0x3)   callw(0x00137cfc, 0x42e);             /* call 0x137cfc */
    II(0x001378ce, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x001378d1, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x001378d3, 0x2)   jzw(0x001378d5, 0);                   /* jz 0x1378d5 */
l_0x001378d5:
    II(0x001378d5, 0x4)   dec(memb_a16(ds, 0x996));             /* dec byte [0x996] */
    II(0x001378d9, 0x1)   pushw(ds);                            /* push ds */
    II(0x001378da, 0x3)   pushw(0x8f2);                         /* push word 0x8f2 */
//    II(0x001378dd, 0x1)   nop();                                /* nop  */
    II(0x001378de, 0x1)   pushw(cs);                            /* push cs */
    II(0x001378df, 0x3)   callw(0x0013104f, -0x6893);           /* call 0x13104f */
    II(0x001378e2, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x001378e5, 0x4)   les(bx, ds, 0x1efc);                  /* les bx, [0x1efc] */
    II(0x001378e9, 0x3)   dec(memb_a16(es, bx));                /* dec byte [es:bx] */
//    II(0x001378ec, 0x1)   nop();                                /* nop  */
    II(0x001378ed, 0x1)   pushw(cs);                            /* push cs */
    II(0x001378ee, 0x3)   callw(0x00138e97, 0x15a6);            /* call 0x138e97 */
    II(0x001378f1, 0x1)   pushw(ds);                            /* push ds */
    II(0x001378f2, 0x3)   lea(si, bp - 0x1c);                   /* lea si, [bp-0x1c] */
    II(0x001378f5, 0x2)   mov(ax, ss);                          /* mov ax, ss */
    II(0x001378f7, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x001378f9, 0x3)   les(di, ss, bp - 0xe);                /* les di, [bp-0xe] */
    II(0x001378fc, 0x1)   movsw_a16();                          /* movsw  */
    II(0x001378fd, 0x1)   movsw_a16();                          /* movsw  */
    II(0x001378fe, 0x1)   movsw_a16();                          /* movsw  */
    II(0x001378ff, 0x1)   movsw_a16();                          /* movsw  */
    II(0x00137900, 0x1)   popw(ds);                             /* pop ds */
    II(0x00137901, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x00137903, 0x1)   popw(ds);                             /* pop ds */
    II(0x00137904, 0x1)   popw(si);                             /* pop si */
    II(0x00137905, 0x1)   popw(di);                             /* pop di */
    II(0x00137906, 0x1)   leavew();                             /* leave  */
    II(0x00137907, 0x1)   retfw();                              /* retf  */
FUNC_END

