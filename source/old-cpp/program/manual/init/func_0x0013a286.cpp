FUNC_BEGIN(0x0013a286, 0x8485b860602cc4c, 0x10, ({0xc8, 0x40, 0, 0, 0x57, 0x56, 0x1e, 0xb8, 0x68, 0x3e, 0x8e, 0xd8, 0x2b, 0xc0, 0x89, 0x46, 0xf6, 0x89, 0x46, 0xf4, 0x89, 0x46, 0xee, 0x89, 0x46, 0xcc, 0xc4, 0x5e, 0x6, 0x26, 0x8b, 0x47, 0x14, 0x26, 0x8b, 0x57, 0x16, 0x89, 0x46, 0xf0, 0x89, 0x56, 0xf2, 0x26, 0x8b, 0x47, 0x1c, 0x26, 0x8b, 0x57, 0x1e, 0x89, 0x46, 0xfc, 0x89, 0x56, 0xfe, 0x26, 0xf7, 0x47, 0xa, 0xff, 0xff, 0x74, 0x9, 0xc7, 0x46, 0xee, 0x23, 0x80, 0xe9, 0x89, 0x3, 0x90, 0x26, 0x8b, 0x47, 0x8, 0x89, 0x46, 0xca, 0x50, 0xe, 0xe8, 0xc0, 0x24, 0x83, 0xc4, 0x2, 0x89, 0x46, 0xe2, 0x89, 0x56, 0xe4, 0x3d, 0xff, 0xff, 0x75, 0xc, 0x3b, 0xd0, 0x75, 0x8, 0xc7, 0x46, 0xee, 0x23, 0x80, 0xe9, 0x62, 0x3, 0x8b, 0x46, 0xf0, 0x8b, 0x56, 0xf2, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x1, 0x46, 0xe2, 0x11, 0x56, 0xe4, 0x8b, 0x46, 0xe2, 0x8b, 0x56, 0xe4, 0x5, 0, 0, 0x83, 0xd2, 0x1, 0x8a, 0xf2, 0x8a, 0xd4, 0x8a, 0xe0, 0x2a, 0xc0, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0xd1, 0xe0, 0xd1, 0xd2, 0x89, 0x46, 0xf8, 0x89, 0x56, 0xfa, 0xc4, 0x5e, 0x6, 0x26, 0x80, 0x67, 0x2c, 0xfe, 0x26, 0xff, 0x77, 0x1a, 0x26, 0xff, 0x77, 0x18, 0x26, 0xff, 0x77, 0x2, 0x90, 0xe, 0xe8, 0x3, 0xa5, 0x83, 0xc4, 0x6, 0x2b, 0xc9, 0x89, 0x4e, 0xce, 0x89, 0x46, 0xd0, 0x89, 0x4e, 0xde, 0x89, 0x46, 0xe0, 0x2b, 0xc0, 0x89, 0x46, 0xd8, 0x89, 0x46, 0xd6, 0xeb, 0x8, 0x83, 0x46, 0xd6, 0x1, 0x83, 0x56, 0xd8, 0, 0x8b, 0x46, 0xd6, 0x8b, 0x56, 0xd8, 0x39, 0x56, 0xfe, 0x72, 0x2d, 0x77, 0x5, 0x39, 0x46, 0xfc, 0x76, 0x26, 0xc4, 0x5e, 0xde, 0x83, 0x46, 0xde, 0x2, 0x26, 0x8b, 0x37, 0x8b, 0xc6, 0x25, 0x3, 0, 0xeb, 0xd, 0x90, 0x83, 0x46, 0xf4, 0x1, 0x83, 0x56, 0xf6, 0, 0xeb, 0x8, 0xeb, 0x6, 0x48, 0x74, 0xf1, 0xeb, 0x1, 0x90, 0xeb, 0xc0, 0x83, 0x7e, 0xf6, 0, 0x7d, 0x3, 0xe9, 0x8f, 0, 0x7f, 0x9, 0x83, 0x7e, 0xf4, 0, 0x75, 0x3, 0xe9, 0x84, 0, 0xa1, 0xc4, 0x1f, 0x8b, 0x16, 0xc6, 0x1f, 0x39, 0x56, 0xf6, 0x7c, 0x12, 0x7f, 0x5, 0x39, 0x46, 0xf4, 0x76, 0xb, 0xc7, 0x46, 0xee, 0x16, 0x80, 0xe9, 0x71, 0x2, 0xeb, 0x67, 0x90, 0xa1, 0x1a, 0, 0xb, 0x6, 0x18, 0, 0x74, 0x5d, 0x8b, 0x46, 0xfc, 0x8b, 0x56, 0xfe, 0x2b, 0x6, 0xc4, 0x1f, 0x1b, 0x16, 0xc6, 0x1f, 0x2b, 0x6, 0xc0, 0x1f, 0x1b, 0x16, 0xc2, 0x1f, 0x3, 0x6, 0xb4, 0x1f, 0x13, 0x16, 0xb6, 0x1f, 0x5, 0x4, 0, 0x83, 0xd2, 0, 0x89, 0x46, 0xe6, 0x89, 0x56, 0xe8, 0x8b, 0xe, 0x50, 0x1f, 0x8b, 0x1e, 0x52, 0x1f, 0x3b, 0xd3, 0x7c, 0x27, 0x7f, 0x4, 0x3b, 0xc1, 0x76, 0x21, 0x2b, 0xc1, 0x1b, 0xd3, 0x89, 0x46, 0xc4, 0x89, 0x56, 0xc6, 0x52, 0x50, 0x90, 0xe, 0xe8, 0x66, 0xe7, 0x83, 0xc4, 0x4, 0xb, 0xc0, 0x75, 0x9, 0xc7, 0x46, 0xee, 0x14, 0x80, 0xe9, 0x9, 0x2, 0x90, 0xa1, 0x8c, 0x4f, 0x8b, 0x16, 0x8e, 0x4f, 0x89, 0x46, 0xea, 0x89, 0x56, 0xec, 0x8b, 0x46, 0xe2, 0x8b, 0x56, 0xe4, 0x89, 0x46, 0xda, 0x89, 0x56, 0xdc, 0x8b, 0x46, 0xfc, 0x8b, 0x56, 0xfe, 0x83, 0x6e, 0xfc, 0x1, 0x83, 0x5e, 0xfe, 0, 0xb, 0xd2, 0x75, 0x7, 0xb, 0xc0, 0x75, 0x3, 0xe9, 0xd6, 0x1, 0x8b, 0xd7, 0x8e, 0x6, 0xaa, 0, 0x66, 0x8b, 0x7e, 0xea, 0x66, 0x8b, 0x5e, 0xda, 0x26, 0x67, 0x66, 0x8b, 0x4, 0x9f, 0x66, 0x89, 0x46, 0xd2, 0x8b, 0xfa, 0x2b, 0xff, 0xff, 0x76, 0xdc, 0xff, 0x76, 0xda, 0xff, 0x36, 0xf6, 0x4f, 0xff, 0x36, 0xf4, 0x4f, 0xe8, 0x15, 0xec, 0x83, 0xc4, 0x8, 0xb, 0xc0, 0x75, 0x8, 0xc7, 0x46, 0xee, 0x2, 0x80, 0xe9, 0x9a, 0x1, 0xc4, 0x5e, 0xce, 0x83, 0x46, 0xce, 0x2, 0x26, 0x8b, 0x37, 0x8b, 0xc6, 0x25, 0x3, 0, 0xe9, 0xfe, 0, 0xff, 0x76, 0xdc, 0xff, 0x76, 0xda, 0xff, 0x36, 0xa6, 0x1f, 0xff, 0x36, 0xa4, 0x1f, 0xe8, 0xe3, 0xeb, 0x83, 0xc4, 0x8, 0x88, 0x46, 0xc8, 0x38, 0x6, 0xb5, 0x51, 0x75, 0x3, 0xe9, 0xf2, 0, 0x8a, 0x46, 0xc8, 0x38, 0x6, 0xa6, 0x51, 0x75, 0x35, 0xa0, 0xb5, 0x51, 0x2a, 0xe4, 0x50, 0xff, 0x76, 0xdc, 0xff, 0x76, 0xda, 0xff, 0x36, 0xa6, 0x1f, 0xff, 0x36, 0xa4, 0x1f, 0xe8, 0xd3, 0xec, 0x83, 0xc4, 0xa, 0x80, 0x66, 0xd2, 0xfe, 0x8b, 0x46, 0xd2, 0x80, 0xe4, 0xf, 0x89, 0x46, 0xd2, 0xc7, 0x46, 0xd4, 0, 0, 0x80, 0x66, 0xd2, 0xdd, 0x47, 0xe9, 0xb5, 0, 0x90, 0x8a, 0x46, 0xc8, 0x38, 0x6, 0xa6, 0x51, 0x75, 0x6, 0x38, 0x6, 0xb5, 0x51, 0x74, 0x31, 0xf6, 0x46, 0xd2, 0x1, 0x74, 0x28, 0x8b, 0x46, 0xd2, 0x8b, 0x56, 0xd4, 0x8a, 0xc4, 0x8a, 0xe2, 0x8a, 0xd6, 0x2a, 0xf6, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0xd1, 0xea, 0xd1, 0xd8, 0x52, 0x50, 0x90, 0xe, 0xe8, 0xd2, 0xd9, 0x83, 0xc4, 0x4, 0xeb, 0x8c, 0x90, 0xeb, 0x72, 0xff, 0x76, 0xdc, 0xff, 0x76, 0xda, 0xff, 0x36, 0xa6, 0x1f, 0xff, 0x36, 0xa4, 0x1f, 0xe8, 0x43, 0xeb, 0x83, 0xc4, 0x8, 0x88, 0x46, 0xc8, 0x38, 0x6, 0xa6, 0x51, 0x75, 0x9, 0xc7, 0x46, 0xee, 0x2, 0x80, 0xe9, 0xc3, 0, 0x90, 0x8a, 0x46, 0xc8, 0x38, 0x6, 0xb5, 0x51, 0x74, 0x3, 0xeb, 0x41, 0x90, 0xa0, 0xa7, 0x51, 0x2a, 0xe4, 0x50, 0xff, 0x76, 0xdc, 0xff, 0x76, 0xda, 0xff, 0x36, 0xa6, 0x1f, 0xff, 0x36, 0xa4, 0x1f, 0xe8, 0x2a, 0xec, 0x83, 0xc4, 0xa, 0xbf, 0x1, 0, 0xeb, 0x21, 0x90, 0xeb, 0x1e, 0xc7, 0x46, 0xee, 0x21, 0x80, 0xe9, 0x8c, 0, 0xeb, 0x14, 0x3d, 0x10, 0, 0x74, 0xef, 0x77, 0xef, 0xa, 0xc0, 0x75, 0x3, 0xe9, 0xf4, 0xfe, 0xfe, 0xc8, 0x74, 0x90, 0xeb, 0xe2, 0xf7, 0xc6, 0x10, 0, 0x74, 0x3b, 0x8b, 0xc6, 0x25, 0x20, 0, 0x3d, 0x1, 0, 0x1b, 0xc0, 0x40, 0xc0, 0xe0, 0x6, 0x32, 0x46, 0xd2, 0x25, 0x40, 0, 0x2b, 0xd2, 0x31, 0x46, 0xd2, 0x31, 0x56, 0xd4, 0x8b, 0x46, 0xd2, 0x8b, 0xce, 0x83, 0xe1, 0x40, 0x83, 0xf9, 0x1, 0x1b, 0xc9, 0x41, 0xc1, 0xe1, 0x5, 0x32, 0xc1, 0x25, 0x20, 0, 0x31, 0x46, 0xd2, 0x31, 0x56, 0xd4, 0xbf, 0x1, 0, 0xb, 0xff, 0x74, 0x1a, 0x8b, 0xd7, 0x8e, 0x6, 0xaa, 0, 0x66, 0x8b, 0x7e, 0xea, 0x66, 0x8b, 0x5e, 0xda, 0x66, 0x8b, 0x46, 0xd2, 0x26, 0x67, 0x66, 0x89, 0x4, 0x9f, 0x8b, 0xfa, 0x9, 0x7e, 0xcc, 0x83, 0x46, 0xda, 0x1, 0x83, 0x56, 0xdc, 0, 0x81, 0x46, 0xf8, 0, 0x10, 0x83, 0x56, 0xfa, 0, 0xe9, 0x11, 0xfe, 0x83, 0x7e, 0xee, 0, 0x74, 0x14, 0x8b, 0x46, 0xee, 0x99, 0xc4, 0x5e, 0x6, 0x26, 0x89, 0x47, 0x20, 0x26, 0x89, 0x57, 0x22, 0x26, 0x80, 0x4f, 0x2c, 0x1, 0x90, 0xe, 0xe8, 0x17, 0xa2, 0x83, 0x7e, 0xcc, 0, 0x74, 0x6, 0xf, 0x20, 0xd8, 0xf, 0x22, 0xd8, 0x1f, 0x5e, 0x5f, 0xc9, 0xcb}))
    II(0x0013a286, 0x4)   enterw(0x40, 0);                      /* enter 0x40, 0x0 */
    II(0x0013a28a, 0x1)   pushw(di);                            /* push di */
    II(0x0013a28b, 0x1)   pushw(si);                            /* push si */
    II(0x0013a28c, 0x1)   pushw(ds);                            /* push ds */
    II(0x0013a28d, 0x3)   mov(ax, 0x3e68);                      /* mov ax, 0x3e68 */
    II(0x0013a290, 0x2)   mov(ds, ax);                          /* mov ds, ax */
    II(0x0013a292, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0013a294, 0x3)   mov(memw_a16(ss, bp - 0xa), ax);      /* mov [bp-0xa], ax */
    II(0x0013a297, 0x3)   mov(memw_a16(ss, bp - 0xc), ax);      /* mov [bp-0xc], ax */
    II(0x0013a29a, 0x3)   mov(memw_a16(ss, bp - 0x12), ax);     /* mov [bp-0x12], ax */
    II(0x0013a29d, 0x3)   mov(memw_a16(ss, bp - 0x34), ax);     /* mov [bp-0x34], ax */
    II(0x0013a2a0, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x0013a2a3, 0x4)   mov(ax, memw_a16(es, bx + 0x14));     /* mov ax, [es:bx+0x14] */
    II(0x0013a2a7, 0x4)   mov(dx, memw_a16(es, bx + 0x16));     /* mov dx, [es:bx+0x16] */
    II(0x0013a2ab, 0x3)   mov(memw_a16(ss, bp - 0x10), ax);     /* mov [bp-0x10], ax */
    II(0x0013a2ae, 0x3)   mov(memw_a16(ss, bp - 0xe), dx);      /* mov [bp-0xe], dx */
    II(0x0013a2b1, 0x4)   mov(ax, memw_a16(es, bx + 0x1c));     /* mov ax, [es:bx+0x1c] */
    II(0x0013a2b5, 0x4)   mov(dx, memw_a16(es, bx + 0x1e));     /* mov dx, [es:bx+0x1e] */
    II(0x0013a2b9, 0x3)   mov(memw_a16(ss, bp - 0x4), ax);      /* mov [bp-0x4], ax */
    II(0x0013a2bc, 0x3)   mov(memw_a16(ss, bp - 0x2), dx);      /* mov [bp-0x2], dx */
    II(0x0013a2bf, 0x6)   test(memw_a16(es, bx + 0xa), 0xffff); /* test word [es:bx+0xa], 0xffff */
    II(0x0013a2c5, 0x2)   jzw(0x0013a2d0, 0x9);                 /* jz 0x13a2d0 */
    II(0x0013a2c7, 0x5)   mov(memw_a16(ss, bp - 0x12), 0x8023); /* mov word [bp-0x12], 0x8023 */
    II(0x0013a2cc, 0x3)   jmpw(0x0013a658, 0x389);              /* jmp 0x13a658 */
//    II(0x0013a2cf, 0x1)   /* Недостижимый код. */
l_0x0013a2d0:
    II(0x0013a2d0, 0x4)   mov(ax, memw_a16(es, bx + 0x8));      /* mov ax, [es:bx+0x8] */
    II(0x0013a2d4, 0x3)   mov(memw_a16(ss, bp - 0x36), ax);     /* mov [bp-0x36], ax */
    II(0x0013a2d7, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013a2d8, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013a2d9, 0x3)   callw(0x0013c79c, 0x24c0);            /* call 0x13c79c */
    II(0x0013a2dc, 0x3)   add(sp, 0x2);                         /* add sp, 0x2 */
    II(0x0013a2df, 0x3)   mov(memw_a16(ss, bp - 0x1e), ax);     /* mov [bp-0x1e], ax */
    II(0x0013a2e2, 0x3)   mov(memw_a16(ss, bp - 0x1c), dx);     /* mov [bp-0x1c], dx */
    II(0x0013a2e5, 0x3)   cmp(ax, 0xffff);                      /* cmp ax, 0xffff */
    II(0x0013a2e8, 0x2)   jnzw(0x0013a2f6, 0xc);                /* jnz 0x13a2f6 */
    II(0x0013a2ea, 0x2)   cmp(dx, ax);                          /* cmp dx, ax */
    II(0x0013a2ec, 0x2)   jnzw(0x0013a2f6, 0x8);                /* jnz 0x13a2f6 */
    II(0x0013a2ee, 0x5)   mov(memw_a16(ss, bp - 0x12), 0x8023); /* mov word [bp-0x12], 0x8023 */
    II(0x0013a2f3, 0x3)   jmpw(0x0013a658, 0x362);              /* jmp 0x13a658 */
l_0x0013a2f6:
    II(0x0013a2f6, 0x3)   mov(ax, memw_a16(ss, bp - 0x10));     /* mov ax, [bp-0x10] */
    II(0x0013a2f9, 0x3)   mov(dx, memw_a16(ss, bp - 0xe));      /* mov dx, [bp-0xe] */
    II(0x0013a2fc, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x0013a2fe, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x0013a300, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x0013a302, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x0013a304, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013a306, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013a308, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013a30a, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013a30c, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013a30e, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013a310, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013a312, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013a314, 0x3)   add(memw_a16(ss, bp - 0x1e), ax);     /* add [bp-0x1e], ax */
    II(0x0013a317, 0x3)   adc(memw_a16(ss, bp - 0x1c), dx);     /* adc [bp-0x1c], dx */
    II(0x0013a31a, 0x3)   mov(ax, memw_a16(ss, bp - 0x1e));     /* mov ax, [bp-0x1e] */
    II(0x0013a31d, 0x3)   mov(dx, memw_a16(ss, bp - 0x1c));     /* mov dx, [bp-0x1c] */
    II(0x0013a320, 0x3)   add(ax, 0);                           /* add ax, 0x0 */
    II(0x0013a323, 0x3)   adc(dx, 0x1);                         /* adc dx, 0x1 */
    II(0x0013a326, 0x2)   mov(dh, dl);                          /* mov dh, dl */
    II(0x0013a328, 0x2)   mov(dl, ah);                          /* mov dl, ah */
    II(0x0013a32a, 0x2)   mov(ah, al);                          /* mov ah, al */
    II(0x0013a32c, 0x2)   sub(al, al);                          /* sub al, al */
    II(0x0013a32e, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013a330, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013a332, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013a334, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013a336, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013a338, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013a33a, 0x2)   shl(ax, 0x1);                         /* shl ax, 1 */
    II(0x0013a33c, 0x2)   rcl(dx, 0x1);                         /* rcl dx, 1 */
    II(0x0013a33e, 0x3)   mov(memw_a16(ss, bp - 0x8), ax);      /* mov [bp-0x8], ax */
    II(0x0013a341, 0x3)   mov(memw_a16(ss, bp - 0x6), dx);      /* mov [bp-0x6], dx */
    II(0x0013a344, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x0013a347, 0x5)   and_(memb_a16(es, bx + 0x2c), -0x2 /* 0xfe */); /* and byte [es:bx+0x2c], 0xfe */
    II(0x0013a34c, 0x4)   pushw(memw_a16(es, bx + 0x1a));       /* push word [es:bx+0x1a] */
    II(0x0013a350, 0x4)   pushw(memw_a16(es, bx + 0x18));       /* push word [es:bx+0x18] */
    II(0x0013a354, 0x4)   pushw(memw_a16(es, bx + 0x2));        /* push word [es:bx+0x2] */
//    II(0x0013a358, 0x1)   nop();                                /* nop  */
    II(0x0013a359, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013a35a, 0x3)   callw(0x00134860, -0x5afd);           /* call 0x134860 */
    II(0x0013a35d, 0x3)   add(sp, 0x6);                         /* add sp, 0x6 */
    II(0x0013a360, 0x2)   sub(cx, cx);                          /* sub cx, cx */
    II(0x0013a362, 0x3)   mov(memw_a16(ss, bp - 0x32), cx);     /* mov [bp-0x32], cx */
    II(0x0013a365, 0x3)   mov(memw_a16(ss, bp - 0x30), ax);     /* mov [bp-0x30], ax */
    II(0x0013a368, 0x3)   mov(memw_a16(ss, bp - 0x22), cx);     /* mov [bp-0x22], cx */
    II(0x0013a36b, 0x3)   mov(memw_a16(ss, bp - 0x20), ax);     /* mov [bp-0x20], ax */
    II(0x0013a36e, 0x2)   sub(ax, ax);                          /* sub ax, ax */
    II(0x0013a370, 0x3)   mov(memw_a16(ss, bp - 0x28), ax);     /* mov [bp-0x28], ax */
    II(0x0013a373, 0x3)   mov(memw_a16(ss, bp - 0x2a), ax);     /* mov [bp-0x2a], ax */
    II(0x0013a376, 0x2)   jmpw(0x0013a380, 0x8);                /* jmp 0x13a380 */
l_0x0013a378:
    II(0x0013a378, 0x4)   add(memw_a16(ss, bp - 0x2a), 0x1);    /* add word [bp-0x2a], 0x1 */
    II(0x0013a37c, 0x4)   adc(memw_a16(ss, bp - 0x28), 0);      /* adc word [bp-0x28], 0x0 */
l_0x0013a380:
    II(0x0013a380, 0x3)   mov(ax, memw_a16(ss, bp - 0x2a));     /* mov ax, [bp-0x2a] */
    II(0x0013a383, 0x3)   mov(dx, memw_a16(ss, bp - 0x28));     /* mov dx, [bp-0x28] */
    II(0x0013a386, 0x3)   cmp(memw_a16(ss, bp - 0x2), dx);      /* cmp [bp-0x2], dx */
    II(0x0013a389, 0x2)   jbw(0x0013a3b8, 0x2d);                /* jb 0x13a3b8 */
    II(0x0013a38b, 0x2)   jaw(0x0013a392, 0x5);                 /* ja 0x13a392 */
    II(0x0013a38d, 0x3)   cmp(memw_a16(ss, bp - 0x4), ax);      /* cmp [bp-0x4], ax */
    II(0x0013a390, 0x2)   jbew(0x0013a3b8, 0x26);               /* jbe 0x13a3b8 */
l_0x0013a392:
    II(0x0013a392, 0x3)   les(bx, ss, bp - 0x22);               /* les bx, [bp-0x22] */
    II(0x0013a395, 0x4)   add(memw_a16(ss, bp - 0x22), 0x2);    /* add word [bp-0x22], 0x2 */
    II(0x0013a399, 0x3)   mov(si, memw_a16(es, bx));            /* mov si, [es:bx] */
    II(0x0013a39c, 0x2)   mov(ax, si);                          /* mov ax, si */
    II(0x0013a39e, 0x3)   and_(ax, 0x3);                        /* and ax, 0x3 */
    II(0x0013a3a1, 0x2)   jmpw(0x0013a3b0, 0xd);                /* jmp 0x13a3b0 */
//    II(0x0013a3a3, 0x1)   /* Недостижимый код. */
l_0x0013a3a4:
    II(0x0013a3a4, 0x4)   add(memw_a16(ss, bp - 0xc), 0x1);     /* add word [bp-0xc], 0x1 */
    II(0x0013a3a8, 0x4)   adc(memw_a16(ss, bp - 0xa), 0);       /* adc word [bp-0xa], 0x0 */
    II(0x0013a3ac, 0x2)   jmpw(0x0013a3b6, 0x8);                /* jmp 0x13a3b6 */
//    II(0x0013a3ae, 0x2)   /* Недостижимый код. */
l_0x0013a3b0:
    II(0x0013a3b0, 0x1)   dec(ax);                              /* dec ax */
    II(0x0013a3b1, 0x2)   jzw(0x0013a3a4, -0xf);                /* jz 0x13a3a4 */
    II(0x0013a3b3, 0x2)   jmpw(0x0013a3b6, 0x1);                /* jmp 0x13a3b6 */
//    II(0x0013a3b5, 0x1)   /* Недостижимый код. */
l_0x0013a3b6:
    II(0x0013a3b6, 0x2)   jmpw(0x0013a378, -0x40);              /* jmp 0x13a378 */
l_0x0013a3b8:
    II(0x0013a3b8, 0x4)   cmp(memw_a16(ss, bp - 0xa), 0);       /* cmp word [bp-0xa], 0x0 */
    II(0x0013a3bc, 0x2)   jgew(0x0013a3c1, 0x3);                /* jge 0x13a3c1 */
    II(0x0013a3be, 0x3)   jmpw(0x0013a450, 0x8f);               /* jmp 0x13a450 */
l_0x0013a3c1:
    II(0x0013a3c1, 0x2)   jgw(0x0013a3cc, 0x9);                 /* jg 0x13a3cc */
    II(0x0013a3c3, 0x4)   cmp(memw_a16(ss, bp - 0xc), 0);       /* cmp word [bp-0xc], 0x0 */
    II(0x0013a3c7, 0x2)   jnzw(0x0013a3cc, 0x3);                /* jnz 0x13a3cc */
    II(0x0013a3c9, 0x3)   jmpw(0x0013a450, 0x84);               /* jmp 0x13a450 */
l_0x0013a3cc:
    II(0x0013a3cc, 0x3)   mov(ax, memw_a16(ds, 0x1fc4));        /* mov ax, [0x1fc4] */
    II(0x0013a3cf, 0x4)   mov(dx, memw_a16(ds, 0x1fc6));        /* mov dx, [0x1fc6] */
    II(0x0013a3d3, 0x3)   cmp(memw_a16(ss, bp - 0xa), dx);      /* cmp [bp-0xa], dx */
    II(0x0013a3d6, 0x2)   jlw(0x0013a3ea, 0x12);                /* jl 0x13a3ea */
    II(0x0013a3d8, 0x2)   jgw(0x0013a3df, 0x5);                 /* jg 0x13a3df */
    II(0x0013a3da, 0x3)   cmp(memw_a16(ss, bp - 0xc), ax);      /* cmp [bp-0xc], ax */
    II(0x0013a3dd, 0x2)   jbew(0x0013a3ea, 0xb);                /* jbe 0x13a3ea */
l_0x0013a3df:
    II(0x0013a3df, 0x5)   mov(memw_a16(ss, bp - 0x12), 0x8016); /* mov word [bp-0x12], 0x8016 */
    II(0x0013a3e4, 0x3)   jmpw(0x0013a658, 0x271);              /* jmp 0x13a658 */
//    II(0x0013a3e7, 0x3)   /* Недостижимый код. */
l_0x0013a3ea:
    II(0x0013a3ea, 0x3)   mov(ax, memw_a16(ds, 0x1a));          /* mov ax, [0x1a] */
    II(0x0013a3ed, 0x4)   or_(ax, memw_a16(ds, 0x18));          /* or ax, [0x18] */
    II(0x0013a3f1, 0x2)   jzw(0x0013a450, 0x5d);                /* jz 0x13a450 */
    II(0x0013a3f3, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x0013a3f6, 0x3)   mov(dx, memw_a16(ss, bp - 0x2));      /* mov dx, [bp-0x2] */
    II(0x0013a3f9, 0x4)   sub(ax, memw_a16(ds, 0x1fc4));        /* sub ax, [0x1fc4] */
    II(0x0013a3fd, 0x4)   sbb(dx, memw_a16(ds, 0x1fc6));        /* sbb dx, [0x1fc6] */
    II(0x0013a401, 0x4)   sub(ax, memw_a16(ds, 0x1fc0));        /* sub ax, [0x1fc0] */
    II(0x0013a405, 0x4)   sbb(dx, memw_a16(ds, 0x1fc2));        /* sbb dx, [0x1fc2] */
    II(0x0013a409, 0x4)   add(ax, memw_a16(ds, 0x1fb4));        /* add ax, [0x1fb4] */
    II(0x0013a40d, 0x4)   adc(dx, memw_a16(ds, 0x1fb6));        /* adc dx, [0x1fb6] */
    II(0x0013a411, 0x3)   add(ax, 0x4);                         /* add ax, 0x4 */
    II(0x0013a414, 0x3)   adc(dx, 0);                           /* adc dx, 0x0 */
    II(0x0013a417, 0x3)   mov(memw_a16(ss, bp - 0x1a), ax);     /* mov [bp-0x1a], ax */
    II(0x0013a41a, 0x3)   mov(memw_a16(ss, bp - 0x18), dx);     /* mov [bp-0x18], dx */
    II(0x0013a41d, 0x4)   mov(cx, memw_a16(ds, 0x1f50));        /* mov cx, [0x1f50] */
    II(0x0013a421, 0x4)   mov(bx, memw_a16(ds, 0x1f52));        /* mov bx, [0x1f52] */
    II(0x0013a425, 0x2)   cmp(dx, bx);                          /* cmp dx, bx */
    II(0x0013a427, 0x2)   jlw(0x0013a450, 0x27);                /* jl 0x13a450 */
    II(0x0013a429, 0x2)   jgw(0x0013a42f, 0x4);                 /* jg 0x13a42f */
    II(0x0013a42b, 0x2)   cmp(ax, cx);                          /* cmp ax, cx */
    II(0x0013a42d, 0x2)   jbew(0x0013a450, 0x21);               /* jbe 0x13a450 */
l_0x0013a42f:
    II(0x0013a42f, 0x2)   sub(ax, cx);                          /* sub ax, cx */
    II(0x0013a431, 0x2)   sbb(dx, bx);                          /* sbb dx, bx */
    II(0x0013a433, 0x3)   mov(memw_a16(ss, bp - 0x3c), ax);     /* mov [bp-0x3c], ax */
    II(0x0013a436, 0x3)   mov(memw_a16(ss, bp - 0x3a), dx);     /* mov [bp-0x3a], dx */
    II(0x0013a439, 0x1)   pushw(dx);                            /* push dx */
    II(0x0013a43a, 0x1)   pushw(ax);                            /* push ax */
//    II(0x0013a43b, 0x1)   nop();                                /* nop  */
    II(0x0013a43c, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013a43d, 0x3)   callw(0x00138ba6, -0x189a);           /* call 0x138ba6 */
    II(0x0013a440, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
    II(0x0013a443, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0013a445, 0x2)   jnzw(0x0013a450, 0x9);                /* jnz 0x13a450 */
    II(0x0013a447, 0x5)   mov(memw_a16(ss, bp - 0x12), 0x8014); /* mov word [bp-0x12], 0x8014 */
    II(0x0013a44c, 0x3)   jmpw(0x0013a658, 0x209);              /* jmp 0x13a658 */
//    II(0x0013a44f, 0x1)   /* Недостижимый код. */
l_0x0013a450:
    II(0x0013a450, 0x3)   mov(ax, memw_a16(ds, 0x4f8c));        /* mov ax, [0x4f8c] */
    II(0x0013a453, 0x4)   mov(dx, memw_a16(ds, 0x4f8e));        /* mov dx, [0x4f8e] */
    II(0x0013a457, 0x3)   mov(memw_a16(ss, bp - 0x16), ax);     /* mov [bp-0x16], ax */
    II(0x0013a45a, 0x3)   mov(memw_a16(ss, bp - 0x14), dx);     /* mov [bp-0x14], dx */
    II(0x0013a45d, 0x3)   mov(ax, memw_a16(ss, bp - 0x1e));     /* mov ax, [bp-0x1e] */
    II(0x0013a460, 0x3)   mov(dx, memw_a16(ss, bp - 0x1c));     /* mov dx, [bp-0x1c] */
    II(0x0013a463, 0x3)   mov(memw_a16(ss, bp - 0x26), ax);     /* mov [bp-0x26], ax */
    II(0x0013a466, 0x3)   mov(memw_a16(ss, bp - 0x24), dx);     /* mov [bp-0x24], dx */
l_0x0013a469:
    II(0x0013a469, 0x3)   mov(ax, memw_a16(ss, bp - 0x4));      /* mov ax, [bp-0x4] */
    II(0x0013a46c, 0x3)   mov(dx, memw_a16(ss, bp - 0x2));      /* mov dx, [bp-0x2] */
    II(0x0013a46f, 0x4)   sub(memw_a16(ss, bp - 0x4), 0x1);     /* sub word [bp-0x4], 0x1 */
    II(0x0013a473, 0x4)   sbb(memw_a16(ss, bp - 0x2), 0);       /* sbb word [bp-0x2], 0x0 */
    II(0x0013a477, 0x2)   or_(dx, dx);                          /* or dx, dx */
    II(0x0013a479, 0x2)   jnzw(0x0013a482, 0x7);                /* jnz 0x13a482 */
    II(0x0013a47b, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0013a47d, 0x2)   jnzw(0x0013a482, 0x3);                /* jnz 0x13a482 */
    II(0x0013a47f, 0x3)   jmpw(0x0013a658, 0x1d6);              /* jmp 0x13a658 */
l_0x0013a482:
    II(0x0013a482, 0x2)   mov(dx, di);                          /* mov dx, di */
    II(0x0013a484, 0x4)   mov(es, memw_a16(ds, 0xaa));          /* mov es, [0xaa] */
    II(0x0013a488, 0x4)   mov(edi, memd_a16(ss, bp - 0x16));    /* mov edi, [bp-0x16] */
    II(0x0013a48c, 0x4)   mov(ebx, memd_a16(ss, bp - 0x26));    /* mov ebx, [bp-0x26] */
    II(0x0013a490, 0x6)   mov(eax, memd_a32(es, edi + ebx * 0x4)); /* mov eax, [es:edi+ebx*4] */
    II(0x0013a496, 0x4)   mov(memd_a16(ss, bp - 0x2e), eax);    /* mov [bp-0x2e], eax */
    II(0x0013a49a, 0x2)   mov(di, dx);                          /* mov di, dx */
    II(0x0013a49c, 0x2)   sub(di, di);                          /* sub di, di */
    II(0x0013a49e, 0x3)   pushw(memw_a16(ss, bp - 0x24));       /* push word [bp-0x24] */
    II(0x0013a4a1, 0x3)   pushw(memw_a16(ss, bp - 0x26));       /* push word [bp-0x26] */
    II(0x0013a4a4, 0x4)   pushw(memw_a16(ds, 0x4ff6));          /* push word [0x4ff6] */
    II(0x0013a4a8, 0x4)   pushw(memw_a16(ds, 0x4ff4));          /* push word [0x4ff4] */
    II(0x0013a4ac, 0x3)   callw(0x001390c4, -0x13eb);           /* call 0x1390c4 */
    II(0x0013a4af, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013a4b2, 0x2)   or_(ax, ax);                          /* or ax, ax */
    II(0x0013a4b4, 0x2)   jnzw(0x0013a4be, 0x8);                /* jnz 0x13a4be */
    II(0x0013a4b6, 0x5)   mov(memw_a16(ss, bp - 0x12), 0x8002); /* mov word [bp-0x12], 0x8002 */
    II(0x0013a4bb, 0x3)   jmpw(0x0013a658, 0x19a);              /* jmp 0x13a658 */
l_0x0013a4be:
    II(0x0013a4be, 0x3)   les(bx, ss, bp - 0x32);               /* les bx, [bp-0x32] */
    II(0x0013a4c1, 0x4)   add(memw_a16(ss, bp - 0x32), 0x2);    /* add word [bp-0x32], 0x2 */
    II(0x0013a4c5, 0x3)   mov(si, memw_a16(es, bx));            /* mov si, [es:bx] */
    II(0x0013a4c8, 0x2)   mov(ax, si);                          /* mov ax, si */
    II(0x0013a4ca, 0x3)   and_(ax, 0x3);                        /* and ax, 0x3 */
    II(0x0013a4cd, 0x3)   jmpw(0x0013a5ce, 0xfe);               /* jmp 0x13a5ce */
l_0x0013a4d0:
    II(0x0013a4d0, 0x3)   pushw(memw_a16(ss, bp - 0x24));       /* push word [bp-0x24] */
    II(0x0013a4d3, 0x3)   pushw(memw_a16(ss, bp - 0x26));       /* push word [bp-0x26] */
    II(0x0013a4d6, 0x4)   pushw(memw_a16(ds, 0x1fa6));          /* push word [0x1fa6] */
    II(0x0013a4da, 0x4)   pushw(memw_a16(ds, 0x1fa4));          /* push word [0x1fa4] */
    II(0x0013a4de, 0x3)   callw(0x001390c4, -0x141d);           /* call 0x1390c4 */
    II(0x0013a4e1, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013a4e4, 0x3)   mov(memb_a16(ss, bp - 0x38), al);     /* mov [bp-0x38], al */
    II(0x0013a4e7, 0x4)   cmp(memb_a16(ds, 0x51b5), al);        /* cmp [0x51b5], al */
    II(0x0013a4eb, 0x2)   jnzw(0x0013a4f0, 0x3);                /* jnz 0x13a4f0 */
    II(0x0013a4ed, 0x3)   jmpw(0x0013a5e2, 0xf2);               /* jmp 0x13a5e2 */
l_0x0013a4f0:
    II(0x0013a4f0, 0x3)   mov(al, memb_a16(ss, bp - 0x38));     /* mov al, [bp-0x38] */
    II(0x0013a4f3, 0x4)   cmp(memb_a16(ds, 0x51a6), al);        /* cmp [0x51a6], al */
    II(0x0013a4f7, 0x2)   jnzw(0x0013a52e, 0x35);               /* jnz 0x13a52e */
l_0x0013a4f9:
    II(0x0013a4f9, 0x3)   mov(al, memb_a16(ds, 0x51b5));        /* mov al, [0x51b5] */
    II(0x0013a4fc, 0x2)   sub(ah, ah);                          /* sub ah, ah */
    II(0x0013a4fe, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013a4ff, 0x3)   pushw(memw_a16(ss, bp - 0x24));       /* push word [bp-0x24] */
    II(0x0013a502, 0x3)   pushw(memw_a16(ss, bp - 0x26));       /* push word [bp-0x26] */
    II(0x0013a505, 0x4)   pushw(memw_a16(ds, 0x1fa6));          /* push word [0x1fa6] */
    II(0x0013a509, 0x4)   pushw(memw_a16(ds, 0x1fa4));          /* push word [0x1fa4] */
    II(0x0013a50d, 0x3)   callw(0x001391e3, -0x132d);           /* call 0x1391e3 */
    II(0x0013a510, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x0013a513, 0x4)   and_(memb_a16(ss, bp - 0x2e), -0x2 /* 0xfe */); /* and byte [bp-0x2e], 0xfe */
    II(0x0013a517, 0x3)   mov(ax, memw_a16(ss, bp - 0x2e));     /* mov ax, [bp-0x2e] */
    II(0x0013a51a, 0x3)   and_(ah, 0xf);                        /* and ah, 0xf */
    II(0x0013a51d, 0x3)   mov(memw_a16(ss, bp - 0x2e), ax);     /* mov [bp-0x2e], ax */
    II(0x0013a520, 0x5)   mov(memw_a16(ss, bp - 0x2c), 0);      /* mov word [bp-0x2c], 0x0 */
    II(0x0013a525, 0x4)   and_(memb_a16(ss, bp - 0x2e), -0x23 /* 0xdd */); /* and byte [bp-0x2e], 0xdd */
    II(0x0013a529, 0x1)   inc(di);                              /* inc di */
    II(0x0013a52a, 0x3)   jmpw(0x0013a5e2, 0xb5);               /* jmp 0x13a5e2 */
//    II(0x0013a52d, 0x1)   /* Недостижимый код. */
l_0x0013a52e:
    II(0x0013a52e, 0x3)   mov(al, memb_a16(ss, bp - 0x38));     /* mov al, [bp-0x38] */
    II(0x0013a531, 0x4)   cmp(memb_a16(ds, 0x51a6), al);        /* cmp [0x51a6], al */
    II(0x0013a535, 0x2)   jnzw(0x0013a53d, 0x6);                /* jnz 0x13a53d */
    II(0x0013a537, 0x4)   cmp(memb_a16(ds, 0x51b5), al);        /* cmp [0x51b5], al */
    II(0x0013a53b, 0x2)   jzw(0x0013a56e, 0x31);                /* jz 0x13a56e */
l_0x0013a53d:
    II(0x0013a53d, 0x4)   test(memb_a16(ss, bp - 0x2e), 0x1);   /* test byte [bp-0x2e], 0x1 */
    II(0x0013a541, 0x2)   jzw(0x0013a56b, 0x28);                /* jz 0x13a56b */
    II(0x0013a543, 0x3)   mov(ax, memw_a16(ss, bp - 0x2e));     /* mov ax, [bp-0x2e] */
    II(0x0013a546, 0x3)   mov(dx, memw_a16(ss, bp - 0x2c));     /* mov dx, [bp-0x2c] */
    II(0x0013a549, 0x2)   mov(al, ah);                          /* mov al, ah */
    II(0x0013a54b, 0x2)   mov(ah, dl);                          /* mov ah, dl */
    II(0x0013a54d, 0x2)   mov(dl, dh);                          /* mov dl, dh */
    II(0x0013a54f, 0x2)   sub(dh, dh);                          /* sub dh, dh */
    II(0x0013a551, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013a553, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013a555, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013a557, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013a559, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013a55b, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013a55d, 0x2)   shr(dx, 0x1);                         /* shr dx, 1 */
    II(0x0013a55f, 0x2)   rcr(ax, 0x1);                         /* rcr ax, 1 */
    II(0x0013a561, 0x1)   pushw(dx);                            /* push dx */
    II(0x0013a562, 0x1)   pushw(ax);                            /* push ax */
//    II(0x0013a563, 0x1)   nop();                                /* nop  */
    II(0x0013a564, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013a565, 0x3)   callw(0x00137f3a, -0x262e);           /* call 0x137f3a */
    II(0x0013a568, 0x3)   add(sp, 0x4);                         /* add sp, 0x4 */
l_0x0013a56b:
    II(0x0013a56b, 0x2)   jmpw(0x0013a4f9, -0x74);              /* jmp 0x13a4f9 */
//    II(0x0013a56d, 0x1)   /* Недостижимый код. */
l_0x0013a56e:
    II(0x0013a56e, 0x2)   jmpw(0x0013a5e2, 0x72);               /* jmp 0x13a5e2 */
l_0x0013a570:
    II(0x0013a570, 0x3)   pushw(memw_a16(ss, bp - 0x24));       /* push word [bp-0x24] */
    II(0x0013a573, 0x3)   pushw(memw_a16(ss, bp - 0x26));       /* push word [bp-0x26] */
    II(0x0013a576, 0x4)   pushw(memw_a16(ds, 0x1fa6));          /* push word [0x1fa6] */
    II(0x0013a57a, 0x4)   pushw(memw_a16(ds, 0x1fa4));          /* push word [0x1fa4] */
    II(0x0013a57e, 0x3)   callw(0x001390c4, -0x14bd);           /* call 0x1390c4 */
    II(0x0013a581, 0x3)   add(sp, 0x8);                         /* add sp, 0x8 */
    II(0x0013a584, 0x3)   mov(memb_a16(ss, bp - 0x38), al);     /* mov [bp-0x38], al */
    II(0x0013a587, 0x4)   cmp(memb_a16(ds, 0x51a6), al);        /* cmp [0x51a6], al */
    II(0x0013a58b, 0x2)   jnzw(0x0013a596, 0x9);                /* jnz 0x13a596 */
    II(0x0013a58d, 0x5)   mov(memw_a16(ss, bp - 0x12), 0x8002); /* mov word [bp-0x12], 0x8002 */
    II(0x0013a592, 0x3)   jmpw(0x0013a658, 0xc3);               /* jmp 0x13a658 */
//    II(0x0013a595, 0x1)   /* Недостижимый код. */
l_0x0013a596:
    II(0x0013a596, 0x3)   mov(al, memb_a16(ss, bp - 0x38));     /* mov al, [bp-0x38] */
    II(0x0013a599, 0x4)   cmp(memb_a16(ds, 0x51b5), al);        /* cmp [0x51b5], al */
    II(0x0013a59d, 0x2)   jzw(0x0013a5a2, 0x3);                 /* jz 0x13a5a2 */
    II(0x0013a59f, 0x2)   jmpw(0x0013a5e2, 0x41);               /* jmp 0x13a5e2 */
//    II(0x0013a5a1, 0x1)   /* Недостижимый код. */
l_0x0013a5a2:
    II(0x0013a5a2, 0x3)   mov(al, memb_a16(ds, 0x51a7));        /* mov al, [0x51a7] */
    II(0x0013a5a5, 0x2)   sub(ah, ah);                          /* sub ah, ah */
    II(0x0013a5a7, 0x1)   pushw(ax);                            /* push ax */
    II(0x0013a5a8, 0x3)   pushw(memw_a16(ss, bp - 0x24));       /* push word [bp-0x24] */
    II(0x0013a5ab, 0x3)   pushw(memw_a16(ss, bp - 0x26));       /* push word [bp-0x26] */
    II(0x0013a5ae, 0x4)   pushw(memw_a16(ds, 0x1fa6));          /* push word [0x1fa6] */
    II(0x0013a5b2, 0x4)   pushw(memw_a16(ds, 0x1fa4));          /* push word [0x1fa4] */
    II(0x0013a5b6, 0x3)   callw(0x001391e3, -0x13d6);           /* call 0x1391e3 */
    II(0x0013a5b9, 0x3)   add(sp, 0xa);                         /* add sp, 0xa */
    II(0x0013a5bc, 0x3)   mov(di, 0x1);                         /* mov di, 0x1 */
    II(0x0013a5bf, 0x2)   jmpw(0x0013a5e2, 0x21);               /* jmp 0x13a5e2 */
//    II(0x0013a5c1, 0x1)   /* Недостижимый код. */
l_0x0013a5c2:
    II(0x0013a5c2, 0x2)   jmpw(0x0013a5e2, 0x1e);               /* jmp 0x13a5e2 */
l_0x0013a5c4:
    II(0x0013a5c4, 0x5)   mov(memw_a16(ss, bp - 0x12), 0x8021); /* mov word [bp-0x12], 0x8021 */
    II(0x0013a5c9, 0x3)   jmpw(0x0013a658, 0x8c);               /* jmp 0x13a658 */
//    II(0x0013a5cc, 0x2)   /* Недостижимый код. */
l_0x0013a5ce:
    II(0x0013a5ce, 0x3)   cmp(ax, 0x10);                        /* cmp ax, 0x10 */
    II(0x0013a5d1, 0x2)   jzw(0x0013a5c2, -0x11);               /* jz 0x13a5c2 */
    II(0x0013a5d3, 0x2)   jaw(0x0013a5c4, -0x11);               /* ja 0x13a5c4 */
    II(0x0013a5d5, 0x2)   or_(al, al);                          /* or al, al */
    II(0x0013a5d7, 0x2)   jnzw(0x0013a5dc, 0x3);                /* jnz 0x13a5dc */
    II(0x0013a5d9, 0x3)   jmpw(0x0013a4d0, -0x10c);             /* jmp 0x13a4d0 */
l_0x0013a5dc:
    II(0x0013a5dc, 0x2)   dec(al);                              /* dec al */
    II(0x0013a5de, 0x2)   jzw(0x0013a570, -0x70);               /* jz 0x13a570 */
    II(0x0013a5e0, 0x2)   jmpw(0x0013a5c4, -0x1e);              /* jmp 0x13a5c4 */
l_0x0013a5e2:
    II(0x0013a5e2, 0x4)   test(si, 0x10);                       /* test si, 0x10 */
    II(0x0013a5e6, 0x2)   jzw(0x0013a623, 0x3b);                /* jz 0x13a623 */
    II(0x0013a5e8, 0x2)   mov(ax, si);                          /* mov ax, si */
    II(0x0013a5ea, 0x3)   and_(ax, 0x20);                       /* and ax, 0x20 */
    II(0x0013a5ed, 0x3)   cmp(ax, 0x1);                         /* cmp ax, 0x1 */
    II(0x0013a5f0, 0x2)   sbb(ax, ax);                          /* sbb ax, ax */
    II(0x0013a5f2, 0x1)   inc(ax);                              /* inc ax */
    II(0x0013a5f3, 0x3)   shl(al, 0x6);                         /* shl al, 0x6 */
    II(0x0013a5f6, 0x3)   xor_(al, memb_a16(ss, bp - 0x2e));    /* xor al, [bp-0x2e] */
    II(0x0013a5f9, 0x3)   and_(ax, 0x40);                       /* and ax, 0x40 */
    II(0x0013a5fc, 0x2)   sub(dx, dx);                          /* sub dx, dx */
    II(0x0013a5fe, 0x3)   xor_(memw_a16(ss, bp - 0x2e), ax);    /* xor [bp-0x2e], ax */
    II(0x0013a601, 0x3)   xor_(memw_a16(ss, bp - 0x2c), dx);    /* xor [bp-0x2c], dx */
    II(0x0013a604, 0x3)   mov(ax, memw_a16(ss, bp - 0x2e));     /* mov ax, [bp-0x2e] */
    II(0x0013a607, 0x2)   mov(cx, si);                          /* mov cx, si */
    II(0x0013a609, 0x3)   and_(cx, 0x40);                       /* and cx, 0x40 */
    II(0x0013a60c, 0x3)   cmp(cx, 0x1);                         /* cmp cx, 0x1 */
    II(0x0013a60f, 0x2)   sbb(cx, cx);                          /* sbb cx, cx */
    II(0x0013a611, 0x1)   inc(cx);                              /* inc cx */
    II(0x0013a612, 0x3)   shl(cx, 0x5);                         /* shl cx, 0x5 */
    II(0x0013a615, 0x2)   xor_(al, cl);                         /* xor al, cl */
    II(0x0013a617, 0x3)   and_(ax, 0x20);                       /* and ax, 0x20 */
    II(0x0013a61a, 0x3)   xor_(memw_a16(ss, bp - 0x2e), ax);    /* xor [bp-0x2e], ax */
    II(0x0013a61d, 0x3)   xor_(memw_a16(ss, bp - 0x2c), dx);    /* xor [bp-0x2c], dx */
    II(0x0013a620, 0x3)   mov(di, 0x1);                         /* mov di, 0x1 */
l_0x0013a623:
    II(0x0013a623, 0x2)   or_(di, di);                          /* or di, di */
    II(0x0013a625, 0x2)   jzw(0x0013a641, 0x1a);                /* jz 0x13a641 */
    II(0x0013a627, 0x2)   mov(dx, di);                          /* mov dx, di */
    II(0x0013a629, 0x4)   mov(es, memw_a16(ds, 0xaa));          /* mov es, [0xaa] */
    II(0x0013a62d, 0x4)   mov(edi, memd_a16(ss, bp - 0x16));    /* mov edi, [bp-0x16] */
    II(0x0013a631, 0x4)   mov(ebx, memd_a16(ss, bp - 0x26));    /* mov ebx, [bp-0x26] */
    II(0x0013a635, 0x4)   mov(eax, memd_a16(ss, bp - 0x2e));    /* mov eax, [bp-0x2e] */
    II(0x0013a639, 0x6)   mov(memd_a32(es, edi + ebx * 0x4), eax); /* mov [es:edi+ebx*4], eax */
    II(0x0013a63f, 0x2)   mov(di, dx);                          /* mov di, dx */
l_0x0013a641:
    II(0x0013a641, 0x3)   or_(memw_a16(ss, bp - 0x34), di);     /* or [bp-0x34], di */
    II(0x0013a644, 0x4)   add(memw_a16(ss, bp - 0x26), 0x1);    /* add word [bp-0x26], 0x1 */
    II(0x0013a648, 0x4)   adc(memw_a16(ss, bp - 0x24), 0);      /* adc word [bp-0x24], 0x0 */
    II(0x0013a64c, 0x5)   add(memw_a16(ss, bp - 0x8), 0x1000);  /* add word [bp-0x8], 0x1000 */
    II(0x0013a651, 0x4)   adc(memw_a16(ss, bp - 0x6), 0);       /* adc word [bp-0x6], 0x0 */
    II(0x0013a655, 0x3)   jmpw(0x0013a469, -0x1ef);             /* jmp 0x13a469 */
l_0x0013a658:
    II(0x0013a658, 0x4)   cmp(memw_a16(ss, bp - 0x12), 0);      /* cmp word [bp-0x12], 0x0 */
    II(0x0013a65c, 0x2)   jzw(0x0013a672, 0x14);                /* jz 0x13a672 */
    II(0x0013a65e, 0x3)   mov(ax, memw_a16(ss, bp - 0x12));     /* mov ax, [bp-0x12] */
    II(0x0013a661, 0x1)   cwd();                                /* cwd  */
    II(0x0013a662, 0x3)   les(bx, ss, bp + 0x6);                /* les bx, [bp+0x6] */
    II(0x0013a665, 0x4)   mov(memw_a16(es, bx + 0x20), ax);     /* mov [es:bx+0x20], ax */
    II(0x0013a669, 0x4)   mov(memw_a16(es, bx + 0x22), dx);     /* mov [es:bx+0x22], dx */
    II(0x0013a66d, 0x5)   or_(memb_a16(es, bx + 0x2c), 0x1);    /* or byte [es:bx+0x2c], 0x1 */
l_0x0013a672:
//    II(0x0013a672, 0x1)   nop();                                /* nop  */
    II(0x0013a673, 0x1)   pushw(cs);                            /* push cs */
    II(0x0013a674, 0x3)   callw(0x0013488e, -0x5de9);           /* call 0x13488e */
    II(0x0013a677, 0x4)   cmp(memw_a16(ss, bp - 0x34), 0);      /* cmp word [bp-0x34], 0x0 */
    II(0x0013a67b, 0x2)   jzw(0x0013a683, 0x6);                 /* jz 0x13a683 */
    II(0x0013a67d, 0x3)   mov(eax, cr3);                        /* mov eax, cr3 */
//    II(0x0013a680, 0x3)   mov(cr3, eax);                        /* mov cr3, eax */
l_0x0013a683:
    II(0x0013a683, 0x1)   popw(ds);                             /* pop ds */
    II(0x0013a684, 0x1)   popw(si);                             /* pop si */
    II(0x0013a685, 0x1)   popw(di);                             /* pop di */
    II(0x0013a686, 0x1)   leavew();                             /* leave  */
    II(0x0013a687, 0x1)   retfw();                              /* retf  */
FUNC_END

