{
  /* my */

  "0x1010883e": "my_main",
  "0x10089784": "my_min",
  "0x100ef41f": "my_fopen",
  "0x100ef455": "my_fseek",
  "0x100ef48f": "my_fread",

  "0x101157ff": "my_play_video_company",
  "0x100fded4": "my_game_map_start_animation", // Анимация карты при запуске ?

  "0x10133fd8": "my_get_res_data_by_id",
  "0x101341eb": "my_get_res_data_by_id_malloc",

  "0x101424cc": "my_set_al_1",
  "0x10102b40": "my_set_al_1_v2",

  "0x1007abdb": "my_ctor_c1",
  "0x1008caea": "my_ctor_c2",
  "0x10098852": "my_ctor_c3",
  "0x10099662": "my_ctor_c4",
  "0x10099918": "my_ctor_c5",
  "0x10099b88": "my_ctor_c6",
  "0x10099d3d": "my_ctor_c7",
  "0x10099ee1": "my_ctor_c8",
  "0x1009d12a": "my_ctor_c9",
  "0x100e9096": "my_ctor_c10",
  "0x100a38c9": "my_ctor_c11",
  "0x100a606c": "my_ctor_c12",
  "0x100a764f": "my_ctor_c13",
  "0x100b8cbf": "my_ctor_c14",
  "0x100cb888": "my_ctor_c15",
  "0x100cce2a": "my_ctor_c16",
  "0x100ce40f": "my_ctor_c17",
  "0x100cd35d": "my_ctor_c18",
  "0x100d7c5e": "my_ctor_c19",
  "0x10119f56": "my_ctor_c20",
  "0x101416cc": "my_ctor_c21",

  "0x100766f0": "my_ctor_0x101b38f8",
  "0x10076af0": "my_ctor_0x101b4184",
  "0x10076844": "my_ctor_0x101b38d0",
  "0x10076e44": "my_ctor_0x101b6edc",
  "0x1007d145": "my_ctor_0x101b3acc",
  "0x10088c7c": "my_ctor_0x101b56fc",
  "0x1008b0a4": "my_ctor_0x101b3b58",
  "0x100b9129": "my_ctor_0x101b5724",
  "0x100b949e": "my_ctor_0x101b5750",
  "0x100e02d4": "my_ctor_0x101b5ec8",
  "0x1010471c": "my_ctor_0x101b63ec",
  "0x10117ce4": "my_ctor_0x101b66dc",
  "0x101645d8": "my_ctor_0x101b74f0",

  "0x10088cfc": "my_dtor_d1",
  "0x100ce538": "my_dtor_d2",
  "0x100d7d33": "my_dtor_d3",
  "0x100d846d": "my_dtor_d4",
  "0x100e13fa": "my_dtor_d5",
  "0x100eb0d7": "my_dtor_d6",
  "0x1011c242": "my_dtor_d7",

  "0x10088c3c": "my_dtor_0x101b56fc",
  "0x10104430": "my_dtor_0x101b63ec",
  "0x1013ac45": "my_dtor_0x101b6edc",

  // strobj : 4 - ptr; 2 - size (capaticy, alloc_size) - without '\0'; 2 - len; 4 - ref_count.
  "0x10141733": "my_strobj_ctor_capaticy",
  "0x1014179c": "my_strobj_ctor_char_ptr",
  "0x10141816": "my_strobj_ctor_strobj",
  "0x1014189a": "my_strobj_dtor",
  "0x101418fd": "my_strobj_reserve", // bool arg3 (bl) = 0 - no copy str, 1 - copy str.
  "0x1014251c": "my_strobj_is_single_ref",
  "0x1014255c": "my_strobj_get_size",
  "0x100eaf24": "my_strobj_get_len",
  "0x101424ec": "my_strobj_set_len",
  "0x100897c8": "my_strobj_c_str_v2",
  "0x100897fc": "my_strobj_c_str",

  "0x10141ae8": "my_string_ctor", // make empty string.
  "0x101419d0": "my_string_ctor_capaticy",
  "0x10141a3b": "my_string_ctor_char_ptr",
  "0x10141aa6": "my_string_ctor_string",
  "0x10141b2a": "my_string_dtor",
  "0x1014241c": "my_string_release",
  "0x10142464": "my_string_add_ref",
  "0x1014235c": "my_string_make_single_ref",
  "0x10141f15": "my_string_clear",
  "0x101423d8": "my_string_compute_capacity_from_length", // static
  "0x10141b62": "my_string_reserve",
  "0x10141c89": "my_string_append_string",
  "0x10142494": "my_string_append_string_v2",
  "0x10141d3f": "my_string_append_char_ptr",
  "0x10141dea": "my_string_append_char",
  "0x10142292": "my_string_get", // char & operator[](int pos)
  "0x10141e92": "my_string_strstr_char_ptr",
  "0x10141ecf": "my_string_strstr_string",
  "0x10141f63": "my_string_tolower",
  "0x10141fcd": "my_string_toupper",
  "0x10142170": "my_string_strcmp", // bool arg3 (bl), 0 - case insensitive, 1 - case sensitive.

  "0x100ab4d8": "my_1_get_count",
  "0x1008b368": "my_2_get_count",
  "0x1008b480": "my_3_get_count",
  "0x100b801c": "my__get_unit",

  /* res file */

  "0x10134973": "load_res_file",

  /* size: const (0x787 * 7) bytes,
  * index in this array - id of txt of correspond ptr_arr_meta item.
  * item: { s16 - index of item  ptr_arr_meta, u32 - ptr malloc  data_from_meta?, u8 -  index of  FILE * in arr_res_file }  */
  "0x101c70ec": "ptr_arr_meta_by_id",
  "0x101c70d0": "arr_res_file", /* Начало массива, содержащий FILE * открытых *.RES файлов. Обычно содержит только один файл - MAX.RES. */
  "0x101c70f0": "ptr_arr_meta", /* 16 - byte item   { char txt[8]; u32 offset; u32 size } */
  "0x101c70da": "ptr_end_arr_meta", /* end of ptr_arr_meta. */
  "0x101c70d8": "ptr_end_arr_res_file", /* low byte s8 - end of arr_res_file in term c++,  high s16 of 32 bit value - end of ptr_arr_meta. */


  /* sys */

  "0x10187ac2": "sys_int_10",
  "0x10187ad4": "sys_int_16",
  "0x10187b25": "sys_int_31",
  "0x10187b2b": "sys_int_33",

  "0x1016c65f": "sys_exit",
  "0x10165d52": "sys_check_available_stack_size",
  "0x10165d92": "sys_assert",

  "0x10165de0": "sys_memset",
  "0x10165e4b": "sys_memcpy",

  "0x10165ecf": "sys_strcpy",
  "0x10165f31": "sys_strcat",
  "0x10172790": "sys_strcmp",
  "0x10166130": "sys_strcasecmp",
  "0x10171ec7": "sys_strlen",
  "0x10171ee0": "sys_strncpy",
  "0x1017915c": "sys_strncmp",
  "0x10179010": "sys_strstr",
  "0x10180eea": "sys_toupper",
  "0x10172a95": "sys_tolower",

  "0x1016afde": "sys_malloc",
  "0x1016b0c1": "sys_free",

  "0x10165e00": "sys_new",
  "0x10166010": "sys_new_arr",
  "0x10165f64": "sys_delete",
  "0x10165fd8": "sys_delete_arr",

  "0x101822f0": "sys_malloc_internal",
  "0x10182454": "sys_free_internal",
  "0x101825e0": "sys_check_memory_corrupt",
  "0x1018245c": "sys_free_with_check_memory_corrupt",

  "0x10165f01": "sys_sprintf",
  "0x1016c63c": "sys_printf",

  "0x1016e7c4": "sys_fopen_internal",
  "0x1016ea6c": "sys_fread_internal",
  "0x10170f78": "sys_fclose_internal",

  "0x1017237a": "sys_fopen",
  "0x10172069": "sys_fclose",
  "0x1017256c": "sys_fread",
  "0x10172470": "sys_fseek",
  "0x10172747": "sys_ftell", // obtains the current value of the file position

  "0x1017d197": "sys_lseek",

  "0x10166046": "sys_sqrt",
  "0x1016607e": "sys_round",

  "0x1016cbbc": "sys_display_apply_palette",
  "0x10167484": "sys_display_draw_0",
  "0x101674a8": "sys_display_draw_1",
  "0x10168af0": "sys_display_draw_2",
  "0x10169814": "sys_display_draw_3",
  "0x1018cdf4": "sys_display_copy_to_video_memory_1",
  "0x1018d034": "sys_display_copy_to_video_memory_2",

  "0x10171dff": "sys_call_ctor_arr",
  "0x10165f70": "sys_call_ctor_arr_v2",
  "0x10165fb8": "sys_call_dtor_arr",
  "0x10165fe0": "sys_call_dtor_arr_v2",

  /* Some variable */

  "0x101c9464": "ptr_to_pallete",

  "0x10209c98": "video_bytes_per_line", // 640
  "0x10209c9c": "video_bank_count_in_win", // 1
  "0x10209ca0": "video_win_len", // 0x10000
  /* video_win_granularity -
 * Минимальное расстояние между двумя адресами в видеопамяти, которые могут отображаться
 * на один и тот же адрес в окне, называется granularity (от английского granulate - дробить).
 * Размер окна (или банка) должен быть большим или равным granularity. Если мы разделим
 * абсолютный адрес в видеопамяти на granularity, то частным будет номер банка, а остатком -
 * смещение относительно начала окна */
  "0x10209ca4": "video_win_granularity", // 0x10000
  "0x10209ca8": "video_win_start", // 0xa0000
  "0x10208918": "video_win_start_v2", // 0xa0000
  "0x10209cac": "video_win_end", // 0xb0000 = video_win_start + video_win_len

  "0x101c0a24": "ptr_of_fd_table_"
}